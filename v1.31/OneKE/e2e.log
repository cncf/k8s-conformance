  I0102 09:09:25.912392      23 e2e.go:109] Starting e2e run "f06cdf57-c49c-4f44-b15c-b862c2645b5d" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1735808965 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0102 09:09:26.107844 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:09:26.109028 23 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0102 09:09:26.154471 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0102 09:09:26.157649 23 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  I0102 09:09:26.157683 23 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-multus' (0 seconds elapsed)
  I0102 09:09:26.157696 23 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'rke2-multus-rke2-whereabouts' (0 seconds elapsed)
  I0102 09:09:26.157709 23 e2e.go:245] e2e test version: v1.31.3
  I0102 09:09:26.158319 23 e2e.go:254] kube-apiserver version: v1.31.3+rke2r1
  I0102 09:09:26.158376 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:09:26.160448 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 01/02/25 09:09:26.372
  I0102 09:09:26.372157 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubelet-test @ 01/02/25 09:09:26.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:09:26.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:09:26.39
  I0102 09:09:26.428750 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3305" for this suite. @ 01/02/25 09:09:26.431
• [0.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 01/02/25 09:09:26.439
  I0102 09:09:26.439405 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename svcaccounts @ 01/02/25 09:09:26.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:09:26.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:09:26.489
  STEP: creating a ServiceAccount @ 01/02/25 09:09:26.49
  STEP: watching for the ServiceAccount to be added @ 01/02/25 09:09:26.495
  STEP: patching the ServiceAccount @ 01/02/25 09:09:26.496
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 01/02/25 09:09:26.501
  STEP: deleting the ServiceAccount @ 01/02/25 09:09:26.503
  I0102 09:09:26.517517 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4552" for this suite. @ 01/02/25 09:09:26.532
• [0.098 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 01/02/25 09:09:26.537
  I0102 09:09:26.537493 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:09:26.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:09:26.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:09:26.586
  STEP: Setting up server cert @ 01/02/25 09:09:26.691
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:09:27.197
  STEP: Deploying the webhook pod @ 01/02/25 09:09:27.206
  STEP: Wait for the deployment to be ready @ 01/02/25 09:09:27.215
  I0102 09:09:27.232218 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0102 09:09:29.239254 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 9, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 9, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 9, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 9, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/02/25 09:09:31.241
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:09:31.249
  I0102 09:09:32.250689 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 01/02/25 09:09:32.253
  STEP: create a configmap that should be updated by the webhook @ 01/02/25 09:09:32.268
  I0102 09:09:32.354144 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2900" for this suite. @ 01/02/25 09:09:32.356
  STEP: Destroying namespace "webhook-markers-1449" for this suite. @ 01/02/25 09:09:32.364
• [5.833 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 01/02/25 09:09:32.371
  I0102 09:09:32.371156 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:09:32.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:09:32.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:09:32.386
  STEP: Creating configMap with name projected-configmap-test-volume-map-026117fa-0e1a-4409-ab4f-db051dd9d9b0 @ 01/02/25 09:09:32.389
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:09:32.391
  STEP: Saw pod success @ 01/02/25 09:09:36.403
  I0102 09:09:36.404745 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-configmaps-9472466c-a654-45cc-9cb6-d17dcc14b9ec container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:09:36.43
  I0102 09:09:36.440263 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5160" for this suite. @ 01/02/25 09:09:36.442
• [4.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 01/02/25 09:09:36.445
  I0102 09:09:36.445295 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 09:09:36.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:09:36.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:09:36.458
  STEP: creating service in namespace services-5731 @ 01/02/25 09:09:36.46
  STEP: creating service affinity-nodeport in namespace services-5731 @ 01/02/25 09:09:36.46
  STEP: creating replication controller affinity-nodeport in namespace services-5731 @ 01/02/25 09:09:36.468
  I0102 09:09:36.478612      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-5731, replica count: 3
  I0102 09:09:39.531743      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 09:09:42.532287      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 09:09:42.555599 23 resource.go:361] Creating new exec pod
  I0102 09:09:45.576250 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5731 exec execpod-affinitys5hd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0102 09:09:45.779031 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0102 09:09:45.779098 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:09:45.779221 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5731 exec execpod-affinitys5hd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.55.209 80'
  I0102 09:09:45.885958 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.55.209 80\nConnection to 10.43.55.209 80 port [tcp/http] succeeded!\n"
  I0102 09:09:45.885994 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:09:45.886216 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5731 exec execpod-affinitys5hd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 30846'
  I0102 09:09:45.983105 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 30846\nConnection to 192.168.150.103 30846 port [tcp/*] succeeded!\n"
  I0102 09:09:45.983144 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:09:45.983210 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5731 exec execpod-affinitys5hd5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.105 30846'
  I0102 09:09:46.084988 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.105 30846\nConnection to 192.168.150.105 30846 port [tcp/*] succeeded!\n"
  I0102 09:09:46.085030 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:09:46.085088 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5731 exec execpod-affinitys5hd5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.150.103:30846/ ; done'
  I0102 09:09:46.256343 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:30846/\n"
  I0102 09:09:46.256384 23 builder.go:147] stdout: "\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md\naffinity-nodeport-vn5md"
  I0102 09:09:46.256399 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256417 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256426 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256433 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256441 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256448 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256455 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256462 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256470 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256476 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256483 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256490 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256497 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256504 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256511 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256518 23 service.go:242] Received response from host: affinity-nodeport-vn5md
  I0102 09:09:46.256572 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5731, will wait for the garbage collector to delete the pods @ 01/02/25 09:09:46.267
  I0102 09:09:46.322869 23 resources.go:139] Deleting ReplicationController affinity-nodeport took: 2.863486ms
  I0102 09:09:46.423706 23 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.833981ms
  I0102 09:09:49.651317 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5731" for this suite. @ 01/02/25 09:09:49.654
• [13.213 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 01/02/25 09:09:49.66
  I0102 09:09:49.660243 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename deployment @ 01/02/25 09:09:49.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:09:49.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:09:49.672
  STEP: creating a Deployment @ 01/02/25 09:09:49.674
  STEP: waiting for Deployment to be created @ 01/02/25 09:09:49.678
  STEP: waiting for all Replicas to be Ready @ 01/02/25 09:09:49.679
  I0102 09:09:49.680684 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0102 09:09:49.680859 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0102 09:09:49.699769 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0102 09:09:49.700733 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0102 09:09:49.716871 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0102 09:09:49.717155 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0102 09:09:49.722836 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0102 09:09:49.722864 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0102 09:09:50.541766 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0102 09:09:50.541968 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0102 09:09:51.033215 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 01/02/25 09:09:51.033
  I0102 09:09:51.044603 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 01/02/25 09:09:51.046
  I0102 09:09:51.058861 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0
  I0102 09:09:51.058891 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0
  I0102 09:09:51.058900 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0
  I0102 09:09:51.058907 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0
  I0102 09:09:51.064797 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0
  I0102 09:09:51.064835 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0
  I0102 09:09:51.064847 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0
  I0102 09:09:51.064854 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 0
  I0102 09:09:51.064867 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:09:51.064875 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:09:51.065112 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:51.065123 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:51.065132 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:51.065139 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:51.065147 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:51.065168 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:51.065209 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:51.065225 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:51.076978 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:09:51.077007 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:09:51.093016 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:09:51.093044 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:09:52.549892 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:52.553002 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:09:52.564790 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  STEP: listing Deployments @ 01/02/25 09:09:52.564
  I0102 09:09:52.566250 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 01/02/25 09:09:52.566
  I0102 09:09:52.574512 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 01/02/25 09:09:52.574
  I0102 09:09:52.598173 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:09:52.598205 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:09:52.608389 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:09:52.622341 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:09:52.630413 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:09:54.045699 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:09:58.585183 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:09:58.606211 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:09:58.625904 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0102 09:10:02.064029 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 01/02/25 09:10:02.079
  STEP: fetching the DeploymentStatus @ 01/02/25 09:10:02.087
  I0102 09:10:02.090967 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:10:02.091197 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:10:02.091211 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:10:02.091593 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:10:02.091609 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 1
  I0102 09:10:02.092004 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:10:02.092071 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 3
  I0102 09:10:02.092288 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:10:02.092303 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 2
  I0102 09:10:02.092426 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-2411 with ReadyReplicas 3
  STEP: deleting the Deployment @ 01/02/25 09:10:02.092
  I0102 09:10:02.098793 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.098837 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.099951 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.100200 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.100678 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.103749 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.104396 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.104807 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.106376 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.106633 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.108443 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.108771 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.109099 23 deployment.go:475] observed event type MODIFIED
  I0102 09:10:02.118061 23 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0102 09:10:02.121037 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2411" for this suite. @ 01/02/25 09:10:02.124
• [12.470 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 01/02/25 09:10:02.133
  I0102 09:10:02.133337 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 09:10:02.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:02.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:02.152
  STEP: creating the pod @ 01/02/25 09:10:02.153
  STEP: submitting the pod to kubernetes @ 01/02/25 09:10:02.153
  W0102 09:10:02.165092      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 01/02/25 09:10:04.181
  STEP: updating the pod @ 01/02/25 09:10:04.184
  I0102 09:10:04.694236 23 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-a652943d-4352-4ae4-ad9c-3b23405dd732"
  I0102 09:10:08.702275 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-424" for this suite. @ 01/02/25 09:10:08.706
• [6.581 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 01/02/25 09:10:08.716
  I0102 09:10:08.717047 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename deployment @ 01/02/25 09:10:08.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:08.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:08.739
  I0102 09:10:08.741601 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0102 09:10:08.746760 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0102 09:10:13.754926 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/02/25 09:10:13.755
  I0102 09:10:13.755712 23 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0102 09:10:13.760549 23 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0102 09:10:13.769642 23 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0102 09:10:15.774066 23 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0102 09:10:15.776654 23 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0102 09:10:15.782133 23 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-12",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38d51db9-bbc7-41e6-9ee0-1475b1514133",
      ResourceVersion: (string) (len=4) "8069",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871405813,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0102 09:10:15.816866 23 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-12",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1011864-aba0-4f15-beb8-ab089d375ea0",
      ResourceVersion: (string) (len=4) "8059",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871405813,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "38d51db9-bbc7-41e6-9ee0-1475b1514133",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 38 64 35 31 64  62 39 2d 62 62 63 37 2d  |\"38d51db9-bbc7-|
              00000120  34 31 65 36 2d 39 65 65  30 2d 31 34 37 35 62 31  |41e6-9ee0-1475b1|
              00000130  35 31 34 31 33 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |514133\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:10:15.824341 23 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0102 09:10:15.824634 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-12",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c6727d0-22da-4228-b469-cc161c1bb402",
      ResourceVersion: (string) (len=4) "8068",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871405808,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "38d51db9-bbc7-41e6-9ee0-1475b1514133",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 33 38 64 35 31 64 62  |"uid\":\"38d51db|
              000000b0  39 2d 62 62 63 37 2d 34  31 65 36 2d 39 65 65 30  |9-bbc7-41e6-9ee0|
              000000c0  2d 31 34 37 35 62 31 35  31 34 31 33 33 5c 22 7d  |-1475b1514133\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:10:15.831892 23 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-zsf9m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-zsf9m",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=13) "deployment-12",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e04a455-88df-42c1-ad6f-141c8c120bd3",
      ResourceVersion: (string) (len=4) "8058",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871405813,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "196a8f6c9ed48f7ccb29d9e10175c4ac6f8c7e7df44a51671e15c409189cf8fd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.35/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.35\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "c1011864-aba0-4f15-beb8-ab089d375ea0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 31  30 31 31 38 36 34 2d 61  |d\":\"c1011864-a|
              00000090  62 61 30 2d 34 66 31 35  2d 62 65 62 38 2d 61 62  |ba0-4f15-beb8-ab|
              000000a0  30 38 39 64 33 37 35 65  61 30 5c 22 7d 22 3a 7b  |089d375ea0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 33 35  5c 22 7d 22 3a 7b 22 2e  |.42.1.35\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b5txt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b5txt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405814,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871405813,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=10) "10.42.1.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871405813,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871405814,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://e9e4e0ffda099e258a3c23f47a30c9d931eab8559890062d599afa58e406fa7d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-b5txt",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:10:15.843929 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-12" for this suite. @ 01/02/25 09:10:15.845
• [7.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 01/02/25 09:10:15.849
  I0102 09:10:15.849924 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:10:15.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:15.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:15.863
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:10:15.864
  STEP: Saw pod success @ 01/02/25 09:10:19.885
  I0102 09:10:19.892779 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-a289a22e-fe17-4e8a-9ded-eb466aa24895 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:10:19.905
  I0102 09:10:19.926107 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4143" for this suite. @ 01/02/25 09:10:19.93
• [4.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 01/02/25 09:10:19.938
  I0102 09:10:19.938386 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename daemonsets @ 01/02/25 09:10:19.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:19.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:19.95
  STEP: Creating simple DaemonSet "daemon-set" @ 01/02/25 09:10:20.038
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/02/25 09:10:20.046
  I0102 09:10:20.135137 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:10:20.135821 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:10:20.138893 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 09:10:20.138928 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 09:10:21.053512 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:10:21.053561 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:10:21.059229 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 09:10:21.059257 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 09:10:22.060139 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:10:22.060950 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:10:22.071655 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 09:10:22.071814 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 01/02/25 09:10:22.076
  STEP: DeleteCollection of the DaemonSets @ 01/02/25 09:10:22.079
  STEP: Verify that ReplicaSets have been deleted @ 01/02/25 09:10:22.083
  I0102 09:10:22.181161 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8185"},"items":null}

  I0102 09:10:22.183836 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8186"},"items":[{"metadata":{"name":"daemon-set-8d6n2","generateName":"daemon-set-","namespace":"daemonsets-7048","uid":"8970c2fd-4fe0-4bee-972a-d6a1b0ec8db3","resourceVersion":"8185","creationTimestamp":"2025-01-02T09:10:20Z","deletionTimestamp":"2025-01-02T09:10:52Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"7b87eccd97b6aa7c21a3a1463c02816b1d41eac4870197df01dde3c0b7639aa3","cni.projectcalico.org/podIP":"10.42.3.12/32","cni.projectcalico.org/podIPs":"10.42.3.12/32","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.12\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c5c4c99f-f31e-4d9d-886c-33609971bc12","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-02T09:10:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-02T09:10:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c5c4c99f-f31e-4d9d-886c-33609971bc12\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"multus","operation":"Update","apiVersion":"v1","time":"2025-01-02T09:10:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-02T09:10:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.12\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-psfqn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-psfqn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"oneke-ip-192-168-150-105","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["oneke-ip-192-168-150-105"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:21Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:20Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:21Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:21Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:20Z"}],"hostIP":"192.168.150.105","hostIPs":[{"ip":"192.168.150.105"}],"podIP":"10.42.3.12","podIPs":[{"ip":"10.42.3.12"}],"startTime":"2025-01-02T09:10:20Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-02T09:10:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a6e22d7532dedff14548b41d2ebfcb8685e31d9693089f1396f046c7276d619e","started":true,"volumeMounts":[{"name":"kube-api-access-psfqn","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-fpjj8","generateName":"daemon-set-","namespace":"daemonsets-7048","uid":"113572e2-b66b-4732-a863-0106648df692","resourceVersion":"8184","creationTimestamp":"2025-01-02T09:10:20Z","deletionTimestamp":"2025-01-02T09:10:52Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"9aa562ffeb978992b656768e88bc2493095ac3fb5ef8c1c549f4cc2e296d07af","cni.projectcalico.org/podIP":"10.42.1.37/32","cni.projectcalico.org/podIPs":"10.42.1.37/32","k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.37\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"c5c4c99f-f31e-4d9d-886c-33609971bc12","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-01-02T09:10:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-01-02T09:10:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c5c4c99f-f31e-4d9d-886c-33609971bc12\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"multus","operation":"Update","apiVersion":"v1","time":"2025-01-02T09:10:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:k8s.v1.cni.cncf.io/network-status":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-01-02T09:10:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2w48r","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2w48r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"oneke-ip-192-168-150-103","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["oneke-ip-192-168-150-103"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:21Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:20Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:21Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:21Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-01-02T09:10:20Z"}],"hostIP":"192.168.150.103","hostIPs":[{"ip":"192.168.150.103"}],"podIP":"10.42.1.37","podIPs":[{"ip":"10.42.1.37"}],"startTime":"2025-01-02T09:10:20Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-01-02T09:10:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://c51a3f049f16a0e1ee74f2351f1f2c559a960f0f176e61d6c27f640576567167","started":true,"volumeMounts":[{"name":"kube-api-access-2w48r","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0102 09:10:22.188263 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7048" for this suite. @ 01/02/25 09:10:22.19
• [2.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 01/02/25 09:10:22.195
  I0102 09:10:22.195734 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-webhook @ 01/02/25 09:10:22.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:22.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:22.212
  STEP: Setting up server cert @ 01/02/25 09:10:22.213
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/02/25 09:10:22.338
  STEP: Deploying the custom resource conversion webhook pod @ 01/02/25 09:10:22.341
  STEP: Wait for the deployment to be ready @ 01/02/25 09:10:22.35
  I0102 09:10:22.360064 23 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:10:24.4
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:10:24.418
  I0102 09:10:25.419541 23 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0102 09:10:25.433390 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Creating a v1 custom resource @ 01/02/25 09:10:28.057
  STEP: Create a v2 custom resource @ 01/02/25 09:10:28.068
  STEP: List CRs in v1 @ 01/02/25 09:10:28.086
  STEP: List CRs in v2 @ 01/02/25 09:10:28.088
  I0102 09:10:28.712468 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4951" for this suite. @ 01/02/25 09:10:28.716
• [6.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 01/02/25 09:10:28.729
  I0102 09:10:28.729392 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:10:28.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:28.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:28.744
  STEP: validating cluster-info @ 01/02/25 09:10:28.746
  I0102 09:10:28.746470 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3395 cluster-info'
  I0102 09:10:28.795396 23 builder.go:146] stderr: ""
  I0102 09:10:28.795433 23 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0102 09:10:28.795635 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3395" for this suite. @ 01/02/25 09:10:28.815
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 01/02/25 09:10:28.821
  I0102 09:10:28.821278 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:10:28.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:28.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:28.844
  STEP: Creating a pod to test downward api env vars @ 01/02/25 09:10:28.846
  STEP: Saw pod success @ 01/02/25 09:10:32.869
  I0102 09:10:32.876603 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downward-api-31e3ddb5-6f1a-4344-9205-6bc2344b3f89 container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 09:10:32.908
  I0102 09:10:32.916538 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6684" for this suite. @ 01/02/25 09:10:32.918
• [4.102 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 01/02/25 09:10:32.922
  I0102 09:10:32.922995 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:10:32.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:32.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:32.936
  STEP: validating api versions @ 01/02/25 09:10:32.937
  I0102 09:10:32.938090 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-1430 api-versions'
  I0102 09:10:32.982274 23 builder.go:146] stderr: ""
  I0102 09:10:32.982312 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\ngroupsnapshot.storage.k8s.io/v1alpha1\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nk8s.cni.cncf.io/v1\nlonghorn.io/v1beta1\nlonghorn.io/v1beta2\nmetallb.io/v1beta1\nmetallb.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy.networking.k8s.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\ntraefik.io/v1alpha1\nv1\nwhereabouts.cni.cncf.io/v1alpha1\n"
  I0102 09:10:32.982514 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1430" for this suite. @ 01/02/25 09:10:33.026
• [0.120 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 01/02/25 09:10:33.044
  I0102 09:10:33.044237 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename subpath @ 01/02/25 09:10:33.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:33.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:33.063
  STEP: Setting up data @ 01/02/25 09:10:33.065
  STEP: Creating pod pod-subpath-test-configmap-9nrl @ 01/02/25 09:10:33.07
  STEP: Creating a pod to test atomic-volume-subpath @ 01/02/25 09:10:33.07
  STEP: Saw pod success @ 01/02/25 09:10:57.147
  I0102 09:10:57.152231 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-subpath-test-configmap-9nrl container test-container-subpath-configmap-9nrl: <nil>
  STEP: delete the pod @ 01/02/25 09:10:57.162
  STEP: Deleting pod pod-subpath-test-configmap-9nrl @ 01/02/25 09:10:57.175
  I0102 09:10:57.175182 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-9nrl" in namespace "subpath-1079"
  I0102 09:10:57.176623 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1079" for this suite. @ 01/02/25 09:10:57.179
• [24.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 01/02/25 09:10:57.186
  I0102 09:10:57.186394 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:10:57.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:10:57.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:10:57.199
  STEP: creating a replication controller @ 01/02/25 09:10:57.2
  I0102 09:10:57.200895 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 create -f -'
  I0102 09:10:57.314197 23 builder.go:146] stderr: ""
  I0102 09:10:57.314236 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/02/25 09:10:57.314
  I0102 09:10:57.326873 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0102 09:10:57.385300 23 builder.go:146] stderr: ""
  I0102 09:10:57.385332 23 builder.go:147] stdout: "update-demo-nautilus-4r4r7 update-demo-nautilus-m4pfm "
  I0102 09:10:57.385379 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-4r4r7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:10:57.430916 23 builder.go:146] stderr: ""
  I0102 09:10:57.430954 23 builder.go:147] stdout: ""
  I0102 09:10:57.430973 23 kubectl.go:2502] update-demo-nautilus-4r4r7 is created but not running
  I0102 09:11:02.431735 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0102 09:11:02.501941 23 builder.go:146] stderr: ""
  I0102 09:11:02.501982 23 builder.go:147] stdout: "update-demo-nautilus-4r4r7 update-demo-nautilus-m4pfm "
  I0102 09:11:02.502020 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-4r4r7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:11:02.602248 23 builder.go:146] stderr: ""
  I0102 09:11:02.602281 23 builder.go:147] stdout: "true"
  I0102 09:11:02.602321 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-4r4r7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0102 09:11:02.654664 23 builder.go:146] stderr: ""
  I0102 09:11:02.654703 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0102 09:11:02.654717 23 kubectl.go:2393] validating pod update-demo-nautilus-4r4r7
  I0102 09:11:02.659944 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0102 09:11:02.659991 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0102 09:11:02.660003 23 kubectl.go:2520] update-demo-nautilus-4r4r7 is verified up and running
  I0102 09:11:02.660039 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-m4pfm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:11:02.705043 23 builder.go:146] stderr: ""
  I0102 09:11:02.705094 23 builder.go:147] stdout: "true"
  I0102 09:11:02.705132 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-m4pfm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0102 09:11:02.752220 23 builder.go:146] stderr: ""
  I0102 09:11:02.752252 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0102 09:11:02.752271 23 kubectl.go:2393] validating pod update-demo-nautilus-m4pfm
  I0102 09:11:02.756676 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0102 09:11:02.756719 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0102 09:11:02.756731 23 kubectl.go:2520] update-demo-nautilus-m4pfm is verified up and running
  STEP: scaling down the replication controller @ 01/02/25 09:11:02.756
  I0102 09:11:02.758508 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0102 09:11:02.758594 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0102 09:11:03.823033 23 builder.go:146] stderr: ""
  I0102 09:11:03.823070 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/02/25 09:11:03.823
  I0102 09:11:03.823150 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0102 09:11:03.873708 23 builder.go:146] stderr: ""
  I0102 09:11:03.873760 23 builder.go:147] stdout: "update-demo-nautilus-4r4r7 update-demo-nautilus-m4pfm "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 01/02/25 09:11:03.873
  I0102 09:11:08.874310 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0102 09:11:08.937233 23 builder.go:146] stderr: ""
  I0102 09:11:08.937278 23 builder.go:147] stdout: "update-demo-nautilus-m4pfm "
  I0102 09:11:08.937314 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-m4pfm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:11:08.986143 23 builder.go:146] stderr: ""
  I0102 09:11:08.986183 23 builder.go:147] stdout: "true"
  I0102 09:11:08.986220 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-m4pfm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0102 09:11:09.039855 23 builder.go:146] stderr: ""
  I0102 09:11:09.039894 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0102 09:11:09.039906 23 kubectl.go:2393] validating pod update-demo-nautilus-m4pfm
  I0102 09:11:09.041742 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0102 09:11:09.041776 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0102 09:11:09.041786 23 kubectl.go:2520] update-demo-nautilus-m4pfm is verified up and running
  STEP: scaling up the replication controller @ 01/02/25 09:11:09.041
  I0102 09:11:09.043434 23 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0102 09:11:09.043521 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0102 09:11:10.109728 23 builder.go:146] stderr: ""
  I0102 09:11:10.109760 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/02/25 09:11:10.109
  I0102 09:11:10.109825 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0102 09:11:10.159834 23 builder.go:146] stderr: ""
  I0102 09:11:10.159868 23 builder.go:147] stdout: "update-demo-nautilus-9zbfn update-demo-nautilus-m4pfm "
  I0102 09:11:10.159907 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-9zbfn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:11:10.220159 23 builder.go:146] stderr: ""
  I0102 09:11:10.220192 23 builder.go:147] stdout: ""
  I0102 09:11:10.220203 23 kubectl.go:2502] update-demo-nautilus-9zbfn is created but not running
  I0102 09:11:15.221628 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0102 09:11:15.271694 23 builder.go:146] stderr: ""
  I0102 09:11:15.271727 23 builder.go:147] stdout: "update-demo-nautilus-9zbfn update-demo-nautilus-m4pfm "
  I0102 09:11:15.271766 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-9zbfn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:11:15.321063 23 builder.go:146] stderr: ""
  I0102 09:11:15.321096 23 builder.go:147] stdout: "true"
  I0102 09:11:15.321138 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-9zbfn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0102 09:11:15.370018 23 builder.go:146] stderr: ""
  I0102 09:11:15.370051 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0102 09:11:15.370222 23 kubectl.go:2393] validating pod update-demo-nautilus-9zbfn
  I0102 09:11:15.376438 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0102 09:11:15.376483 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0102 09:11:15.376495 23 kubectl.go:2520] update-demo-nautilus-9zbfn is verified up and running
  I0102 09:11:15.376532 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-m4pfm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:11:15.428496 23 builder.go:146] stderr: ""
  I0102 09:11:15.428531 23 builder.go:147] stdout: "true"
  I0102 09:11:15.428568 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods update-demo-nautilus-m4pfm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0102 09:11:15.473855 23 builder.go:146] stderr: ""
  I0102 09:11:15.473884 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0102 09:11:15.473896 23 kubectl.go:2393] validating pod update-demo-nautilus-m4pfm
  I0102 09:11:15.475526 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0102 09:11:15.475606 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0102 09:11:15.475619 23 kubectl.go:2520] update-demo-nautilus-m4pfm is verified up and running
  STEP: using delete to clean up resources @ 01/02/25 09:11:15.475
  I0102 09:11:15.475736 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 delete --grace-period=0 --force -f -'
  I0102 09:11:15.533640 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 09:11:15.533674 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0102 09:11:15.533918 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get rc,svc -l name=update-demo --no-headers'
  I0102 09:11:15.589884 23 builder.go:146] stderr: "No resources found in kubectl-8812 namespace.\n"
  I0102 09:11:15.589923 23 builder.go:147] stdout: ""
  I0102 09:11:15.589988 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8812 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0102 09:11:15.643453 23 builder.go:146] stderr: ""
  I0102 09:11:15.643487 23 builder.go:147] stdout: ""
  I0102 09:11:15.643554 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8812" for this suite. @ 01/02/25 09:11:15.645
• [18.462 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 01/02/25 09:11:15.65
  I0102 09:11:15.650112 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-preemption @ 01/02/25 09:11:15.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:11:15.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:11:15.712
  I0102 09:11:15.719922 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0102 09:12:15.722597 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/02/25 09:12:15.724
  I0102 09:12:15.724174 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/02/25 09:12:15.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:12:15.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:12:15.739
  STEP: Finding an available node @ 01/02/25 09:12:15.74
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/02/25 09:12:15.74
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/02/25 09:12:17.753
  I0102 09:12:17.761079 23 preemption.go:585] found a healthy node: oneke-ip-192-168-150-103
  I0102 09:12:23.818839 23 preemption.go:708] pods created so far: [1 1 1]
  I0102 09:12:23.819038 23 preemption.go:709] length of pods created so far: 3
  I0102 09:12:25.839474 23 preemption.go:726] pods created so far: [2 2 1]
  I0102 09:12:32.870183 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8279" for this suite. @ 01/02/25 09:12:32.871
  I0102 09:12:32.875969 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2948" for this suite. @ 01/02/25 09:12:32.974
• [77.332 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 01/02/25 09:12:32.983
  I0102 09:12:32.983717 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename proxy @ 01/02/25 09:12:32.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:12:32.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:12:32.998
  I0102 09:12:32.999790 23 proxy.go:293] Creating pod...
  I0102 09:12:35.016976 23 proxy.go:317] Creating service...
  I0102 09:12:35.032370 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/pods/agnhost/proxy/some/path/with/DELETE
  I0102 09:12:35.041384 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0102 09:12:35.041419 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/pods/agnhost/proxy/some/path/with/GET
  I0102 09:12:35.042994 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0102 09:12:35.043234 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/pods/agnhost/proxy/some/path/with/HEAD
  I0102 09:12:35.044497 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0102 09:12:35.044517 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/pods/agnhost/proxy/some/path/with/OPTIONS
  I0102 09:12:35.045599 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0102 09:12:35.045826 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/pods/agnhost/proxy/some/path/with/PATCH
  I0102 09:12:35.047130 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0102 09:12:35.047343 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/pods/agnhost/proxy/some/path/with/POST
  I0102 09:12:35.048661 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0102 09:12:35.048679 23 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/pods/agnhost/proxy/some/path/with/PUT
  I0102 09:12:35.049908 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0102 09:12:35.050144 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/services/test-service/proxy/some/path/with/DELETE
  I0102 09:12:35.051647 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0102 09:12:35.051686 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/services/test-service/proxy/some/path/with/GET
  I0102 09:12:35.053783 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0102 09:12:35.053842 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/services/test-service/proxy/some/path/with/HEAD
  I0102 09:12:35.055191 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0102 09:12:35.055550 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/services/test-service/proxy/some/path/with/OPTIONS
  I0102 09:12:35.057277 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0102 09:12:35.057501 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/services/test-service/proxy/some/path/with/PATCH
  I0102 09:12:35.058983 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0102 09:12:35.059002 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/services/test-service/proxy/some/path/with/POST
  I0102 09:12:35.060394 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0102 09:12:35.060615 23 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2785/services/test-service/proxy/some/path/with/PUT
  I0102 09:12:35.062184 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0102 09:12:35.062292 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2785" for this suite. @ 01/02/25 09:12:35.063
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 01/02/25 09:12:35.069
  I0102 09:12:35.069721 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 01/02/25 09:12:35.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:12:35.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:12:35.088
  STEP: Setting up the test @ 01/02/25 09:12:35.09
  STEP: Creating hostNetwork=false pod @ 01/02/25 09:12:35.09
  STEP: Creating hostNetwork=true pod @ 01/02/25 09:12:37.106
  STEP: Running the test @ 01/02/25 09:12:39.133
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 01/02/25 09:12:39.133
  I0102 09:12:39.133497 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.133542 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.134283 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.134520 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0102 09:12:39.236425 23 exec_util.go:111] Exec stderr: ""
  I0102 09:12:39.236464 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.236504 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.237121 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.237219 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0102 09:12:39.302868 23 exec_util.go:111] Exec stderr: ""
  I0102 09:12:39.303203 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.303398 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.304476 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.304747 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0102 09:12:39.363200 23 exec_util.go:111] Exec stderr: ""
  I0102 09:12:39.363570 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.363845 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.364503 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.364783 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0102 09:12:39.418607 23 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 01/02/25 09:12:39.418
  I0102 09:12:39.418671 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.418681 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.419044 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.419082 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0102 09:12:39.472167 23 exec_util.go:111] Exec stderr: ""
  I0102 09:12:39.472233 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.472413 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.472915 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.473028 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0102 09:12:39.518716 23 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 01/02/25 09:12:39.518
  I0102 09:12:39.519015 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.519145 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.519616 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.519802 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0102 09:12:39.574762 23 exec_util.go:111] Exec stderr: ""
  I0102 09:12:39.574802 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.574950 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.575387 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.575507 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0102 09:12:39.626260 23 exec_util.go:111] Exec stderr: ""
  I0102 09:12:39.626480 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.626590 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.627111 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.627265 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0102 09:12:39.691500 23 exec_util.go:111] Exec stderr: ""
  I0102 09:12:39.691732 23 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-225 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:12:39.691837 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:12:39.692444 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:12:39.692597 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-225/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0102 09:12:39.741007 23 exec_util.go:111] Exec stderr: ""
  I0102 09:12:39.741310 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-225" for this suite. @ 01/02/25 09:12:39.743
• [4.677 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 01/02/25 09:12:39.747
  I0102 09:12:39.747527 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename gc @ 01/02/25 09:12:39.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:12:39.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:12:39.758
  STEP: create the rc @ 01/02/25 09:12:39.759
  W0102 09:12:39.763225      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/02/25 09:12:44.778
  STEP: wait for all pods to be garbage collected @ 01/02/25 09:12:44.8
  STEP: Gathering metrics @ 01/02/25 09:12:49.809
  I0102 09:12:49.966813 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0102 09:12:49.968521 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5632" for this suite. @ 01/02/25 09:12:49.97
• [10.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 01/02/25 09:12:49.976
  I0102 09:12:49.976775 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:12:49.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:12:49.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:12:49.991
  STEP: Setting up server cert @ 01/02/25 09:12:50.093
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:12:50.463
  STEP: Deploying the webhook pod @ 01/02/25 09:12:50.467
  STEP: Wait for the deployment to be ready @ 01/02/25 09:12:50.474
  I0102 09:12:50.482008 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:12:52.497
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:12:52.505
  I0102 09:12:53.513399 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0102 09:12:53.540935 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 01/02/25 09:12:54.078
  STEP: Creating a custom resource that should be denied by the webhook @ 01/02/25 09:12:54.102
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 01/02/25 09:12:56.125
  STEP: Updating the custom resource with disallowed data should be denied @ 01/02/25 09:12:56.133
  STEP: Deleting the custom resource should be denied @ 01/02/25 09:12:56.142
  STEP: Remove the offending key and value from the custom resource data @ 01/02/25 09:12:56.15
  STEP: Deleting the updated custom resource should be successful @ 01/02/25 09:12:56.157
  I0102 09:12:56.719811 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7458" for this suite. @ 01/02/25 09:12:56.723
  STEP: Destroying namespace "webhook-markers-7122" for this suite. @ 01/02/25 09:12:56.727
• [6.754 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 01/02/25 09:12:56.731
  I0102 09:12:56.731116 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-webhook @ 01/02/25 09:12:56.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:12:56.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:12:56.743
  STEP: Setting up server cert @ 01/02/25 09:12:56.744
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 01/02/25 09:12:56.981
  STEP: Deploying the custom resource conversion webhook pod @ 01/02/25 09:12:56.984
  STEP: Wait for the deployment to be ready @ 01/02/25 09:12:56.993
  I0102 09:12:57.002019 23 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:12:59.014
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:12:59.028
  I0102 09:13:00.030051 23 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0102 09:13:00.044199 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Creating a v1 custom resource @ 01/02/25 09:13:02.651
  STEP: v2 custom resource should be converted @ 01/02/25 09:13:02.655
  I0102 09:13:03.219226 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1822" for this suite. @ 01/02/25 09:13:03.222
• [6.496 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 01/02/25 09:13:03.228
  I0102 09:13:03.228538 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-runtime @ 01/02/25 09:13:03.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:13:03.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:13:03.246
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 01/02/25 09:13:03.253
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 01/02/25 09:13:20.384
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 01/02/25 09:13:20.385
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 01/02/25 09:13:20.387
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 01/02/25 09:13:20.387
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 01/02/25 09:13:20.41
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 01/02/25 09:13:23.422
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 01/02/25 09:13:25.428
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 01/02/25 09:13:25.43
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 01/02/25 09:13:25.43
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 01/02/25 09:13:25.444
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 01/02/25 09:13:26.449
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 01/02/25 09:13:28.455
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 01/02/25 09:13:28.459
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 01/02/25 09:13:28.459
  I0102 09:13:28.477900 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4651" for this suite. @ 01/02/25 09:13:28.482
• [25.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 01/02/25 09:13:28.486
  I0102 09:13:28.486767 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename taint-single-pod @ 01/02/25 09:13:28.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:13:28.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:13:28.504
  I0102 09:13:28.514727 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0102 09:14:28.516513 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0102 09:14:28.520225 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 01/02/25 09:14:28.52
  I0102 09:14:28.735921 23 taints.go:294] Pod is running on oneke-ip-192-168-150-105. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/02/25 09:14:28.737
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/02/25 09:14:28.782
  STEP: Waiting short time to make sure Pod is queued for deletion @ 01/02/25 09:14:28.816
  I0102 09:14:28.816727 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0102 09:14:28.816744 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/02/25 09:14:28.905
  STEP: Waiting some time to make sure that toleration time passed. @ 01/02/25 09:14:28.925
  I0102 09:15:43.928142 23 taints.go:329] Pod wasn't evicted. Test successful
  I0102 09:15:43.929087 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-908" for this suite. @ 01/02/25 09:15:43.942
• [135.471 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 01/02/25 09:15:43.958
  I0102 09:15:43.959063 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:15:43.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:15:44.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:15:44.066
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:15:44.067
  STEP: Saw pod success @ 01/02/25 09:15:48.079
  I0102 09:15:48.081462 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-5a0d6cc8-a13e-4bb7-a9df-f98b2ccb95f6 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:15:48.09
  I0102 09:15:48.104459 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8193" for this suite. @ 01/02/25 09:15:48.106
• [4.152 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 01/02/25 09:15:48.111
  I0102 09:15:48.111986 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:15:48.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:15:48.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:15:48.129
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:15:48.131
  STEP: Saw pod success @ 01/02/25 09:15:52.167
  I0102 09:15:52.168667 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-cf64e67e-08d9-40a3-90e1-1c51c65a5a65 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:15:52.177
  I0102 09:15:52.189305 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8643" for this suite. @ 01/02/25 09:15:52.191
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 01/02/25 09:15:52.198
  I0102 09:15:52.198151 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/02/25 09:15:52.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:15:52.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:15:52.213
  STEP: create the container to handle the HTTPGet hook request. @ 01/02/25 09:15:52.292
  STEP: create the pod with lifecycle hook @ 01/02/25 09:15:54.306
  STEP: check poststart hook @ 01/02/25 09:15:56.339
  STEP: delete the pod with lifecycle hook @ 01/02/25 09:15:56.353
  I0102 09:16:00.370609 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3290" for this suite. @ 01/02/25 09:16:00.372
• [8.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 01/02/25 09:16:00.378
  I0102 09:16:00.378150 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:16:00.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:16:00.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:16:00.392
  STEP: Creating configMap configmap-924/configmap-test-9cc41f50-0230-4027-8791-ef2e1f478c55 @ 01/02/25 09:16:00.393
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:16:00.398
  STEP: Saw pod success @ 01/02/25 09:16:04.409
  I0102 09:16:04.411477 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-e54c31dd-45e9-4d63-a1fb-207cc3864548 container env-test: <nil>
  STEP: delete the pod @ 01/02/25 09:16:04.415
  I0102 09:16:04.427062 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-924" for this suite. @ 01/02/25 09:16:04.429
• [4.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 01/02/25 09:16:04.437
  I0102 09:16:04.437331 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename podtemplate @ 01/02/25 09:16:04.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:16:04.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:16:04.45
  I0102 09:16:04.466596 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2139" for this suite. @ 01/02/25 09:16:04.535
• [0.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 01/02/25 09:16:04.548
  I0102 09:16:04.548642 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename aggregator @ 01/02/25 09:16:04.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:16:04.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:16:04.569
  I0102 09:16:04.570916 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Registering the sample API server. @ 01/02/25 09:16:04.571
  I0102 09:16:04.953806 23 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0102 09:16:04.986376 23 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0102 09:16:07.020466 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:09.022433 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:11.023557 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:13.025582 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:15.025514 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:17.028025 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:19.028780 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:21.023348 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:23.023597 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:25.027842 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:27.023113 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 16, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:16:29.158476 23 aggregator.go:755] Waited 117.748075ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 01/02/25 09:16:29.258
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 01/02/25 09:16:29.259
  STEP: List APIServices @ 01/02/25 09:16:29.264
  I0102 09:16:29.268157 23 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 01/02/25 09:16:29.268
  I0102 09:16:29.275776 23 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 01/02/25 09:16:29.275
  I0102 09:16:29.282846 23 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.January, 2, 9, 16, 29, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 01/02/25 09:16:29.282
  I0102 09:16:29.285074 23 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-01-02 09:16:29 +0000 UTC Passed all checks passed}
  I0102 09:16:29.285099 23 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0102 09:16:29.285110 23 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 01/02/25 09:16:29.285
  I0102 09:16:29.292521 23 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-976088744" @ 01/02/25 09:16:29.292
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 01/02/25 09:16:29.299
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 01/02/25 09:16:29.309
  STEP: Patch APIService Status @ 01/02/25 09:16:29.31
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 01/02/25 09:16:29.315
  I0102 09:16:29.318500 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-01-02 09:16:29 +0000 UTC Passed all checks passed}
  I0102 09:16:29.318626 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0102 09:16:29.318840 23 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0102 09:16:29.318924 23 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 01/02/25 09:16:29.319
  STEP: Confirm that the generated APIService has been deleted @ 01/02/25 09:16:29.323
  I0102 09:16:29.323827 23 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0102 09:16:29.325247 23 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0102 09:16:29.325267 23 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0102 09:16:29.394164 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2592" for this suite. @ 01/02/25 09:16:29.396
• [24.852 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 01/02/25 09:16:29.401
  I0102 09:16:29.401740 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename ingress @ 01/02/25 09:16:29.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:16:29.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:16:29.415
  STEP: getting /apis @ 01/02/25 09:16:29.417
  STEP: getting /apis/networking.k8s.io @ 01/02/25 09:16:29.421
  STEP: getting /apis/networking.k8s.iov1 @ 01/02/25 09:16:29.421
  STEP: creating @ 01/02/25 09:16:29.422
  STEP: getting @ 01/02/25 09:16:29.435
  STEP: listing @ 01/02/25 09:16:29.436
  STEP: watching @ 01/02/25 09:16:29.437
  I0102 09:16:29.437728 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 01/02/25 09:16:29.439
  STEP: cluster-wide watching @ 01/02/25 09:16:29.44
  I0102 09:16:29.440188 23 ingress.go:198] starting watch
  STEP: patching @ 01/02/25 09:16:29.44
  STEP: updating @ 01/02/25 09:16:29.443
  I0102 09:16:29.448623 23 ingress.go:221] waiting for watch events with expected annotations
  I0102 09:16:29.448739 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 01/02/25 09:16:29.449
  STEP: updating /status @ 01/02/25 09:16:29.452
  STEP: get /status @ 01/02/25 09:16:29.455
  STEP: deleting @ 01/02/25 09:16:29.457
  STEP: deleting a collection @ 01/02/25 09:16:29.461
  I0102 09:16:29.467141 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6947" for this suite. @ 01/02/25 09:16:29.497
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 01/02/25 09:16:29.501
  I0102 09:16:29.501924 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:16:29.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:16:29.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:16:29.515
  STEP: Setting up server cert @ 01/02/25 09:16:29.625
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:16:29.81
  STEP: Deploying the webhook pod @ 01/02/25 09:16:29.814
  STEP: Wait for the deployment to be ready @ 01/02/25 09:16:29.825
  I0102 09:16:29.836359 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:16:31.841
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:16:31.853
  I0102 09:16:32.853701 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/02/25 09:16:32.856
  I0102 09:16:32.903426 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6865" for this suite. @ 01/02/25 09:16:32.91
  STEP: Destroying namespace "webhook-markers-1691" for this suite. @ 01/02/25 09:16:32.915
• [3.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 01/02/25 09:16:32.923
  I0102 09:16:32.923812 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-preemption @ 01/02/25 09:16:32.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:16:32.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:16:32.937
  I0102 09:16:32.946056 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0102 09:17:32.952813 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/02/25 09:17:32.955
  I0102 09:17:32.981245 23 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0102 09:17:32.986605 23 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0102 09:17:33.014995 23 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0102 09:17:33.028057 23 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/02/25 09:17:33.028
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 01/02/25 09:17:35.058
  I0102 09:17:39.121256 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8548" for this suite. @ 01/02/25 09:17:39.124
• [66.205 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 01/02/25 09:17:39.129
  I0102 09:17:39.129394 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:17:39.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:17:39.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:17:39.145
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:17:39.146
  STEP: Saw pod success @ 01/02/25 09:17:43.173
  I0102 09:17:43.175643 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-73e93b8e-cfc1-4051-9db9-c50e33ef45b3 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:17:43.184
  I0102 09:17:43.195730 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3982" for this suite. @ 01/02/25 09:17:43.198
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 01/02/25 09:17:43.202
  I0102 09:17:43.203012 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:17:43.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:17:43.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:17:43.219
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:17:43.221
  STEP: Saw pod success @ 01/02/25 09:17:47.252
  I0102 09:17:47.263386 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-ed0cb8e7-6a9f-4c93-a444-44bb3c264c9f container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:17:47.273
  I0102 09:17:47.287837 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6909" for this suite. @ 01/02/25 09:17:47.289
• [4.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 01/02/25 09:17:47.293
  I0102 09:17:47.294059 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:17:47.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:17:47.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:17:47.306
  STEP: Creating Pod @ 01/02/25 09:17:47.308
  STEP: Reading file content from the nginx-container @ 01/02/25 09:17:49.328
  I0102 09:17:49.328275 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9077 PodName:pod-sharedvolume-e4bbc972-ca8c-4076-a7b3-24776cfb31d0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:17:49.328393 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:17:49.331042 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:17:49.331211 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-9077/pods/pod-sharedvolume-e4bbc972-ca8c-4076-a7b3-24776cfb31d0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0102 09:17:49.428603 23 exec_util.go:111] Exec stderr: ""
  I0102 09:17:49.428814 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9077" for this suite. @ 01/02/25 09:17:49.43
• [2.141 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 01/02/25 09:17:49.434
  I0102 09:17:49.434827 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename security-context-test @ 01/02/25 09:17:49.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:17:49.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:17:49.451
  I0102 09:17:53.467602 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7057" for this suite. @ 01/02/25 09:17:53.47
• [4.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 01/02/25 09:17:53.478
  I0102 09:17:53.478121 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:17:53.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:17:53.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:17:53.513
  I0102 09:17:53.516400 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-2831 create -f -'
  I0102 09:17:53.664332 23 builder.go:146] stderr: ""
  I0102 09:17:53.667706 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0102 09:17:53.668035 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-2831 create -f -'
  I0102 09:17:53.854730 23 builder.go:146] stderr: ""
  I0102 09:17:53.854763 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/02/25 09:17:53.854
  I0102 09:17:54.858442 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 09:17:54.858471 23 framework.go:733] Found 1 / 1
  I0102 09:17:54.858485 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0102 09:17:54.859957 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 09:17:54.859976 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0102 09:17:54.860116 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-2831 describe pod agnhost-primary-q5pvb'
  I0102 09:17:54.917298 23 builder.go:146] stderr: ""
  I0102 09:17:54.917354 23 builder.go:147] stdout: "Name:             agnhost-primary-q5pvb\nNamespace:        kubectl-2831\nPriority:         0\nService Account:  default\nNode:             oneke-ip-192-168-150-103/192.168.150.103\nStart Time:       Thu, 02 Jan 2025 09:17:53 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 3641a97f8baa030bb017e89c2580f362403eeeb34f908e8bf620d68f411453f8\n                  cni.projectcalico.org/podIP: 10.42.1.56/32\n                  cni.projectcalico.org/podIPs: 10.42.1.56/32\n                  k8s.v1.cni.cncf.io/network-status:\n                    [{\n                        \"name\": \"k8s-pod-network\",\n                        \"ips\": [\n                            \"10.42.1.56\"\n                        ],\n                        \"default\": true,\n                        \"dns\": {}\n                    }]\nStatus:           Running\nIP:               10.42.1.56\nIPs:\n  IP:           10.42.1.56\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://e0f359d4b77a7ca9091c2d6468f6af45f3ab8d5a8418914c9f8d90108b1c881b\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 02 Jan 2025 09:17:54 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-88kvk (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-88kvk:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason          Age   From               Message\n  ----    ------          ----  ----               -------\n  Normal  Scheduled       1s    default-scheduler  Successfully assigned kubectl-2831/agnhost-primary-q5pvb to oneke-ip-192-168-150-103\n  Normal  AddedInterface  0s    multus             Add eth0 [10.42.1.56/32] from k8s-pod-network\n  Normal  Pulled          0s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created         0s    kubelet            Created container agnhost-primary\n  Normal  Started         0s    kubelet            Started container agnhost-primary\n"
  I0102 09:17:54.917623 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-2831 describe rc agnhost-primary'
  I0102 09:17:54.978887 23 builder.go:146] stderr: ""
  I0102 09:17:54.978926 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2831\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-q5pvb\n"
  I0102 09:17:54.979108 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-2831 describe service agnhost-primary'
  I0102 09:17:55.029143 23 builder.go:146] stderr: ""
  I0102 09:17:55.029178 23 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-2831\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.158.29\nIPs:                      10.43.158.29\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.1.56:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0102 09:17:55.031198 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-2831 describe node oneke-ip-192-168-150-102'
  I0102 09:17:55.113429 23 builder.go:146] stderr: ""
  I0102 09:17:55.113521 23 builder.go:147] stdout: "Name:               oneke-ip-192-168-150-102\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=oneke-ip-192-168-150-102\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=rke2\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 192.168.150.102\n                    etcd.rke2.cattle.io/local-snapshots-timestamp: 2025-01-02T08:52:20Z\n                    etcd.rke2.cattle.io/node-address: 192.168.150.102\n                    etcd.rke2.cattle.io/node-name: oneke-ip-192-168-150-102-08372c99\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"66:16:fc:0e:d6:f1\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.150.102\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke2.io/encryption-config-hash: start-c66176a660a61174187f49755d963628cad542f16c5e1f9f89e09414e52fccf7\n                    rke2.io/hostname: oneke-ip-192-168-150-102\n                    rke2.io/internal-ip: 192.168.150.102\n                    rke2.io/node-args:\n                      [\"server\",\"--node-name\",\"oneke-ip-192-168-150-102\",\"--token\",\"********\",\"--tls-san\",\"localhost\",\"--tls-san\",\"127.0.0.1\",\"--tls-san\",\"ep0.e...\n                    rke2.io/node-config-hash: 7YLA4XFG6NL7QJGKON43RAWYWMXAYRBAMCIOFV3V44F7SJVG7NKQ====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 02 Jan 2025 08:52:14 +0000\nTaints:             CriticalAddonsOnly=true:NoExecute\nUnschedulable:      false\nLease:\n  HolderIdentity:  oneke-ip-192-168-150-102\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 02 Jan 2025 09:17:46 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 02 Jan 2025 08:52:56 +0000   Thu, 02 Jan 2025 08:52:56 +0000   FlannelIsUp                  Flannel is running on this node\n  EtcdIsVoter          True    Thu, 02 Jan 2025 09:17:32 +0000   Thu, 02 Jan 2025 08:52:32 +0000   MemberNotLearner             Node is a voting member of the etcd cluster\n  MemoryPressure       False   Thu, 02 Jan 2025 09:15:03 +0000   Thu, 02 Jan 2025 08:52:14 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 02 Jan 2025 09:15:03 +0000   Thu, 02 Jan 2025 08:52:14 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 02 Jan 2025 09:15:03 +0000   Thu, 02 Jan 2025 08:52:14 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 02 Jan 2025 09:15:03 +0000   Thu, 02 Jan 2025 08:52:47 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.150.102\n  Hostname:    oneke-ip-192-168-150-102\nCapacity:\n  cpu:                2\n  ephemeral-storage:  25215872Ki\n  hugepages-2Mi:      0\n  memory:             3039924Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  24530000263\n  hugepages-2Mi:      0\n  memory:             3039924Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 0f565be768a94b2db08f4fcc01a57966\n  System UUID:                0f565be7-68a9-4b2d-b08f-4fcc01a57966\n  Boot ID:                    70068ac7-dcf6-4325-b531-961bc8d287d9\n  Kernel Version:             5.15.0-126-generic\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.23-k3s2\n  Kubelet Version:            v1.31.3+rke2r1\n  Kube-Proxy Version:         v1.31.3+rke2r1\nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   rke2://oneke-ip-192-168-150-102\nNon-terminated Pods:          (11 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cloud-controller-manager-oneke-ip-192-168-150-102          100m (5%)     0 (0%)      128Mi (4%)       0 (0%)         25m\n  kube-system                 etcd-oneke-ip-192-168-150-102                              200m (10%)    0 (0%)      512Mi (17%)      0 (0%)         25m\n  kube-system                 kube-apiserver-oneke-ip-192-168-150-102                    250m (12%)    0 (0%)      1Gi (34%)        0 (0%)         25m\n  kube-system                 kube-controller-manager-oneke-ip-192-168-150-102           200m (10%)    0 (0%)      256Mi (8%)       0 (0%)         25m\n  kube-system                 kube-proxy-oneke-ip-192-168-150-102                        250m (12%)    0 (0%)      128Mi (4%)       0 (0%)         25m\n  kube-system                 kube-scheduler-oneke-ip-192-168-150-102                    100m (5%)     0 (0%)      128Mi (4%)       0 (0%)         25m\n  kube-system                 rke2-canal-v4q7v                                           250m (12%)    0 (0%)      0 (0%)           0 (0%)         25m\n  kube-system                 rke2-coredns-rke2-coredns-9579797d8-p6w7g                  100m (5%)     100m (5%)   128Mi (4%)       128Mi (4%)     25m\n  kube-system                 rke2-multus-fr7vm                                          250m (12%)    2 (100%)    128Mi (4%)       1Gi (34%)      25m\n  sonobuoy                    sonobuoy-e2e-job-ae13a6f7aa25425f                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         8m38s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-gj9x4    0 (0%)        0 (0%)      0 (0%)           0 (0%)         8m38s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests      Limits\n  --------           --------      ------\n  cpu                1700m (85%)   2100m (105%)\n  memory             2432Mi (81%)  1152Mi (38%)\n  ephemeral-storage  0 (0%)        0 (0%)\n  hugepages-2Mi      0 (0%)        0 (0%)\nEvents:\n  Type    Reason                          Age                From                   Message\n  ----    ------                          ----               ----                   -------\n  Normal  Starting                        25m                kube-proxy             \n  Normal  NodeAllocatableEnforced         26m                kubelet                Updated Node Allocatable limit across pods\n  Normal  NodeHasSufficientMemory         26m (x8 over 26m)  kubelet                Node oneke-ip-192-168-150-102 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure           26m (x8 over 26m)  kubelet                Node oneke-ip-192-168-150-102 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID            26m (x7 over 26m)  kubelet                Node oneke-ip-192-168-150-102 status is now: NodeHasSufficientPID\n  Normal  Synced                          25m                cloud-node-controller  Node synced successfully\n  Normal  RegisteredNode                  25m                node-controller        Node oneke-ip-192-168-150-102 event: Registered Node oneke-ip-192-168-150-102 in Controller\n  Normal  NodePasswordValidationComplete  25m                rke2-supervisor        Deferred node password secret validation complete\n"
  I0102 09:17:55.113580 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-2831 describe namespace kubectl-2831'
  I0102 09:17:55.166013 23 builder.go:146] stderr: ""
  I0102 09:17:55.166050 23 builder.go:147] stdout: "Name:         kubectl-2831\nLabels:       e2e-framework=kubectl\n              e2e-run=f06cdf57-c49c-4f44-b15c-b862c2645b5d\n              kubernetes.io/metadata.name=kubectl-2831\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0102 09:17:55.166142 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2831" for this suite. @ 01/02/25 09:17:55.167
• [1.692 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 01/02/25 09:17:55.171
  I0102 09:17:55.171324 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename controllerrevisions @ 01/02/25 09:17:55.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:17:55.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:17:55.276
  STEP: Creating DaemonSet "e2e-d7h4k-daemon-set" @ 01/02/25 09:17:55.286
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/02/25 09:17:55.29
  I0102 09:17:55.384866 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:17:55.385032 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:17:55.387054 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-d7h4k-daemon-set: 0
  I0102 09:17:55.387150 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 09:17:56.303464 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:17:56.304641 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:17:56.309915 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-d7h4k-daemon-set: 0
  I0102 09:17:56.310391 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 09:17:57.294280 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:17:57.294489 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:17:57.295988 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-d7h4k-daemon-set: 2
  I0102 09:17:57.296068 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-d7h4k-daemon-set
  STEP: Confirm DaemonSet "e2e-d7h4k-daemon-set" successfully created with "daemonset-name=e2e-d7h4k-daemon-set" label @ 01/02/25 09:17:57.297
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-d7h4k-daemon-set" @ 01/02/25 09:17:57.299
  I0102 09:17:57.300439 23 controller_revision.go:162] Located ControllerRevision: "e2e-d7h4k-daemon-set-55c4cc554"
  STEP: Patching ControllerRevision "e2e-d7h4k-daemon-set-55c4cc554" @ 01/02/25 09:17:57.301
  I0102 09:17:57.305395 23 controller_revision.go:173] e2e-d7h4k-daemon-set-55c4cc554 has been patched
  STEP: Create a new ControllerRevision @ 01/02/25 09:17:57.305
  I0102 09:17:57.307673 23 controller_revision.go:191] Created ControllerRevision: e2e-d7h4k-daemon-set-7c9cbd94f6
  STEP: Confirm that there are two ControllerRevisions @ 01/02/25 09:17:57.307
  I0102 09:17:57.307724 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0102 09:17:57.308942 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-d7h4k-daemon-set-55c4cc554" @ 01/02/25 09:17:57.308
  STEP: Confirm that there is only one ControllerRevision @ 01/02/25 09:17:57.311
  I0102 09:17:57.311349 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0102 09:17:57.312408 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-d7h4k-daemon-set-7c9cbd94f6" @ 01/02/25 09:17:57.313
  I0102 09:17:57.317220 23 controller_revision.go:220] e2e-d7h4k-daemon-set-7c9cbd94f6 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 01/02/25 09:17:57.317
  W0102 09:17:57.321486      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 01/02/25 09:17:57.322
  I0102 09:17:57.322592 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0102 09:17:57.333428 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-d7h4k-daemon-set-7c9cbd94f6=updated" @ 01/02/25 09:17:57.333
  STEP: Confirm that there is only one ControllerRevision @ 01/02/25 09:17:57.406
  I0102 09:17:57.406537 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0102 09:17:57.409269 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0102 09:17:57.411536 23 controller_revision.go:246] ControllerRevision "e2e-d7h4k-daemon-set-64bcf8ccd5" has revision 3
  STEP: Deleting DaemonSet "e2e-d7h4k-daemon-set" @ 01/02/25 09:17:57.414
  STEP: deleting DaemonSet.extensions e2e-d7h4k-daemon-set in namespace controllerrevisions-266, will wait for the garbage collector to delete the pods @ 01/02/25 09:17:57.414
  I0102 09:17:57.473362 23 resources.go:139] Deleting DaemonSet.extensions e2e-d7h4k-daemon-set took: 6.617346ms
  I0102 09:17:57.574248 23 resources.go:163] Terminating DaemonSet.extensions e2e-d7h4k-daemon-set pods took: 100.884214ms
  I0102 09:17:59.776735 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-d7h4k-daemon-set: 0
  I0102 09:17:59.776764 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-d7h4k-daemon-set
  I0102 09:17:59.777812 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12020"},"items":null}

  I0102 09:17:59.778649 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12020"},"items":null}

  I0102 09:17:59.782401 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-266" for this suite. @ 01/02/25 09:17:59.783
• [4.618 seconds]
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 01/02/25 09:17:59.787
  I0102 09:17:59.787714 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename endpointslicemirroring @ 01/02/25 09:17:59.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:17:59.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:17:59.8
  STEP: mirroring a new custom Endpoint @ 01/02/25 09:17:59.808
  I0102 09:17:59.822310 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 01/02/25 09:18:01.824
  STEP: mirroring deletion of a custom Endpoint @ 01/02/25 09:18:01.832
  I0102 09:18:01.845152 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-502" for this suite. @ 01/02/25 09:18:01.847
• [2.063 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 01/02/25 09:18:01.85
  I0102 09:18:01.850615 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename events @ 01/02/25 09:18:01.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:18:01.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:18:01.865
  STEP: creating a test event @ 01/02/25 09:18:01.866
  STEP: listing all events in all namespaces @ 01/02/25 09:18:01.869
  STEP: patching the test event @ 01/02/25 09:18:01.879
  STEP: fetching the test event @ 01/02/25 09:18:01.882
  STEP: updating the test event @ 01/02/25 09:18:01.883
  STEP: getting the test event @ 01/02/25 09:18:01.887
  STEP: deleting the test event @ 01/02/25 09:18:01.888
  STEP: listing all events in all namespaces @ 01/02/25 09:18:01.89
  I0102 09:18:01.902025 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8299" for this suite. @ 01/02/25 09:18:01.948
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 01/02/25 09:18:01.952
  I0102 09:18:01.952939 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:18:01.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:18:02.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:18:02.013
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:18:02.015
  STEP: Saw pod success @ 01/02/25 09:18:06.028
  I0102 09:18:06.030505 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-2416034a-1ff1-4582-ae4c-51d8300b414c container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:18:06.041
  I0102 09:18:06.051268 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-325" for this suite. @ 01/02/25 09:18:06.053
• [4.103 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 01/02/25 09:18:06.056
  I0102 09:18:06.056677 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replication-controller @ 01/02/25 09:18:06.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:18:06.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:18:06.069
  I0102 09:18:06.071356 23 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 01/02/25 09:18:07.078
  STEP: Checking rc "condition-test" has the desired failure condition set @ 01/02/25 09:18:07.085
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 01/02/25 09:18:08.092
  I0102 09:18:08.095807 23 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 01/02/25 09:18:08.095
  I0102 09:18:08.099176 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3657" for this suite. @ 01/02/25 09:18:08.101
• [2.050 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 01/02/25 09:18:08.106
  I0102 09:18:08.106572 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename dns @ 01/02/25 09:18:08.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:18:08.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:18:08.12
  STEP: Creating a test externalName service @ 01/02/25 09:18:08.122
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8872.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local; sleep 1; done
   @ 01/02/25 09:18:08.127
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8872.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local; sleep 1; done
   @ 01/02/25 09:18:08.127
  STEP: creating a pod to probe DNS @ 01/02/25 09:18:08.127
  STEP: submitting the pod to kubernetes @ 01/02/25 09:18:08.127
  STEP: retrieving the pod @ 01/02/25 09:18:16.168
  STEP: looking for the results for each expected name from probers @ 01/02/25 09:18:16.174
  I0102 09:18:16.190678 23 dns_common.go:552] DNS probes using dns-test-bc0688ef-c531-4dd0-9f56-ad92741f542c succeeded

  STEP: changing the externalName to bar.example.com @ 01/02/25 09:18:16.19
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8872.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local; sleep 1; done
   @ 01/02/25 09:18:16.198
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8872.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local; sleep 1; done
   @ 01/02/25 09:18:16.198
  STEP: creating a second pod to probe DNS @ 01/02/25 09:18:16.198
  STEP: submitting the pod to kubernetes @ 01/02/25 09:18:16.198
  STEP: retrieving the pod @ 01/02/25 09:18:22.214
  STEP: looking for the results for each expected name from probers @ 01/02/25 09:18:22.215
  I0102 09:18:22.219332 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:22.220890 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:22.221038 23 dns_common.go:489] Lookups using dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e failed for: [wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local]

  I0102 09:18:22.223890 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:18:22.226762 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:18:22.229735 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:18:27.220645 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:27.224554 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:27.224630 23 dns_common.go:489] Lookups using dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e failed for: [wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local]

  I0102 09:18:27.230930 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:18:27.237029 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:18:27.242964 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:18:32.218909 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:32.220887 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:32.220913 23 dns_common.go:489] Lookups using dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e failed for: [wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local]

  I0102 09:18:32.223680 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:18:32.226367 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:18:32.229145 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:18:37.218630 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:37.221096 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:37.221127 23 dns_common.go:489] Lookups using dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e failed for: [wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local]

  I0102 09:18:37.224770 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:18:37.227873 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:18:37.230988 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:18:42.252310 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local from pod  dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0102 09:18:42.253327 23 dns_common.go:489] Lookups using dns-8872/dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e failed for: [jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local]

  I0102 09:18:42.261163 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:18:42.265596 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:18:42.269364 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:18:47.231593 23 dns_common.go:552] DNS probes using dns-test-b52d46f9-b85f-4701-a643-c8551d6c502e succeeded

  STEP: changing the service to type=ClusterIP @ 01/02/25 09:18:47.231
  W0102 09:18:47.259769      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8872.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8872.svc.cluster.local; sleep 1; done
   @ 01/02/25 09:18:47.259
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8872.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8872.svc.cluster.local; sleep 1; done
   @ 01/02/25 09:18:47.259
  STEP: creating a third pod to probe DNS @ 01/02/25 09:18:47.259
  STEP: submitting the pod to kubernetes @ 01/02/25 09:18:47.261
  STEP: retrieving the pod @ 01/02/25 09:18:49.275
  STEP: looking for the results for each expected name from probers @ 01/02/25 09:18:49.28
  I0102 09:18:49.299074 23 dns_common.go:552] DNS probes using dns-test-d81a736d-9574-4bce-9661-b3aa4cb3f989 succeeded

  STEP: deleting the pod @ 01/02/25 09:18:49.299
  STEP: deleting the pod @ 01/02/25 09:18:49.323
  STEP: deleting the pod @ 01/02/25 09:18:49.336
  STEP: deleting the test externalName service @ 01/02/25 09:18:49.345
  I0102 09:18:49.361130 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8872" for this suite. @ 01/02/25 09:18:49.363
• [41.261 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 01/02/25 09:18:49.368
  I0102 09:18:49.368669 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:18:49.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:18:49.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:18:49.383
  STEP: Counting existing ResourceQuota @ 01/02/25 09:18:49.385
  STEP: Creating a ResourceQuota @ 01/02/25 09:18:54.388
  STEP: Ensuring resource quota status is calculated @ 01/02/25 09:18:54.393
  STEP: Creating a ReplicaSet @ 01/02/25 09:18:56.401
  STEP: Ensuring resource quota status captures replicaset creation @ 01/02/25 09:18:56.42
  STEP: Deleting a ReplicaSet @ 01/02/25 09:18:58.428
  STEP: Ensuring resource quota status released usage @ 01/02/25 09:18:58.446
  I0102 09:19:00.449568 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9077" for this suite. @ 01/02/25 09:19:00.451
• [11.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 01/02/25 09:19:00.456
  I0102 09:19:00.456025 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename field-validation @ 01/02/25 09:19:00.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:19:00.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:19:00.469
  I0102 09:19:00.470919 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  W0102 09:19:02.508064      23 warnings.go:70] unknown field "alpha"
  W0102 09:19:02.508789      23 warnings.go:70] unknown field "beta"
  W0102 09:19:02.509447      23 warnings.go:70] unknown field "delta"
  W0102 09:19:02.510056      23 warnings.go:70] unknown field "epsilon"
  W0102 09:19:02.510635      23 warnings.go:70] unknown field "gamma"
  I0102 09:19:03.049792 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-461" for this suite. @ 01/02/25 09:19:03.051
• [2.600 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 01/02/25 09:19:03.055
  I0102 09:19:03.055824 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:19:03.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:19:03.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:19:03.069
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:19:03.07
  STEP: Saw pod success @ 01/02/25 09:19:07.096
  I0102 09:19:07.102828 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-0eebfe0a-d6d3-4f04-8d47-1b759f018198 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:19:07.117
  I0102 09:19:07.135577 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8650" for this suite. @ 01/02/25 09:19:07.138
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 01/02/25 09:19:07.145
  I0102 09:19:07.145866 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:19:07.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:19:07.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:19:07.158
  STEP: Starting the proxy @ 01/02/25 09:19:07.16
  I0102 09:19:07.160986 23 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-6004 proxy --unix-socket=/tmp/kubectl-proxy-unix2379154585/test'
  STEP: retrieving proxy /api/ output @ 01/02/25 09:19:07.197
  I0102 09:19:07.198128 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6004" for this suite. @ 01/02/25 09:19:07.238
• [0.097 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 01/02/25 09:19:07.243
  I0102 09:19:07.243119 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename subpath @ 01/02/25 09:19:07.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:19:07.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:19:07.26
  STEP: Setting up data @ 01/02/25 09:19:07.261
  STEP: Creating pod pod-subpath-test-downwardapi-2k66 @ 01/02/25 09:19:07.268
  STEP: Creating a pod to test atomic-volume-subpath @ 01/02/25 09:19:07.268
  STEP: Saw pod success @ 01/02/25 09:19:31.33
  I0102 09:19:31.337766 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-subpath-test-downwardapi-2k66 container test-container-subpath-downwardapi-2k66: <nil>
  STEP: delete the pod @ 01/02/25 09:19:31.361
  STEP: Deleting pod pod-subpath-test-downwardapi-2k66 @ 01/02/25 09:19:31.374
  I0102 09:19:31.374634 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-2k66" in namespace "subpath-162"
  I0102 09:19:31.375986 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-162" for this suite. @ 01/02/25 09:19:31.378
• [24.139 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 01/02/25 09:19:31.382
  I0102 09:19:31.382114 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/02/25 09:19:31.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:19:31.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:19:31.397
  STEP: create the container to handle the HTTPGet hook request. @ 01/02/25 09:19:31.48
  STEP: create the pod with lifecycle hook @ 01/02/25 09:19:33.497
  STEP: delete the pod with lifecycle hook @ 01/02/25 09:19:35.507
  STEP: check prestop hook @ 01/02/25 09:19:39.521
  I0102 09:19:39.527325 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6204" for this suite. @ 01/02/25 09:19:39.532
• [8.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 01/02/25 09:19:39.546
  I0102 09:19:39.546100 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename subpath @ 01/02/25 09:19:39.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:19:39.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:19:39.565
  STEP: Setting up data @ 01/02/25 09:19:39.567
  STEP: Creating pod pod-subpath-test-secret-2zw7 @ 01/02/25 09:19:39.573
  STEP: Creating a pod to test atomic-volume-subpath @ 01/02/25 09:19:39.573
  STEP: Saw pod success @ 01/02/25 09:20:03.647
  I0102 09:20:03.648710 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-subpath-test-secret-2zw7 container test-container-subpath-secret-2zw7: <nil>
  STEP: delete the pod @ 01/02/25 09:20:03.655
  STEP: Deleting pod pod-subpath-test-secret-2zw7 @ 01/02/25 09:20:03.666
  I0102 09:20:03.666229 23 delete.go:62] Deleting pod "pod-subpath-test-secret-2zw7" in namespace "subpath-5352"
  I0102 09:20:03.667453 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5352" for this suite. @ 01/02/25 09:20:03.669
• [24.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 01/02/25 09:20:03.683
  I0102 09:20:03.683382 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename init-container @ 01/02/25 09:20:03.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:20:03.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:20:03.696
  STEP: creating the pod @ 01/02/25 09:20:03.698
  I0102 09:20:03.698939 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0102 09:20:50.057484 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-55d1abce-d167-4907-ba3a-30d413b89864", GenerateName:"", Namespace:"init-container-4560", SelfLink:"", UID:"cf555032-0eca-4d25-be8f-51a842c9abd5", ResourceVersion:"13311", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 9, 20, 3, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"698919580"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"c955bcabb71ea70f529a402e8862288dc9fab9e4727d671968da2cc939f648a0", "cni.projectcalico.org/podIP":"10.42.1.63/32", "cni.projectcalico.org/podIPs":"10.42.1.63/32", "k8s.v1.cni.cncf.io/network-status":"[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.63\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 9, 20, 3, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017f9170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 9, 20, 4, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017f91a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"multus", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 9, 20, 4, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017f9230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 9, 20, 50, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017f9290), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-hl7h6", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc001677280), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hl7h6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hl7h6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-hl7h6", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00281b2d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"oneke-ip-192-168-150-103", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004d7e580), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00281b350)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00281b370)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00281b378), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00281b37c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0006d9430), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 2, 9, 20, 4, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 2, 9, 20, 3, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 2, 9, 20, 3, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 2, 9, 20, 3, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.January, 2, 9, 20, 3, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.150.103", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.150.103"}}, PodIP:"10.42.1.63", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.1.63"}}, StartTime:time.Date(2025, time.January, 2, 9, 20, 3, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc0017f92f0), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003eb7a0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://95ade394e645dc8f94af46e80ad9e4a43e755ba119ad651cad25509392ce539a", Started:(*bool)(0xc00281b425), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hl7h6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0006d9460)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0016772e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00281b435), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hl7h6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0006d9480)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0016772c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00281b3ff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-hl7h6", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0006d9450)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0102 09:20:50.058144 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4560" for this suite. @ 01/02/25 09:20:50.061
• [46.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 01/02/25 09:20:50.066
  I0102 09:20:50.066262 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubelet-test @ 01/02/25 09:20:50.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:20:50.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:20:50.079
  I0102 09:20:52.102250 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6624" for this suite. @ 01/02/25 09:20:52.108
• [2.049 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 01/02/25 09:20:52.115
  I0102 09:20:52.115916 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:20:52.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:20:52.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:20:52.132
  STEP: Setting up server cert @ 01/02/25 09:20:52.228
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:20:52.584
  STEP: Deploying the webhook pod @ 01/02/25 09:20:52.588
  STEP: Wait for the deployment to be ready @ 01/02/25 09:20:52.597
  I0102 09:20:52.608159 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:20:54.612
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:20:54.63
  I0102 09:20:55.630606 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/02/25 09:20:55.646
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 01/02/25 09:20:55.675
  STEP: Creating a dummy validating-webhook-configuration object @ 01/02/25 09:20:55.688
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 01/02/25 09:20:55.694
  STEP: Creating a dummy mutating-webhook-configuration object @ 01/02/25 09:20:55.697
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 01/02/25 09:20:55.702
  I0102 09:20:55.755641 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7022" for this suite. @ 01/02/25 09:20:55.757
  STEP: Destroying namespace "webhook-markers-8468" for this suite. @ 01/02/25 09:20:55.762
• [3.651 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 01/02/25 09:20:55.767
  I0102 09:20:55.767175 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:20:55.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:20:55.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:20:55.78
  STEP: Creating a pod to test downward api env vars @ 01/02/25 09:20:55.781
  STEP: Saw pod success @ 01/02/25 09:20:59.801
  I0102 09:20:59.808062 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downward-api-619abe71-c9fd-4181-ae4a-36eec9485423 container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 09:20:59.824
  I0102 09:20:59.836977 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1207" for this suite. @ 01/02/25 09:20:59.839
• [4.075 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 01/02/25 09:20:59.843
  I0102 09:20:59.843239 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubelet-test @ 01/02/25 09:20:59.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:20:59.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:20:59.855
  I0102 09:21:01.911838 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9445" for this suite. @ 01/02/25 09:21:01.916
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 01/02/25 09:21:01.923
  I0102 09:21:01.923979 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename init-container @ 01/02/25 09:21:01.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:21:01.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:21:01.938
  STEP: creating the pod @ 01/02/25 09:21:01.939
  I0102 09:21:01.939835 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0102 09:21:06.389880 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5070" for this suite. @ 01/02/25 09:21:06.393
• [4.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 01/02/25 09:21:06.399
  I0102 09:21:06.399353 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename statefulset @ 01/02/25 09:21:06.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:21:06.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:21:06.412
  STEP: Creating service test in namespace statefulset-7660 @ 01/02/25 09:21:06.414
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 01/02/25 09:21:06.416
  STEP: Creating stateful set ss in namespace statefulset-7660 @ 01/02/25 09:21:06.421
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7660 @ 01/02/25 09:21:06.429
  I0102 09:21:06.442883 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0102 09:21:16.439264 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 01/02/25 09:21:16.441
  I0102 09:21:16.451021 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-7660 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 09:21:16.582522 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 09:21:16.582586 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 09:21:16.582601 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 09:21:16.584059 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0102 09:21:26.586881 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0102 09:21:26.586939 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0102 09:21:26.687452 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.99999955s
  I0102 09:21:27.689570 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.913385755s
  I0102 09:21:28.691395 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.911377794s
  I0102 09:21:29.693577 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.909522569s
  I0102 09:21:30.701642 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.907279275s
  I0102 09:21:31.706313 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.898784807s
  I0102 09:21:32.709435 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.89398459s
  I0102 09:21:33.712415 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.890649323s
  I0102 09:21:34.720779 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.888315231s
  I0102 09:21:35.730230 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 879.729094ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7660 @ 01/02/25 09:21:36.731
  I0102 09:21:36.737227 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-7660 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 09:21:36.883070 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0102 09:21:36.883129 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 09:21:36.883146 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0102 09:21:36.885371 23 wait.go:40] Found 1 stateful pods, waiting for 3
  I0102 09:21:46.891760 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:21:46.892321 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:21:46.892686 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 01/02/25 09:21:46.892
  STEP: Scale down will halt with unhealthy stateful pod @ 01/02/25 09:21:46.893
  I0102 09:21:46.908137 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-7660 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 09:21:47.016370 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 09:21:47.016404 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 09:21:47.016415 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 09:21:47.016456 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-7660 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 09:21:47.112282 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 09:21:47.112315 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 09:21:47.112326 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 09:21:47.112367 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-7660 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 09:21:47.223418 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 09:21:47.223450 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 09:21:47.223464 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 09:21:47.223482 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0102 09:21:47.225069 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0102 09:21:57.236393 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0102 09:21:57.236508 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0102 09:21:57.237109 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0102 09:21:57.333265 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999387s
  I0102 09:21:58.367463 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.923238043s
  I0102 09:21:59.369928 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.888866837s
  I0102 09:22:00.374877 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.885597809s
  I0102 09:22:01.377822 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.880967121s
  I0102 09:22:02.381077 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.877954212s
  I0102 09:22:03.384152 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.875188741s
  I0102 09:22:04.386911 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.871852155s
  I0102 09:22:05.390193 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.869494735s
  I0102 09:22:06.393837 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 866.378466ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7660 @ 01/02/25 09:22:07.394
  I0102 09:22:07.397569 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-7660 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 09:22:07.500206 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0102 09:22:07.500241 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 09:22:07.500253 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0102 09:22:07.500430 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-7660 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 09:22:07.606308 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0102 09:22:07.606351 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 09:22:07.606363 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0102 09:22:07.606412 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-7660 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 09:22:07.705890 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0102 09:22:07.705932 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 09:22:07.705944 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0102 09:22:07.705954 23 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 01/02/25 09:22:17.714
  I0102 09:22:17.716346 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7660
  I0102 09:22:17.724029 23 rest.go:150] Scaling statefulset ss to 0
  I0102 09:22:17.738244 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0102 09:22:17.741764 23 rest.go:88] Deleting statefulset ss
  I0102 09:22:17.759447 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7660" for this suite. @ 01/02/25 09:22:17.762
• [71.367 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 01/02/25 09:22:17.767
  I0102 09:22:17.767246 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replicaset @ 01/02/25 09:22:17.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:22:17.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:22:17.779
  STEP: Create a Replicaset @ 01/02/25 09:22:17.781
  STEP: Verify that the required pods have come up. @ 01/02/25 09:22:17.784
  I0102 09:22:17.786207 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0102 09:22:22.792051 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/02/25 09:22:22.792
  STEP: Getting /status @ 01/02/25 09:22:22.792
  I0102 09:22:22.797457 23 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 01/02/25 09:22:22.797
  I0102 09:22:22.806492 23 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 01/02/25 09:22:22.807
  I0102 09:22:22.809684 23 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0102 09:22:22.810070 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0102 09:22:22.810396 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0102 09:22:22.811399 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0102 09:22:22.812139 23 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8906 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0102 09:22:22.812391 23 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 01/02/25 09:22:22.812
  I0102 09:22:22.813152 23 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0102 09:22:22.819453 23 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 01/02/25 09:22:22.819
  I0102 09:22:22.820609 23 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0102 09:22:22.820831 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0102 09:22:22.821133 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0102 09:22:22.821483 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0102 09:22:22.821734 23 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8906 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0102 09:22:22.821959 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0102 09:22:22.822144 23 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8906 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0102 09:22:22.822312 23 replica_set.go:729] Replicaset test-rs has a patched status
  I0102 09:22:22.822642 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8906" for this suite. @ 01/02/25 09:22:22.827
• [5.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 01/02/25 09:22:22.832
  I0102 09:22:22.833066 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename deployment @ 01/02/25 09:22:22.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:22:22.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:22:22.86
  I0102 09:22:22.861936 23 deployment.go:1196] Creating deployment "webserver-deployment"
  I0102 09:22:22.868410 23 deployment.go:1200] Waiting for observed generation 1
  I0102 09:22:24.873558 23 deployment.go:1205] Waiting for all required pods to come up
  I0102 09:22:24.875873 23 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 01/02/25 09:22:24.875
  I0102 09:22:26.902435 23 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0102 09:22:26.912036 23 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0102 09:22:26.920944 23 deployment.go:313] Updating deployment webserver-deployment
  I0102 09:22:26.921993 23 deployment.go:1224] Waiting for observed generation 2
  I0102 09:22:28.943540 23 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0102 09:22:28.950984 23 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0102 09:22:28.956526 23 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0102 09:22:28.967375 23 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0102 09:22:28.967639 23 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0102 09:22:28.969902 23 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0102 09:22:28.973687 23 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0102 09:22:28.973859 23 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0102 09:22:28.980403 23 deployment.go:313] Updating deployment webserver-deployment
  I0102 09:22:28.980435 23 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0102 09:22:28.987632 23 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0102 09:22:28.994539 23 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0102 09:22:29.087535 23 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a145691-ada9-4fac-b8c9-9fe0134d23e7",
      ResourceVersion: (string) (len=5) "14496",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0102 09:22:29.120700 23 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
      ResourceVersion: (string) (len=5) "14555",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0a145691-ada9-4fac-b8c9-9fe0134d23e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 31 34 35 36  39 31 2d 61 64 61 39 2d  |\"0a145691-ada9-|
              00000120  34 66 61 63 2d 62 38 63  39 2d 39 66 65 30 31 33  |4fac-b8c9-9fe013|
              00000130  34 64 32 33 65 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4d23e7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:22:29.135543 23 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0102 09:22:29.136236 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
      ResourceVersion: (string) (len=5) "14543",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0a145691-ada9-4fac-b8c9-9fe0134d23e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 31 34 35 36  39 31 2d 61 64 61 39 2d  |\"0a145691-ada9-|
              00000120  34 66 61 63 2d 62 38 63  39 2d 39 66 65 30 31 33  |4fac-b8c9-9fe013|
              00000130  34 64 32 33 65 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4d23e7\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:22:29.155096 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-2ltld" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-2ltld",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "313f9c2d-8126-4e41-8b6c-210b0d91f76d",
      ResourceVersion: (string) (len=5) "14541",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s4529",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s4529",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.164446 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4dj4x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4dj4x",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d08c00be-4029-4cf7-8d07-322256320009",
      ResourceVersion: (string) (len=5) "14353",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3fbe3588c49130da6be9cd257d346e95384c08c551513b3056015cf55f0c2f46",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.71/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.71/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.71\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 37 31  5c 22 7d 22 3a 7b 22 2e  |.42.1.71\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hhmzp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hhmzp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=10) "10.42.1.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871406544,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5f1e78c974c06ed26161b71e53f113562bc4c2aecf76ec3edf0d6f9c4213aefd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hhmzp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.190855 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-5fr9q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5fr9q",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5be82db0-6ee0-4ef4-867b-3c04009f3382",
      ResourceVersion: (string) (len=5) "14542",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n4h2p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n4h2p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.195500 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-77mmz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-77mmz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bffd0302-68e8-4ba4-932c-b055fe45f1d7",
      ResourceVersion: (string) (len=5) "14334",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4190041756f5500c85ca8fe100fd5eb32dfb534b8c68d572151f4bfeeb37b0d9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.48/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.48/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.48\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 34 38  5c 22 7d 22 3a 7b 22 2e  |.42.3.48\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2pbgv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2pbgv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.48",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.48"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871406544,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a090ab23cc307ff410fff94cbda1ed1bfdc91ee2926a201b632cd63b787a147e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2pbgv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.224160 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-79hkf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-79hkf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90b6ebd1-35eb-4c88-abdc-f2f062d2bddb",
      ResourceVersion: (string) (len=5) "14508",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8bmj7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8bmj7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.232820 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-8nk5h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-8nk5h",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14709ba9-bfa1-46e5-943e-af0d1d69df10",
      ResourceVersion: (string) (len=5) "14529",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4sl88",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4sl88",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4sl88",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.264859 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9fksz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9fksz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26c7d35c-e65e-4eb0-af1d-9ba7b271ca7b",
      ResourceVersion: (string) (len=5) "14490",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vp5n6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vp5n6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.279608 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9pcc8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9pcc8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f927625-2418-43e1-97b7-a63277656ade",
      ResourceVersion: (string) (len=5) "14358",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b4239e2d9b073d5bf9d9418ea45267d1e3bcad070c590e6e073d5f492d97d7f4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.72/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.72/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.72\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 37 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.72\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tkfpw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tkfpw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=10) "10.42.1.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406543,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871406544,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://83dba3dd3e10aaf6f1fc472657ba12a8194d31f26b3ab879c843c835599d04ad",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tkfpw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.290335 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-bcfnr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-bcfnr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f7b7b7e-399b-4de5-9804-16f20e935f89",
      ResourceVersion: (string) (len=5) "14524",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-94rwr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-94rwr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.291566 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-dtvrx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dtvrx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f08479ff-5c00-495b-b2c0-9bb8ba689a40",
      ResourceVersion: (string) (len=5) "14531",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5l4q6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5l4q6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5l4q6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.293703 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-f6d72" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-f6d72",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7031576a-a4fc-49c5-8157-4f5f25d21e7d",
      ResourceVersion: (string) (len=5) "14532",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pfzj4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pfzj4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.299405 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-f9d7h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-f9d7h",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6ed7290-b49b-4a50-8f91-4a489b7a4783",
      ResourceVersion: (string) (len=5) "14344",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c9dcf5698663c2eca53efa7ada4ae16a600708bcb3b846a971bd44206262527f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.50/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.50/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.50\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 35 30  5c 22 7d 22 3a 7b 22 2e  |.42.3.50\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ltz6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ltz6w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871406544,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c8605e9af41e17f51e7c6f77b37b43fb9626545d534dfa665b0d1e457ee22341",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ltz6w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.306075 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fhzjz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fhzjz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ed7e017-efd8-4bc3-8315-b1ffd7ef23a6",
      ResourceVersion: (string) (len=5) "14341",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cb4c7c5eba55402138a2355c39284356c7bc07bb11077509f976fd205f7e6025",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.49/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.49/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.49\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 34 39  5c 22 7d 22 3a 7b 22 2e  |.42.3.49\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wwvfh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wwvfh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.49",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.49"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871406544,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5973eb9ed3d58ccaea5a25a6e1417cdbd009565ebefa07e9ff8189cbde8ea76d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wwvfh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.313028 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-jwdmt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jwdmt",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44672782-5623-4577-b98f-7b6be08ea362",
      ResourceVersion: (string) (len=5) "14323",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "eeaf1f60cbc8691cffbe645dfc2b7638da8de5de07d9f8d12b73e1610a3b3e41",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.69/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.69/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.69\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 36 39  5c 22 7d 22 3a 7b 22 2e  |.42.1.69\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pp4zc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pp4zc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=10) "10.42.1.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871406544,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c99f1a10227f34fb231eea32253982039441bf965b28f35f60fd296e305bf51a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pp4zc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.315162 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-jwtv5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jwtv5",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f223740f-0faa-455a-b1a4-7bb2af62d521",
      ResourceVersion: (string) (len=5) "14326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.70\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b981f6876bfcb075774d92787a581b969297c5608c13a12e5c98a1ee200897a3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.70/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.70/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 37 30  5c 22 7d 22 3a 7b 22 2e  |.42.1.70\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-znqkr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-znqkr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=10) "10.42.1.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871406544,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ca6a0006574538251dc2d5b431c63d2dd54f97be4dcc9a8925151dfd53362287",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-znqkr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.332936 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kdcfd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kdcfd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7431787-e5a2-4cf7-8eca-a17a1c15df5d",
      ResourceVersion: (string) (len=5) "14356",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7d2a8e8ce6d008c289008fec91000665f5d6ecbf5aa68d6a38cf2b1d771b21ed",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.73/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.73/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.73\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406544,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 37 33  5c 22 7d 22 3a 7b 22 2e  |.42.1.73\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fc2vp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fc2vp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406542,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406545,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406543,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) (len=10) "10.42.1.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406542,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871406544,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bf7c636451425e6c0ee9ff56e1f82fd175baa3f695e741a48b5d7d2c4630b22f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fc2vp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.352534 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-l65sz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-l65sz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49f97c35-6ca9-40a3-9d82-94747afb9384",
      ResourceVersion: (string) (len=5) "14504",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qsrfc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qsrfc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.354328 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-lgv65" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-lgv65",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "441ca9df-16fc-4866-806b-41dbe089ba04",
      ResourceVersion: (string) (len=5) "14564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p74j2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p74j2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p74j2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.362026 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ql6nd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ql6nd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6176d857-f651-4d56-a2c1-45a798008bc1",
      ResourceVersion: (string) (len=5) "14525",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x965l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x965l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.367826 23 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xczzs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xczzs",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56f46428-e4db-495a-9058-66181bd5340d",
      ResourceVersion: (string) (len=5) "14506",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "1b7619de-c160-4cff-86b6-dec5a9b59958",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 62  37 36 31 39 64 65 2d 63  |d\":\"1b7619de-c|
              00000090  31 36 30 2d 34 63 66 66  2d 38 36 62 36 2d 64 65  |160-4cff-86b6-de|
              000000a0  63 35 61 39 62 35 39 39  35 38 5c 22 7d 22 3a 7b  |c5a9b59958\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h9vpf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h9vpf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.372611 23 deployment.go:67] Pod "webserver-deployment-786f49d774-6gdk2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6gdk2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f966308-b385-42f6-b5df-3f1e74535c86",
      ResourceVersion: (string) (len=5) "14560",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gkqbw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gkqbw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gkqbw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.383756 23 deployment.go:67] Pod "webserver-deployment-786f49d774-bts6t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-bts6t",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "050d695e-59a7-49ba-bab3-d757064be56d",
      ResourceVersion: (string) (len=5) "14559",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8zhg5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8zhg5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8zhg5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.395518 23 deployment.go:67] Pod "webserver-deployment-786f49d774-cl595" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-cl595",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de261edc-2d04-43b6-a496-81077446b362",
      ResourceVersion: (string) (len=5) "14538",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qx9np",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qx9np",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.401325 23 deployment.go:67] Pod "webserver-deployment-786f49d774-flb9l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-flb9l",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5134736-f899-4c60-93a6-5ceb96951637",
      ResourceVersion: (string) (len=5) "14540",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qv9zh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qv9zh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.404236 23 deployment.go:67] Pod "webserver-deployment-786f49d774-hnsnz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hnsnz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6fdaa8b-ebe8-4188-87bf-99a66514552b",
      ResourceVersion: (string) (len=5) "14433",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "937ae41d7c2e76873bd0b4961726d933611e13c843c7ce4d8470d3c53bb26fa2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.76/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.76/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.76\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=599) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 68 6f 73 74 49  |e":{}}},"f:hostI|
              00000230  50 22 3a 7b 7d 2c 22 66  3a 68 6f 73 74 49 50 73  |P":{},"f:hostIPs|
              00000240  22 3a 7b 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |":{},"f:startTim|
              00000250  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=113) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 74  |atus":{}}},"f:st|
              00000050  61 74 75 73 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |atus":{"f:contai|
              00000060  6e 65 72 53 74 61 74 75  73 65 73 22 3a 7b 7d 7d  |nerStatuses":{}}|
              00000070  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-df7nv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-df7nv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.406748 23 deployment.go:67] Pod "webserver-deployment-786f49d774-kr282" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-kr282",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb875a0e-7ea1-44a6-a83d-d9bfe70e4736",
      ResourceVersion: (string) (len=5) "14554",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f9w84",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f9w84",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.411072 23 deployment.go:67] Pod "webserver-deployment-786f49d774-l65q7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-l65q7",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d517aed1-c683-41d2-91a5-d4d614d123f2",
      ResourceVersion: (string) (len=5) "14563",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sd5q2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sd5q2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sd5q2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.414607 23 deployment.go:67] Pod "webserver-deployment-786f49d774-ml6gt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ml6gt",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1651096d-de08-466a-b5d9-279093eca542",
      ResourceVersion: (string) (len=5) "14475",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bb25686418a93f74b14d78b4d0adad560da3b723736d69c89c8263afbdb50089",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.54/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.54/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.54\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 35 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.3.54\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ltz2v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ltz2v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.54",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.54"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ltz2v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.417042 23 deployment.go:67] Pod "webserver-deployment-786f49d774-nrqhb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-nrqhb",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9f203f1-5cad-4c2b-8aec-42157fa7424e",
      ResourceVersion: (string) (len=5) "14421",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f4bfe0e5a332ea059ab815cbfde31270910b6bd96e7d43808e609201c6bcc38b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.74/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.74/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.74\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=599) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 68 6f 73 74 49  |e":{}}},"f:hostI|
              00000230  50 22 3a 7b 7d 2c 22 66  3a 68 6f 73 74 49 50 73  |P":{},"f:hostIPs|
              00000240  22 3a 7b 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |":{},"f:startTim|
              00000250  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=113) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 74  |atus":{}}},"f:st|
              00000050  61 74 75 73 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |atus":{"f:contai|
              00000060  6e 65 72 53 74 61 74 75  73 65 73 22 3a 7b 7d 7d  |nerStatuses":{}}|
              00000070  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l75dg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l75dg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.419359 23 deployment.go:67] Pod "webserver-deployment-786f49d774-nvmsw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-nvmsw",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8399e1bb-0a2b-4720-9241-f761aeab1c9a",
      ResourceVersion: (string) (len=5) "14520",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s225w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s225w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.420697 23 deployment.go:67] Pod "webserver-deployment-786f49d774-xf2pw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xf2pw",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b484740e-1e8e-42ef-afab-d7342a3e20d6",
      ResourceVersion: (string) (len=5) "14472",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6c8c2e9161486eebe54f2539a8d953bdb10920ce1563c6e7e69ee76252809461",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.53/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.53/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.53\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 35 33 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.3.53\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lmlbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lmlbr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406548,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lmlbr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.422918 23 deployment.go:67] Pod "webserver-deployment-786f49d774-xxsc9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xxsc9",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "254ca088-a02f-4b2b-8769-adb67f6de2e5",
      ResourceVersion: (string) (len=5) "14533",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406549,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cj89k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cj89k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406549,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.424349 23 deployment.go:67] Pod "webserver-deployment-786f49d774-zgsq8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-zgsq8",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-6275",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "215781e7-f845-4e16-a6a7-3d873d7bb5d8",
      ResourceVersion: (string) (len=5) "14428",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c7ea97dfed574d0ff0ac2773dfca1d095779b0755502700ae6afc6d83a5a51e0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.75/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.75/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.1.75\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "0917af0f-cca6-4947-bc4f-fc6086708562",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  31 37 61 66 30 66 2d 63  |d\":\"0917af0f-c|
              00000090  63 61 36 2d 34 39 34 37  2d 62 63 34 66 2d 66 63  |ca6-4947-bc4f-fc|
              000000a0  36 30 38 36 37 30 38 35  36 32 5c 22 7d 22 3a 7b  |6086708562\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=599) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 68 6f 73 74 49  |e":{}}},"f:hostI|
              00000230  50 22 3a 7b 7d 2c 22 66  3a 68 6f 73 74 49 50 73  |P":{},"f:hostIPs|
              00000240  22 3a 7b 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |":{},"f:startTim|
              00000250  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406547,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=113) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 74  |atus":{}}},"f:st|
              00000050  61 74 75 73 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |atus":{"f:contai|
              00000060  6e 65 72 53 74 61 74 75  73 65 73 22 3a 7b 7d 7d  |nerStatuses":{}}|
              00000070  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vdmqh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vdmqh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871406546,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871406546,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:22:29.426570 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6275" for this suite. @ 01/02/25 09:22:29.431
• [6.605 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 01/02/25 09:22:29.439
  I0102 09:22:29.439560 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:22:29.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:22:29.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:22:29.457
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:22:29.461
  STEP: Saw pod success @ 01/02/25 09:22:33.499
  I0102 09:22:33.501765 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-f0ba09e9-126a-4ee0-9397-305aa359085f container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:22:33.513
  I0102 09:22:33.526157 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7152" for this suite. @ 01/02/25 09:22:33.527
• [4.092 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 01/02/25 09:22:33.531
  I0102 09:22:33.531830 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:22:33.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:22:33.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:22:33.543
  STEP: Creating a pod to test downward api env vars @ 01/02/25 09:22:33.544
  STEP: Saw pod success @ 01/02/25 09:22:39.563
  I0102 09:22:39.565653 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downward-api-0a99b9cd-6b7d-44e4-8517-b0a9c382e63d container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 09:22:39.574
  I0102 09:22:39.587597 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6351" for this suite. @ 01/02/25 09:22:39.59
• [6.062 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 01/02/25 09:22:39.594
  I0102 09:22:39.594306 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 09:22:39.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:22:39.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:22:39.606
  STEP: Creating pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684 @ 01/02/25 09:22:39.607
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/02/25 09:22:41.622
  I0102 09:22:41.629479 23 container_probe.go:1749] Initial restart count of pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 is 0
  I0102 09:22:41.635515 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:43.640394 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:45.650155 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:47.659044 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:49.670124 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:51.681144 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:53.690031 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:55.699997 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:57.703010 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:22:59.708834 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:01.714344 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:01.714453 23 container_probe.go:1763] Restart count of pod container-probe-3684/liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 is now 1 (20.084777644s elapsed)
  I0102 09:23:03.722554 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:05.730985 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:07.737249 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:09.740385 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:11.747298 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:13.754764 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:15.761967 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:17.766787 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:19.774861 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:21.782629 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:21.782754 23 container_probe.go:1763] Restart count of pod container-probe-3684/liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 is now 2 (40.153078516s elapsed)
  I0102 09:23:23.789452 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:25.795424 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:27.803206 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:29.805882 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:31.809176 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:33.813091 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:35.820184 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:37.828403 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:39.844122 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:41.853491 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:41.853613 23 container_probe.go:1763] Restart count of pod container-probe-3684/liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 is now 3 (1m0.223933882s elapsed)
  I0102 09:23:43.855471 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:45.864451 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:47.871764 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:49.886318 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:51.897310 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:53.903904 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:55.913295 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:57.921040 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:23:59.932935 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:01.935502 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:01.935984 23 container_probe.go:1763] Restart count of pod container-probe-3684/liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 is now 4 (1m20.306312169s elapsed)
  I0102 09:24:03.938901 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:05.945105 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:07.956498 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:09.960940 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:11.968147 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:13.971454 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:15.976998 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:17.979867 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:19.984522 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:21.998417 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:24.005362 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:26.013489 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:28.021688 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:30.024763 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:32.026586 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:34.029060 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:36.031804 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:38.034447 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:40.036985 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:42.043421 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:44.046141 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:46.048312 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:48.050703 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:50.053575 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:52.062064 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:54.063951 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:56.071479 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:24:58.073200 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:25:00.079497 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:25:02.086209 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:25:04.094440 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:25:06.096315 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:25:08.100558 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:25:10.111781 23 container_probe.go:1759] Get pod liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 in namespace container-probe-3684
  I0102 09:25:10.111886 23 container_probe.go:1763] Restart count of pod container-probe-3684/liveness-1b4020d8-fcfa-4342-a360-a5077dfc13b3 is now 5 (2m28.482210414s elapsed)
  STEP: deleting the pod @ 01/02/25 09:25:10.112
  I0102 09:25:10.126758 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3684" for this suite. @ 01/02/25 09:25:10.13
• [150.542 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 01/02/25 09:25:10.137
  I0102 09:25:10.137132 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename subpath @ 01/02/25 09:25:10.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:25:10.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:25:10.15
  STEP: Setting up data @ 01/02/25 09:25:10.151
  STEP: Creating pod pod-subpath-test-projected-crj4 @ 01/02/25 09:25:10.157
  STEP: Creating a pod to test atomic-volume-subpath @ 01/02/25 09:25:10.157
  STEP: Saw pod success @ 01/02/25 09:25:34.221
  I0102 09:25:34.223019 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-subpath-test-projected-crj4 container test-container-subpath-projected-crj4: <nil>
  STEP: delete the pod @ 01/02/25 09:25:34.231
  STEP: Deleting pod pod-subpath-test-projected-crj4 @ 01/02/25 09:25:34.245
  I0102 09:25:34.246030 23 delete.go:62] Deleting pod "pod-subpath-test-projected-crj4" in namespace "subpath-5434"
  I0102 09:25:34.247892 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5434" for this suite. @ 01/02/25 09:25:34.249
• [24.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 01/02/25 09:25:34.256
  I0102 09:25:34.256797 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:25:34.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:25:34.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:25:34.27
  STEP: Creating the pod @ 01/02/25 09:25:34.272
  I0102 09:25:36.835043 23 pod_client.go:173] Successfully updated pod "annotationupdate14bd5197-0716-41a3-ab59-c9fb193df9b6"
  I0102 09:25:40.850760 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5275" for this suite. @ 01/02/25 09:25:40.853
• [6.600 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 01/02/25 09:25:40.857
  I0102 09:25:40.857013 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename events @ 01/02/25 09:25:40.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:25:40.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:25:40.869
  STEP: Create set of events @ 01/02/25 09:25:40.87
  I0102 09:25:40.873957 23 core_events.go:198] created test-event-1
  I0102 09:25:40.875841 23 core_events.go:198] created test-event-2
  I0102 09:25:40.877747 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 01/02/25 09:25:40.877
  STEP: delete collection of events @ 01/02/25 09:25:40.878
  I0102 09:25:40.878937 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/02/25 09:25:40.884
  I0102 09:25:40.884144 23 core_events.go:230] requesting list of events to confirm quantity
  I0102 09:25:40.885375 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3898" for this suite. @ 01/02/25 09:25:40.953
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 01/02/25 09:25:40.958
  I0102 09:25:40.958465 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:25:40.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:25:40.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:25:40.972
  STEP: Creating a ResourceQuota @ 01/02/25 09:25:40.973
  STEP: Getting a ResourceQuota @ 01/02/25 09:25:40.976
  STEP: Listing all ResourceQuotas with LabelSelector @ 01/02/25 09:25:40.98
  STEP: Patching the ResourceQuota @ 01/02/25 09:25:40.981
  STEP: Deleting a Collection of ResourceQuotas @ 01/02/25 09:25:40.985
  STEP: Verifying the deleted ResourceQuota @ 01/02/25 09:25:40.99
  I0102 09:25:40.991311 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9719" for this suite. @ 01/02/25 09:25:41.056
• [0.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 01/02/25 09:25:41.064
  I0102 09:25:41.064662 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:25:41.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:25:41.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:25:41.089
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/02/25 09:25:41.092
  STEP: Saw pod success @ 01/02/25 09:25:45.113
  I0102 09:25:45.120698 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-00efb767-3561-4d7e-a6d4-918a5c0a5ba1 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:25:45.138
  I0102 09:25:45.147739 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3944" for this suite. @ 01/02/25 09:25:45.15
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 01/02/25 09:25:45.154
  I0102 09:25:45.154868 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:25:45.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:25:45.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:25:45.167
  STEP: creating all guestbook components @ 01/02/25 09:25:45.169
  I0102 09:25:45.169232 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0102 09:25:45.169389 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 create -f -'
  I0102 09:25:45.277355 23 builder.go:146] stderr: ""
  I0102 09:25:45.277394 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0102 09:25:45.278115 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0102 09:25:45.278249 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 create -f -'
  I0102 09:25:45.389599 23 builder.go:146] stderr: ""
  I0102 09:25:45.389647 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0102 09:25:45.389741 23 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0102 09:25:45.389900 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 create -f -'
  I0102 09:25:45.483545 23 builder.go:146] stderr: ""
  I0102 09:25:45.483587 23 builder.go:147] stdout: "service/frontend created\n"
  I0102 09:25:45.483637 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0102 09:25:45.483814 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 create -f -'
  I0102 09:25:45.567146 23 builder.go:146] stderr: ""
  I0102 09:25:45.567183 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0102 09:25:45.567228 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0102 09:25:45.567339 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 create -f -'
  I0102 09:25:45.696060 23 builder.go:146] stderr: ""
  I0102 09:25:45.696093 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0102 09:25:45.696141 23 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0102 09:25:45.698064 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 create -f -'
  I0102 09:25:45.799133 23 builder.go:146] stderr: ""
  I0102 09:25:45.799356 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 01/02/25 09:25:45.799
  I0102 09:25:45.799950 23 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I0102 09:25:50.855937 23 kubectl.go:2276] Waiting for frontend to serve content.
  I0102 09:25:50.888615 23 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0102 09:25:50.902968 23 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 01/02/25 09:25:50.911
  I0102 09:25:50.911444 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 delete --grace-period=0 --force -f -'
  I0102 09:25:50.990859 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 09:25:50.990892 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 01/02/25 09:25:50.991
  I0102 09:25:50.991150 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 delete --grace-period=0 --force -f -'
  I0102 09:25:51.049628 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 09:25:51.049661 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/02/25 09:25:51.049
  I0102 09:25:51.049919 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 delete --grace-period=0 --force -f -'
  I0102 09:25:51.121919 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 09:25:51.121959 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/02/25 09:25:51.122
  I0102 09:25:51.122155 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 delete --grace-period=0 --force -f -'
  I0102 09:25:51.208443 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 09:25:51.208498 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 01/02/25 09:25:51.208
  I0102 09:25:51.208621 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 delete --grace-period=0 --force -f -'
  I0102 09:25:51.301332 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 09:25:51.301377 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 01/02/25 09:25:51.301
  I0102 09:25:51.301806 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-872 delete --grace-period=0 --force -f -'
  I0102 09:25:51.366738 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 09:25:51.366780 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0102 09:25:51.366881 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-872" for this suite. @ 01/02/25 09:25:51.372
• [6.224 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 01/02/25 09:25:51.378
  I0102 09:25:51.378538 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename statefulset @ 01/02/25 09:25:51.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:25:51.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:25:51.392
  STEP: Creating service test in namespace statefulset-8114 @ 01/02/25 09:25:51.397
  STEP: Creating statefulset ss in namespace statefulset-8114 @ 01/02/25 09:25:51.401
  I0102 09:25:51.414086 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0102 09:26:01.408334 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 01/02/25 09:26:01.41
  STEP: updating a scale subresource @ 01/02/25 09:26:01.411
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/02/25 09:26:01.414
  STEP: Patch a scale subresource @ 01/02/25 09:26:01.416
  STEP: verifying the statefulset Spec.Replicas was modified @ 01/02/25 09:26:01.427
  I0102 09:26:01.432338 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8114
  I0102 09:26:01.434480 23 rest.go:150] Scaling statefulset ss to 0
  I0102 09:26:11.449676 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0102 09:26:11.452317 23 rest.go:88] Deleting statefulset ss
  I0102 09:26:11.464640 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8114" for this suite. @ 01/02/25 09:26:11.469
• [20.098 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 01/02/25 09:26:11.477
  I0102 09:26:11.477717 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:26:11.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:11.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:11.493
  STEP: Creating configMap with name projected-configmap-test-volume-40ca1126-9467-4793-980d-c3b4d258720c @ 01/02/25 09:26:11.495
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:26:11.498
  STEP: Saw pod success @ 01/02/25 09:26:15.535
  I0102 09:26:15.547993 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-configmaps-fd3906f2-c941-4534-825f-f80b13209271 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 09:26:15.561
  I0102 09:26:15.573696 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7643" for this suite. @ 01/02/25 09:26:15.575
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 01/02/25 09:26:15.583
  I0102 09:26:15.583485 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:26:15.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:15.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:15.597
  STEP: Creating configMap with name configmap-test-volume-map-c483cb24-afd0-45af-9e5a-f028f82c606b @ 01/02/25 09:26:15.599
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:26:15.602
  STEP: Saw pod success @ 01/02/25 09:26:19.627
  I0102 09:26:19.638356 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-configmaps-8d6b369f-05bf-4a25-999e-9b22fec71c23 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:26:19.661
  I0102 09:26:19.677972 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1931" for this suite. @ 01/02/25 09:26:19.681
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 01/02/25 09:26:19.688
  I0102 09:26:19.688067 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:26:19.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:19.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:19.7
  STEP: Creating configMap with name configmap-test-volume-98857821-cd7c-4d47-8778-041f936256b0 @ 01/02/25 09:26:19.701
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:26:19.703
  STEP: Saw pod success @ 01/02/25 09:26:23.737
  I0102 09:26:23.743494 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-configmaps-5a4b214f-919c-4947-b2ba-1b8a7bad35b8 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:26:23.746
  I0102 09:26:23.756438 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3691" for this suite. @ 01/02/25 09:26:23.759
• [4.074 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 01/02/25 09:26:23.763
  I0102 09:26:23.763462 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:26:23.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:23.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:23.781
  STEP: Setting up server cert @ 01/02/25 09:26:23.877
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:26:24.219
  STEP: Deploying the webhook pod @ 01/02/25 09:26:24.225
  STEP: Wait for the deployment to be ready @ 01/02/25 09:26:24.235
  I0102 09:26:24.266809 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:26:26.288
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:26:26.304
  I0102 09:26:27.304185 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 01/02/25 09:26:27.307
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 01/02/25 09:26:27.319
  STEP: Creating a configMap that should not be mutated @ 01/02/25 09:26:27.323
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 01/02/25 09:26:27.33
  STEP: Creating a configMap that should be mutated @ 01/02/25 09:26:27.333
  I0102 09:26:27.383504 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7808" for this suite. @ 01/02/25 09:26:27.408
  STEP: Destroying namespace "webhook-markers-3514" for this suite. @ 01/02/25 09:26:27.413
• [3.653 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 01/02/25 09:26:27.416
  I0102 09:26:27.416767 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename subjectreview @ 01/02/25 09:26:27.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:27.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:27.429
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-849" @ 01/02/25 09:26:27.43
  I0102 09:26:27.432907 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-849:e2e"
  I0102 09:26:27.432949 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-849"}
  I0102 09:26:27.432958 23 subjectreviews.go:71] saUID: "d2df5006-4098-41c1-bc48-2130d2193e5f"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-849:e2e" @ 01/02/25 09:26:27.433
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-849:e2e" @ 01/02/25 09:26:27.433
  I0102 09:26:27.436759 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-849:e2e" api 'list' configmaps in "subjectreview-849" namespace @ 01/02/25 09:26:27.436
  I0102 09:26:27.438695 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-849:e2e" @ 01/02/25 09:26:27.438
  I0102 09:26:27.441222 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0102 09:26:27.441250 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0102 09:26:27.441449 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-849" for this suite. @ 01/02/25 09:26:27.49
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 01/02/25 09:26:27.493
  I0102 09:26:27.493901 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 09:26:27.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:27.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:27.529
  STEP: Creating secret with name secret-test-96e62c3f-906a-42c1-ad0e-26d81cd00200 @ 01/02/25 09:26:27.531
  STEP: Creating a pod to test consume secrets @ 01/02/25 09:26:27.534
  STEP: Saw pod success @ 01/02/25 09:26:31.553
  I0102 09:26:31.556658 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-cbf66fb2-3fee-4fd4-8956-bf773c0c6aa6 container secret-env-test: <nil>
  STEP: delete the pod @ 01/02/25 09:26:31.565
  I0102 09:26:31.576116 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3589" for this suite. @ 01/02/25 09:26:31.579
• [4.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 01/02/25 09:26:31.584
  I0102 09:26:31.585060 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename field-validation @ 01/02/25 09:26:31.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:31.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:31.598
  I0102 09:26:31.599442 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  W0102 09:26:34.153265      23 warnings.go:70] unknown field "alpha"
  W0102 09:26:34.153386      23 warnings.go:70] unknown field "beta"
  W0102 09:26:34.153417      23 warnings.go:70] unknown field "delta"
  W0102 09:26:34.153443      23 warnings.go:70] unknown field "epsilon"
  W0102 09:26:34.153469      23 warnings.go:70] unknown field "gamma"
  I0102 09:26:34.725758 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9562" for this suite. @ 01/02/25 09:26:34.73
• [3.150 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 01/02/25 09:26:34.734
  I0102 09:26:34.734912 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename security-context-test @ 01/02/25 09:26:34.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:34.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:34.748
  I0102 09:26:38.767113 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2913" for this suite. @ 01/02/25 09:26:38.769
• [4.039 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 01/02/25 09:26:38.774
  I0102 09:26:38.774992 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename svcaccounts @ 01/02/25 09:26:38.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:38.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:38.791
  STEP: reading a file in the container @ 01/02/25 09:26:40.807
  I0102 09:26:40.808258 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4467 pod-service-account-7c018357-9996-49f4-a4e3-2e788df46dd9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 01/02/25 09:26:40.924
  I0102 09:26:40.924639 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4467 pod-service-account-7c018357-9996-49f4-a4e3-2e788df46dd9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 01/02/25 09:26:41.026
  I0102 09:26:41.026755 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4467 pod-service-account-7c018357-9996-49f4-a4e3-2e788df46dd9 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0102 09:26:41.119284 23 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-4467"
  I0102 09:26:41.120619 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4467" for this suite. @ 01/02/25 09:26:41.122
• [2.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 01/02/25 09:26:41.128
  I0102 09:26:41.128272 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/02/25 09:26:41.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:41.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:41.14
  STEP: getting /apis @ 01/02/25 09:26:41.146
  STEP: getting /apis/admissionregistration.k8s.io @ 01/02/25 09:26:41.15
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/02/25 09:26:41.15
  STEP: creating @ 01/02/25 09:26:41.151
  STEP: getting @ 01/02/25 09:26:41.159
  STEP: listing @ 01/02/25 09:26:41.16
  STEP: watching @ 01/02/25 09:26:41.161
  I0102 09:26:41.161789 23 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 01/02/25 09:26:41.162
  STEP: updating @ 01/02/25 09:26:41.165
  I0102 09:26:41.168273 23 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 01/02/25 09:26:41.168
  STEP: deleting a collection @ 01/02/25 09:26:41.172
  I0102 09:26:41.177718 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3258" for this suite. @ 01/02/25 09:26:41.223
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 01/02/25 09:26:41.231
  I0102 09:26:41.231363 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename containers @ 01/02/25 09:26:41.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:41.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:41.246
  STEP: Creating a pod to test override all @ 01/02/25 09:26:41.248
  STEP: Saw pod success @ 01/02/25 09:26:45.262
  I0102 09:26:45.265043 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod client-containers-fdb9aa50-da01-4ffd-aac0-a1c5a53f51ee container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:26:45.27
  I0102 09:26:45.282575 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2601" for this suite. @ 01/02/25 09:26:45.285
• [4.058 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 01/02/25 09:26:45.289
  I0102 09:26:45.289882 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:26:45.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:45.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:45.303
  STEP: Setting up server cert @ 01/02/25 09:26:45.404
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:26:45.57
  STEP: Deploying the webhook pod @ 01/02/25 09:26:45.574
  STEP: Wait for the deployment to be ready @ 01/02/25 09:26:45.584
  I0102 09:26:45.590873 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:26:47.598
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:26:47.609
  I0102 09:26:48.609867 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/02/25 09:26:48.652
  STEP: Creating a configMap that should be mutated @ 01/02/25 09:26:48.662
  STEP: Deleting the collection of validation webhooks @ 01/02/25 09:26:48.689
  STEP: Creating a configMap that should not be mutated @ 01/02/25 09:26:48.708
  I0102 09:26:48.775922 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7642" for this suite. @ 01/02/25 09:26:48.779
  STEP: Destroying namespace "webhook-markers-4608" for this suite. @ 01/02/25 09:26:48.782
• [3.499 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 01/02/25 09:26:48.789
  I0102 09:26:48.789792 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename csistoragecapacity @ 01/02/25 09:26:48.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:48.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:48.803
  STEP: getting /apis @ 01/02/25 09:26:48.804
  STEP: getting /apis/storage.k8s.io @ 01/02/25 09:26:48.807
  STEP: getting /apis/storage.k8s.io/v1 @ 01/02/25 09:26:48.808
  STEP: creating @ 01/02/25 09:26:48.808
  STEP: watching @ 01/02/25 09:26:48.815
  I0102 09:26:48.815345 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 01/02/25 09:26:48.818
  STEP: listing in namespace @ 01/02/25 09:26:48.819
  STEP: listing across namespaces @ 01/02/25 09:26:48.82
  STEP: patching @ 01/02/25 09:26:48.821
  STEP: updating @ 01/02/25 09:26:48.823
  I0102 09:26:48.825697 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0102 09:26:48.825785 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 01/02/25 09:26:48.825
  STEP: deleting a collection @ 01/02/25 09:26:48.829
  I0102 09:26:48.835375 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5988" for this suite. @ 01/02/25 09:26:48.879
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 01/02/25 09:26:48.885
  I0102 09:26:48.885949 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename runtimeclass @ 01/02/25 09:26:48.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:48.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:48.903
  I0102 09:26:48.908190 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-735" for this suite. @ 01/02/25 09:26:48.98
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 01/02/25 09:26:48.99
  I0102 09:26:48.990283 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:26:48.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:49.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:49.006
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/02/25 09:26:49.008
  STEP: Saw pod success @ 01/02/25 09:26:53.026
  I0102 09:26:53.029513 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-dba372a4-4a6a-4a7a-b137-1ad373717e78 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:26:53.037
  I0102 09:26:53.055892 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1102" for this suite. @ 01/02/25 09:26:53.058
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 01/02/25 09:26:53.062
  I0102 09:26:53.062709 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename security-context-test @ 01/02/25 09:26:53.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:53.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:53.077
  I0102 09:26:57.104201 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2452" for this suite. @ 01/02/25 09:26:57.115
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 01/02/25 09:26:57.131
  I0102 09:26:57.131284 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename field-validation @ 01/02/25 09:26:57.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:57.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:57.145
  STEP: apply creating a deployment @ 01/02/25 09:26:57.146
  I0102 09:26:57.150445 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-137" for this suite. @ 01/02/25 09:26:57.216
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 01/02/25 09:26:57.23
  I0102 09:26:57.230416 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename svcaccounts @ 01/02/25 09:26:57.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:26:57.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:26:57.251
  I0102 09:26:57.260584 23 service_accounts.go:618] created pod
  STEP: Saw pod success @ 01/02/25 09:27:01.279
  I0102 09:27:31.280241 23 service_accounts.go:624] polling logs
  I0102 09:27:31.305255 23 service_accounts.go:634] Pod logs: 
  I0102 09:26:57.898131       1 log.go:245] OK: Got token
  I0102 09:26:57.898291       1 log.go:245] validating with in-cluster discovery
  I0102 09:26:57.898571       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0102 09:26:57.898962       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-3800:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000135a0), NotBefore:(*jwt.NumericDate)(0xc000013690), IssuedAt:(*jwt.NumericDate)(0xc0000135b0), ID:"d2d61ff0-e17e-4ab8-bffe-1beacc3bb506"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3800", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f3f442c5-6264-45a1-88f3-59b0d8863b30"}}}
  I0102 09:26:57.906566       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0102 09:26:57.908887       1 log.go:245] OK: Validated signature on JWT
  I0102 09:26:57.908933       1 log.go:245] OK: Got valid claims from token!
  I0102 09:26:57.908967       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-3800:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001293f8), NotBefore:(*jwt.NumericDate)(0xc000129470), IssuedAt:(*jwt.NumericDate)(0xc000129440), ID:"d2d61ff0-e17e-4ab8-bffe-1beacc3bb506"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3800", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f3f442c5-6264-45a1-88f3-59b0d8863b30"}}}

  I0102 09:27:31.306575 23 service_accounts.go:638] completed pod
  I0102 09:27:31.319283 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3800" for this suite. @ 01/02/25 09:27:31.328
• [34.107 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 01/02/25 09:27:31.339
  I0102 09:27:31.339433 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:27:31.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:27:31.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:27:31.356
  STEP: Creating a ResourceQuota with best effort scope @ 01/02/25 09:27:31.357
  STEP: Ensuring ResourceQuota status is calculated @ 01/02/25 09:27:31.361
  STEP: Creating a ResourceQuota with not best effort scope @ 01/02/25 09:27:33.369
  STEP: Ensuring ResourceQuota status is calculated @ 01/02/25 09:27:33.379
  STEP: Creating a best-effort pod @ 01/02/25 09:27:35.382
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 01/02/25 09:27:35.389
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 01/02/25 09:27:37.392
  STEP: Deleting the pod @ 01/02/25 09:27:39.397
  STEP: Ensuring resource quota status released the pod usage @ 01/02/25 09:27:39.409
  STEP: Creating a not best-effort pod @ 01/02/25 09:27:41.417
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 01/02/25 09:27:41.439
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 01/02/25 09:27:43.446
  STEP: Deleting the pod @ 01/02/25 09:27:45.453
  STEP: Ensuring resource quota status released the pod usage @ 01/02/25 09:27:45.464
  I0102 09:27:47.466686 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7073" for this suite. @ 01/02/25 09:27:47.468
• [16.134 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 01/02/25 09:27:47.473
  I0102 09:27:47.473922 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename daemonsets @ 01/02/25 09:27:47.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:27:47.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:27:47.489
  I0102 09:27:47.572332 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/02/25 09:27:47.577
  I0102 09:27:47.700028 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:47.700347 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:47.709989 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 09:27:47.710219 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 09:27:48.580430 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:48.580493 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:48.581804 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 09:27:48.581833 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 09:27:49.581287 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:49.581326 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:49.582756 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 09:27:49.582773 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 01/02/25 09:27:49.586
  STEP: Check that daemon pods images are updated. @ 01/02/25 09:27:49.681
  I0102 09:27:49.683765 23 daemon_set.go:1193] Wrong image for pod: daemon-set-wqpsn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0102 09:27:49.691163 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:49.691213 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:50.684470 23 daemon_set.go:1193] Wrong image for pod: daemon-set-wqpsn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0102 09:27:50.686889 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:50.687150 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:51.685154 23 daemon_set.go:1198] Pod daemon-set-ccrpv is not available
  I0102 09:27:51.685574 23 daemon_set.go:1193] Wrong image for pod: daemon-set-wqpsn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0102 09:27:51.689918 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:51.690117 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:52.687945 23 daemon_set.go:1198] Pod daemon-set-ccrpv is not available
  I0102 09:27:52.687986 23 daemon_set.go:1193] Wrong image for pod: daemon-set-wqpsn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0102 09:27:52.692501 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:52.692543 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:53.688325 23 daemon_set.go:1198] Pod daemon-set-8km2g is not available
  I0102 09:27:53.693181 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:53.693229 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 01/02/25 09:27:53.693
  I0102 09:27:53.695499 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:53.695540 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:53.696746 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 09:27:53.696764 23 fixtures.go:130] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0102 09:27:54.696119 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:54.696509 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:54.699356 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 09:27:54.699377 23 fixtures.go:130] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0102 09:27:55.695721 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 09:27:55.695769 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 09:27:55.697012 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 09:27:55.697030 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/02/25 09:27:55.704
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6353, will wait for the garbage collector to delete the pods @ 01/02/25 09:27:55.704
  I0102 09:27:55.759844 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.882855ms
  I0102 09:27:55.860214 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.365939ms
  I0102 09:27:57.962755 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 09:27:57.962996 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0102 09:27:57.964434 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17499"},"items":null}

  I0102 09:27:57.965670 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17499"},"items":null}

  I0102 09:27:57.970774 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6353" for this suite. @ 01/02/25 09:27:57.972
• [10.503 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 01/02/25 09:27:57.976
  I0102 09:27:57.976618 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:27:57.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:27:57.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:27:58.001
  STEP: Creating configMap with name projected-configmap-test-volume-2f9fbd23-af3a-4de5-8de5-47ad7a90407f @ 01/02/25 09:27:58.002
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:27:58.005
  STEP: Saw pod success @ 01/02/25 09:28:02.017
  I0102 09:28:02.019382 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-configmaps-c31eeea5-f2f4-45d5-8941-18260cefebe3 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:28:02.022
  I0102 09:28:02.032499 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9480" for this suite. @ 01/02/25 09:28:02.034
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 01/02/25 09:28:02.04
  I0102 09:28:02.041036 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 09:28:02.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:28:02.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:28:02.056
  STEP: creating service in namespace services-339 @ 01/02/25 09:28:02.058
  STEP: creating service affinity-nodeport-transition in namespace services-339 @ 01/02/25 09:28:02.058
  STEP: creating replication controller affinity-nodeport-transition in namespace services-339 @ 01/02/25 09:28:02.07
  I0102 09:28:02.077606      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-339, replica count: 3
  I0102 09:28:05.131746      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 09:28:05.136360 23 resource.go:361] Creating new exec pod
  I0102 09:28:08.154546 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-339 exec execpod-affinity7spbj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0102 09:28:08.263315 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0102 09:28:08.263355 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:28:08.263543 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-339 exec execpod-affinity7spbj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.135.77 80'
  I0102 09:28:08.366887 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.135.77 80\nConnection to 10.43.135.77 80 port [tcp/http] succeeded!\n"
  I0102 09:28:08.366926 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:28:08.367073 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-339 exec execpod-affinity7spbj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 32140'
  I0102 09:28:08.468948 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 32140\nConnection to 192.168.150.103 32140 port [tcp/*] succeeded!\n"
  I0102 09:28:08.468986 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:28:08.469051 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-339 exec execpod-affinity7spbj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.105 32140'
  I0102 09:28:08.586477 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.105 32140\nConnection to 192.168.150.105 32140 port [tcp/*] succeeded!\n"
  I0102 09:28:08.586525 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:28:08.594689 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-339 exec execpod-affinity7spbj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.150.103:32140/ ; done'
  I0102 09:28:08.804675 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n"
  I0102 09:28:08.804727 23 builder.go:147] stdout: "\naffinity-nodeport-transition-zctz9\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-g2h2m\naffinity-nodeport-transition-zctz9\naffinity-nodeport-transition-g2h2m\naffinity-nodeport-transition-g2h2m\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-g2h2m\naffinity-nodeport-transition-zctz9\naffinity-nodeport-transition-g2h2m\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-g2h2m"
  I0102 09:28:08.804742 23 service.go:242] Received response from host: affinity-nodeport-transition-zctz9
  I0102 09:28:08.804752 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.804760 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.804768 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.804776 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.804783 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.804791 23 service.go:242] Received response from host: affinity-nodeport-transition-g2h2m
  I0102 09:28:08.804799 23 service.go:242] Received response from host: affinity-nodeport-transition-zctz9
  I0102 09:28:08.804806 23 service.go:242] Received response from host: affinity-nodeport-transition-g2h2m
  I0102 09:28:08.804814 23 service.go:242] Received response from host: affinity-nodeport-transition-g2h2m
  I0102 09:28:08.804821 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.804830 23 service.go:242] Received response from host: affinity-nodeport-transition-g2h2m
  I0102 09:28:08.804838 23 service.go:242] Received response from host: affinity-nodeport-transition-zctz9
  I0102 09:28:08.804846 23 service.go:242] Received response from host: affinity-nodeport-transition-g2h2m
  I0102 09:28:08.804853 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.804861 23 service.go:242] Received response from host: affinity-nodeport-transition-g2h2m
  I0102 09:28:08.812625 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-339 exec execpod-affinity7spbj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.150.103:32140/ ; done'
  I0102 09:28:08.978542 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.150.103:32140/\n"
  I0102 09:28:08.978773 23 builder.go:147] stdout: "\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh\naffinity-nodeport-transition-l49dh"
  I0102 09:28:08.978954 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.978966 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.978975 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.978989 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.978999 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979006 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979014 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979022 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979030 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979038 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979045 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979053 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979060 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979069 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979077 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979084 23 service.go:242] Received response from host: affinity-nodeport-transition-l49dh
  I0102 09:28:08.979140 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-339, will wait for the garbage collector to delete the pods @ 01/02/25 09:28:08.987
  I0102 09:28:09.046533 23 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 5.322748ms
  I0102 09:28:09.146865 23 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.332414ms
  I0102 09:28:12.262429 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-339" for this suite. @ 01/02/25 09:28:12.264
• [10.227 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 01/02/25 09:28:12.268
  I0102 09:28:12.268661 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:28:12.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:28:12.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:28:12.282
  STEP: Creating configMap with name configmap-test-volume-map-2d1aa9aa-6871-4333-8212-d73a4096a8f2 @ 01/02/25 09:28:12.283
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:28:12.285
  STEP: Saw pod success @ 01/02/25 09:28:16.308
  I0102 09:28:16.314286 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-49280e6a-6eef-4e3b-804c-c8638a09219f container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:28:16.34
  I0102 09:28:16.350731 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3028" for this suite. @ 01/02/25 09:28:16.353
• [4.088 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 01/02/25 09:28:16.356
  I0102 09:28:16.356626 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:28:16.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:28:16.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:28:16.369
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/02/25 09:28:16.371
  I0102 09:28:16.371239 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-5081 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0102 09:28:16.422577 23 builder.go:146] stderr: ""
  I0102 09:28:16.422612 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 01/02/25 09:28:16.422
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/02/25 09:28:21.486
  I0102 09:28:21.486532 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-5081 get pod e2e-test-httpd-pod -o json'
  I0102 09:28:21.578145 23 builder.go:146] stderr: ""
  I0102 09:28:21.579764 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"e69fe24c28fa5e5aab5843e725d06dc5aadef6ee54b83012537cad44ab7251bc\",\n            \"cni.projectcalico.org/podIP\": \"10.42.1.107/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.1.107/32\",\n            \"k8s.v1.cni.cncf.io/network-status\": \"[{\\n    \\\"name\\\": \\\"k8s-pod-network\\\",\\n    \\\"ips\\\": [\\n        \\\"10.42.1.107\\\"\\n    ],\\n    \\\"default\\\": true,\\n    \\\"dns\\\": {}\\n}]\"\n        },\n        \"creationTimestamp\": \"2025-01-02T09:28:16Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5081\",\n        \"resourceVersion\": \"17801\",\n        \"uid\": \"8ef2097a-7334-4b52-8b90-a4551e086653\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-kdckn\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"oneke-ip-192-168-150-103\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-kdckn\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-02T09:28:17Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-02T09:28:16Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-02T09:28:17Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-02T09:28:17Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-01-02T09:28:16Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://196a28feef2f183fdceef66de74e03e8a1b2c4fe16c69eeb274de7de6e76292a\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-01-02T09:28:17Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-kdckn\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.150.103\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.150.103\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.107\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.107\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-01-02T09:28:16Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 01/02/25 09:28:21.579
  I0102 09:28:21.579846 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-5081 replace -f -'
  I0102 09:28:21.698110 23 builder.go:146] stderr: ""
  I0102 09:28:21.698155 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 01/02/25 09:28:21.698
  I0102 09:28:21.701413 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-5081 delete pods e2e-test-httpd-pod'
  I0102 09:28:23.228160 23 builder.go:146] stderr: ""
  I0102 09:28:23.228193 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0102 09:28:23.228279 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5081" for this suite. @ 01/02/25 09:28:23.231
• [6.880 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 01/02/25 09:28:23.236
  I0102 09:28:23.236539 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename endpointslice @ 01/02/25 09:28:23.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:28:23.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:28:23.251
  I0102 09:28:23.257109 23 endpointslice.go:1045] Endpoints addresses: [192.168.150.102] , ports: [6443]
  I0102 09:28:23.257157 23 endpointslice.go:1075] EndpointSlices addresses: [192.168.150.102] , ports: [6443]
  I0102 09:28:23.257230 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5532" for this suite. @ 01/02/25 09:28:23.331
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 01/02/25 09:28:23.337
  I0102 09:28:23.337231 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 09:28:23.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:28:23.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:28:23.352
  STEP: creating service in namespace services-9925 @ 01/02/25 09:28:23.353
  STEP: creating service affinity-clusterip-transition in namespace services-9925 @ 01/02/25 09:28:23.353
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9925 @ 01/02/25 09:28:23.367
  I0102 09:28:23.373991      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-9925, replica count: 3
  I0102 09:28:26.435045      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 09:28:26.441251 23 resource.go:361] Creating new exec pod
  I0102 09:28:29.460268 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-9925 exec execpod-affinityj7sf7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0102 09:28:29.578289 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0102 09:28:29.578336 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:28:29.578474 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-9925 exec execpod-affinityj7sf7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.73.2 80'
  I0102 09:28:29.685248 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.73.2 80\nConnection to 10.43.73.2 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0102 09:28:29.685293 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:28:29.691274 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-9925 exec execpod-affinityj7sf7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.73.2:80/ ; done'
  I0102 09:28:29.870201 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n"
  I0102 09:28:29.870246 23 builder.go:147] stdout: "\naffinity-clusterip-transition-c5mfm\naffinity-clusterip-transition-c5mfm\naffinity-clusterip-transition-7m9jn\naffinity-clusterip-transition-c5mfm\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-c5mfm\naffinity-clusterip-transition-c5mfm\naffinity-clusterip-transition-c5mfm\naffinity-clusterip-transition-7m9jn\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-c5mfm\naffinity-clusterip-transition-7m9jn\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-7m9jn\naffinity-clusterip-transition-c5mfm"
  I0102 09:28:29.870260 23 service.go:242] Received response from host: affinity-clusterip-transition-c5mfm
  I0102 09:28:29.870271 23 service.go:242] Received response from host: affinity-clusterip-transition-c5mfm
  I0102 09:28:29.870279 23 service.go:242] Received response from host: affinity-clusterip-transition-7m9jn
  I0102 09:28:29.870286 23 service.go:242] Received response from host: affinity-clusterip-transition-c5mfm
  I0102 09:28:29.870294 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:29.870302 23 service.go:242] Received response from host: affinity-clusterip-transition-c5mfm
  I0102 09:28:29.870309 23 service.go:242] Received response from host: affinity-clusterip-transition-c5mfm
  I0102 09:28:29.870316 23 service.go:242] Received response from host: affinity-clusterip-transition-c5mfm
  I0102 09:28:29.870324 23 service.go:242] Received response from host: affinity-clusterip-transition-7m9jn
  I0102 09:28:29.870332 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:29.870339 23 service.go:242] Received response from host: affinity-clusterip-transition-c5mfm
  I0102 09:28:29.870348 23 service.go:242] Received response from host: affinity-clusterip-transition-7m9jn
  I0102 09:28:29.870355 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:29.870362 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:29.870369 23 service.go:242] Received response from host: affinity-clusterip-transition-7m9jn
  I0102 09:28:29.870377 23 service.go:242] Received response from host: affinity-clusterip-transition-c5mfm
  I0102 09:28:29.875628 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-9925 exec execpod-affinityj7sf7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.73.2:80/ ; done'
  I0102 09:28:30.053201 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.73.2:80/\n"
  I0102 09:28:30.053240 23 builder.go:147] stdout: "\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n\naffinity-clusterip-transition-xpz8n"
  I0102 09:28:30.053254 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053264 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053273 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053282 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053291 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053298 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053306 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053313 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053321 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053328 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053336 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053343 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053350 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053357 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053365 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053372 23 service.go:242] Received response from host: affinity-clusterip-transition-xpz8n
  I0102 09:28:30.053425 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9925, will wait for the garbage collector to delete the pods @ 01/02/25 09:28:30.061
  I0102 09:28:30.120704 23 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 4.596531ms
  I0102 09:28:30.221277 23 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.570558ms
  I0102 09:28:33.334340 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9925" for this suite. @ 01/02/25 09:28:33.336
• [10.003 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 01/02/25 09:28:33.339
  I0102 09:28:33.339907 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename svcaccounts @ 01/02/25 09:28:33.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:28:33.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:28:33.351
  STEP: Creating a pod to test service account token:  @ 01/02/25 09:28:33.353
  STEP: Saw pod success @ 01/02/25 09:28:37.371
  I0102 09:28:37.372384 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod test-pod-862046d8-5839-4815-b177-050e268cd75a container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:28:37.375
  I0102 09:28:37.387055 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9510" for this suite. @ 01/02/25 09:28:37.389
• [4.054 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 01/02/25 09:28:37.395
  I0102 09:28:37.395303 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename statefulset @ 01/02/25 09:28:37.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:28:37.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:28:37.407
  STEP: Creating service test in namespace statefulset-1716 @ 01/02/25 09:28:37.408
  STEP: Creating a new StatefulSet @ 01/02/25 09:28:37.413
  I0102 09:28:37.424647 23 wait.go:40] Found 0 stateful pods, waiting for 3
  I0102 09:28:47.421099 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:28:47.421459 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:28:47.421686 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:28:47.425576 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-1716 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 09:28:47.537726 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 09:28:47.537759 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 09:28:47.537769 23 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/02/25 09:28:57.554
  I0102 09:28:57.572536 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 01/02/25 09:28:57.572
  STEP: Updating Pods in reverse ordinal order @ 01/02/25 09:29:07.589
  I0102 09:29:07.597559 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-1716 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 09:29:07.717339 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0102 09:29:07.717385 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 09:29:07.717398 23 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 01/02/25 09:29:27.748
  I0102 09:29:27.749562 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-1716 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 09:29:27.868630 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 09:29:27.868666 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 09:29:27.868677 23 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 09:29:37.901257 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 01/02/25 09:29:47.905
  I0102 09:29:47.907321 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-1716 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 09:29:48.005944 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0102 09:29:48.005980 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 09:29:48.005992 23 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0102 09:29:58.029063 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1716
  I0102 09:29:58.031973 23 rest.go:150] Scaling statefulset ss2 to 0
  I0102 09:30:08.046757 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0102 09:30:08.051193 23 rest.go:88] Deleting statefulset ss2
  I0102 09:30:08.069927 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1716" for this suite. @ 01/02/25 09:30:08.09
• [90.700 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 01/02/25 09:30:08.098
  I0102 09:30:08.098285 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename containers @ 01/02/25 09:30:08.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:30:08.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:30:08.113
  STEP: Creating a pod to test override arguments @ 01/02/25 09:30:08.115
  STEP: Saw pod success @ 01/02/25 09:30:12.133
  I0102 09:30:12.136349 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod client-containers-8022bc88-d767-4f27-aeb0-005f334b1632 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:30:12.15
  I0102 09:30:12.171031 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9497" for this suite. @ 01/02/25 09:30:12.173
• [4.080 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 01/02/25 09:30:12.178
  I0102 09:30:12.178850 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:30:12.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:30:12.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:30:12.191
  STEP: Counting existing ResourceQuota @ 01/02/25 09:30:29.195
  STEP: Creating a ResourceQuota @ 01/02/25 09:30:34.204
  STEP: Ensuring resource quota status is calculated @ 01/02/25 09:30:34.211
  STEP: Creating a ConfigMap @ 01/02/25 09:30:36.222
  STEP: Ensuring resource quota status captures configMap creation @ 01/02/25 09:30:36.239
  STEP: Deleting a ConfigMap @ 01/02/25 09:30:38.241
  STEP: Ensuring resource quota status released usage @ 01/02/25 09:30:38.245
  I0102 09:30:40.247150 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-353" for this suite. @ 01/02/25 09:30:40.252
• [28.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 01/02/25 09:30:40.261
  I0102 09:30:40.261160 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 09:30:40.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:30:40.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:30:40.274
  STEP: Creating projection with secret that has name secret-emptykey-test-34975d81-0e53-4462-b304-f3b9ba848abf @ 01/02/25 09:30:40.276
  I0102 09:30:40.277413 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9241" for this suite. @ 01/02/25 09:30:40.35
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 01/02/25 09:30:40.359
  I0102 09:30:40.359323 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename deployment @ 01/02/25 09:30:40.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:30:40.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:30:40.373
  I0102 09:30:40.392210 23 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/02/25 09:30:40.392
  I0102 09:30:42.407951 23 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 01/02/25 09:30:42.427
  I0102 09:30:44.444160 23 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9909",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45cde026-6207-4047-96ab-ebadc7cf465f",
      ResourceVersion: (string) (len=5) "19206",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=75) "ReplicaSet \"test-cleanup-deployment-898f8f847\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0102 09:30:44.454946 23 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9909",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7a31e9f-17bb-4dcb-aa70-6eac95d862df",
      ResourceVersion: (string) (len=5) "19197",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "45cde026-6207-4047-96ab-ebadc7cf465f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 35 63 64 65 30  32 36 2d 36 32 30 37 2d  |\"45cde026-6207-|
              00000120  34 30 34 37 2d 39 36 61  62 2d 65 62 61 64 63 37  |4047-96ab-ebadc7|
              00000130  63 66 34 36 35 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cf465f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:30:44.463585 23 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-6h45r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-6h45r",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-9909",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58357c05-b807-4eec-a11b-5a0403bd5868",
      ResourceVersion: (string) (len=5) "19196",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.88/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.88\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9219f93ce31023b7a6ba56f410432de71c1130060360aba9de12bbc02d011f62",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.88/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "e7a31e9f-17bb-4dcb-aa70-6eac95d862df",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 37  61 33 31 65 39 66 2d 31  |d\":\"e7a31e9f-1|
              00000090  37 62 62 2d 34 64 63 62  2d 61 61 37 30 2d 36 65  |7bb-4dcb-aa70-6e|
              000000a0  61 63 39 35 64 38 36 32  64 66 5c 22 7d 22 3a 7b  |ac95d862df\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 38 38  5c 22 7d 22 3a 7b 22 2e  |.42.3.88\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6g92d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6g92d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407043,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407042,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407042,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871407043,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://2de2519a8b1af34f6cceea7c8d194bea441a7ec391b3c987d2196e802f53b75f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6g92d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:30:44.468973 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9909" for this suite. @ 01/02/25 09:30:44.471
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 01/02/25 09:30:44.476
  I0102 09:30:44.476538 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:30:44.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:30:44.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:30:44.489
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 01/02/25 09:30:44.49
  STEP: Saw pod success @ 01/02/25 09:30:48.504
  I0102 09:30:48.506684 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-7b3f1ae1-683f-40f3-b973-9b88a76577fb container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:30:48.51
  I0102 09:30:48.525298 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1895" for this suite. @ 01/02/25 09:30:48.529
• [4.057 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 01/02/25 09:30:48.533
  I0102 09:30:48.533736 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:30:48.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:30:48.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:30:48.549
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:30:48.551
  STEP: Saw pod success @ 01/02/25 09:30:52.571
  I0102 09:30:52.573205 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-19b62ac3-10ca-4618-a099-5451ad166f0c container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:30:52.58
  I0102 09:30:52.595903 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5250" for this suite. @ 01/02/25 09:30:52.597
• [4.071 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 01/02/25 09:30:52.604
  I0102 09:30:52.605065 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:30:52.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:30:52.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:30:52.618
  STEP: Creating configMap that has name configmap-test-emptyKey-fdbdafa0-6ca9-4177-85fb-303c85326d83 @ 01/02/25 09:30:52.62
  I0102 09:30:52.621360 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9760" for this suite. @ 01/02/25 09:30:52.7
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 01/02/25 09:30:52.706
  I0102 09:30:52.706528 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 09:30:52.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:30:52.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:30:52.721
  STEP: creating service in namespace services-1025 @ 01/02/25 09:30:52.723
  STEP: creating service affinity-clusterip in namespace services-1025 @ 01/02/25 09:30:52.723
  STEP: creating replication controller affinity-clusterip in namespace services-1025 @ 01/02/25 09:30:52.732
  I0102 09:30:52.741314      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-1025, replica count: 3
  I0102 09:30:55.792257      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 09:30:55.801602 23 resource.go:361] Creating new exec pod
  I0102 09:30:58.840391 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1025 exec execpod-affinityhsb5t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0102 09:30:58.945018 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0102 09:30:58.945054 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:30:58.945121 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1025 exec execpod-affinityhsb5t -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.238.233 80'
  I0102 09:30:59.048449 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.238.233 80\nConnection to 10.43.238.233 80 port [tcp/http] succeeded!\n"
  I0102 09:30:59.048550 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 09:30:59.048815 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1025 exec execpod-affinityhsb5t -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.238.233:80/ ; done'
  I0102 09:30:59.216406 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.238.233:80/\n"
  I0102 09:30:59.216447 23 builder.go:147] stdout: "\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc\naffinity-clusterip-gb9pc"
  I0102 09:30:59.216460 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216470 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216478 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216485 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216493 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216500 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216507 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216515 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216523 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216530 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216539 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216547 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216554 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216561 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216568 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216575 23 service.go:242] Received response from host: affinity-clusterip-gb9pc
  I0102 09:30:59.216632 23 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1025, will wait for the garbage collector to delete the pods @ 01/02/25 09:30:59.224
  I0102 09:30:59.280055 23 resources.go:139] Deleting ReplicationController affinity-clusterip took: 2.89086ms
  I0102 09:30:59.382843 23 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 102.784669ms
  I0102 09:31:02.717491 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1025" for this suite. @ 01/02/25 09:31:02.721
• [10.018 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 01/02/25 09:31:02.727
  I0102 09:31:02.727338 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename var-expansion @ 01/02/25 09:31:02.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:02.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:02.74
  I0102 09:31:04.757701 23 delete.go:62] Deleting pod "var-expansion-65d73231-2c52-4e39-a090-c6f4e1940366" in namespace "var-expansion-9930"
  I0102 09:31:04.769451 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-65d73231-2c52-4e39-a090-c6f4e1940366" to be fully deleted
  I0102 09:31:06.783514 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9930" for this suite. @ 01/02/25 09:31:06.785
• [4.062 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 01/02/25 09:31:06.789
  I0102 09:31:06.789958 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename disruption @ 01/02/25 09:31:06.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:06.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:06.804
  STEP: creating the pdb @ 01/02/25 09:31:06.805
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:31:06.808
  STEP: updating the pdb @ 01/02/25 09:31:08.813
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:31:08.829
  STEP: patching the pdb @ 01/02/25 09:31:08.833
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:31:08.843
  STEP: Waiting for the pdb to be deleted @ 01/02/25 09:31:08.848
  I0102 09:31:08.849449 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4274" for this suite. @ 01/02/25 09:31:08.851
• [2.066 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 01/02/25 09:31:08.855
  I0102 09:31:08.856021 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename field-validation @ 01/02/25 09:31:08.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:08.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:08.867
  I0102 09:31:08.868185 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  W0102 09:31:11.400418      23 warnings.go:70] unknown field "alpha"
  W0102 09:31:11.400451      23 warnings.go:70] unknown field "beta"
  W0102 09:31:11.400469      23 warnings.go:70] unknown field "delta"
  W0102 09:31:11.400547      23 warnings.go:70] unknown field "epsilon"
  W0102 09:31:11.400567      23 warnings.go:70] unknown field "gamma"
  I0102 09:31:11.949433 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5579" for this suite. @ 01/02/25 09:31:11.953
• [3.105 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 01/02/25 09:31:11.963
  I0102 09:31:11.963532 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename dns @ 01/02/25 09:31:11.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:11.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:11.98
  STEP: Creating a test headless service @ 01/02/25 09:31:11.981
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-657.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-657.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 01/02/25 09:31:11.984
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-657.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-657.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 01/02/25 09:31:11.986
  STEP: creating a pod to probe DNS @ 01/02/25 09:31:11.986
  STEP: submitting the pod to kubernetes @ 01/02/25 09:31:11.986
  STEP: retrieving the pod @ 01/02/25 09:31:14.002
  STEP: looking for the results for each expected name from probers @ 01/02/25 09:31:14.009
  I0102 09:31:14.032114 23 dns_common.go:527] DNS probes using dns-657/dns-test-72a9545e-74a6-40fe-9f0f-fb9d3e80c393 succeeded

  STEP: deleting the pod @ 01/02/25 09:31:14.032
  STEP: deleting the test headless service @ 01/02/25 09:31:14.047
  I0102 09:31:14.062007 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-657" for this suite. @ 01/02/25 09:31:14.068
• [2.147 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 01/02/25 09:31:14.11
  I0102 09:31:14.110791 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename gc @ 01/02/25 09:31:14.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:14.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:14.196
  STEP: create the deployment @ 01/02/25 09:31:14.198
  W0102 09:31:14.203899      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/02/25 09:31:14.206
  STEP: delete the deployment @ 01/02/25 09:31:14.324
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 01/02/25 09:31:14.338
  STEP: Gathering metrics @ 01/02/25 09:31:14.846
  I0102 09:31:15.016022 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0102 09:31:15.019975 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5467" for this suite. @ 01/02/25 09:31:15.022
• [0.916 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 01/02/25 09:31:15.027
  I0102 09:31:15.027691 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 09:31:15.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:15.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:15.04
  STEP: Creating secret with name secret-test-0939f98b-d43f-45c2-aabd-9800ef4231b6 @ 01/02/25 09:31:15.041
  STEP: Creating a pod to test consume secrets @ 01/02/25 09:31:15.045
  STEP: Saw pod success @ 01/02/25 09:31:19.071
  I0102 09:31:19.081696 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-secrets-023ea5e0-2959-4b59-94d6-b56f2bb0575f container secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 09:31:19.101
  I0102 09:31:19.115285 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9781" for this suite. @ 01/02/25 09:31:19.117
• [4.094 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 01/02/25 09:31:19.121
  I0102 09:31:19.121270 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:31:19.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:19.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:19.136
  STEP: Creating a pod to test downward api env vars @ 01/02/25 09:31:19.138
  STEP: Saw pod success @ 01/02/25 09:31:23.166
  I0102 09:31:23.168813 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downward-api-5c03de37-85b2-490c-b78e-5d5c8bd7b2b6 container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 09:31:23.172
  I0102 09:31:23.181199 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3600" for this suite. @ 01/02/25 09:31:23.183
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 01/02/25 09:31:23.187
  I0102 09:31:23.187963 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:31:23.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:23.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:23.2
  STEP: Setting up server cert @ 01/02/25 09:31:23.299
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:31:23.522
  STEP: Deploying the webhook pod @ 01/02/25 09:31:23.526
  STEP: Wait for the deployment to be ready @ 01/02/25 09:31:23.539
  I0102 09:31:23.550873 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:31:25.569
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:31:25.587
  I0102 09:31:26.588035 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/02/25 09:31:26.595
  I0102 09:31:26.638931 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4452" for this suite. @ 01/02/25 09:31:26.648
  STEP: Destroying namespace "webhook-markers-2891" for this suite. @ 01/02/25 09:31:26.653
• [3.472 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 01/02/25 09:31:26.661
  I0102 09:31:26.661330 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename gc @ 01/02/25 09:31:26.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:26.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:26.676
  STEP: create the rc1 @ 01/02/25 09:31:26.749
  STEP: create the rc2 @ 01/02/25 09:31:26.762
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 01/02/25 09:31:32.779
  STEP: delete the rc simpletest-rc-to-be-deleted @ 01/02/25 09:31:33.147
  STEP: wait for the rc to be deleted @ 01/02/25 09:31:33.153
  I0102 09:31:38.170923 23 garbage_collector.go:762] 74 pods remaining
  I0102 09:31:38.170956 23 garbage_collector.go:769] 74 pods has nil DeletionTimestamp
  I0102 09:31:38.170965 23 garbage_collector.go:770] 
  STEP: Gathering metrics @ 01/02/25 09:31:43.16
  I0102 09:31:43.224842 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0102 09:31:43.229531 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-22n5f" in namespace "gc-1256"
  I0102 09:31:43.237747 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ctlf" in namespace "gc-1256"
  I0102 09:31:43.246350 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2lw85" in namespace "gc-1256"
  I0102 09:31:43.254653 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2w246" in namespace "gc-1256"
  I0102 09:31:43.264199 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-47g4b" in namespace "gc-1256"
  I0102 09:31:43.275225 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-48srm" in namespace "gc-1256"
  I0102 09:31:43.287346 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gmzq" in namespace "gc-1256"
  I0102 09:31:43.298021 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4n6zr" in namespace "gc-1256"
  I0102 09:31:43.306330 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4r9fj" in namespace "gc-1256"
  I0102 09:31:43.316457 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4trsr" in namespace "gc-1256"
  I0102 09:31:43.323704 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4x95w" in namespace "gc-1256"
  I0102 09:31:43.334767 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5m4fc" in namespace "gc-1256"
  I0102 09:31:43.345334 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vtw8" in namespace "gc-1256"
  I0102 09:31:43.355293 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-66rxl" in namespace "gc-1256"
  I0102 09:31:43.365174 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69tqd" in namespace "gc-1256"
  I0102 09:31:43.376128 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mbm9" in namespace "gc-1256"
  I0102 09:31:43.386532 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6pkgx" in namespace "gc-1256"
  I0102 09:31:43.398431 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-84clh" in namespace "gc-1256"
  I0102 09:31:43.408350 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88tc4" in namespace "gc-1256"
  I0102 09:31:43.416944 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8l8cq" in namespace "gc-1256"
  I0102 09:31:43.424366 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8w7lj" in namespace "gc-1256"
  I0102 09:31:43.439630 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9d4gc" in namespace "gc-1256"
  I0102 09:31:43.451938 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9db8p" in namespace "gc-1256"
  I0102 09:31:43.478295 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9h57k" in namespace "gc-1256"
  I0102 09:31:43.544418 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9xt7x" in namespace "gc-1256"
  I0102 09:31:43.580109 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b2hsr" in namespace "gc-1256"
  I0102 09:31:43.598409 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bk9dl" in namespace "gc-1256"
  I0102 09:31:43.609770 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2d76" in namespace "gc-1256"
  I0102 09:31:43.618023 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cb8z9" in namespace "gc-1256"
  I0102 09:31:43.624753 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ccg6r" in namespace "gc-1256"
  I0102 09:31:43.633403 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cjxqq" in namespace "gc-1256"
  I0102 09:31:43.641035 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cpmxn" in namespace "gc-1256"
  I0102 09:31:43.649814 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqkb9" in namespace "gc-1256"
  I0102 09:31:43.661920 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d6cpw" in namespace "gc-1256"
  I0102 09:31:43.669328 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-drbwr" in namespace "gc-1256"
  I0102 09:31:43.679411 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dz49f" in namespace "gc-1256"
  I0102 09:31:43.687245 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f77dp" in namespace "gc-1256"
  I0102 09:31:43.696500 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f82mh" in namespace "gc-1256"
  I0102 09:31:43.705075 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gfpp4" in namespace "gc-1256"
  I0102 09:31:43.716332 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gnp75" in namespace "gc-1256"
  I0102 09:31:43.723693 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzxbq" in namespace "gc-1256"
  I0102 09:31:43.731627 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h6sv5" in namespace "gc-1256"
  I0102 09:31:43.738749 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hjzgq" in namespace "gc-1256"
  I0102 09:31:43.746623 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hmhgq" in namespace "gc-1256"
  I0102 09:31:43.758814 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hqm8h" in namespace "gc-1256"
  I0102 09:31:43.765789 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxngs" in namespace "gc-1256"
  I0102 09:31:43.774095 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jblvt" in namespace "gc-1256"
  I0102 09:31:43.782849 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jcr2b" in namespace "gc-1256"
  I0102 09:31:43.789904 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jjxj9" in namespace "gc-1256"
  I0102 09:31:43.799251 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jlrqw" in namespace "gc-1256"
  I0102 09:31:43.807105 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1256" for this suite. @ 01/02/25 09:31:43.81
• [17.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 01/02/25 09:31:43.815
  I0102 09:31:43.815029 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename namespaces @ 01/02/25 09:31:43.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:43.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:43.828
  STEP: Creating a test namespace @ 01/02/25 09:31:43.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:43.931
  STEP: Creating a service in the namespace @ 01/02/25 09:31:43.934
  STEP: Deleting the namespace @ 01/02/25 09:31:43.941
  STEP: Waiting for the namespace to be removed. @ 01/02/25 09:31:43.946
  STEP: Recreating the namespace @ 01/02/25 09:31:50.95
  STEP: Verifying there is no service in the namespace @ 01/02/25 09:31:50.962
  I0102 09:31:50.964208 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-266" for this suite. @ 01/02/25 09:31:50.966
  STEP: Destroying namespace "nsdeletetest-3161" for this suite. @ 01/02/25 09:31:50.969
  I0102 09:31:50.971847 23 framework.go:370] Namespace nsdeletetest-3161 was already deleted
  STEP: Destroying namespace "nsdeletetest-5861" for this suite. @ 01/02/25 09:31:50.971
• [7.160 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 01/02/25 09:31:50.975
  I0102 09:31:50.975401 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 09:31:50.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:51.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:51.064
  STEP: set up a multi version CRD @ 01/02/25 09:31:51.065
  I0102 09:31:51.066662 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: rename a version @ 01/02/25 09:31:54.667
  STEP: check the new version name is served @ 01/02/25 09:31:54.677
  STEP: check the old version name is removed @ 01/02/25 09:31:55.626
  STEP: check the other version is not changed @ 01/02/25 09:31:56.289
  I0102 09:31:58.930581 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9430" for this suite. @ 01/02/25 09:31:58.934
• [7.964 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 01/02/25 09:31:58.942
  I0102 09:31:58.942417 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename gc @ 01/02/25 09:31:58.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:31:58.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:31:58.954
  I0102 09:31:59.033603 23 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"a2381b53-1124-46ec-b906-4fead2975257", Controller:(*bool)(0xc00272201e), BlockOwnerDeletion:(*bool)(0xc00272201f)}}
  I0102 09:31:59.044817 23 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"d1d264bb-1208-4bb6-9bb4-b5db29f2009c", Controller:(*bool)(0xc002bb416e), BlockOwnerDeletion:(*bool)(0xc002bb416f)}}
  I0102 09:31:59.053759 23 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"4beb3606-693a-45d0-9a07-e6ed32011688", Controller:(*bool)(0xc002bb441e), BlockOwnerDeletion:(*bool)(0xc002bb441f)}}
  I0102 09:32:04.061234 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4213" for this suite. @ 01/02/25 09:32:04.064
• [5.127 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 01/02/25 09:32:04.07
  I0102 09:32:04.070388 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 09:32:04.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:32:04.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:32:04.204
  STEP: Creating pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828 @ 01/02/25 09:32:04.205
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/02/25 09:32:06.25
  I0102 09:32:06.260238 23 container_probe.go:1749] Initial restart count of pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 is 0
  I0102 09:32:06.271973 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:08.274288 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:10.276471 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:12.278399 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:14.280704 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:16.292454 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:18.296026 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:20.304081 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:22.308481 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:24.311466 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:26.314306 23 container_probe.go:1759] Get pod liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 in namespace container-probe-9828
  I0102 09:32:26.314342 23 container_probe.go:1763] Restart count of pod container-probe-9828/liveness-1560c3ab-e550-4531-9ef5-78c4e75aaab8 is now 1 (20.054000417s elapsed)
  STEP: deleting the pod @ 01/02/25 09:32:26.314
  I0102 09:32:26.323424 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9828" for this suite. @ 01/02/25 09:32:26.326
• [22.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 01/02/25 09:32:26.334
  I0102 09:32:26.335010 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename var-expansion @ 01/02/25 09:32:26.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:32:26.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:32:26.347
  STEP: Creating a pod to test substitution in volume subpath @ 01/02/25 09:32:26.349
  STEP: Saw pod success @ 01/02/25 09:32:30.37
  I0102 09:32:30.372576 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod var-expansion-80acb2e1-234f-473e-b64d-2f6324a6a0e4 container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 09:32:30.384
  I0102 09:32:30.396243 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1836" for this suite. @ 01/02/25 09:32:30.398
• [4.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 01/02/25 09:32:30.402
  I0102 09:32:30.402951 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename proxy @ 01/02/25 09:32:30.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:32:30.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:32:30.416
  I0102 09:32:30.417875 23 proxy.go:387] Creating pod...
  I0102 09:32:32.437300 23 proxy.go:411] Creating service...
  I0102 09:32:32.456963 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/pods/agnhost/proxy?method=DELETE
  I0102 09:32:32.467864 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0102 09:32:32.467942 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/pods/agnhost/proxy?method=OPTIONS
  I0102 09:32:32.469773 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0102 09:32:32.470068 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/pods/agnhost/proxy?method=PATCH
  I0102 09:32:32.471888 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0102 09:32:32.472129 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/pods/agnhost/proxy?method=POST
  I0102 09:32:32.473821 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0102 09:32:32.473841 23 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/pods/agnhost/proxy?method=PUT
  I0102 09:32:32.475287 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0102 09:32:32.475324 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/services/e2e-proxy-test-service/proxy?method=DELETE
  I0102 09:32:32.477034 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0102 09:32:32.477226 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0102 09:32:32.479045 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0102 09:32:32.479078 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/services/e2e-proxy-test-service/proxy?method=PATCH
  I0102 09:32:32.480754 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0102 09:32:32.481001 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/services/e2e-proxy-test-service/proxy?method=POST
  I0102 09:32:32.482908 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0102 09:32:32.483104 23 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/services/e2e-proxy-test-service/proxy?method=PUT
  I0102 09:32:32.486100 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0102 09:32:32.486124 23 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/pods/agnhost/proxy?method=GET
  I0102 09:32:32.487142 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0102 09:32:32.487166 23 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/services/e2e-proxy-test-service/proxy?method=GET
  I0102 09:32:32.488326 23 proxy.go:487] http.Client request:GET StatusCode:301
  I0102 09:32:32.488522 23 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/pods/agnhost/proxy?method=HEAD
  I0102 09:32:32.489423 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0102 09:32:32.489440 23 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4470/services/e2e-proxy-test-service/proxy?method=HEAD
  I0102 09:32:32.490465 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0102 09:32:32.490784 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4470" for this suite. @ 01/02/25 09:32:32.493
• [2.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 01/02/25 09:32:32.498
  I0102 09:32:32.498494 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename statefulset @ 01/02/25 09:32:32.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:32:32.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:32:32.515
  STEP: Creating service test in namespace statefulset-6783 @ 01/02/25 09:32:32.516
  STEP: Creating a new StatefulSet @ 01/02/25 09:32:32.521
  I0102 09:32:32.529491 23 wait.go:40] Found 0 stateful pods, waiting for 3
  I0102 09:32:42.532983 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:32:42.533048 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:32:42.533077 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 01/02/25 09:32:42.541
  I0102 09:32:42.549304 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 01/02/25 09:32:42.549
  STEP: Not applying an update when the partition is greater than the number of replicas @ 01/02/25 09:32:52.554
  STEP: Performing a canary update @ 01/02/25 09:32:52.554
  I0102 09:32:52.558865 23 statefulset.go:2507] Updating stateful set ss2
  I0102 09:32:52.654690 23 wait.go:74] Waiting for Pod statefulset-6783/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 01/02/25 09:33:02.576
  I0102 09:33:02.629997 23 wait.go:40] Found 2 stateful pods, waiting for 3
  I0102 09:33:12.637435 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:33:12.638879 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0102 09:33:12.639744 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 01/02/25 09:33:12.646
  I0102 09:33:12.656893 23 statefulset.go:2507] Updating stateful set ss2
  I0102 09:33:12.729941 23 wait.go:74] Waiting for Pod statefulset-6783/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0102 09:33:22.666239 23 statefulset.go:2507] Updating stateful set ss2
  I0102 09:33:22.677729 23 wait.go:56] Waiting for StatefulSet statefulset-6783/ss2 to complete update
  I0102 09:33:22.677770 23 wait.go:63] Waiting for Pod statefulset-6783/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0102 09:33:32.672055 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6783
  I0102 09:33:32.673470 23 rest.go:150] Scaling statefulset ss2 to 0
  I0102 09:33:42.686589 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0102 09:33:42.693290 23 rest.go:88] Deleting statefulset ss2
  I0102 09:33:42.715872 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6783" for this suite. @ 01/02/25 09:33:42.72
• [70.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 01/02/25 09:33:42.725
  I0102 09:33:42.725631 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/02/25 09:33:42.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:33:42.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:33:42.742
  STEP: fetching the /apis discovery document @ 01/02/25 09:33:42.743
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 01/02/25 09:33:42.743
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 01/02/25 09:33:42.743
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 01/02/25 09:33:42.743
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 01/02/25 09:33:42.744
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 01/02/25 09:33:42.744
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 01/02/25 09:33:42.744
  I0102 09:33:42.745004 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7502" for this suite. @ 01/02/25 09:33:42.821
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 01/02/25 09:33:42.832
  I0102 09:33:42.832172 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:33:42.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:33:42.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:33:42.848
  STEP: Creating configMap with name cm-test-opt-del-4a712dff-4e4b-4c20-b2ee-4afb5c73115f @ 01/02/25 09:33:42.92
  STEP: Creating configMap with name cm-test-opt-upd-816f44c1-8110-44ea-9280-90216a94da67 @ 01/02/25 09:33:42.923
  STEP: Creating the pod @ 01/02/25 09:33:42.925
  STEP: Deleting configmap cm-test-opt-del-4a712dff-4e4b-4c20-b2ee-4afb5c73115f @ 01/02/25 09:33:44.949
  STEP: Updating configmap cm-test-opt-upd-816f44c1-8110-44ea-9280-90216a94da67 @ 01/02/25 09:33:44.953
  STEP: Creating configMap with name cm-test-opt-create-a4924b5b-1900-4e5d-8d15-eb93066e14e0 @ 01/02/25 09:33:44.956
  STEP: waiting to observe update in volume @ 01/02/25 09:33:44.959
  I0102 09:33:48.980348 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7583" for this suite. @ 01/02/25 09:33:48.983
• [6.156 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 01/02/25 09:33:48.988
  I0102 09:33:48.988441 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 09:33:48.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:33:48.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:33:49.001
  STEP: Creating secret with name secret-test-b8fd4c6b-242e-4f66-9526-3799f5f1847f @ 01/02/25 09:33:49.002
  STEP: Creating a pod to test consume secrets @ 01/02/25 09:33:49.006
  STEP: Saw pod success @ 01/02/25 09:33:53.021
  I0102 09:33:53.024614 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-secrets-a98288dc-0c47-43d4-96cc-af781f771505 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 09:33:53.039
  I0102 09:33:53.057268 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9034" for this suite. @ 01/02/25 09:33:53.061
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 01/02/25 09:33:53.068
  I0102 09:33:53.068784 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename watch @ 01/02/25 09:33:53.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:33:53.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:33:53.082
  STEP: creating a watch on configmaps with a certain label @ 01/02/25 09:33:53.084
  STEP: creating a new configmap @ 01/02/25 09:33:53.085
  STEP: modifying the configmap once @ 01/02/25 09:33:53.087
  STEP: changing the label value of the configmap @ 01/02/25 09:33:53.09
  STEP: Expecting to observe a delete notification for the watched object @ 01/02/25 09:33:53.094
  I0102 09:33:53.095056 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2050  a97e26ec-c5f2-47c2-89b0-eaf084e89392 23240 0 2025-01-02 09:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-02 09:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:33:53.095219 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2050  a97e26ec-c5f2-47c2-89b0-eaf084e89392 23241 0 2025-01-02 09:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-02 09:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:33:53.095348 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2050  a97e26ec-c5f2-47c2-89b0-eaf084e89392 23242 0 2025-01-02 09:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-02 09:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 01/02/25 09:33:53.095
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 01/02/25 09:33:53.098
  STEP: changing the label value of the configmap back @ 01/02/25 09:34:03.099
  STEP: modifying the configmap a third time @ 01/02/25 09:34:03.104
  STEP: deleting the configmap @ 01/02/25 09:34:03.108
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 01/02/25 09:34:03.112
  I0102 09:34:03.113318 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2050  a97e26ec-c5f2-47c2-89b0-eaf084e89392 23331 0 2025-01-02 09:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-02 09:34:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:34:03.113642 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2050  a97e26ec-c5f2-47c2-89b0-eaf084e89392 23332 0 2025-01-02 09:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-02 09:34:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:34:03.113855 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2050  a97e26ec-c5f2-47c2-89b0-eaf084e89392 23333 0 2025-01-02 09:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-01-02 09:34:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:34:03.114050 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2050" for this suite. @ 01/02/25 09:34:03.117
• [10.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 01/02/25 09:34:03.123
  I0102 09:34:03.123435 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:34:03.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:03.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:03.142
  STEP: Counting existing ResourceQuota @ 01/02/25 09:34:03.145
  STEP: Creating a ResourceQuota @ 01/02/25 09:34:08.163
  STEP: Ensuring resource quota status is calculated @ 01/02/25 09:34:08.168
  STEP: Creating a ReplicationController @ 01/02/25 09:34:10.172
  STEP: Ensuring resource quota status captures replication controller creation @ 01/02/25 09:34:10.182
  STEP: Deleting a ReplicationController @ 01/02/25 09:34:12.184
  STEP: Ensuring resource quota status released usage @ 01/02/25 09:34:12.187
  I0102 09:34:14.191896 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5405" for this suite. @ 01/02/25 09:34:14.196
• [11.085 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 01/02/25 09:34:14.213
  I0102 09:34:14.213775 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/02/25 09:34:14.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:14.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:14.237
  STEP: getting /apis @ 01/02/25 09:34:14.249
  STEP: getting /apis/admissionregistration.k8s.io @ 01/02/25 09:34:14.252
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 01/02/25 09:34:14.253
  STEP: creating @ 01/02/25 09:34:14.254
  STEP: getting @ 01/02/25 09:34:14.268
  STEP: listing @ 01/02/25 09:34:14.269
  STEP: watching @ 01/02/25 09:34:14.272
  I0102 09:34:14.272832 23 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 01/02/25 09:34:14.273
  STEP: updating @ 01/02/25 09:34:14.28
  I0102 09:34:14.290396 23 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 01/02/25 09:34:14.29
  STEP: patching /status @ 01/02/25 09:34:14.292
  STEP: updating /status @ 01/02/25 09:34:14.295
  STEP: deleting @ 01/02/25 09:34:14.301
  STEP: deleting a collection @ 01/02/25 09:34:14.307
  I0102 09:34:14.315490 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9127" for this suite. @ 01/02/25 09:34:14.317
• [0.117 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 01/02/25 09:34:14.327
  I0102 09:34:14.327049 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename limitrange @ 01/02/25 09:34:14.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:14.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:14.342
  STEP: Creating a LimitRange @ 01/02/25 09:34:14.344
  STEP: Setting up watch @ 01/02/25 09:34:14.344
  STEP: Submitting a LimitRange @ 01/02/25 09:34:14.451
  STEP: Verifying LimitRange creation was observed @ 01/02/25 09:34:14.46
  STEP: Fetching the LimitRange to ensure it has proper values @ 01/02/25 09:34:14.461
  I0102 09:34:14.462362 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0102 09:34:14.462389 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 01/02/25 09:34:14.462
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 01/02/25 09:34:14.47
  I0102 09:34:14.474394 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0102 09:34:14.474453 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 01/02/25 09:34:14.474
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 01/02/25 09:34:14.48
  I0102 09:34:14.483295 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0102 09:34:14.483326 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 01/02/25 09:34:14.483
  STEP: Failing to create a Pod with more than max resources @ 01/02/25 09:34:14.486
  STEP: Updating a LimitRange @ 01/02/25 09:34:14.488
  STEP: Verifying LimitRange updating is effective @ 01/02/25 09:34:14.491
  STEP: Creating a Pod with less than former min resources @ 01/02/25 09:34:16.493
  STEP: Failing to create a Pod with more than max resources @ 01/02/25 09:34:16.498
  STEP: Deleting a LimitRange @ 01/02/25 09:34:16.501
  STEP: Verifying the LimitRange was deleted @ 01/02/25 09:34:16.504
  I0102 09:34:21.512588 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 01/02/25 09:34:21.513
  I0102 09:34:21.531584 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6016" for this suite. @ 01/02/25 09:34:21.538
• [7.218 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 01/02/25 09:34:21.545
  I0102 09:34:21.545305 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:34:21.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:21.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:21.558
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/02/25 09:34:21.559
  I0102 09:34:21.559735 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3152 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0102 09:34:21.629109 23 builder.go:146] stderr: ""
  I0102 09:34:21.629161 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 01/02/25 09:34:21.629
  I0102 09:34:21.633598 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3152 delete pods e2e-test-httpd-pod'
  I0102 09:34:23.508241 23 builder.go:146] stderr: ""
  I0102 09:34:23.508271 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0102 09:34:23.508344 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3152" for this suite. @ 01/02/25 09:34:23.512
• [1.979 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 01/02/25 09:34:23.524
  I0102 09:34:23.524068 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:34:23.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:23.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:23.587
  STEP: Creating configMap configmap-4319/configmap-test-ea293f2a-0465-4a9f-be26-a7fc321d36ea @ 01/02/25 09:34:23.592
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:34:23.595
  STEP: Saw pod success @ 01/02/25 09:34:27.612
  I0102 09:34:27.618410 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-e8f01ad6-7115-4249-84ab-0daac42761bf container env-test: <nil>
  STEP: delete the pod @ 01/02/25 09:34:27.628
  I0102 09:34:27.639835 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4319" for this suite. @ 01/02/25 09:34:27.641
• [4.122 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 01/02/25 09:34:27.646
  I0102 09:34:27.646402 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename field-validation @ 01/02/25 09:34:27.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:27.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:27.661
  I0102 09:34:27.663183 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:34:30.741933 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5736" for this suite. @ 01/02/25 09:34:30.746
• [3.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 01/02/25 09:34:30.751
  I0102 09:34:30.751769 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 09:34:30.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:30.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:30.767
  STEP: creating the pod @ 01/02/25 09:34:30.769
  STEP: submitting the pod to kubernetes @ 01/02/25 09:34:30.769
  STEP: verifying the pod is in kubernetes @ 01/02/25 09:34:32.783
  STEP: updating the pod @ 01/02/25 09:34:32.818
  I0102 09:34:33.325512 23 pod_client.go:173] Successfully updated pod "pod-update-75fe5b7a-0ce6-442c-a6fa-48c87e1efeea"
  STEP: verifying the updated pod is in kubernetes @ 01/02/25 09:34:33.328
  I0102 09:34:33.330439 23 pods.go:391] Pod update OK
  I0102 09:34:33.330612 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3075" for this suite. @ 01/02/25 09:34:33.332
• [2.584 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 01/02/25 09:34:33.335
  I0102 09:34:33.335691 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename ingressclass @ 01/02/25 09:34:33.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:33.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:33.348
  STEP: getting /apis @ 01/02/25 09:34:33.349
  STEP: getting /apis/networking.k8s.io @ 01/02/25 09:34:33.351
  STEP: getting /apis/networking.k8s.iov1 @ 01/02/25 09:34:33.352
  STEP: creating @ 01/02/25 09:34:33.352
  STEP: getting @ 01/02/25 09:34:33.358
  STEP: listing @ 01/02/25 09:34:33.359
  STEP: watching @ 01/02/25 09:34:33.36
  I0102 09:34:33.360879 23 ingressclass.go:348] starting watch
  STEP: patching @ 01/02/25 09:34:33.361
  STEP: updating @ 01/02/25 09:34:33.365
  I0102 09:34:33.367007 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0102 09:34:33.367079 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 01/02/25 09:34:33.367
  STEP: deleting a collection @ 01/02/25 09:34:33.371
  I0102 09:34:33.375861 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6566" for this suite. @ 01/02/25 09:34:33.441
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 01/02/25 09:34:33.451
  I0102 09:34:33.451124 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:34:33.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:33.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:33.492
  STEP: Creating a pod to test downward api env vars @ 01/02/25 09:34:33.504
  STEP: Saw pod success @ 01/02/25 09:34:37.564
  I0102 09:34:37.568165 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downward-api-79cef9de-18c6-483f-aec9-fd51ca4d7217 container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 09:34:37.576
  I0102 09:34:37.596107 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3101" for this suite. @ 01/02/25 09:34:37.599
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 01/02/25 09:34:37.608
  I0102 09:34:37.609003 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename dns @ 01/02/25 09:34:37.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:34:37.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:34:37.624
  STEP: Creating a test headless service @ 01/02/25 09:34:37.626
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2941.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2941.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local;sleep 1; done
   @ 01/02/25 09:34:37.633
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2941.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2941.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local;sleep 1; done
   @ 01/02/25 09:34:37.633
  STEP: creating a pod to probe DNS @ 01/02/25 09:34:37.633
  STEP: submitting the pod to kubernetes @ 01/02/25 09:34:37.633
  STEP: retrieving the pod @ 01/02/25 09:34:39.656
  STEP: looking for the results for each expected name from probers @ 01/02/25 09:34:39.666
  I0102 09:34:39.680475 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:39.683715 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:39.686083 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:39.688363 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:39.690335 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:39.692152 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:39.694037 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:39.694140 23 dns_common.go:489] Lookups using dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566 failed for: [wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2941.svc.cluster.local jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local]

  I0102 09:34:39.697552 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:34:39.700545 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:34:39.703461 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:34:44.673324 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:44.674817 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:44.679556 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:44.681262 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:44.681474 23 dns_common.go:489] Lookups using dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566 failed for: [wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local]

  I0102 09:34:44.684840 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:34:44.688173 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:34:44.691346 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:34:49.675882 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:49.678011 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:49.684563 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:49.686578 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:49.686718 23 dns_common.go:489] Lookups using dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566 failed for: [wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local]

  I0102 09:34:49.690960 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:34:49.694860 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:34:49.699075 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:34:54.672474 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:54.674054 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:54.677771 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:54.679038 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:54.679226 23 dns_common.go:489] Lookups using dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566 failed for: [wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local]

  I0102 09:34:54.682208 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:34:54.684930 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:34:54.687853 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:34:59.689285 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:59.692714 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:59.701722 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:59.704864 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:34:59.704894 23 dns_common.go:489] Lookups using dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566 failed for: [wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local]

  I0102 09:34:59.710418 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:34:59.714098 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:34:59.717114 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:35:04.691481 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:35:04.699233 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:35:04.709346 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:35:04.710910 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local from pod dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566: the server could not find the requested resource (get pods dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566)
  I0102 09:35:04.710967 23 dns_common.go:489] Lookups using dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566 failed for: [wheezy_udp@dns-test-service-2.dns-2941.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-2941.svc.cluster.local jessie_udp@dns-test-service-2.dns-2941.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2941.svc.cluster.local]

  I0102 09:35:04.714485 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 09:35:04.718222 23 dns_common.go:495] Pod client logs for querier: 
  I0102 09:35:04.721934 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 09:35:09.692558 23 dns_common.go:527] DNS probes using dns-2941/dns-test-5d441096-cdf0-46b9-bad9-d34cf7279566 succeeded

  STEP: deleting the pod @ 01/02/25 09:35:09.693
  STEP: deleting the test headless service @ 01/02/25 09:35:09.71
  I0102 09:35:09.725474 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2941" for this suite. @ 01/02/25 09:35:09.729
• [32.125 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 01/02/25 09:35:09.735
  I0102 09:35:09.735181 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:35:09.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:09.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:09.75
  STEP: Creating secret with name projected-secret-test-27086de1-9d10-451a-b164-dd5c10fedc9c @ 01/02/25 09:35:09.755
  STEP: Creating a pod to test consume secrets @ 01/02/25 09:35:09.76
  STEP: Saw pod success @ 01/02/25 09:35:13.781
  I0102 09:35:13.784204 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-secrets-7f3120b8-b163-4a7b-b47d-0c94dc2343af container secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 09:35:13.791
  I0102 09:35:13.805695 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5114" for this suite. @ 01/02/25 09:35:13.807
• [4.076 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 01/02/25 09:35:13.811
  I0102 09:35:13.811486 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/02/25 09:35:13.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:13.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:13.823
  I0102 09:35:13.825282 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:35:20.067162 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-498" for this suite. @ 01/02/25 09:35:20.069
• [6.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 01/02/25 09:35:20.076
  I0102 09:35:20.076836 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename chunking @ 01/02/25 09:35:20.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:20.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:20.092
  STEP: creating a large number of resources @ 01/02/25 09:35:20.093
  I0102 09:35:23.481901      23 request.go:700] Waited for 1.000017129s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-4612/podtemplates
  STEP: retrieving those results in paged fashion several times @ 01/02/25 09:35:37.79
  I0102 09:35:37.835759 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0102 09:35:37.884493 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0102 09:35:37.934254 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0102 09:35:37.983389 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0102 09:35:38.033689 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0102 09:35:38.084018 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0102 09:35:38.130787 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0102 09:35:38.180746 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0102 09:35:38.230556 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0102 09:35:38.280297 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0102 09:35:38.329892 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0102 09:35:38.392716 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0102 09:35:38.433104 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0102 09:35:38.482008 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0102 09:35:38.532562 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0102 09:35:38.579867 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0102 09:35:38.637986 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0102 09:35:38.691215 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0102 09:35:38.735301 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0102 09:35:38.780726 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0102 09:35:38.837897 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0102 09:35:38.887085 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0102 09:35:38.952591 23 chunking.go:98] Retrieved 17/17 results with rv 24504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0102 09:35:38.982797 23 chunking.go:98] Retrieved 9/17 results with rv 24504 and continue 
  I0102 09:35:39.032706 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0102 09:35:39.091174 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0102 09:35:39.141361 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0102 09:35:39.181161 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0102 09:35:39.237487 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0102 09:35:39.289008 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0102 09:35:39.337219 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0102 09:35:39.380409 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0102 09:35:39.430276 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0102 09:35:39.480657 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0102 09:35:39.530439 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0102 09:35:39.581340 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0102 09:35:39.634019 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0102 09:35:39.681725 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0102 09:35:39.731125 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0102 09:35:39.788717 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0102 09:35:39.835903 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0102 09:35:39.886143 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0102 09:35:39.932615 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0102 09:35:39.980176 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0102 09:35:40.039157 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0102 09:35:40.088505 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0102 09:35:40.143314 23 chunking.go:98] Retrieved 17/17 results with rv 24505 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MDUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0102 09:35:40.182520 23 chunking.go:98] Retrieved 9/17 results with rv 24505 and continue 
  I0102 09:35:40.230343 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0102 09:35:40.280765 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0102 09:35:40.330132 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0102 09:35:40.380620 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0102 09:35:40.438176 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0102 09:35:40.494313 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0102 09:35:40.533987 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0102 09:35:40.581774 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0102 09:35:40.638469 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0102 09:35:40.687995 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0102 09:35:40.737946 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0102 09:35:40.781449 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0102 09:35:40.832958 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0102 09:35:40.883826 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0102 09:35:40.933226 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0102 09:35:40.980052 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0102 09:35:41.030977 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0102 09:35:41.082585 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0102 09:35:41.140816 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0102 09:35:41.187937 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0102 09:35:41.233243 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0102 09:35:41.286457 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0102 09:35:41.340154 23 chunking.go:98] Retrieved 17/17 results with rv 24512 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQ1MTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0102 09:35:41.384965 23 chunking.go:98] Retrieved 9/17 results with rv 24512 and continue 
  STEP: retrieving those results all at once @ 01/02/25 09:35:41.386
  I0102 09:35:41.449799 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4612" for this suite. @ 01/02/25 09:35:41.485
• [21.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 01/02/25 09:35:41.537
  I0102 09:35:41.537551 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename runtimeclass @ 01/02/25 09:35:41.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:41.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:41.55
  STEP: Deleting RuntimeClass runtimeclass-1636-delete-me @ 01/02/25 09:35:41.554
  STEP: Waiting for the RuntimeClass to disappear @ 01/02/25 09:35:41.558
  I0102 09:35:41.562557 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1636" for this suite. @ 01/02/25 09:35:41.585
• [0.052 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 01/02/25 09:35:41.589
  I0102 09:35:41.589765 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename field-validation @ 01/02/25 09:35:41.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:41.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:41.652
  I0102 09:35:41.698139 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  W0102 09:35:41.698826      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc006bc5460 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0102 09:35:44.256282      23 warnings.go:70] unknown field "alpha"
  W0102 09:35:44.256303      23 warnings.go:70] unknown field "beta"
  W0102 09:35:44.256310      23 warnings.go:70] unknown field "delta"
  W0102 09:35:44.256315      23 warnings.go:70] unknown field "epsilon"
  W0102 09:35:44.256320      23 warnings.go:70] unknown field "gamma"
  I0102 09:35:44.791899 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2351" for this suite. @ 01/02/25 09:35:44.796
• [3.213 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 01/02/25 09:35:44.805
  I0102 09:35:44.806051 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename disruption @ 01/02/25 09:35:44.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:44.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:44.821
  STEP: Creating a kubernetes client @ 01/02/25 09:35:44.822
  I0102 09:35:44.822455 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename disruption-2 @ 01/02/25 09:35:44.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:44.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:44.938
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:35:44.951
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:35:44.956
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:35:44.964
  STEP: listing a collection of PDBs across all namespaces @ 01/02/25 09:35:46.967
  STEP: listing a collection of PDBs in namespace disruption-9354 @ 01/02/25 09:35:46.968
  STEP: deleting a collection of PDBs @ 01/02/25 09:35:47.069
  STEP: Waiting for the PDB collection to be deleted @ 01/02/25 09:35:47.172
  I0102 09:35:47.270132 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6288" for this suite. @ 01/02/25 09:35:47.275
  I0102 09:35:47.282186 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9354" for this suite. @ 01/02/25 09:35:47.374
• [2.575 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 01/02/25 09:35:47.381
  I0102 09:35:47.381880 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/02/25 09:35:47.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:47.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:47.403
  STEP: creating a policy with variables @ 01/02/25 09:35:47.409
  STEP: waiting until the marker is denied @ 01/02/25 09:35:47.427
  STEP: testing a replicated Deployment to be allowed @ 01/02/25 09:35:47.539
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/02/25 09:35:47.562
  I0102 09:35:47.617851 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-957" for this suite. @ 01/02/25 09:35:47.62
• [0.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 01/02/25 09:35:47.624
  I0102 09:35:47.624536 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/02/25 09:35:47.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:47.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:47.637
  STEP: create the container to handle the HTTPGet hook request. @ 01/02/25 09:35:47.723
  STEP: create the pod with lifecycle hook @ 01/02/25 09:35:49.74
  STEP: delete the pod with lifecycle hook @ 01/02/25 09:35:51.749
  STEP: check prestop hook @ 01/02/25 09:35:55.768
  I0102 09:35:55.777331 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8920" for this suite. @ 01/02/25 09:35:55.78
• [8.160 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 01/02/25 09:35:55.784
  I0102 09:35:55.784351 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 09:35:55.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:55.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:55.799
  I0102 09:35:55.801324 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: creating the pod @ 01/02/25 09:35:55.802
  STEP: submitting the pod to kubernetes @ 01/02/25 09:35:55.802
  I0102 09:35:57.924883 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6982" for this suite. @ 01/02/25 09:35:57.927
• [2.147 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 01/02/25 09:35:57.932
  I0102 09:35:57.932559 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename field-validation @ 01/02/25 09:35:57.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:57.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:57.943
  STEP: apply creating a deployment @ 01/02/25 09:35:57.945
  I0102 09:35:57.949997 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5795" for this suite. @ 01/02/25 09:35:58.028
• [0.101 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 01/02/25 09:35:58.035
  I0102 09:35:58.035066 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/02/25 09:35:58.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:35:58.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:35:58.051
  I0102 09:35:58.052566 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:36:01.163814 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6707" for this suite. @ 01/02/25 09:36:01.212
• [3.202 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 01/02/25 09:36:01.238
  I0102 09:36:01.238153 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:36:01.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:01.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:01.265
  STEP: Creating the pod @ 01/02/25 09:36:01.268
  I0102 09:36:03.805768 23 pod_client.go:173] Successfully updated pod "annotationupdate3adcd77c-32c4-44d8-92a2-291393b44243"
  I0102 09:36:07.850730 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7360" for this suite. @ 01/02/25 09:36:07.858
• [6.627 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 01/02/25 09:36:07.867
  I0102 09:36:07.867606 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pod-network-test @ 01/02/25 09:36:07.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:07.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:07.885
  STEP: Performing setup for networking test in namespace pod-network-test-4501 @ 01/02/25 09:36:07.887
  STEP: creating a selector @ 01/02/25 09:36:07.887
  STEP: Creating the service pods in kubernetes @ 01/02/25 09:36:07.887
  I0102 09:36:07.887795 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/02/25 09:36:20.015
  I0102 09:36:22.035859 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0102 09:36:22.037293 23 networking.go:42] Breadth first check of 10.42.1.180 on host 192.168.150.103...
  I0102 09:36:22.043896 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.158:9080/dial?request=hostname&protocol=udp&host=10.42.1.180&port=8081&tries=1'] Namespace:pod-network-test-4501 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:36:22.043998 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:36:22.045715 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:36:22.046597 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4501/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.180%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0102 09:36:22.144151 23 utils.go:356] Waiting for responses: map[]
  I0102 09:36:22.144196 23 utils.go:360] reached 10.42.1.180 after 0/1 tries
  I0102 09:36:22.144206 23 networking.go:42] Breadth first check of 10.42.3.157 on host 192.168.150.105...
  I0102 09:36:22.146033 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.158:9080/dial?request=hostname&protocol=udp&host=10.42.3.157&port=8081&tries=1'] Namespace:pod-network-test-4501 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:36:22.146058 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:36:22.146497 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:36:22.146595 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4501/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.158%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.157%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0102 09:36:22.207852 23 utils.go:356] Waiting for responses: map[]
  I0102 09:36:22.207992 23 utils.go:360] reached 10.42.3.157 after 0/1 tries
  I0102 09:36:22.208068 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0102 09:36:22.208191 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4501" for this suite. @ 01/02/25 09:36:22.211
• [14.350 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 01/02/25 09:36:22.217
  I0102 09:36:22.217441 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:36:22.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:22.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:22.232
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/02/25 09:36:22.234
  I0102 09:36:22.234266 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-6748 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0102 09:36:22.298563 23 builder.go:146] stderr: ""
  I0102 09:36:22.298602 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 01/02/25 09:36:22.298
  I0102 09:36:22.298671 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-6748 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0102 09:36:22.360686 23 builder.go:146] stderr: ""
  I0102 09:36:22.360725 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 01/02/25 09:36:22.36
  I0102 09:36:22.361955 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-6748 delete pods e2e-test-httpd-pod'
  I0102 09:36:24.356661 23 builder.go:146] stderr: ""
  I0102 09:36:24.356743 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0102 09:36:24.356825 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6748" for this suite. @ 01/02/25 09:36:24.359
• [2.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 01/02/25 09:36:24.362
  I0102 09:36:24.362894 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:36:24.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:24.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:24.375
  STEP: Setting up server cert @ 01/02/25 09:36:24.476
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:36:24.847
  STEP: Deploying the webhook pod @ 01/02/25 09:36:24.851
  STEP: Wait for the deployment to be ready @ 01/02/25 09:36:24.862
  I0102 09:36:24.944150 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 24, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-5b9c4f9645\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/02/25 09:36:26.948
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:36:26.967
  I0102 09:36:27.967912 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 01/02/25 09:36:28.005
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/02/25 09:36:28.043
  STEP: Deleting the collection of validation webhooks @ 01/02/25 09:36:28.075
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/02/25 09:36:28.093
  I0102 09:36:28.137148 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7802" for this suite. @ 01/02/25 09:36:28.144
  STEP: Destroying namespace "webhook-markers-8450" for this suite. @ 01/02/25 09:36:28.149
• [3.791 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 01/02/25 09:36:28.157
  I0102 09:36:28.157485 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename conformance-tests @ 01/02/25 09:36:28.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:28.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:28.174
  STEP: Getting node addresses @ 01/02/25 09:36:28.175
  I0102 09:36:28.175762 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0102 09:36:28.242719 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5311" for this suite. @ 01/02/25 09:36:28.245
• [0.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 01/02/25 09:36:28.25
  I0102 09:36:28.250993 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename deployment @ 01/02/25 09:36:28.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:28.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:28.272
  I0102 09:36:28.284000 23 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/02/25 09:36:28.293
  I0102 09:36:30.304636 23 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0102 09:36:32.306973 23 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0102 09:36:32.312925 23 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0102 09:36:34.316495 23 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0102 09:36:34.319786 23 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0102 09:36:34.321742 23 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0102 09:36:34.332035 23 deployment.go:313] Updating deployment test-rollover-deployment
  I0102 09:36:34.332190 23 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0102 09:36:36.339024 23 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0102 09:36:36.344006 23 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0102 09:36:36.349657 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0102 09:36:36.349750 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:36:38.363194 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0102 09:36:38.363368 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:36:40.414685 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0102 09:36:40.414876 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:36:42.357551 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0102 09:36:42.359549 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:36:44.352571 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0102 09:36:44.352630 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 36, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 36, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0102 09:36:46.353256 23 deployment.go:94] 
  I0102 09:36:46.353489 23 deployment.go:974] Ensure that both old replica sets have no replicas
  I0102 09:36:46.356692 23 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2622",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7863198-1f65-45cb-accc-ae1b41eaf39e",
      ResourceVersion: (string) (len=5) "25774",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407392,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407392,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0102 09:36:46.359193 23 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2622",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1cb32fd1-821f-4e2d-a289-6f2f3c1ff367",
      ResourceVersion: (string) (len=5) "25764",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407394,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e7863198-1f65-45cb-accc-ae1b41eaf39e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 37 38 36 33 31  39 38 2d 31 66 36 35 2d  |\"e7863198-1f65-|
              00000120  34 35 63 62 2d 61 63 63  63 2d 61 65 31 62 34 31  |45cb-accc-ae1b41|
              00000130  65 61 66 33 39 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |eaf39e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:36:46.360786 23 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0102 09:36:46.360994 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2622",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a5944fb-3d32-4617-b681-624d7c0461fe",
      ResourceVersion: (string) (len=5) "25773",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e7863198-1f65-45cb-accc-ae1b41eaf39e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 37 38 36 33 31 39 38  2d 31 66 36 35 2d 34 35  |e7863198-1f65-45|
              000000c0  63 62 2d 61 63 63 63 2d  61 65 31 62 34 31 65 61  |cb-accc-ae1b41ea|
              000000d0  66 33 39 65 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |f39e\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407405,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:36:46.362201 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2622",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "589aef09-eb8b-4ff3-a9b2-a64b623c3d8f",
      ResourceVersion: (string) (len=5) "25696",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407392,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e7863198-1f65-45cb-accc-ae1b41eaf39e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 37 38 36 33 31  39 38 2d 31 66 36 35 2d  |\"e7863198-1f65-|
              00000120  34 35 63 62 2d 61 63 63  63 2d 61 65 31 62 34 31  |45cb-accc-ae1b41|
              00000130  65 61 66 33 39 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |eaf39e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:36:46.365242 23 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-8lhtj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-8lhtj",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-2622",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8a71f6b-e33d-42d4-bc23-f05ffaf8a5d5",
      ResourceVersion: (string) (len=5) "25719",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407394,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "043e60a0c438eff815d45f53f426b2e0edd733b190814c1df74899932e278dd1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.160/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.160/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.160\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "1cb32fd1-821f-4e2d-a289-6f2f3c1ff367",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  62 33 32 66 64 31 2d 38  |d\":\"1cb32fd1-8|
              00000090  32 31 66 2d 34 65 32 64  2d 61 32 38 39 2d 36 66  |21f-4e2d-a289-6f|
              000000a0  32 66 33 63 31 66 66 33  36 37 5c 22 7d 22 3a 7b  |2f3c1ff367\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 36  30 5c 22 7d 22 3a 7b 22  |.42.3.160\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qxpwr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qxpwr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407395,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407394,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=11) "10.42.3.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407394,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871407395,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://a61117815063cf586fe28f0b3ee897d8f90d717b0f350f9c3116c6c70d3536b0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qxpwr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:36:46.390819 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2622" for this suite. @ 01/02/25 09:36:46.394
• [18.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 01/02/25 09:36:46.402
  I0102 09:36:46.402486 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:36:46.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:46.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:46.416
  STEP: creating a replication controller @ 01/02/25 09:36:46.417
  I0102 09:36:46.418001 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 create -f -'
  I0102 09:36:46.523410 23 builder.go:146] stderr: ""
  I0102 09:36:46.523512 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 01/02/25 09:36:46.523
  I0102 09:36:46.523606 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0102 09:36:46.601981 23 builder.go:146] stderr: ""
  I0102 09:36:46.602015 23 builder.go:147] stdout: "update-demo-nautilus-44qdk update-demo-nautilus-9hmhn "
  I0102 09:36:46.602182 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get pods update-demo-nautilus-44qdk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:36:46.649128 23 builder.go:146] stderr: ""
  I0102 09:36:46.649159 23 builder.go:147] stdout: ""
  I0102 09:36:46.649170 23 kubectl.go:2502] update-demo-nautilus-44qdk is created but not running
  I0102 09:36:51.650517 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0102 09:36:51.830298 23 builder.go:146] stderr: ""
  I0102 09:36:51.830332 23 builder.go:147] stdout: "update-demo-nautilus-44qdk update-demo-nautilus-9hmhn "
  I0102 09:36:51.830372 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get pods update-demo-nautilus-44qdk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:36:51.893027 23 builder.go:146] stderr: ""
  I0102 09:36:51.893076 23 builder.go:147] stdout: "true"
  I0102 09:36:51.893284 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get pods update-demo-nautilus-44qdk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0102 09:36:51.942824 23 builder.go:146] stderr: ""
  I0102 09:36:51.942863 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0102 09:36:51.942875 23 kubectl.go:2393] validating pod update-demo-nautilus-44qdk
  I0102 09:36:51.947295 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0102 09:36:51.947338 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0102 09:36:51.947350 23 kubectl.go:2520] update-demo-nautilus-44qdk is verified up and running
  I0102 09:36:51.947386 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get pods update-demo-nautilus-9hmhn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0102 09:36:52.005076 23 builder.go:146] stderr: ""
  I0102 09:36:52.005109 23 builder.go:147] stdout: "true"
  I0102 09:36:52.005149 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get pods update-demo-nautilus-9hmhn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0102 09:36:52.060872 23 builder.go:146] stderr: ""
  I0102 09:36:52.060904 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0102 09:36:52.060928 23 kubectl.go:2393] validating pod update-demo-nautilus-9hmhn
  I0102 09:36:52.072774 23 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0102 09:36:52.072822 23 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0102 09:36:52.072884 23 kubectl.go:2520] update-demo-nautilus-9hmhn is verified up and running
  STEP: using delete to clean up resources @ 01/02/25 09:36:52.072
  I0102 09:36:52.072984 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 delete --grace-period=0 --force -f -'
  I0102 09:36:52.138146 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 09:36:52.138181 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0102 09:36:52.138263 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get rc,svc -l name=update-demo --no-headers'
  I0102 09:36:52.213891 23 builder.go:146] stderr: "No resources found in kubectl-4993 namespace.\n"
  I0102 09:36:52.213931 23 builder.go:147] stdout: ""
  I0102 09:36:52.214053 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4993 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0102 09:36:52.277159 23 builder.go:146] stderr: ""
  I0102 09:36:52.277194 23 builder.go:147] stdout: ""
  I0102 09:36:52.277288 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4993" for this suite. @ 01/02/25 09:36:52.28
• [5.882 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 01/02/25 09:36:52.284
  I0102 09:36:52.284713 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename cronjob @ 01/02/25 09:36:52.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:52.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:52.298
  STEP: Creating a cronjob @ 01/02/25 09:36:52.3
  STEP: creating @ 01/02/25 09:36:52.3
  STEP: getting @ 01/02/25 09:36:52.304
  STEP: listing @ 01/02/25 09:36:52.306
  STEP: watching @ 01/02/25 09:36:52.307
  I0102 09:36:52.307386 23 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 01/02/25 09:36:52.307
  STEP: cluster-wide watching @ 01/02/25 09:36:52.309
  I0102 09:36:52.309043 23 cronjob.go:382] starting watch
  STEP: patching @ 01/02/25 09:36:52.309
  STEP: updating @ 01/02/25 09:36:52.313
  I0102 09:36:52.317765 23 cronjob.go:406] waiting for watch events with expected annotations
  I0102 09:36:52.317855 23 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 01/02/25 09:36:52.318
  STEP: updating /status @ 01/02/25 09:36:52.321
  STEP: get /status @ 01/02/25 09:36:52.324
  STEP: deleting @ 01/02/25 09:36:52.326
  STEP: deleting a collection @ 01/02/25 09:36:52.332
  I0102 09:36:52.337102 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5823" for this suite. @ 01/02/25 09:36:52.38
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 01/02/25 09:36:52.385
  I0102 09:36:52.385962 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename job @ 01/02/25 09:36:52.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:52.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:52.398
  STEP: Creating a job @ 01/02/25 09:36:52.4
  STEP: Ensuring active pods == parallelism @ 01/02/25 09:36:52.405
  STEP: Orphaning one of the Job's Pods @ 01/02/25 09:36:54.408
  I0102 09:36:54.938421 23 pod_client.go:173] Successfully updated pod "adopt-release-l8j2r"
  STEP: Checking that the Job readopts the Pod @ 01/02/25 09:36:54.945
  STEP: Removing the labels from the Job's Pod @ 01/02/25 09:36:56.958
  I0102 09:36:57.468907 23 pod_client.go:173] Successfully updated pod "adopt-release-l8j2r"
  STEP: Checking that the Job releases the Pod @ 01/02/25 09:36:57.468
  I0102 09:36:59.481122 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1229" for this suite. @ 01/02/25 09:36:59.486
• [7.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 01/02/25 09:36:59.494
  I0102 09:36:59.494693 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 09:36:59.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:36:59.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:36:59.509
  STEP: Creating pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914 @ 01/02/25 09:36:59.511
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/02/25 09:37:01.528
  I0102 09:37:01.534503 23 container_probe.go:1749] Initial restart count of pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed is 0
  I0102 09:37:01.540220 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:03.551964 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:05.554802 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:07.558406 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:09.563374 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:11.567298 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:13.569596 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:15.571644 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:17.575290 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:19.583466 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:21.593445 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:23.597406 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:25.600454 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:27.609813 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:29.612024 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:31.620229 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:33.629982 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:35.635099 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:37.637632 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:39.640545 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:41.644576 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:43.654142 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:45.657724 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:47.666362 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:49.669521 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:51.672957 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:53.674732 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:55.677398 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:57.680964 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:37:59.683820 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:01.685806 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:03.688933 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:05.699542 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:07.710576 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:09.713152 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:11.719870 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:13.728877 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:15.739409 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:17.754903 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:19.762674 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:21.764881 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:23.767642 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:25.786378 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:27.792096 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:29.794070 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:31.800765 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:33.807840 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:35.812664 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:37.824599 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:39.830476 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:41.837268 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:43.842518 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:45.850079 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:47.860963 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:49.868564 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:51.873793 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:53.877191 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:55.885824 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:57.890789 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:38:59.898576 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:01.902174 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:03.909559 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:05.917093 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:07.921721 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:09.923889 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:11.930684 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:13.937524 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:15.941461 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:17.944053 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:19.946412 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:21.950350 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:23.958248 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:25.964955 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:27.975522 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:29.979338 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:31.994184 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:33.996195 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:36.003256 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:38.008694 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:40.010638 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:42.018604 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:44.022595 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:46.031309 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:48.035876 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:50.042918 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:52.046967 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:54.050191 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:56.056036 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:39:58.066474 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:00.076859 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:02.078697 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:04.081699 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:06.083881 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:08.088151 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:10.097573 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:12.108504 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:14.112179 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:16.121845 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:18.131860 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:20.136816 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:22.147045 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:24.158740 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:26.170577 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:28.174383 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:30.177665 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:32.203295 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:34.210073 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:36.213701 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:38.216776 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:40.221617 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:42.225852 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:44.229586 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:46.236658 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:48.239581 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:50.250194 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:52.254844 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:54.259931 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:56.265160 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:40:58.270214 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  I0102 09:41:00.279417 23 container_probe.go:1759] Get pod test-grpc-b130fa42-4302-4aa7-8581-48e17d9672ed in namespace container-probe-7914
  STEP: deleting the pod @ 01/02/25 09:41:02.282
  I0102 09:41:02.293577 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7914" for this suite. @ 01/02/25 09:41:02.297
• [242.806 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 01/02/25 09:41:02.304
  I0102 09:41:02.304616 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:41:02.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:41:02.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:41:02.324
  STEP: Setting up server cert @ 01/02/25 09:41:02.419
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:41:02.656
  STEP: Deploying the webhook pod @ 01/02/25 09:41:02.66
  STEP: Wait for the deployment to be ready @ 01/02/25 09:41:02.671
  I0102 09:41:02.683145 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:41:04.716
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:41:04.732
  I0102 09:41:05.734328 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 01/02/25 09:41:05.751
  STEP: Creating a custom resource definition that should be denied by the webhook @ 01/02/25 09:41:05.772
  I0102 09:41:05.772710 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:41:05.823768 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2715" for this suite. @ 01/02/25 09:41:05.825
  STEP: Destroying namespace "webhook-markers-1573" for this suite. @ 01/02/25 09:41:05.84
• [3.545 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 01/02/25 09:41:05.853
  I0102 09:41:05.854039 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:41:05.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:41:05.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:41:05.868
  STEP: Counting existing ResourceQuota @ 01/02/25 09:41:05.869
  STEP: Creating a ResourceQuota @ 01/02/25 09:41:10.872
  STEP: Ensuring resource quota status is calculated @ 01/02/25 09:41:10.875
  I0102 09:41:12.885333 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5980" for this suite. @ 01/02/25 09:41:12.902
• [7.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 01/02/25 09:41:12.913
  I0102 09:41:12.913990 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename deployment @ 01/02/25 09:41:12.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:41:12.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:41:12.928
  I0102 09:41:12.929298 23 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0102 09:41:12.931721 23 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0102 09:41:12.936719 23 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0102 09:41:14.939905 23 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0102 09:41:14.940895 23 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0102 09:41:14.946036 23 deployment.go:313] Updating deployment test-recreate-deployment
  I0102 09:41:14.946079 23 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0102 09:41:15.008694 23 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1069",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28ca84a1-a8de-4280-8865-998c4b3c948b",
      ResourceVersion: (string) (len=5) "27284",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407672,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407675,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0102 09:41:15.041601 23 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1069",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ee69219-83ac-4804-a4f1-4ef0e4e0d2de",
      ResourceVersion: (string) (len=5) "27280",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "28ca84a1-a8de-4280-8865-998c4b3c948b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 63 61 38 34  61 31 2d 61 38 64 65 2d  |\"28ca84a1-a8de-|
              00000120  34 32 38 30 2d 38 38 36  35 2d 39 39 38 63 34 62  |4280-8865-998c4b|
              00000130  33 63 39 34 38 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3c948b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:41:15.044892 23 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0102 09:41:15.045236 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1069",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f29e7a4a-4497-4405-a0dd-c90c29ef5203",
      ResourceVersion: (string) (len=5) "27272",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407672,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "28ca84a1-a8de-4280-8865-998c4b3c948b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 63 61 38 34  61 31 2d 61 38 64 65 2d  |\"28ca84a1-a8de-|
              00000120  34 32 38 30 2d 38 38 36  35 2d 39 39 38 63 34 62  |4280-8865-998c4b|
              00000130  33 63 39 34 38 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3c948b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 09:41:15.051038 23 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-5vrfm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-5vrfm",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-1069",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7849b0a5-9717-4e0d-a129-0fdb7fa9ed82",
      ResourceVersion: (string) (len=5) "27283",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "5ee69219-83ac-4804-a4f1-4ef0e4e0d2de",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 65  65 36 39 32 31 39 2d 38  |d\":\"5ee69219-8|
              00000090  33 61 63 2d 34 38 30 34  2d 61 34 66 31 2d 34 65  |3ac-4804-a4f1-4e|
              000000a0  66 30 65 34 65 30 64 32  64 65 5c 22 7d 22 3a 7b  |f0e4e0d2de\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n8rbz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n8rbz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871407674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871407674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-n8rbz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 09:41:15.058638 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1069" for this suite. @ 01/02/25 09:41:15.061
• [2.152 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 01/02/25 09:41:15.066
  I0102 09:41:15.066107 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:41:15.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:41:15.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:41:15.078
  STEP: creating a ConfigMap @ 01/02/25 09:41:15.08
  STEP: fetching the ConfigMap @ 01/02/25 09:41:15.082
  STEP: patching the ConfigMap @ 01/02/25 09:41:15.083
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 01/02/25 09:41:15.086
  STEP: deleting the ConfigMap by collection with a label selector @ 01/02/25 09:41:15.087
  STEP: listing all ConfigMaps in test namespace @ 01/02/25 09:41:15.089
  I0102 09:41:15.090741 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6497" for this suite. @ 01/02/25 09:41:15.161
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 01/02/25 09:41:15.166
  I0102 09:41:15.166994 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:41:15.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:41:15.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:41:15.18
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/02/25 09:41:15.181
  STEP: Saw pod success @ 01/02/25 09:41:19.198
  I0102 09:41:19.201926 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-e861b8eb-26aa-4309-bd34-82cf63f14bb4 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:41:19.229
  I0102 09:41:19.243917 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3625" for this suite. @ 01/02/25 09:41:19.247
• [4.086 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 01/02/25 09:41:19.252
  I0102 09:41:19.252813 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 09:41:19.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:41:19.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:41:19.264
  STEP: Creating pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199 @ 01/02/25 09:41:19.266
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/02/25 09:41:21.283
  I0102 09:41:21.286784 23 container_probe.go:1749] Initial restart count of pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 is 0
  I0102 09:41:21.289590 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:23.292476 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:25.299332 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:27.303989 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:29.314163 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:31.321091 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:33.324767 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:35.328193 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:37.331842 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:39.341587 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:41.345002 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:43.349632 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:45.362925 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:47.366596 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:49.380647 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:51.390697 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:53.395981 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:55.398729 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:57.401039 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:41:59.408738 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:01.413932 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:03.415902 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:05.417933 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:07.420813 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:09.424245 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:11.427736 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:13.440904 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:15.444958 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:17.449350 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:19.451654 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:21.453665 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:23.457796 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:25.468581 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:27.472659 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:29.474453 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:31.486715 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:33.506481 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:35.512118 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:37.514156 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:39.524147 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:41.527330 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:43.529969 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:45.532307 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:47.535363 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:49.541478 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:51.552244 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:53.557336 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:55.566701 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:57.573615 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:42:59.578274 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:01.583001 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:03.585461 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:05.590326 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:07.595098 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:09.597318 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:11.604001 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:13.611916 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:15.627717 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:17.635061 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:19.640641 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:21.655973 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:23.666804 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:25.675247 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:27.686239 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:29.688152 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:31.697077 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:33.706517 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:35.716702 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:37.725851 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:39.728647 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:41.733092 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:43.740352 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:45.745247 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:47.755234 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:49.757983 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:51.762235 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:53.770877 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:55.773855 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:57.778031 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:43:59.783036 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:01.784795 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:03.786847 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:05.791503 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:07.795409 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:09.805985 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:11.812410 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:13.823401 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:15.828288 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:17.839283 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:19.843337 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:21.845600 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:23.851811 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:25.855981 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:27.859818 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:29.864949 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:31.869351 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:33.877833 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:35.884982 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:37.893492 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:39.898207 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:41.906111 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:43.916414 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:45.925844 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:47.930967 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:49.935464 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:51.937867 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:53.939943 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:55.942238 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:57.951513 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:44:59.953852 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:01.957557 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:03.961605 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:05.971036 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:07.973484 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:09.976099 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:11.979866 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:13.984184 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:15.988115 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:18.000279 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  I0102 09:45:20.003913 23 container_probe.go:1759] Get pod busybox-4b249cf4-87e6-48d5-bd17-ab8ecfab0539 in namespace container-probe-5199
  STEP: deleting the pod @ 01/02/25 09:45:22.004
  I0102 09:45:22.019982 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5199" for this suite. @ 01/02/25 09:45:22.023
• [242.776 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 01/02/25 09:45:22.029
  I0102 09:45:22.029471 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 09:45:22.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:45:22.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:45:22.044
  I0102 09:45:22.045934 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 01/02/25 09:45:23.524
  I0102 09:45:23.524786 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 create -f -'
  I0102 09:45:25.632113 23 builder.go:146] stderr: ""
  I0102 09:45:25.632167 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1775-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0102 09:45:25.632287 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 delete e2e-test-crd-publish-openapi-1775-crds test-foo'
  I0102 09:45:25.703701 23 builder.go:146] stderr: ""
  I0102 09:45:25.703734 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1775-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0102 09:45:25.703904 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 apply -f -'
  I0102 09:45:25.753157 23 builder.go:146] stderr: ""
  I0102 09:45:25.753204 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1775-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0102 09:45:25.753377 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 delete e2e-test-crd-publish-openapi-1775-crds test-foo'
  I0102 09:45:25.807535 23 builder.go:146] stderr: ""
  I0102 09:45:25.807568 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1775-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 01/02/25 09:45:25.807
  I0102 09:45:25.807853 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 create -f -'
  I0102 09:45:25.854633 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 01/02/25 09:45:25.854
  I0102 09:45:25.854875 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 create -f -'
  I0102 09:45:25.901447 23 builder.go:135] rc: 1
  I0102 09:45:25.901654 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 apply -f -'
  I0102 09:45:25.950555 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 01/02/25 09:45:25.95
  I0102 09:45:25.950791 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 create -f -'
  I0102 09:45:25.997770 23 builder.go:135] rc: 1
  I0102 09:45:25.998010 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 --namespace=crd-publish-openapi-3443 apply -f -'
  I0102 09:45:26.047280 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 01/02/25 09:45:26.047
  I0102 09:45:26.047622 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 explain e2e-test-crd-publish-openapi-1775-crds'
  I0102 09:45:26.095775 23 builder.go:146] stderr: ""
  I0102 09:45:26.095960 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1775-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 01/02/25 09:45:26.096
  I0102 09:45:26.096328 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 explain e2e-test-crd-publish-openapi-1775-crds.metadata'
  I0102 09:45:26.150649 23 builder.go:146] stderr: ""
  I0102 09:45:26.150869 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1775-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0102 09:45:26.151174 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 explain e2e-test-crd-publish-openapi-1775-crds.spec'
  I0102 09:45:26.195177 23 builder.go:146] stderr: ""
  I0102 09:45:26.195229 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1775-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0102 09:45:26.195453 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 explain e2e-test-crd-publish-openapi-1775-crds.spec.bars'
  I0102 09:45:26.242877 23 builder.go:146] stderr: ""
  I0102 09:45:26.242920 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1775-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 01/02/25 09:45:26.243
  I0102 09:45:26.243197 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3443 explain e2e-test-crd-publish-openapi-1775-crds.spec.bars2'
  I0102 09:45:26.299549 23 builder.go:135] rc: 1
  I0102 09:45:27.610676 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3443" for this suite. @ 01/02/25 09:45:27.613
• [5.588 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 01/02/25 09:45:27.618
  I0102 09:45:27.618814 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pv @ 01/02/25 09:45:27.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:45:27.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:45:27.637
  STEP: Creating initial PV and PVC @ 01/02/25 09:45:27.639
  I0102 09:45:27.639588 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8495" @ 01/02/25 09:45:27.651
  STEP: Listing PVCs in namespace "pv-8495" @ 01/02/25 09:45:27.655
  STEP: Patching the PV "pv-8495-22qfr" @ 01/02/25 09:45:27.658
  STEP: Patching the PVC "pvc-hqqvb" @ 01/02/25 09:45:27.675
  STEP: Getting PV "pv-8495-22qfr" @ 01/02/25 09:45:27.681
  STEP: Getting PVC "pvc-hqqvb" @ 01/02/25 09:45:27.685
  STEP: Deleting PVC "pvc-hqqvb" @ 01/02/25 09:45:27.688
  STEP: Confirm deletion of PVC "pvc-hqqvb" @ 01/02/25 09:45:27.697
  STEP: Deleting PV "pv-8495-22qfr" @ 01/02/25 09:45:29.712
  STEP: Confirm deletion of PV "pv-8495-22qfr" @ 01/02/25 09:45:29.724
  STEP: Recreating another PV & PVC @ 01/02/25 09:45:31.729
  I0102 09:45:31.729801 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8495-g6xpm" @ 01/02/25 09:45:31.739
  STEP: Updating the PVC "pvc-jfzxd" @ 01/02/25 09:45:31.765
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-jfzxd=updated" @ 01/02/25 09:45:31.769
  STEP: Deleting PVC "pvc-jfzxd" via DeleteCollection @ 01/02/25 09:45:31.772
  STEP: Confirm deletion of PVC "pvc-jfzxd" @ 01/02/25 09:45:31.775
  STEP: Deleting PV "pv-8495-g6xpm" via DeleteCollection @ 01/02/25 09:45:33.782
  STEP: Confirm deletion of PV "pv-8495-g6xpm" @ 01/02/25 09:45:33.803
  I0102 09:45:33.890631 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0102 09:45:33.890929 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-jfzxd"
  I0102 09:45:33.898507 23 pv.go:193] Deleting PersistentVolume "pv-8495-g6xpm"
  I0102 09:45:33.905413 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8495" for this suite. @ 01/02/25 09:45:33.911
• [6.298 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 01/02/25 09:45:33.917
  I0102 09:45:33.917341 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-preemption @ 01/02/25 09:45:33.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:45:33.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:45:33.941
  I0102 09:45:33.950405 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0102 09:46:33.962262 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 01/02/25 09:46:33.968
  I0102 09:46:33.968498 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-preemption-path @ 01/02/25 09:46:33.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:33.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:33.991
  I0102 09:46:34.002212 23 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0102 09:46:34.003493 23 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0102 09:46:34.050862 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-569" for this suite. @ 01/02/25 09:46:34.053
  I0102 09:46:34.058325 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5817" for this suite. @ 01/02/25 09:46:34.06
• [60.150 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 01/02/25 09:46:34.067
  I0102 09:46:34.068168 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:46:34.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:34.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:34.087
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 01/02/25 09:46:34.089
  STEP: Saw pod success @ 01/02/25 09:46:38.115
  I0102 09:46:38.118600 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-8d711050-6ef1-4223-a705-fb25f280a246 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:46:38.128
  I0102 09:46:38.148647 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4267" for this suite. @ 01/02/25 09:46:38.151
• [4.092 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 01/02/25 09:46:38.16
  I0102 09:46:38.160164 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename security-context @ 01/02/25 09:46:38.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:38.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:38.176
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/02/25 09:46:38.18
  STEP: Saw pod success @ 01/02/25 09:46:42.205
  I0102 09:46:42.208506 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod security-context-bf012f9f-6aa8-40d2-9634-ca7af324eebf container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:46:42.227
  I0102 09:46:42.237675 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6919" for this suite. @ 01/02/25 09:46:42.24
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 01/02/25 09:46:42.246
  I0102 09:46:42.246498 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 09:46:42.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:42.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:42.261
  STEP: creating a Pod with a static label @ 01/02/25 09:46:42.264
  STEP: watching for Pod to be ready @ 01/02/25 09:46:42.269
  I0102 09:46:42.271554 23 pods.go:945] observed Pod pod-test in namespace pods-1857 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0102 09:46:42.274674 23 pods.go:945] observed Pod pod-test in namespace pods-1857 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  }]
  I0102 09:46:42.285940 23 pods.go:945] observed Pod pod-test in namespace pods-1857 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  }]
  I0102 09:46:42.689967 23 pods.go:945] observed Pod pod-test in namespace pods-1857 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  }]
  I0102 09:46:42.757381 23 pods.go:945] observed Pod pod-test in namespace pods-1857 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  }]
  I0102 09:46:43.877865 23 pods.go:948] Found Pod pod-test in namespace pods-1857 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:43 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:43 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 09:46:42 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 01/02/25 09:46:43.882
  STEP: getting the Pod and ensuring that it's patched @ 01/02/25 09:46:43.893
  STEP: replacing the Pod's status Ready condition to False @ 01/02/25 09:46:43.896
  STEP: check the Pod again to ensure its Ready conditions are False @ 01/02/25 09:46:43.916
  STEP: deleting the Pod via a Collection with a LabelSelector @ 01/02/25 09:46:43.916
  STEP: watching for the Pod to be deleted @ 01/02/25 09:46:43.922
  I0102 09:46:43.924159 23 pods.go:1058] observed event type MODIFIED
  I0102 09:46:45.891107 23 pods.go:1058] observed event type MODIFIED
  I0102 09:46:46.160446 23 pods.go:1058] observed event type MODIFIED
  I0102 09:46:46.214538 23 pods.go:1058] observed event type MODIFIED
  I0102 09:46:46.911554 23 pods.go:1058] observed event type MODIFIED
  I0102 09:46:46.915398 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1857" for this suite. @ 01/02/25 09:46:46.917
• [4.675 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 01/02/25 09:46:46.922
  I0102 09:46:46.922220 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename svcaccounts @ 01/02/25 09:46:46.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:46.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:46.935
  I0102 09:46:46.938379 23 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-7864"
  I0102 09:46:46.940415 23 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-7864"
  STEP: waiting for a new root ca configmap created @ 01/02/25 09:46:47.44
  I0102 09:46:47.442378 23 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-7864"
  I0102 09:46:47.446595 23 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-7864"
  STEP: waiting for the root ca configmap reconciled @ 01/02/25 09:46:47.946
  I0102 09:46:47.950227 23 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-7864"
  I0102 09:46:47.951080 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7864" for this suite. @ 01/02/25 09:46:47.958
• [1.046 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 01/02/25 09:46:47.97
  I0102 09:46:47.970605 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 09:46:47.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:47.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:47.991
  STEP: creating pod @ 01/02/25 09:46:47.993
  I0102 09:46:50.004851 23 pods.go:83] Pod pod-hostip-d616d7a3-8fd3-48d9-b731-1ab3fcd7c48d has hostIP: 192.168.150.103
  I0102 09:46:50.005321 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-595" for this suite. @ 01/02/25 09:46:50.007
• [2.041 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 01/02/25 09:46:50.011
  I0102 09:46:50.011895 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/02/25 09:46:50.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:50.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:50.024
  STEP: creating a target pod @ 01/02/25 09:46:50.026
  STEP: adding an ephemeral container @ 01/02/25 09:46:52.039
  STEP: checking pod container endpoints @ 01/02/25 09:46:54.062
  I0102 09:46:54.063043 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2830 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:46:54.063419 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:46:54.065252 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:46:54.065683 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-2830/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0102 09:46:54.171391 23 exec_util.go:111] Exec stderr: ""
  I0102 09:46:54.175713 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2830" for this suite. @ 01/02/25 09:46:54.177
• [4.180 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 01/02/25 09:46:54.192
  I0102 09:46:54.193017 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename endpointslice @ 01/02/25 09:46:54.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:54.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:54.213
  I0102 09:46:54.260230 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6268" for this suite. @ 01/02/25 09:46:54.278
• [0.090 seconds]
------------------------------
SS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 01/02/25 09:46:54.283
  I0102 09:46:54.283925 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename volumeattachment @ 01/02/25 09:46:54.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:54.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:54.307
  STEP: Create VolumeAttachment "va-e2e-v5wzl" on node "oneke-ip-192-168-150-102" @ 01/02/25 09:46:54.379
  STEP: Get VolumeAttachment "va-e2e-v5wzl" on node "oneke-ip-192-168-150-102" @ 01/02/25 09:46:54.382
  STEP: Patch VolumeAttachment "va-e2e-v5wzl" on node "oneke-ip-192-168-150-102" @ 01/02/25 09:46:54.384
  STEP: List VolumeAttachments with "va-e2e-v5wzl=patched" label @ 01/02/25 09:46:54.388
  STEP: Delete VolumeAttachment "va-e2e-v5wzl" on node "oneke-ip-192-168-150-102" @ 01/02/25 09:46:54.389
  STEP: Confirm deletion of VolumeAttachment "va-e2e-v5wzl" on node "oneke-ip-192-168-150-102" @ 01/02/25 09:46:54.391
  STEP: Create VolumeAttachment "va-e2e-4g4l7" on node "oneke-ip-192-168-150-105" @ 01/02/25 09:46:54.486
  STEP: Update the VolumeAttachment "va-e2e-4g4l7" on node "oneke-ip-192-168-150-105" with label "va-e2e=updated" @ 01/02/25 09:46:54.492
  STEP: Create VolumeAttachment "va-e2e-58pgs" on node "oneke-ip-192-168-150-103" @ 01/02/25 09:46:54.584
  STEP: Update the VolumeAttachment "va-e2e-58pgs" on node "oneke-ip-192-168-150-103" with label "va-e2e=updated" @ 01/02/25 09:46:54.591
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/02/25 09:46:54.598
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 01/02/25 09:46:54.604
  I0102 09:46:54.606351 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9642" for this suite. @ 01/02/25 09:46:54.682
• [0.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 01/02/25 09:46:54.695
  I0102 09:46:54.695238 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:46:54.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:54.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:54.711
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/02/25 09:46:54.713
  STEP: Saw pod success @ 01/02/25 09:46:58.734
  I0102 09:46:58.741613 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-8805b446-02bb-4c00-957c-245274db1922 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:46:58.756
  I0102 09:46:58.771523 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7800" for this suite. @ 01/02/25 09:46:58.774
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 01/02/25 09:46:58.779
  I0102 09:46:58.779725 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:46:58.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:46:58.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:46:58.793
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 01/02/25 09:46:58.798
  STEP: Saw pod success @ 01/02/25 09:47:02.821
  I0102 09:47:02.822554 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-036d0d84-7b86-4588-8476-45c1532aef37 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:47:02.83
  I0102 09:47:02.841565 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2634" for this suite. @ 01/02/25 09:47:02.843
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 01/02/25 09:47:02.854
  I0102 09:47:02.854559 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 09:47:02.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:02.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:02.867
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 09:47:02.868
  STEP: Saw pod success @ 01/02/25 09:47:06.889
  I0102 09:47:06.895764 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-f69f087d-7396-4b8a-9111-6e1680b9400c container client-container: <nil>
  STEP: delete the pod @ 01/02/25 09:47:06.907
  I0102 09:47:06.920498 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4655" for this suite. @ 01/02/25 09:47:06.923
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 01/02/25 09:47:06.928
  I0102 09:47:06.928441 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 09:47:06.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:06.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:06.94
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8855 @ 01/02/25 09:47:06.941
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/02/25 09:47:06.949
  STEP: creating service externalsvc in namespace services-8855 @ 01/02/25 09:47:06.952
  STEP: creating replication controller externalsvc in namespace services-8855 @ 01/02/25 09:47:06.963
  I0102 09:47:06.972353      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8855, replica count: 2
  I0102 09:47:10.022825      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 01/02/25 09:47:10.024
  I0102 09:47:10.039848 23 resource.go:361] Creating new exec pod
  I0102 09:47:12.090781 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8855 exec execpodfpj8f -- /bin/sh -x -c nslookup nodeport-service.services-8855.svc.cluster.local'
  I0102 09:47:12.345998 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-8855.svc.cluster.local\n"
  I0102 09:47:12.346036 23 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-8855.svc.cluster.local\tcanonical name = externalsvc.services-8855.svc.cluster.local.\nName:\texternalsvc.services-8855.svc.cluster.local\nAddress: 10.43.186.250\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8855, will wait for the garbage collector to delete the pods @ 01/02/25 09:47:12.346
  I0102 09:47:12.403696 23 resources.go:139] Deleting ReplicationController externalsvc took: 3.107808ms
  I0102 09:47:12.504234 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.522702ms
  I0102 09:47:15.415123 23 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0102 09:47:15.425643 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8855" for this suite. @ 01/02/25 09:47:15.43
• [8.505 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 01/02/25 09:47:15.436
  I0102 09:47:15.436622 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:47:15.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:15.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:15.45
  STEP: Creating projection with secret that has name projected-secret-test-037b6137-7b13-47fe-b753-acf73afb4770 @ 01/02/25 09:47:15.452
  STEP: Creating a pod to test consume secrets @ 01/02/25 09:47:15.455
  STEP: Saw pod success @ 01/02/25 09:47:19.473
  I0102 09:47:19.474367 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-secrets-56599136-bf64-4df8-9042-479b2991ae7f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 09:47:19.477
  I0102 09:47:19.488445 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8660" for this suite. @ 01/02/25 09:47:19.49
• [4.058 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 01/02/25 09:47:19.494
  I0102 09:47:19.494385 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:47:19.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:19.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:19.507
  STEP: create deployment with httpd image @ 01/02/25 09:47:19.508
  I0102 09:47:19.508992 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8976 create -f -'
  I0102 09:47:19.580986 23 builder.go:146] stderr: ""
  I0102 09:47:19.581018 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 01/02/25 09:47:19.581
  I0102 09:47:19.581125 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8976 diff -f -'
  I0102 09:47:19.696820 23 builder.go:135] rc: 1
  I0102 09:47:19.696892 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-8976 delete -f -'
  I0102 09:47:19.742546 23 builder.go:146] stderr: ""
  I0102 09:47:19.742581 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0102 09:47:19.742659 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8976" for this suite. @ 01/02/25 09:47:19.746
• [0.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 01/02/25 09:47:19.752
  I0102 09:47:19.752307 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename job @ 01/02/25 09:47:19.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:19.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:19.768
  STEP: Creating a job @ 01/02/25 09:47:19.77
  STEP: Ensuring active pods == parallelism @ 01/02/25 09:47:19.772
  STEP: delete a job @ 01/02/25 09:47:21.774
  STEP: deleting Job.batch foo in namespace job-9336, will wait for the garbage collector to delete the pods @ 01/02/25 09:47:21.774
  I0102 09:47:21.836854 23 resources.go:139] Deleting Job.batch foo took: 10.451881ms
  I0102 09:47:21.938120 23 resources.go:163] Terminating Job.batch foo pods took: 101.266089ms
  STEP: Ensuring job was deleted @ 01/02/25 09:47:24.138
  I0102 09:47:24.148404 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9336" for this suite. @ 01/02/25 09:47:24.151
• [4.406 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 01/02/25 09:47:24.158
  I0102 09:47:24.158784 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 09:47:24.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:24.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:24.178
  STEP: Creating configMap with name configmap-test-volume-129f9a70-b582-4757-8c79-8d53c86e6d8b @ 01/02/25 09:47:24.181
  STEP: Creating a pod to test consume configMaps @ 01/02/25 09:47:24.183
  STEP: Saw pod success @ 01/02/25 09:47:28.199
  I0102 09:47:28.200898 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-30179434-848c-4c57-95bf-afa82020cffd container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 09:47:28.204
  I0102 09:47:28.215481 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3373" for this suite. @ 01/02/25 09:47:28.217
• [4.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 01/02/25 09:47:28.221
  I0102 09:47:28.222003 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:47:28.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:28.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:28.237
  I0102 09:47:28.239597 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3841 version'
  I0102 09:47:28.285242 23 builder.go:146] stderr: ""
  I0102 09:47:28.285275 23 builder.go:147] stdout: "Client Version: v1.31.3\nKustomize Version: v5.4.2\nServer Version: v1.31.3+rke2r1\n"
  I0102 09:47:28.285425 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3841" for this suite. @ 01/02/25 09:47:28.318
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 01/02/25 09:47:28.322
  I0102 09:47:28.322561 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename security-context @ 01/02/25 09:47:28.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:28.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:28.34
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 01/02/25 09:47:28.343
  STEP: Saw pod success @ 01/02/25 09:47:32.357
  I0102 09:47:32.359261 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod security-context-d6014748-47e1-4322-877c-f9ffbf17f62d container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:47:32.362
  I0102 09:47:32.372258 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6218" for this suite. @ 01/02/25 09:47:32.374
• [4.056 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 01/02/25 09:47:32.379
  I0102 09:47:32.379234 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 09:47:32.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:47:32.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:47:32.391
  STEP: Creating pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468 @ 01/02/25 09:47:32.392
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/02/25 09:47:34.406
  I0102 09:47:34.408030 23 container_probe.go:1749] Initial restart count of pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 is 0
  I0102 09:47:34.409058 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:36.411769 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:38.414116 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:40.416454 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:42.423169 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:44.432598 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:46.437046 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:48.440394 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:50.442742 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:52.445314 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:54.453002 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:56.464085 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:47:58.467642 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:00.470428 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:02.474268 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:04.480469 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:06.487899 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:08.492724 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:10.504445 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:12.513434 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:14.521933 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:16.531279 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:18.533783 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:20.546270 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:22.555949 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:24.562323 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:26.619430 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:28.622433 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:30.624180 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:32.633764 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:34.635724 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:36.645700 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:38.651255 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:40.653737 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:42.663111 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:44.671855 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:46.674722 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:48.681929 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:50.685269 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:52.690485 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:54.698344 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:56.701941 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:48:58.708929 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:00.712255 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:02.715716 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:04.718463 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:06.724577 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:08.733756 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:10.739845 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:12.743596 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:14.749480 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:16.753502 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:18.756385 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:20.763469 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:22.766299 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:24.772888 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:26.777522 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:28.786118 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:30.812084 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:32.815291 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:34.821757 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:36.830463 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:38.832976 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:40.841319 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:42.847871 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:44.849685 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:46.856440 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:48.860806 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:50.864359 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:52.868040 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:54.870918 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:56.878318 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:49:58.882193 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:00.885331 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:02.887622 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:04.890704 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:06.895285 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:08.902181 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:10.905908 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:12.910498 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:14.914256 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:16.916813 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:18.924657 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:20.930102 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:22.938414 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:24.941847 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:26.945306 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:28.946833 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:30.949477 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:32.952249 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:34.955227 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:36.958284 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:38.967118 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:40.970953 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:42.973249 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:44.975870 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:46.979418 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:48.983169 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:50.987013 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:52.995805 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:54.998852 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:57.002611 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:50:59.009936 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:01.012694 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:03.022553 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:05.025415 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:07.032964 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:09.038593 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:11.040488 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:13.043820 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:15.046022 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:17.050401 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:19.060124 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:21.062512 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:23.066214 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:25.068142 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:27.072414 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:29.080348 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:31.096039 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  I0102 09:51:33.104700 23 container_probe.go:1759] Get pod test-webserver-482cdd71-ba5b-404d-9d13-87e88d576b86 in namespace container-probe-5468
  STEP: deleting the pod @ 01/02/25 09:51:35.107
  I0102 09:51:35.134992 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5468" for this suite. @ 01/02/25 09:51:35.139
• [242.767 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 01/02/25 09:51:35.146
  I0102 09:51:35.146654 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename endpointslice @ 01/02/25 09:51:35.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:51:35.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:51:35.161
  STEP: getting /apis @ 01/02/25 09:51:35.163
  STEP: getting /apis/discovery.k8s.io @ 01/02/25 09:51:35.169
  STEP: getting /apis/discovery.k8s.iov1 @ 01/02/25 09:51:35.17
  STEP: creating @ 01/02/25 09:51:35.17
  STEP: getting @ 01/02/25 09:51:35.187
  STEP: listing @ 01/02/25 09:51:35.189
  STEP: watching @ 01/02/25 09:51:35.191
  I0102 09:51:35.191871 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 01/02/25 09:51:35.193
  STEP: cluster-wide watching @ 01/02/25 09:51:35.194
  I0102 09:51:35.194975 23 endpointslice.go:459] starting watch
  STEP: patching @ 01/02/25 09:51:35.195
  STEP: updating @ 01/02/25 09:51:35.2
  I0102 09:51:35.206058 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0102 09:51:35.206108 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 01/02/25 09:51:35.206
  STEP: deleting a collection @ 01/02/25 09:51:35.212
  I0102 09:51:35.221374 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8490" for this suite. @ 01/02/25 09:51:35.238
• [0.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 01/02/25 09:51:35.243
  I0102 09:51:35.243623 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:51:35.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:51:35.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:51:35.261
  STEP: Counting existing ResourceQuota @ 01/02/25 09:51:35.262
  STEP: Creating a ResourceQuota @ 01/02/25 09:51:40.267
  STEP: Ensuring resource quota status is calculated @ 01/02/25 09:51:40.272
  STEP: Creating a Pod that fits quota @ 01/02/25 09:51:42.275
  STEP: Ensuring ResourceQuota status captures the pod usage @ 01/02/25 09:51:42.285
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 01/02/25 09:51:44.287
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 01/02/25 09:51:44.289
  STEP: Ensuring a pod cannot update its resource requirements @ 01/02/25 09:51:44.29
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 01/02/25 09:51:44.292
  STEP: Deleting the pod @ 01/02/25 09:51:46.3
  STEP: Ensuring resource quota status released the pod usage @ 01/02/25 09:51:46.318
  I0102 09:51:48.321399 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7636" for this suite. @ 01/02/25 09:51:48.323
• [13.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 01/02/25 09:51:48.327
  I0102 09:51:48.327411 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:51:48.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:51:48.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:51:48.339
  STEP: Creating a ResourceQuota with terminating scope @ 01/02/25 09:51:48.341
  STEP: Ensuring ResourceQuota status is calculated @ 01/02/25 09:51:48.343
  STEP: Creating a ResourceQuota with not terminating scope @ 01/02/25 09:51:50.349
  STEP: Ensuring ResourceQuota status is calculated @ 01/02/25 09:51:50.359
  STEP: Creating a long running pod @ 01/02/25 09:51:52.361
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 01/02/25 09:51:52.37
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 01/02/25 09:51:54.373
  STEP: Deleting the pod @ 01/02/25 09:51:56.38
  STEP: Ensuring resource quota status released the pod usage @ 01/02/25 09:51:56.402
  STEP: Creating a terminating pod @ 01/02/25 09:51:58.413
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 01/02/25 09:51:58.45
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 01/02/25 09:52:00.456
  STEP: Deleting the pod @ 01/02/25 09:52:02.457
  STEP: Ensuring resource quota status released the pod usage @ 01/02/25 09:52:02.469
  I0102 09:52:04.479745 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4409" for this suite. @ 01/02/25 09:52:04.489
• [16.168 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 01/02/25 09:52:04.498
  I0102 09:52:04.498379 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 09:52:04.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:52:04.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:52:04.516
  STEP: starting the proxy server @ 01/02/25 09:52:04.517
  I0102 09:52:04.517841 23 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-4794 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 01/02/25 09:52:04.553
  I0102 09:52:04.561933 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0102 09:52:04.564675 23 kubectl.go:2229] kubectl proxy stderr: W0102 09:52:04.552818     600 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0102 09:52:04.564793 23 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:39099

  STEP: Destroying namespace "kubectl-4794" for this suite. @ 01/02/25 09:52:04.586
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 01/02/25 09:52:04.592
  I0102 09:52:04.592988 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:52:04.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:52:04.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:52:04.612
  STEP: Setting up server cert @ 01/02/25 09:52:04.722
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:52:05.218
  STEP: Deploying the webhook pod @ 01/02/25 09:52:05.222
  STEP: Wait for the deployment to be ready @ 01/02/25 09:52:05.233
  I0102 09:52:05.272083 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 52, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 52, 5, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-5b9c4f9645\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 52, 5, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 52, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/02/25 09:52:07.276
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:52:07.291
  I0102 09:52:08.292229 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 01/02/25 09:52:08.294
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/02/25 09:52:08.305
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 01/02/25 09:52:08.312
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/02/25 09:52:08.317
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 01/02/25 09:52:08.321
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 01/02/25 09:52:08.325
  I0102 09:52:08.362784 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9638" for this suite. @ 01/02/25 09:52:08.368
  STEP: Destroying namespace "webhook-markers-6988" for this suite. @ 01/02/25 09:52:08.375
• [3.786 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 01/02/25 09:52:08.38
  I0102 09:52:08.380097 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replication-controller @ 01/02/25 09:52:08.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:52:08.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:52:08.395
  STEP: Creating replication controller my-hostname-basic-35e481c8-ed2e-4f03-9c3b-cb50d6820657 @ 01/02/25 09:52:08.397
  I0102 09:52:08.402848 23 resource.go:87] Pod name my-hostname-basic-35e481c8-ed2e-4f03-9c3b-cb50d6820657: Found 0 pods out of 1
  I0102 09:52:13.414684 23 resource.go:87] Pod name my-hostname-basic-35e481c8-ed2e-4f03-9c3b-cb50d6820657: Found 1 pods out of 1
  I0102 09:52:13.416497 23 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-35e481c8-ed2e-4f03-9c3b-cb50d6820657" are running
  I0102 09:52:13.419829 23 rc.go:523] Pod "my-hostname-basic-35e481c8-ed2e-4f03-9c3b-cb50d6820657-gq72h" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 09:52:09 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 09:52:08 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 09:52:09 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 09:52:09 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 09:52:08 +0000 UTC Reason: Message:}])
  I0102 09:52:13.421276 23 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/02/25 09:52:13.421
  I0102 09:52:13.437856 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7316" for this suite. @ 01/02/25 09:52:13.465
• [5.093 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 01/02/25 09:52:13.473
  I0102 09:52:13.473602 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 09:52:13.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:52:13.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:52:13.567
  STEP: creating a secret @ 01/02/25 09:52:13.568
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 01/02/25 09:52:13.574
  STEP: patching the secret @ 01/02/25 09:52:13.577
  STEP: deleting the secret using a LabelSelector @ 01/02/25 09:52:13.583
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 01/02/25 09:52:13.587
  I0102 09:52:13.589484 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2898" for this suite. @ 01/02/25 09:52:13.591
• [0.122 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 01/02/25 09:52:13.597
  I0102 09:52:13.597654 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 09:52:13.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:52:13.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:52:13.64
  STEP: Creating pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622 @ 01/02/25 09:52:13.641
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/02/25 09:52:15.65
  I0102 09:52:15.652274 23 container_probe.go:1749] Initial restart count of pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d is 0
  I0102 09:52:15.653540 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:17.665063 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:19.668984 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:21.677431 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:23.681506 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:25.688124 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:27.691703 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:29.701291 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:31.703315 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:33.708569 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:35.712298 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:37.716151 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:39.724476 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:41.726803 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:43.731535 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:45.736842 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:47.755066 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:49.764644 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:51.766860 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:53.770040 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:55.772395 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:57.780586 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:52:59.789894 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:53:01.797894 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:53:03.800328 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:53:05.806843 23 container_probe.go:1759] Get pod busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d in namespace container-probe-4622
  I0102 09:53:05.806966 23 container_probe.go:1763] Restart count of pod container-probe-4622/busybox-6469fcb5-0d01-4f17-8f52-37525928ca4d is now 1 (50.154579308s elapsed)
  STEP: deleting the pod @ 01/02/25 09:53:05.807
  I0102 09:53:05.822242 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4622" for this suite. @ 01/02/25 09:53:05.826
• [52.236 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 01/02/25 09:53:05.833
  I0102 09:53:05.833864 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:53:05.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:05.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:05.847
  STEP: Setting up server cert @ 01/02/25 09:53:05.959
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:53:06.122
  STEP: Deploying the webhook pod @ 01/02/25 09:53:06.127
  STEP: Wait for the deployment to be ready @ 01/02/25 09:53:06.136
  I0102 09:53:06.145509 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:53:08.16
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:53:08.175
  I0102 09:53:09.176265 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/02/25 09:53:09.193
  STEP: verifying the mutating webhook match conditions @ 01/02/25 09:53:09.206
  STEP: updating the mutating webhook match conditions @ 01/02/25 09:53:09.207
  STEP: verifying the mutating webhook match conditions @ 01/02/25 09:53:09.212
  I0102 09:53:09.249947 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2346" for this suite. @ 01/02/25 09:53:09.254
  STEP: Destroying namespace "webhook-markers-8841" for this suite. @ 01/02/25 09:53:09.26
• [3.432 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 01/02/25 09:53:09.267
  I0102 09:53:09.267769 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubelet-test @ 01/02/25 09:53:09.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:09.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:09.282
  STEP: Waiting for pod completion @ 01/02/25 09:53:09.335
  I0102 09:53:13.389940 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9911" for this suite. @ 01/02/25 09:53:13.397
• [4.137 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 01/02/25 09:53:13.404
  I0102 09:53:13.404832 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename watch @ 01/02/25 09:53:13.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:13.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:13.419
  STEP: creating a watch on configmaps @ 01/02/25 09:53:13.42
  STEP: creating a new configmap @ 01/02/25 09:53:13.421
  STEP: modifying the configmap once @ 01/02/25 09:53:13.423
  STEP: closing the watch once it receives two notifications @ 01/02/25 09:53:13.427
  I0102 09:53:13.427877 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7890  8589a61e-be3c-422d-abf8-36cc33a4c5eb 31486 0 2025-01-02 09:53:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-02 09:53:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:53:13.428132 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7890  8589a61e-be3c-422d-abf8-36cc33a4c5eb 31487 0 2025-01-02 09:53:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-02 09:53:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 01/02/25 09:53:13.428
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 01/02/25 09:53:13.441
  STEP: deleting the configmap @ 01/02/25 09:53:13.442
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 01/02/25 09:53:13.446
  I0102 09:53:13.446937 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7890  8589a61e-be3c-422d-abf8-36cc33a4c5eb 31488 0 2025-01-02 09:53:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-02 09:53:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:53:13.447088 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7890  8589a61e-be3c-422d-abf8-36cc33a4c5eb 31489 0 2025-01-02 09:53:13 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-01-02 09:53:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:53:13.447198 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7890" for this suite. @ 01/02/25 09:53:13.494
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 01/02/25 09:53:13.505
  I0102 09:53:13.505326 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 09:53:13.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:13.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:13.518
  STEP: set up a multi version CRD @ 01/02/25 09:53:13.519
  I0102 09:53:13.520253 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: mark a version not serverd @ 01/02/25 09:53:17.1
  STEP: check the unserved version gets removed @ 01/02/25 09:53:17.113
  STEP: check the other version is not changed @ 01/02/25 09:53:17.931
  I0102 09:53:20.808871 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7099" for this suite. @ 01/02/25 09:53:20.812
• [7.310 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 01/02/25 09:53:20.816
  I0102 09:53:20.816178 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename runtimeclass @ 01/02/25 09:53:20.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:20.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:20.83
  I0102 09:53:22.860355 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8087" for this suite. @ 01/02/25 09:53:22.867
• [2.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 01/02/25 09:53:22.874
  I0102 09:53:22.874753 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename runtimeclass @ 01/02/25 09:53:22.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:22.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:22.888
  I0102 09:53:24.909358 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1482" for this suite. @ 01/02/25 09:53:24.915
• [2.045 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 01/02/25 09:53:24.922
  I0102 09:53:24.922476 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 09:53:24.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:24.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:24.937
  STEP: Creating secret with name s-test-opt-del-54981768-7ec1-4b69-ae24-d85b6dc1714d @ 01/02/25 09:53:25.014
  STEP: Creating secret with name s-test-opt-upd-95a7b21a-cb3c-4794-b8fd-f5a8188b14be @ 01/02/25 09:53:25.018
  STEP: Creating the pod @ 01/02/25 09:53:25.022
  STEP: Deleting secret s-test-opt-del-54981768-7ec1-4b69-ae24-d85b6dc1714d @ 01/02/25 09:53:27.081
  STEP: Updating secret s-test-opt-upd-95a7b21a-cb3c-4794-b8fd-f5a8188b14be @ 01/02/25 09:53:27.085
  STEP: Creating secret with name s-test-opt-create-875738ff-83e5-4194-a592-d62b2fe18c37 @ 01/02/25 09:53:27.092
  STEP: waiting to observe update in volume @ 01/02/25 09:53:27.096
  I0102 09:53:29.111009 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5828" for this suite. @ 01/02/25 09:53:29.113
• [4.195 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 01/02/25 09:53:29.117
  I0102 09:53:29.117349 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename watch @ 01/02/25 09:53:29.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:29.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:29.132
  STEP: creating a new configmap @ 01/02/25 09:53:29.133
  STEP: modifying the configmap once @ 01/02/25 09:53:29.135
  STEP: modifying the configmap a second time @ 01/02/25 09:53:29.138
  STEP: deleting the configmap @ 01/02/25 09:53:29.141
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 01/02/25 09:53:29.144
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 01/02/25 09:53:29.146
  I0102 09:53:29.146589 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6640  56a2fd76-79a3-4e6d-b9e4-de06d9b2caeb 31669 0 2025-01-02 09:53:29 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-02 09:53:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:53:29.146672 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6640  56a2fd76-79a3-4e6d-b9e4-de06d9b2caeb 31670 0 2025-01-02 09:53:29 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-01-02 09:53:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 09:53:29.146728 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6640" for this suite. @ 01/02/25 09:53:29.214
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 01/02/25 09:53:29.221
  I0102 09:53:29.221275 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename disruption @ 01/02/25 09:53:29.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:29.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:29.232
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:53:29.236
  STEP: Updating PodDisruptionBudget status @ 01/02/25 09:53:31.239
  STEP: Waiting for all pods to be running @ 01/02/25 09:53:31.252
  I0102 09:53:31.261746 23 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 01/02/25 09:53:33.255
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:53:33.271
  STEP: Patching PodDisruptionBudget status @ 01/02/25 09:53:33.274
  STEP: Waiting for the pdb to be processed @ 01/02/25 09:53:33.278
  I0102 09:53:33.282518 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5582" for this suite. @ 01/02/25 09:53:33.284
• [4.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 01/02/25 09:53:33.288
  I0102 09:53:33.289007 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:53:33.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:33.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:33.301
  STEP: Setting up server cert @ 01/02/25 09:53:33.402
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:53:33.765
  STEP: Deploying the webhook pod @ 01/02/25 09:53:33.768
  STEP: Wait for the deployment to be ready @ 01/02/25 09:53:33.779
  I0102 09:53:33.787096 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:53:35.791
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:53:35.807
  I0102 09:53:36.808140 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/02/25 09:53:36.813
  I0102 09:53:36.827506 23 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: create a pod @ 01/02/25 09:53:36.947
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 01/02/25 09:53:38.961
  I0102 09:53:38.961792 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=webhook-6031 attach --namespace=webhook-6031 to-be-attached-pod -i -c=container1'
  I0102 09:53:39.027316 23 builder.go:135] rc: 1
  I0102 09:53:39.078610 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6031" for this suite. @ 01/02/25 09:53:39.094
  STEP: Destroying namespace "webhook-markers-6527" for this suite. @ 01/02/25 09:53:39.1
• [5.815 seconds]
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 01/02/25 09:53:39.105
  I0102 09:53:39.105855 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename var-expansion @ 01/02/25 09:53:39.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:53:39.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:53:39.118
  STEP: creating the pod with failed condition @ 01/02/25 09:53:39.12
  STEP: updating the pod @ 01/02/25 09:55:39.129
  I0102 09:55:39.654253 23 pod_client.go:173] Successfully updated pod "var-expansion-dd6b2fdc-4a28-457c-8a1c-abe46a4c1f32"
  STEP: waiting for pod running @ 01/02/25 09:55:39.654
  STEP: deleting the pod gracefully @ 01/02/25 09:55:41.666
  I0102 09:55:41.667130 23 delete.go:62] Deleting pod "var-expansion-dd6b2fdc-4a28-457c-8a1c-abe46a4c1f32" in namespace "var-expansion-1724"
  I0102 09:55:41.681311 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-dd6b2fdc-4a28-457c-8a1c-abe46a4c1f32" to be fully deleted
  I0102 09:56:13.765683 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1724" for this suite. @ 01/02/25 09:56:13.768
• [154.667 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 01/02/25 09:56:13.774
  I0102 09:56:13.775024 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replication-controller @ 01/02/25 09:56:13.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:56:13.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:56:13.794
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 01/02/25 09:56:13.796
  STEP: When a replication controller with a matching selector is created @ 01/02/25 09:56:15.808
  STEP: Then the orphan pod is adopted @ 01/02/25 09:56:15.811
  I0102 09:56:16.822035 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2068" for this suite. @ 01/02/25 09:56:16.832
• [3.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 01/02/25 09:56:16.843
  I0102 09:56:16.844016 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:56:16.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:56:16.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:56:16.86
  STEP: Setting up server cert @ 01/02/25 09:56:16.958
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:56:17.331
  STEP: Deploying the webhook pod @ 01/02/25 09:56:17.335
  STEP: Wait for the deployment to be ready @ 01/02/25 09:56:17.345
  I0102 09:56:17.367229 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 56, 17, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-5b9c4f9645\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 56, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 56, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/02/25 09:56:19.372
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:56:19.394
  I0102 09:56:20.404757 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0102 09:56:20.411512 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9249-crds.webhook.example.com via the AdmissionRegistration API @ 01/02/25 09:56:20.934
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/02/25 09:56:20.951
  I0102 09:56:23.547008 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6919" for this suite. @ 01/02/25 09:56:23.556
  STEP: Destroying namespace "webhook-markers-5929" for this suite. @ 01/02/25 09:56:23.558
• [6.721 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 01/02/25 09:56:23.565
  I0102 09:56:23.565258 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 09:56:23.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:56:23.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:56:23.578
  STEP: Creating a ResourceQuota @ 01/02/25 09:56:23.58
  STEP: Getting a ResourceQuota @ 01/02/25 09:56:23.586
  STEP: Updating a ResourceQuota @ 01/02/25 09:56:23.588
  STEP: Verifying a ResourceQuota was modified @ 01/02/25 09:56:23.592
  STEP: Deleting a ResourceQuota @ 01/02/25 09:56:23.593
  STEP: Verifying the deleted ResourceQuota @ 01/02/25 09:56:23.596
  I0102 09:56:23.597357 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6257" for this suite. @ 01/02/25 09:56:23.655
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 01/02/25 09:56:23.668
  I0102 09:56:23.668268 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename podtemplate @ 01/02/25 09:56:23.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:56:23.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:56:23.685
  STEP: Create set of pod templates @ 01/02/25 09:56:23.687
  I0102 09:56:23.690429 23 podtemplates.go:143] created test-podtemplate-1
  I0102 09:56:23.693910 23 podtemplates.go:143] created test-podtemplate-2
  I0102 09:56:23.696384 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 01/02/25 09:56:23.696
  STEP: delete collection of pod templates @ 01/02/25 09:56:23.698
  I0102 09:56:23.698218 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 01/02/25 09:56:23.703
  I0102 09:56:23.703979 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0102 09:56:23.705374 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4644" for this suite. @ 01/02/25 09:56:23.767
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 01/02/25 09:56:23.79
  I0102 09:56:23.791233 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replicaset @ 01/02/25 09:56:23.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:56:23.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:56:23.807
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 01/02/25 09:56:23.809
  I0102 09:56:23.813340 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0102 09:56:28.817837 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/02/25 09:56:28.817
  STEP: getting scale subresource @ 01/02/25 09:56:28.818
  STEP: updating a scale subresource @ 01/02/25 09:56:28.82
  STEP: verifying the replicaset Spec.Replicas was modified @ 01/02/25 09:56:28.823
  STEP: Patch a scale subresource @ 01/02/25 09:56:28.827
  I0102 09:56:28.861615 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2683" for this suite. @ 01/02/25 09:56:28.879
• [5.096 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 01/02/25 09:56:28.886
  I0102 09:56:28.887035 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 09:56:28.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:56:28.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:56:28.901
  STEP: creating the pod @ 01/02/25 09:56:28.902
  STEP: setting up watch @ 01/02/25 09:56:28.902
  STEP: submitting the pod to kubernetes @ 01/02/25 09:56:29.019
  STEP: verifying the pod is in kubernetes @ 01/02/25 09:56:29.103
  STEP: verifying pod creation was observed @ 01/02/25 09:56:29.163
  STEP: deleting the pod gracefully @ 01/02/25 09:56:31.181
  STEP: verifying pod deletion was observed @ 01/02/25 09:56:31.188
  I0102 09:56:32.857418 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2060" for this suite. @ 01/02/25 09:56:32.859
• [3.977 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 01/02/25 09:56:32.864
  I0102 09:56:32.864166 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pod-network-test @ 01/02/25 09:56:32.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:56:32.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:56:32.881
  STEP: Performing setup for networking test in namespace pod-network-test-797 @ 01/02/25 09:56:32.882
  STEP: creating a selector @ 01/02/25 09:56:32.882
  STEP: Creating the service pods in kubernetes @ 01/02/25 09:56:32.883
  I0102 09:56:32.883271 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/02/25 09:56:45.024
  I0102 09:56:47.043557 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0102 09:56:47.045075 23 networking.go:42] Breadth first check of 10.42.1.201 on host 192.168.150.103...
  I0102 09:56:47.051548 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.202:9080/dial?request=hostname&protocol=http&host=10.42.1.201&port=8083&tries=1'] Namespace:pod-network-test-797 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:56:47.052856 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:56:47.056209 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:56:47.057788 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-797/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.202%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.201%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0102 09:56:47.134922 23 utils.go:356] Waiting for responses: map[]
  I0102 09:56:47.134960 23 utils.go:360] reached 10.42.1.201 after 0/1 tries
  I0102 09:56:47.134973 23 networking.go:42] Breadth first check of 10.42.3.184 on host 192.168.150.105...
  I0102 09:56:47.136572 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.202:9080/dial?request=hostname&protocol=http&host=10.42.3.184&port=8083&tries=1'] Namespace:pod-network-test-797 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:56:47.136590 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:56:47.136967 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:56:47.137002 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-797/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.202%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.184%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0102 09:56:47.194882 23 utils.go:356] Waiting for responses: map[]
  I0102 09:56:47.195061 23 utils.go:360] reached 10.42.3.184 after 0/1 tries
  I0102 09:56:47.195155 23 networking.go:53] Going to retry 0 out of 2 pods....
  I0102 09:56:47.195301 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-797" for this suite. @ 01/02/25 09:56:47.197
• [14.338 seconds]
------------------------------
SSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 01/02/25 09:56:47.202
  I0102 09:56:47.202792 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename hostport @ 01/02/25 09:56:47.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:56:47.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:56:47.215
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 01/02/25 09:56:47.299
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.150.105 on the node which pod1 resides and expect scheduled @ 01/02/25 09:56:49.318
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.150.105 but use UDP protocol on the node which pod2 resides @ 01/02/25 09:56:51.338
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 01/02/25 09:56:55.357
  I0102 09:56:55.357856 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.150.105 http://127.0.0.1:54323/hostname] Namespace:hostport-6997 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:56:55.358113 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:56:55.358911 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:56:55.359381 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6997/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.150.105+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.150.105, port: 54323 @ 01/02/25 09:56:55.434
  I0102 09:56:55.435051 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.150.105:54323/hostname] Namespace:hostport-6997 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:56:55.435072 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:56:55.435588 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:56:55.435737 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6997/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.150.105%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.150.105, port: 54323 UDP @ 01/02/25 09:56:55.485
  I0102 09:56:55.485538 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.150.105 54323] Namespace:hostport-6997 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 09:56:55.485678 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 09:56:55.486129 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 09:56:55.486176 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-6997/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.150.105+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0102 09:57:00.542344 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6997" for this suite. @ 01/02/25 09:57:00.545
• [13.346 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 01/02/25 09:57:00.549
  I0102 09:57:00.549088 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:57:00.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:57:00.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:57:00.565
  STEP: Setting up server cert @ 01/02/25 09:57:00.669
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:57:00.931
  STEP: Deploying the webhook pod @ 01/02/25 09:57:00.936
  STEP: Wait for the deployment to be ready @ 01/02/25 09:57:00.947
  I0102 09:57:00.971768 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 9, 57, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 57, 0, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-5b9c4f9645\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 9, 57, 0, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 9, 57, 0, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/02/25 09:57:02.974
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:57:02.988
  I0102 09:57:03.989006 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 01/02/25 09:57:04.011
  STEP: verifying the validating webhook match conditions @ 01/02/25 09:57:04.02
  STEP: updating the validating webhook match conditions @ 01/02/25 09:57:04.022
  STEP: verifying the validating webhook match conditions @ 01/02/25 09:57:04.027
  I0102 09:57:04.063883 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4846" for this suite. @ 01/02/25 09:57:04.07
  STEP: Destroying namespace "webhook-markers-6146" for this suite. @ 01/02/25 09:57:04.078
• [3.535 seconds]
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 01/02/25 09:57:04.085
  I0102 09:57:04.085539 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename dns @ 01/02/25 09:57:04.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:57:04.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:57:04.1
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/02/25 09:57:04.102
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 01/02/25 09:57:04.102
  STEP: creating a pod to probe DNS @ 01/02/25 09:57:04.102
  STEP: submitting the pod to kubernetes @ 01/02/25 09:57:04.102
  STEP: retrieving the pod @ 01/02/25 09:57:06.116
  STEP: looking for the results for each expected name from probers @ 01/02/25 09:57:06.118
  I0102 09:57:06.142086 23 dns_common.go:527] DNS probes using dns-476/dns-test-afb5a9ea-527d-4679-aa37-2bb9d03f356e succeeded

  STEP: deleting the pod @ 01/02/25 09:57:06.142
  I0102 09:57:06.154246 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-476" for this suite. @ 01/02/25 09:57:06.157
• [2.077 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 01/02/25 09:57:06.162
  I0102 09:57:06.162679 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/02/25 09:57:06.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:57:06.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:57:06.178
  STEP: Creating 50 configmaps @ 01/02/25 09:57:06.18
  STEP: Creating RC which spawns configmap-volume pods @ 01/02/25 09:57:06.416
  I0102 09:57:06.584119 23 resource.go:87] Pod name wrapped-volume-race-fc1a238a-e8af-415a-915e-f57e328954be: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/02/25 09:57:06.584
  STEP: Creating RC which spawns configmap-volume pods @ 01/02/25 09:57:08.617
  I0102 09:57:08.664848 23 resource.go:87] Pod name wrapped-volume-race-8ccfafd9-652c-405b-a472-2481a0dd1bb2: Found 1 pods out of 5
  I0102 09:57:13.670141 23 resource.go:87] Pod name wrapped-volume-race-8ccfafd9-652c-405b-a472-2481a0dd1bb2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/02/25 09:57:13.67
  STEP: Creating RC which spawns configmap-volume pods @ 01/02/25 09:57:13.678
  I0102 09:57:13.693229 23 resource.go:87] Pod name wrapped-volume-race-957f9dab-dbf4-42f6-a41f-12a2bac01355: Found 1 pods out of 5
  I0102 09:57:18.697993 23 resource.go:87] Pod name wrapped-volume-race-957f9dab-dbf4-42f6-a41f-12a2bac01355: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 01/02/25 09:57:18.698
  STEP: deleting ReplicationController wrapped-volume-race-957f9dab-dbf4-42f6-a41f-12a2bac01355 in namespace emptydir-wrapper-9136, will wait for the garbage collector to delete the pods @ 01/02/25 09:57:18.707
  I0102 09:57:18.763964 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-957f9dab-dbf4-42f6-a41f-12a2bac01355 took: 3.858127ms
  I0102 09:57:18.865888 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-957f9dab-dbf4-42f6-a41f-12a2bac01355 pods took: 101.918492ms
  STEP: deleting ReplicationController wrapped-volume-race-8ccfafd9-652c-405b-a472-2481a0dd1bb2 in namespace emptydir-wrapper-9136, will wait for the garbage collector to delete the pods @ 01/02/25 09:57:20.599
  I0102 09:57:20.674148 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-8ccfafd9-652c-405b-a472-2481a0dd1bb2 took: 7.254718ms
  I0102 09:57:20.774677 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-8ccfafd9-652c-405b-a472-2481a0dd1bb2 pods took: 100.525372ms
  STEP: deleting ReplicationController wrapped-volume-race-fc1a238a-e8af-415a-915e-f57e328954be in namespace emptydir-wrapper-9136, will wait for the garbage collector to delete the pods @ 01/02/25 09:57:22.675
  I0102 09:57:22.752940 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-fc1a238a-e8af-415a-915e-f57e328954be took: 16.445177ms
  I0102 09:57:22.853862 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-fc1a238a-e8af-415a-915e-f57e328954be pods took: 100.921578ms
  STEP: Cleaning up the configMaps @ 01/02/25 09:57:24.655
  I0102 09:57:24.771889 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9136" for this suite. @ 01/02/25 09:57:24.773
• [18.616 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 01/02/25 09:57:24.778
  I0102 09:57:24.778994 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 09:57:24.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:57:24.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:57:24.791
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/02/25 09:57:24.792
  STEP: Saw pod success @ 01/02/25 09:57:28.832
  I0102 09:57:28.841253 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-5971a531-16f7-46f0-83e4-0758703cdb5f container test-container: <nil>
  STEP: delete the pod @ 01/02/25 09:57:28.864
  I0102 09:57:28.877368 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2113" for this suite. @ 01/02/25 09:57:28.88
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 01/02/25 09:57:28.885
  I0102 09:57:28.885802 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 09:57:28.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:57:28.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:57:28.899
  STEP: Setting up server cert @ 01/02/25 09:57:29.004
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 09:57:29.658
  STEP: Deploying the webhook pod @ 01/02/25 09:57:29.662
  STEP: Wait for the deployment to be ready @ 01/02/25 09:57:29.67
  I0102 09:57:29.676093 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 09:57:31.697
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 09:57:31.709
  I0102 09:57:32.711685 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0102 09:57:32.719261 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7291-crds.webhook.example.com via the AdmissionRegistration API @ 01/02/25 09:57:33.233
  STEP: Creating a custom resource while v1 is storage version @ 01/02/25 09:57:33.246
  STEP: Patching Custom Resource Definition to set v2 as storage @ 01/02/25 09:57:35.291
  STEP: Patching the custom resource while v2 is storage version @ 01/02/25 09:57:35.304
  I0102 09:57:35.876717 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5720" for this suite. @ 01/02/25 09:57:35.882
  STEP: Destroying namespace "webhook-markers-1739" for this suite. @ 01/02/25 09:57:35.886
• [7.006 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 01/02/25 09:57:35.893
  I0102 09:57:35.893801 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename cronjob @ 01/02/25 09:57:35.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 09:57:35.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 09:57:35.911
  STEP: Creating a suspended cronjob @ 01/02/25 09:57:35.913
  STEP: Ensuring no jobs are scheduled @ 01/02/25 09:57:35.916
  STEP: Ensuring no job exists by listing jobs explicitly @ 01/02/25 10:02:35.917
  STEP: Removing cronjob @ 01/02/25 10:02:35.92
  I0102 10:02:35.924769 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3230" for this suite. @ 01/02/25 10:02:35.928
• [300.039 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 01/02/25 10:02:35.933
  I0102 10:02:35.933796 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 10:02:35.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:02:35.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:02:35.951
  STEP: Creating secret with name secret-test-map-bc68e7cb-e81e-4900-bc29-d38ff45c08e8 @ 01/02/25 10:02:35.953
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:02:35.958
  STEP: Saw pod success @ 01/02/25 10:02:39.98
  I0102 10:02:39.981944 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-71fa4081-ff69-4b34-b553-b21c861a66ae container secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:02:39.993
  I0102 10:02:40.006608 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-860" for this suite. @ 01/02/25 10:02:40.012
• [4.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 01/02/25 10:02:40.024
  I0102 10:02:40.024187 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 10:02:40.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:02:40.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:02:40.037
  STEP: Setting up server cert @ 01/02/25 10:02:40.156
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 10:02:40.795
  STEP: Deploying the webhook pod @ 01/02/25 10:02:40.801
  STEP: Wait for the deployment to be ready @ 01/02/25 10:02:40.81
  I0102 10:02:40.818883 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 10:02:42.828
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 10:02:42.839
  I0102 10:02:43.841470 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0102 10:02:43.855857 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9034-crds.webhook.example.com via the AdmissionRegistration API @ 01/02/25 10:02:44.373
  STEP: Creating a custom resource that should be mutated by the webhook @ 01/02/25 10:02:44.396
  I0102 10:02:47.024242 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1218" for this suite. @ 01/02/25 10:02:47.034
  STEP: Destroying namespace "webhook-markers-3800" for this suite. @ 01/02/25 10:02:47.042
• [7.022 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 01/02/25 10:02:47.046
  I0102 10:02:47.046427 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 10:02:47.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:02:47.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:02:47.059
  I0102 10:02:47.061412 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: creating the pod @ 01/02/25 10:02:47.062
  STEP: submitting the pod to kubernetes @ 01/02/25 10:02:47.062
  I0102 10:02:49.086465 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-493" for this suite. @ 01/02/25 10:02:49.09
• [2.048 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 01/02/25 10:02:49.095
  I0102 10:02:49.095697 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename job @ 01/02/25 10:02:49.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:02:49.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:02:49.108
  STEP: Creating a suspended job @ 01/02/25 10:02:49.111
  STEP: Patching the Job @ 01/02/25 10:02:49.114
  STEP: Watching for Job to be patched @ 01/02/25 10:02:49.13
  I0102 10:02:49.131688 23 job.go:1330] Event ADDED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr] and annotations: map[]
  I0102 10:02:49.131947 23 job.go:1330] Event MODIFIED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr] and annotations: map[]
  I0102 10:02:49.132148 23 job.go:1333] Event MODIFIED found for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[]
  STEP: Updating the job @ 01/02/25 10:02:49.132
  STEP: Watching for Job to be updated @ 01/02/25 10:02:49.137
  I0102 10:02:49.139373 23 job.go:1333] Event MODIFIED found for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  I0102 10:02:49.139703 23 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 01/02/25 10:02:49.139
  I0102 10:02:49.155391 23 job.go:1233] Job: e2e-vf2lr as labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched]
  STEP: Waiting for job to complete @ 01/02/25 10:02:49.155
  STEP: Delete a job collection with a labelselector @ 01/02/25 10:02:59.161
  STEP: Watching for Job to be deleted @ 01/02/25 10:02:59.166
  I0102 10:02:59.169066 23 job.go:1330] Event MODIFIED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  I0102 10:02:59.169245 23 job.go:1330] Event MODIFIED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  I0102 10:02:59.169370 23 job.go:1330] Event MODIFIED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  I0102 10:02:59.169600 23 job.go:1330] Event MODIFIED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  I0102 10:02:59.169752 23 job.go:1330] Event MODIFIED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  I0102 10:02:59.169975 23 job.go:1330] Event MODIFIED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  I0102 10:02:59.170183 23 job.go:1330] Event MODIFIED observed for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  I0102 10:02:59.170338 23 job.go:1333] Event DELETED found for Job e2e-vf2lr in namespace job-1298 with labels: map[e2e-job-label:e2e-vf2lr e2e-vf2lr:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 01/02/25 10:02:59.17
  I0102 10:02:59.174152 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1298" for this suite. @ 01/02/25 10:02:59.191
• [10.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 01/02/25 10:02:59.199
  I0102 10:02:59.199364 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replicaset @ 01/02/25 10:02:59.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:02:59.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:02:59.209
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 01/02/25 10:02:59.211
  STEP: When a replicaset with a matching selector is created @ 01/02/25 10:03:01.227
  STEP: Then the orphan pod is adopted @ 01/02/25 10:03:01.234
  STEP: When the matched label of one of its pods change @ 01/02/25 10:03:01.247
  I0102 10:03:01.251447 23 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/02/25 10:03:01.262
  I0102 10:03:01.270495 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4042" for this suite. @ 01/02/25 10:03:01.288
• [2.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 01/02/25 10:03:01.294
  I0102 10:03:01.294121 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 10:03:01.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:03:01.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:03:01.307
  STEP: Setting up server cert @ 01/02/25 10:03:01.408
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 10:03:01.655
  STEP: Deploying the webhook pod @ 01/02/25 10:03:01.658
  STEP: Wait for the deployment to be ready @ 01/02/25 10:03:01.719
  I0102 10:03:01.753837 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 10, 3, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 10, 3, 1, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-5b9c4f9645\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.January, 2, 10, 3, 1, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 10, 3, 1, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 01/02/25 10:03:03.76
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 10:03:03.781
  I0102 10:03:04.781603 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 01/02/25 10:03:04.788
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 01/02/25 10:03:04.79
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 01/02/25 10:03:04.79
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 01/02/25 10:03:04.79
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 01/02/25 10:03:04.792
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/02/25 10:03:04.792
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 01/02/25 10:03:04.794
  I0102 10:03:04.834190 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9255" for this suite. @ 01/02/25 10:03:04.847
  STEP: Destroying namespace "webhook-markers-9508" for this suite. @ 01/02/25 10:03:04.853
• [3.563 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 01/02/25 10:03:04.857
  I0102 10:03:04.857935 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 10:03:04.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:03:04.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:03:04.87
  STEP: Setting up server cert @ 01/02/25 10:03:04.969
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 10:03:05.253
  STEP: Deploying the webhook pod @ 01/02/25 10:03:05.257
  STEP: Wait for the deployment to be ready @ 01/02/25 10:03:05.266
  I0102 10:03:05.275536 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 10:03:07.279
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 10:03:07.294
  I0102 10:03:08.295062 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 01/02/25 10:03:08.297
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/02/25 10:03:08.297
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 01/02/25 10:03:08.309
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 01/02/25 10:03:09.326
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/02/25 10:03:09.327
  STEP: Having no error when timeout is longer than webhook latency @ 01/02/25 10:03:10.344
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/02/25 10:03:10.344
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 01/02/25 10:03:15.363
  STEP: Registering slow webhook via the AdmissionRegistration API @ 01/02/25 10:03:15.363
  I0102 10:03:20.459325 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6677" for this suite. @ 01/02/25 10:03:20.463
  STEP: Destroying namespace "webhook-markers-3596" for this suite. @ 01/02/25 10:03:20.468
• [15.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 01/02/25 10:03:20.473
  I0102 10:03:20.473213 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename events @ 01/02/25 10:03:20.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:03:20.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:03:20.487
  STEP: creating a test event @ 01/02/25 10:03:20.489
  STEP: listing events in all namespaces @ 01/02/25 10:03:20.492
  STEP: listing events in test namespace @ 01/02/25 10:03:20.498
  STEP: listing events with field selection filtering on source @ 01/02/25 10:03:20.501
  STEP: listing events with field selection filtering on reportingController @ 01/02/25 10:03:20.502
  STEP: getting the test event @ 01/02/25 10:03:20.503
  STEP: patching the test event @ 01/02/25 10:03:20.504
  STEP: getting the test event @ 01/02/25 10:03:20.508
  STEP: updating the test event @ 01/02/25 10:03:20.51
  STEP: getting the test event @ 01/02/25 10:03:20.512
  STEP: deleting the test event @ 01/02/25 10:03:20.513
  STEP: listing events in all namespaces @ 01/02/25 10:03:20.516
  STEP: listing events in test namespace @ 01/02/25 10:03:20.521
  I0102 10:03:20.523420 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8636" for this suite. @ 01/02/25 10:03:20.563
• [0.096 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 01/02/25 10:03:20.57
  I0102 10:03:20.570675 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pod-network-test @ 01/02/25 10:03:20.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:03:20.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:03:20.588
  STEP: Performing setup for networking test in namespace pod-network-test-6381 @ 01/02/25 10:03:20.59
  STEP: creating a selector @ 01/02/25 10:03:20.59
  STEP: Creating the service pods in kubernetes @ 01/02/25 10:03:20.591
  I0102 10:03:20.591252 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 01/02/25 10:03:42.769
  I0102 10:03:44.838432 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0102 10:03:44.839159 23 utils.go:496] Going to poll 10.42.1.228 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0102 10:03:44.843229 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.228:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6381 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:03:44.843281 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:03:44.844774 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:03:44.845161 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6381/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.228%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0102 10:03:44.914912 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0102 10:03:44.914957 23 utils.go:496] Going to poll 10.42.3.192 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0102 10:03:44.916598 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.192:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6381 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:03:44.916738 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:03:44.917140 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:03:44.917353 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6381/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.192%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0102 10:03:44.974951 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0102 10:03:44.975290 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6381" for this suite. @ 01/02/25 10:03:44.977
• [24.412 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 01/02/25 10:03:44.982
  I0102 10:03:44.982849 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename var-expansion @ 01/02/25 10:03:44.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:03:44.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:03:44.998
  STEP: Creating a pod to test substitution in container's args @ 01/02/25 10:03:45.003
  STEP: Saw pod success @ 01/02/25 10:03:49.032
  I0102 10:03:49.034932 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod var-expansion-ff8fed24-fa83-4900-925f-b1db9a239f71 container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 10:03:49.041
  I0102 10:03:49.053880 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4478" for this suite. @ 01/02/25 10:03:49.056
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 01/02/25 10:03:49.06
  I0102 10:03:49.060651 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename cronjob @ 01/02/25 10:03:49.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:03:49.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:03:49.073
  STEP: Creating a ReplaceConcurrent cronjob @ 01/02/25 10:03:49.074
  STEP: Ensuring a job is scheduled @ 01/02/25 10:03:49.078
  STEP: Ensuring exactly one is scheduled @ 01/02/25 10:04:01.081
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/02/25 10:04:01.082
  STEP: Ensuring the job is replaced with a new one @ 01/02/25 10:04:01.083
  STEP: Removing cronjob @ 01/02/25 10:05:01.086
  I0102 10:05:01.092254 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8509" for this suite. @ 01/02/25 10:05:01.106
• [72.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 01/02/25 10:05:01.115
  I0102 10:05:01.115942 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename namespaces @ 01/02/25 10:05:01.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:01.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:01.132
  STEP: Creating a test namespace @ 01/02/25 10:05:01.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:01.233
  STEP: Creating a pod in the namespace @ 01/02/25 10:05:01.236
  STEP: Waiting for the pod to have running status @ 01/02/25 10:05:01.243
  STEP: Deleting the namespace @ 01/02/25 10:05:03.25
  STEP: Waiting for the namespace to be removed. @ 01/02/25 10:05:03.253
  STEP: Recreating the namespace @ 01/02/25 10:05:14.256
  STEP: Verifying there are no pods in the namespace @ 01/02/25 10:05:14.269
  I0102 10:05:14.271131 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4713" for this suite. @ 01/02/25 10:05:14.273
  STEP: Destroying namespace "nsdeletetest-4877" for this suite. @ 01/02/25 10:05:14.277
  I0102 10:05:14.279936 23 framework.go:370] Namespace nsdeletetest-4877 was already deleted
  STEP: Destroying namespace "nsdeletetest-2192" for this suite. @ 01/02/25 10:05:14.28
• [13.168 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 01/02/25 10:05:14.284
  I0102 10:05:14.284984 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-runtime @ 01/02/25 10:05:14.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:14.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:14.369
  STEP: create the container @ 01/02/25 10:05:14.37
  W0102 10:05:14.374649      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 01/02/25 10:05:14.374
  STEP: get the container status @ 01/02/25 10:05:17.391
  STEP: the container should be terminated @ 01/02/25 10:05:17.395
  STEP: the termination message should be set @ 01/02/25 10:05:17.395
  I0102 10:05:17.395097 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/02/25 10:05:17.395
  I0102 10:05:17.405828 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1743" for this suite. @ 01/02/25 10:05:17.408
• [3.128 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 01/02/25 10:05:17.415
  I0102 10:05:17.415429 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:05:17.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:17.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:17.429
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 10:05:17.431
  STEP: Saw pod success @ 01/02/25 10:05:21.45
  I0102 10:05:21.453094 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-9823bfb9-e1db-4202-b9ae-035d49db47fa container client-container: <nil>
  STEP: delete the pod @ 01/02/25 10:05:21.469
  I0102 10:05:21.482435 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9946" for this suite. @ 01/02/25 10:05:21.484
• [4.072 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 01/02/25 10:05:21.489
  I0102 10:05:21.489213 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-runtime @ 01/02/25 10:05:21.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:21.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:21.503
  STEP: create the container @ 01/02/25 10:05:21.504
  W0102 10:05:21.509157      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/02/25 10:05:21.509
  STEP: get the container status @ 01/02/25 10:05:24.541
  STEP: the container should be terminated @ 01/02/25 10:05:24.551
  STEP: the termination message should be set @ 01/02/25 10:05:24.552
  I0102 10:05:24.554546 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 01/02/25 10:05:24.555
  I0102 10:05:24.570447 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2351" for this suite. @ 01/02/25 10:05:24.572
• [3.086 seconds]
------------------------------
SS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 01/02/25 10:05:24.575
  I0102 10:05:24.575618 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename certificates @ 01/02/25 10:05:24.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:24.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:24.588
  STEP: getting /apis @ 01/02/25 10:05:25.639
  STEP: getting /apis/certificates.k8s.io @ 01/02/25 10:05:25.643
  STEP: getting /apis/certificates.k8s.io/v1 @ 01/02/25 10:05:25.644
  STEP: creating @ 01/02/25 10:05:25.644
  STEP: getting @ 01/02/25 10:05:25.657
  STEP: listing @ 01/02/25 10:05:25.658
  STEP: watching @ 01/02/25 10:05:25.66
  I0102 10:05:25.660278 23 certificates.go:316] starting watch
  STEP: patching @ 01/02/25 10:05:25.66
  STEP: updating @ 01/02/25 10:05:25.664
  I0102 10:05:25.666771 23 certificates.go:332] waiting for watch events with expected annotations
  I0102 10:05:25.666796 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 01/02/25 10:05:25.666
  STEP: patching /approval @ 01/02/25 10:05:25.668
  STEP: updating /approval @ 01/02/25 10:05:25.671
  STEP: getting /status @ 01/02/25 10:05:25.674
  STEP: patching /status @ 01/02/25 10:05:25.675
  STEP: updating /status @ 01/02/25 10:05:25.679
  STEP: deleting @ 01/02/25 10:05:25.683
  STEP: deleting a collection @ 01/02/25 10:05:25.688
  I0102 10:05:25.693220 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9481" for this suite. @ 01/02/25 10:05:25.695
• [1.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 01/02/25 10:05:25.703
  I0102 10:05:25.703824 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:05:25.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:25.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:25.716
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2319 @ 01/02/25 10:05:25.718
  STEP: changing the ExternalName service to type=ClusterIP @ 01/02/25 10:05:25.722
  STEP: creating replication controller externalname-service in namespace services-2319 @ 01/02/25 10:05:25.732
  I0102 10:05:25.739478      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2319, replica count: 2
  I0102 10:05:28.790649      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 10:05:28.790686 23 resource.go:361] Creating new exec pod
  I0102 10:05:31.816435 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-2319 exec execpoddcvgr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0102 10:05:31.938514 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0102 10:05:31.938549 23 builder.go:147] stdout: ""
  I0102 10:05:32.819185 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-2319 exec execpoddcvgr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0102 10:05:32.921518 23 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0102 10:05:32.921574 23 builder.go:147] stdout: "externalname-service-55twr"
  I0102 10:05:32.921814 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-2319 exec execpoddcvgr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.205.176 80'
  I0102 10:05:33.025525 23 builder.go:146] stderr: "+ + ncecho -v -t hostName -w\n 2 10.43.205.176 80\nConnection to 10.43.205.176 80 port [tcp/http] succeeded!\n"
  I0102 10:05:33.025570 23 builder.go:147] stdout: "externalname-service-55twr"
  I0102 10:05:33.025744 23 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0102 10:05:33.047851 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2319" for this suite. @ 01/02/25 10:05:33.056
• [7.357 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 01/02/25 10:05:33.06
  I0102 10:05:33.060916 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replicaset @ 01/02/25 10:05:33.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:33.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:33.078
  I0102 10:05:33.091804 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0102 10:05:38.094574 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 01/02/25 10:05:38.095
  STEP: Scaling up "test-rs" replicaset @ 01/02/25 10:05:38.096
  I0102 10:05:38.103337 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 01/02/25 10:05:38.103
  I0102 10:05:38.126843 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2645 with ReadyReplicas 1, AvailableReplicas 1
  I0102 10:05:38.126890 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2645 with ReadyReplicas 1, AvailableReplicas 1
  I0102 10:05:38.151396 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2645 with ReadyReplicas 1, AvailableReplicas 1
  I0102 10:05:38.161608 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2645 with ReadyReplicas 1, AvailableReplicas 1
  I0102 10:05:39.493582 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2645 with ReadyReplicas 2, AvailableReplicas 2
  I0102 10:05:39.502720 23 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-2645 with ReadyReplicas 3 found true
  I0102 10:05:39.502827 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2645" for this suite. @ 01/02/25 10:05:39.504
• [6.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 01/02/25 10:05:39.509
  I0102 10:05:39.509855 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 10:05:39.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:39.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:39.523
  STEP: Creating secret with name secret-test-map-a7514127-9e0d-4eb4-88dc-c929cbf15b69 @ 01/02/25 10:05:39.525
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:05:39.528
  STEP: Saw pod success @ 01/02/25 10:05:43.543
  I0102 10:05:43.544808 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-d7f306bb-21b6-45df-816f-aa325d332800 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:05:43.547
  I0102 10:05:43.556204 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8312" for this suite. @ 01/02/25 10:05:43.558
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 01/02/25 10:05:43.563
  I0102 10:05:43.563473 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 10:05:43.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:43.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:43.576
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 01/02/25 10:05:43.578
  STEP: Saw pod success @ 01/02/25 10:05:47.588
  I0102 10:05:47.589625 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-be237d81-354c-49b2-93f0-7edc436c5e05 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 10:05:47.597
  I0102 10:05:47.608130 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2726" for this suite. @ 01/02/25 10:05:47.61
• [4.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 01/02/25 10:05:47.616
  I0102 10:05:47.616534 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 10:05:47.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:47.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:47.63
  STEP: Create a pod @ 01/02/25 10:05:47.632
  STEP: patching /status @ 01/02/25 10:05:49.647
  I0102 10:05:49.662250 23 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0102 10:05:49.662742 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7939" for this suite. @ 01/02/25 10:05:49.665
• [2.055 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 01/02/25 10:05:49.671
  I0102 10:05:49.672084 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 10:05:49.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:49.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:49.688
  STEP: Creating a pod to test emptydir volume type on node default medium @ 01/02/25 10:05:49.689
  STEP: Saw pod success @ 01/02/25 10:05:53.705
  I0102 10:05:53.707698 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-99478055-7b66-4985-900e-4132fb359ce3 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 10:05:53.712
  I0102 10:05:53.722061 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3197" for this suite. @ 01/02/25 10:05:53.725
• [4.058 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 01/02/25 10:05:53.729
  I0102 10:05:53.729962 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/02/25 10:05:53.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:53.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:53.743
  I0102 10:05:53.744867 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:05:54.285433 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8704" for this suite. @ 01/02/25 10:05:54.29
• [0.568 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 01/02/25 10:05:54.301
  I0102 10:05:54.301234 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename watch @ 01/02/25 10:05:54.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:05:54.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:05:54.313
  STEP: creating a watch on configmaps with label A @ 01/02/25 10:05:54.314
  STEP: creating a watch on configmaps with label B @ 01/02/25 10:05:54.315
  STEP: creating a watch on configmaps with label A or B @ 01/02/25 10:05:54.316
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 01/02/25 10:05:54.316
  I0102 10:05:54.320650 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7431  54ea1d25-b635-4b16-bf9b-e5c4f2ca8e4c 37340 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 10:05:54.320910 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7431  54ea1d25-b635-4b16-bf9b-e5c4f2ca8e4c 37340 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 01/02/25 10:05:54.321
  I0102 10:05:54.324003 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7431  54ea1d25-b635-4b16-bf9b-e5c4f2ca8e4c 37341 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 10:05:54.324138 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7431  54ea1d25-b635-4b16-bf9b-e5c4f2ca8e4c 37341 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 01/02/25 10:05:54.324
  I0102 10:05:54.327358 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7431  54ea1d25-b635-4b16-bf9b-e5c4f2ca8e4c 37342 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 10:05:54.327534 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7431  54ea1d25-b635-4b16-bf9b-e5c4f2ca8e4c 37342 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 01/02/25 10:05:54.327
  I0102 10:05:54.329757 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7431  54ea1d25-b635-4b16-bf9b-e5c4f2ca8e4c 37343 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 10:05:54.329881 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7431  54ea1d25-b635-4b16-bf9b-e5c4f2ca8e4c 37343 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 01/02/25 10:05:54.329
  I0102 10:05:54.332025 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7431  99d73c42-8ad2-434e-b280-e88a320163d1 37344 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 10:05:54.332103 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7431  99d73c42-8ad2-434e-b280-e88a320163d1 37344 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 01/02/25 10:06:04.333
  I0102 10:06:04.336324 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7431  99d73c42-8ad2-434e-b280-e88a320163d1 37428 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 10:06:04.336595 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7431  99d73c42-8ad2-434e-b280-e88a320163d1 37428 0 2025-01-02 10:05:54 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-01-02 10:05:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0102 10:06:14.339059 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7431" for this suite. @ 01/02/25 10:06:14.358
• [20.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 01/02/25 10:06:14.376
  I0102 10:06:14.376965 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 10:06:14.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:14.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:14.396
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/02/25 10:06:14.398
  STEP: Saw pod success @ 01/02/25 10:06:18.416
  I0102 10:06:18.423027 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-37213442-ea0e-476d-b7c9-233af1c8c17a container test-container: <nil>
  STEP: delete the pod @ 01/02/25 10:06:18.447
  I0102 10:06:18.479350 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6852" for this suite. @ 01/02/25 10:06:18.483
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 01/02/25 10:06:18.508
  I0102 10:06:18.508896 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 10:06:18.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:18.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:18.529
  I0102 10:06:18.531321 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/02/25 10:06:19.478
  I0102 10:06:19.478955 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-7975 --namespace=crd-publish-openapi-7975 create -f -'
  I0102 10:06:21.584542 23 builder.go:146] stderr: ""
  I0102 10:06:21.584585 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-185-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0102 10:06:21.584648 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-7975 --namespace=crd-publish-openapi-7975 delete e2e-test-crd-publish-openapi-185-crds test-cr'
  I0102 10:06:21.646414 23 builder.go:146] stderr: ""
  I0102 10:06:21.646453 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-185-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0102 10:06:21.646490 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-7975 --namespace=crd-publish-openapi-7975 apply -f -'
  I0102 10:06:21.706724 23 builder.go:146] stderr: ""
  I0102 10:06:21.706811 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-185-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0102 10:06:21.706853 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-7975 --namespace=crd-publish-openapi-7975 delete e2e-test-crd-publish-openapi-185-crds test-cr'
  I0102 10:06:21.757823 23 builder.go:146] stderr: ""
  I0102 10:06:21.757855 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-185-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 01/02/25 10:06:21.757
  I0102 10:06:21.758023 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-7975 explain e2e-test-crd-publish-openapi-185-crds'
  I0102 10:06:21.802835 23 builder.go:146] stderr: ""
  I0102 10:06:21.802887 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-185-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0102 10:06:23.155724 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7975" for this suite. @ 01/02/25 10:06:23.16
• [4.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 01/02/25 10:06:23.164
  I0102 10:06:23.164687 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-pred @ 01/02/25 10:06:23.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:23.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:23.177
  I0102 10:06:23.178968 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0102 10:06:23.266417 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0102 10:06:23.269420 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-103 before test
  I0102 10:06:23.327743 23 predicates.go:957] helm-install-one-longhorn-j7cts from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.327776 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:06:23.327786 23 predicates.go:957] helm-install-one-metallb-5cplm from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.327793 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:06:23.327821 23 predicates.go:957] helm-install-one-traefik-lsm6x from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.327828 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:06:23.327836 23 predicates.go:957] helm-install-rke2-metrics-server-vsc4h from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.327842 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:06:23.327850 23 predicates.go:957] helm-install-rke2-snapshot-controller-5vllt from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.327856 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:06:23.327864 23 predicates.go:957] helm-install-rke2-snapshot-controller-crd-j9tmw from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.327870 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:06:23.383860 23 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-2cckd from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.383938 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:06:23.384079 23 predicates.go:957] kube-proxy-oneke-ip-192-168-150-103 from kube-system started at 2025-01-02 08:53:05 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.384190 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0102 10:06:23.384271 23 predicates.go:957] rke2-canal-pkbjj from kube-system started at 2025-01-02 08:53:06 +0000 UTC (2 container statuses recorded)
  I0102 10:06:23.384355 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0102 10:06:23.384431 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0102 10:06:23.384508 23 predicates.go:957] rke2-coredns-rke2-coredns-9579797d8-7ztp8 from kube-system started at 2025-01-02 08:53:32 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.384583 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0102 10:06:23.384667 23 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-78db5d674-nfmvf from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.384800 23 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0102 10:06:23.384865 23 predicates.go:957] rke2-metrics-server-7c85d458bd-8v2m5 from kube-system started at 2025-01-02 08:53:34 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.384932 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0102 10:06:23.385024 23 predicates.go:957] rke2-multus-rke2-whereabouts-2rllf from kube-system started at 2025-01-02 08:53:06 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.385290 23 predicates.go:959] 	Container rke2-whereabouts ready: true, restart count 1
  I0102 10:06:23.385370 23 predicates.go:957] rke2-multus-ztfpd from kube-system started at 2025-01-02 08:53:06 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.385474 23 predicates.go:959] 	Container kube-rke2-multus ready: true, restart count 0
  I0102 10:06:23.385616 23 predicates.go:957] rke2-snapshot-controller-65bc6fbd57-ptsnl from kube-system started at 2025-01-02 08:53:34 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.385741 23 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0102 10:06:23.385843 23 predicates.go:957] rke2-snapshot-validation-webhook-859c7896df-nzq94 from kube-system started at 2025-01-02 08:53:32 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.385936 23 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0102 10:06:23.386023 23 predicates.go:957] csi-attacher-8464bbbfbb-kh98w from longhorn-system started at 2025-01-02 08:55:26 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.386148 23 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0102 10:06:23.386223 23 predicates.go:957] csi-provisioner-d49d45b74-7sbfz from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.386303 23 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0102 10:06:23.386384 23 predicates.go:957] csi-provisioner-d49d45b74-t25rj from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.386452 23 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0102 10:06:23.386581 23 predicates.go:957] csi-resizer-84cb56f65d-wpcmc from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.386714 23 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0102 10:06:23.386830 23 predicates.go:957] csi-snapshotter-798cbc54c9-pc88b from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.386929 23 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0102 10:06:23.387073 23 predicates.go:957] engine-image-ei-51cc7b9c-x5zgv from longhorn-system started at 2025-01-02 08:53:57 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.387214 23 predicates.go:959] 	Container engine-image-ei-51cc7b9c ready: true, restart count 0
  I0102 10:06:23.387346 23 predicates.go:957] instance-manager-9a67f2b20f30eb18f131e1fe823ac093 from longhorn-system started at 2025-01-02 08:53:57 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.387411 23 predicates.go:959] 	Container instance-manager ready: true, restart count 0
  I0102 10:06:23.387488 23 predicates.go:957] longhorn-csi-plugin-9z6gl from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (3 container statuses recorded)
  I0102 10:06:23.387550 23 predicates.go:959] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0102 10:06:23.387653 23 predicates.go:959] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0102 10:06:23.387770 23 predicates.go:959] 	Container node-driver-registrar ready: true, restart count 0
  I0102 10:06:23.387888 23 predicates.go:957] longhorn-manager-7n279 from longhorn-system started at 2025-01-02 08:53:36 +0000 UTC (2 container statuses recorded)
  I0102 10:06:23.387982 23 predicates.go:959] 	Container longhorn-manager ready: true, restart count 0
  I0102 10:06:23.388077 23 predicates.go:959] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0102 10:06:23.388147 23 predicates.go:957] one-metallb-controller-6f47d95d95-dc4b8 from metallb-system started at 2025-01-02 08:53:36 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.388225 23 predicates.go:959] 	Container controller ready: true, restart count 0
  I0102 10:06:23.388308 23 predicates.go:957] one-metallb-speaker-fx5tn from metallb-system started at 2025-01-02 08:53:36 +0000 UTC (4 container statuses recorded)
  I0102 10:06:23.388459 23 predicates.go:959] 	Container frr ready: true, restart count 0
  I0102 10:06:23.388517 23 predicates.go:959] 	Container frr-metrics ready: true, restart count 0
  I0102 10:06:23.388643 23 predicates.go:959] 	Container reloader ready: true, restart count 0
  I0102 10:06:23.388760 23 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0102 10:06:23.388906 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-02 09:09:14 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.389011 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0102 10:06:23.389070 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-rfqcx from sonobuoy started at 2025-01-02 09:09:17 +0000 UTC (2 container statuses recorded)
  I0102 10:06:23.389206 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0102 10:06:23.389277 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0102 10:06:23.389414 23 predicates.go:957] one-traefik-7d55ff8d54-rpxbr from traefik-system started at 2025-01-02 08:53:35 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.389540 23 predicates.go:959] 	Container one-traefik ready: true, restart count 0
  I0102 10:06:23.389630 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-105 before test
  I0102 10:06:23.402041 23 predicates.go:957] kube-proxy-oneke-ip-192-168-150-105 from kube-system started at 2025-01-02 09:02:35 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.402235 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0102 10:06:23.402394 23 predicates.go:957] rke2-canal-hcz42 from kube-system started at 2025-01-02 09:02:36 +0000 UTC (2 container statuses recorded)
  I0102 10:06:23.402477 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0102 10:06:23.402657 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0102 10:06:23.402736 23 predicates.go:957] rke2-multus-rke2-whereabouts-g2wp9 from kube-system started at 2025-01-02 09:14:59 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.402827 23 predicates.go:959] 	Container rke2-whereabouts ready: true, restart count 0
  I0102 10:06:23.402959 23 predicates.go:957] rke2-multus-zt6l7 from kube-system started at 2025-01-02 09:02:36 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.403046 23 predicates.go:959] 	Container kube-rke2-multus ready: true, restart count 0
  I0102 10:06:23.403178 23 predicates.go:957] engine-image-ei-51cc7b9c-qx4dn from longhorn-system started at 2025-01-02 09:14:59 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.403306 23 predicates.go:959] 	Container engine-image-ei-51cc7b9c ready: true, restart count 0
  I0102 10:06:23.403487 23 predicates.go:957] instance-manager-34052943e1fa230ecb64d623e9fcdb0c from longhorn-system started at 2025-01-02 09:15:05 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.403573 23 predicates.go:959] 	Container instance-manager ready: true, restart count 0
  I0102 10:06:23.403741 23 predicates.go:957] longhorn-csi-plugin-hlcw4 from longhorn-system started at 2025-01-02 09:14:30 +0000 UTC (3 container statuses recorded)
  I0102 10:06:23.403838 23 predicates.go:959] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0102 10:06:23.403933 23 predicates.go:959] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0102 10:06:23.404026 23 predicates.go:959] 	Container node-driver-registrar ready: true, restart count 0
  I0102 10:06:23.404118 23 predicates.go:957] longhorn-manager-75dfc from longhorn-system started at 2025-01-02 09:14:59 +0000 UTC (2 container statuses recorded)
  I0102 10:06:23.404237 23 predicates.go:959] 	Container longhorn-manager ready: true, restart count 0
  I0102 10:06:23.404326 23 predicates.go:959] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0102 10:06:23.404418 23 predicates.go:957] one-metallb-speaker-q25qw from metallb-system started at 2025-01-02 09:14:29 +0000 UTC (4 container statuses recorded)
  I0102 10:06:23.404594 23 predicates.go:959] 	Container frr ready: true, restart count 0
  I0102 10:06:23.404678 23 predicates.go:959] 	Container frr-metrics ready: true, restart count 0
  I0102 10:06:23.404802 23 predicates.go:959] 	Container reloader ready: true, restart count 0
  I0102 10:06:23.404950 23 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0102 10:06:23.405067 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-j9zwr from sonobuoy started at 2025-01-02 09:09:17 +0000 UTC (2 container statuses recorded)
  I0102 10:06:23.405176 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0102 10:06:23.405278 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0102 10:06:23.405409 23 predicates.go:957] one-traefik-7d55ff8d54-d27d5 from traefik-system started at 2025-01-02 09:14:32 +0000 UTC (1 container statuses recorded)
  I0102 10:06:23.405497 23 predicates.go:959] 	Container one-traefik ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/02/25 10:06:23.405
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/02/25 10:06:25.418
  STEP: Trying to apply a random label on the found node. @ 01/02/25 10:06:25.425
  STEP: verifying the node has the label kubernetes.io/e2e-68339d43-361e-4768-9d5c-38347fd27fbf 42 @ 01/02/25 10:06:25.435
  STEP: Trying to relaunch the pod, now with labels. @ 01/02/25 10:06:25.438
  STEP: removing the label kubernetes.io/e2e-68339d43-361e-4768-9d5c-38347fd27fbf off the node oneke-ip-192-168-150-105 @ 01/02/25 10:06:27.473
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-68339d43-361e-4768-9d5c-38347fd27fbf @ 01/02/25 10:06:27.49
  I0102 10:06:27.493595 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2154" for this suite. @ 01/02/25 10:06:27.496
• [4.335 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 01/02/25 10:06:27.5
  I0102 10:06:27.500628 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename lease-test @ 01/02/25 10:06:27.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:27.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:27.514
  I0102 10:06:27.540350 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-982" for this suite. @ 01/02/25 10:06:27.542
• [0.045 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 01/02/25 10:06:27.546
  I0102 10:06:27.546140 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 10:06:27.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:27.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:27.615
  STEP: Counting existing ResourceQuota @ 01/02/25 10:06:27.616
  STEP: Creating a ResourceQuota @ 01/02/25 10:06:32.618
  STEP: Ensuring resource quota status is calculated @ 01/02/25 10:06:32.622
  STEP: Creating a Service @ 01/02/25 10:06:34.63
  STEP: Creating a NodePort Service @ 01/02/25 10:06:34.648
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 01/02/25 10:06:34.665
  STEP: Ensuring resource quota status captures service creation @ 01/02/25 10:06:34.674
  STEP: Deleting Services @ 01/02/25 10:06:36.677
  STEP: Ensuring resource quota status released usage @ 01/02/25 10:06:36.714
  I0102 10:06:38.717948 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3860" for this suite. @ 01/02/25 10:06:38.721
• [11.179 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 01/02/25 10:06:38.726
  I0102 10:06:38.727147 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replicaset @ 01/02/25 10:06:38.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:38.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:38.741
  I0102 10:06:38.743197 23 replica_set.go:191] Creating ReplicaSet my-hostname-basic-78abb095-9253-43b6-9ab3-47134bd0fd97
  I0102 10:06:38.747630 23 resource.go:87] Pod name my-hostname-basic-78abb095-9253-43b6-9ab3-47134bd0fd97: Found 0 pods out of 1
  I0102 10:06:43.755913 23 resource.go:87] Pod name my-hostname-basic-78abb095-9253-43b6-9ab3-47134bd0fd97: Found 1 pods out of 1
  I0102 10:06:43.755943 23 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-78abb095-9253-43b6-9ab3-47134bd0fd97" is running
  I0102 10:06:43.757399 23 replica_set.go:220] Pod "my-hostname-basic-78abb095-9253-43b6-9ab3-47134bd0fd97-6gl56" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 10:06:39 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 10:06:38 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 10:06:39 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 10:06:39 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-01-02 10:06:38 +0000 UTC Reason: Message:}])
  I0102 10:06:43.757432 23 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 01/02/25 10:06:43.757
  I0102 10:06:43.764543 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3734" for this suite. @ 01/02/25 10:06:43.766
• [5.044 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 01/02/25 10:06:43.772
  I0102 10:06:43.772554 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename containers @ 01/02/25 10:06:43.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:43.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:43.784
  STEP: Creating a pod to test override command @ 01/02/25 10:06:43.785
  STEP: Saw pod success @ 01/02/25 10:06:47.805
  I0102 10:06:47.812221 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod client-containers-c30242d6-b3c6-4a64-b91b-f3523b0caaf3 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 10:06:47.827
  I0102 10:06:47.842659 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3880" for this suite. @ 01/02/25 10:06:47.845
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 01/02/25 10:06:47.851
  I0102 10:06:47.851777 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename security-context-test @ 01/02/25 10:06:47.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:47.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:47.865
  I0102 10:06:51.889347 23 security_context.go:538] Got logs for pod "busybox-privileged-false-84266490-6915-4846-9ae9-031394e248cf": "ip: RTNETLINK answers: Operation not permitted\n"
  I0102 10:06:51.889441 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-607" for this suite. @ 01/02/25 10:06:51.891
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 01/02/25 10:06:51.896
  I0102 10:06:51.896275 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 10:06:51.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:51.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:51.91
  STEP: Create set of pods @ 01/02/25 10:06:51.911
  I0102 10:06:51.917269 23 pods.go:871] created test-pod-1
  I0102 10:06:51.932555 23 pods.go:871] created test-pod-2
  I0102 10:06:51.944479 23 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 01/02/25 10:06:51.944
  STEP: waiting for all pods to be deleted @ 01/02/25 10:06:54.059
  I0102 10:06:54.061578 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0102 10:06:55.062353 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0102 10:06:56.063106 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0102 10:06:57.085159 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-481" for this suite. @ 01/02/25 10:06:57.087
• [5.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 01/02/25 10:06:57.094
  I0102 10:06:57.094789 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 10:06:57.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:06:57.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:06:57.105
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 10:06:57.107
  STEP: Saw pod success @ 01/02/25 10:07:01.131
  I0102 10:07:01.136267 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-d5c8daaa-ba6e-41e1-8412-724ef4ac2fe0 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 10:07:01.148
  I0102 10:07:01.165949 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1592" for this suite. @ 01/02/25 10:07:01.169
• [4.078 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 01/02/25 10:07:01.174
  I0102 10:07:01.174983 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir-wrapper @ 01/02/25 10:07:01.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:07:01.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:07:01.187
  STEP: Cleaning up the secret @ 01/02/25 10:07:03.21
  STEP: Cleaning up the configmap @ 01/02/25 10:07:03.214
  STEP: Cleaning up the pod @ 01/02/25 10:07:03.218
  I0102 10:07:03.226334 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7399" for this suite. @ 01/02/25 10:07:03.229
• [2.059 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 01/02/25 10:07:03.233
  I0102 10:07:03.233824 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename server-version @ 01/02/25 10:07:03.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:07:03.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:07:03.246
  STEP: Request ServerVersion @ 01/02/25 10:07:03.248
  STEP: Confirm major version @ 01/02/25 10:07:03.248
  I0102 10:07:03.248751 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 01/02/25 10:07:03.248
  I0102 10:07:03.248934 23 server_version.go:58] cleanMinorVersion: 31
  I0102 10:07:03.249039 23 server_version.go:62] Minor version: 31
  I0102 10:07:03.249216 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3719" for this suite. @ 01/02/25 10:07:03.33
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 01/02/25 10:07:03.337
  I0102 10:07:03.337483 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 10:07:03.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:07:03.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:07:03.348
  STEP: creating secret secrets-2174/secret-test-ddd312be-a79f-47b5-8433-cd9c04c495d1 @ 01/02/25 10:07:03.349
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:07:03.353
  STEP: Saw pod success @ 01/02/25 10:07:07.375
  I0102 10:07:07.377230 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-dd92db88-ddd4-4a61-a31f-65d01383b9a2 container env-test: <nil>
  STEP: delete the pod @ 01/02/25 10:07:07.381
  I0102 10:07:07.395617 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2174" for this suite. @ 01/02/25 10:07:07.398
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 01/02/25 10:07:07.406
  I0102 10:07:07.406178 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:07:07.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:07:07.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:07:07.419
  STEP: Creating configMap with name projected-configmap-test-volume-map-9aa5cd04-5d1d-48ac-9be9-2f45bba3587f @ 01/02/25 10:07:07.42
  STEP: Creating a pod to test consume configMaps @ 01/02/25 10:07:07.423
  STEP: Saw pod success @ 01/02/25 10:07:11.445
  I0102 10:07:11.453118 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-configmaps-f696886b-821b-4ff4-9ce3-97d62b150c15 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 10:07:11.462
  I0102 10:07:11.478144 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6074" for this suite. @ 01/02/25 10:07:11.481
• [4.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 01/02/25 10:07:11.485
  I0102 10:07:11.485161 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:07:11.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:07:11.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:07:11.498
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 10:07:11.5
  STEP: Saw pod success @ 01/02/25 10:07:15.528
  I0102 10:07:15.532774 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-7a47c2d4-628c-46a0-9221-255e642d8048 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 10:07:15.54
  I0102 10:07:15.554417 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1679" for this suite. @ 01/02/25 10:07:15.557
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 01/02/25 10:07:15.562
  I0102 10:07:15.562337 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:07:15.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:07:15.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:07:15.577
  STEP: Creating configMap with name projected-configmap-test-volume-fa5d41fc-0627-4f0d-bc09-17217084fc6f @ 01/02/25 10:07:15.579
  STEP: Creating a pod to test consume configMaps @ 01/02/25 10:07:15.581
  STEP: Saw pod success @ 01/02/25 10:07:19.607
  I0102 10:07:19.616413 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-configmaps-af47cab9-f1db-4f19-8d58-e727cee695e5 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 10:07:19.634
  I0102 10:07:19.653156 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4675" for this suite. @ 01/02/25 10:07:19.655
• [4.097 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 01/02/25 10:07:19.659
  I0102 10:07:19.659648 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename dns @ 01/02/25 10:07:19.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:07:19.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:07:19.676
  STEP: Creating a test headless service @ 01/02/25 10:07:19.678
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4802 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4802;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4802 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4802;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4802.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4802.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4802.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4802.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4802.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4802.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4802.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4802.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4802.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4802.svc;check="$$(dig +notcp +noall +answer +search 211.167.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.167.211_udp@PTR;check="$$(dig +tcp +noall +answer +search 211.167.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.167.211_tcp@PTR;sleep 1; done
   @ 01/02/25 10:07:19.696
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4802 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4802;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4802 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4802;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4802.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4802.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4802.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4802.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4802.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4802.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4802.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4802.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4802.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4802.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4802.svc;check="$$(dig +notcp +noall +answer +search 211.167.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.167.211_udp@PTR;check="$$(dig +tcp +noall +answer +search 211.167.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.167.211_tcp@PTR;sleep 1; done
   @ 01/02/25 10:07:19.696
  STEP: creating a pod to probe DNS @ 01/02/25 10:07:19.696
  STEP: submitting the pod to kubernetes @ 01/02/25 10:07:19.696
  STEP: retrieving the pod @ 01/02/25 10:07:21.712
  STEP: looking for the results for each expected name from probers @ 01/02/25 10:07:21.714
  I0102 10:07:21.720322 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.722706 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.724799 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.726776 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.728655 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.730349 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.732460 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.734156 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.741801 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.743140 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.744651 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.747076 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.749343 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.751112 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.753100 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.754979 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:21.763061 23 dns_common.go:489] Lookups using dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4802 wheezy_tcp@dns-test-service.dns-4802 wheezy_udp@dns-test-service.dns-4802.svc wheezy_tcp@dns-test-service.dns-4802.svc wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4802 jessie_tcp@dns-test-service.dns-4802 jessie_udp@dns-test-service.dns-4802.svc jessie_tcp@dns-test-service.dns-4802.svc jessie_udp@_http._tcp.dns-test-service.dns-4802.svc jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc]

  I0102 10:07:21.766859 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:07:21.769947 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:07:21.773116 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 10:07:26.717563 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.719567 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.721258 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.723090 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.724920 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.726456 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.728273 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.730244 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.738493 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.739995 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.741818 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.743228 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.744589 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.746160 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.747574 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.749031 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:26.755532 23 dns_common.go:489] Lookups using dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4802 wheezy_tcp@dns-test-service.dns-4802 wheezy_udp@dns-test-service.dns-4802.svc wheezy_tcp@dns-test-service.dns-4802.svc wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4802 jessie_tcp@dns-test-service.dns-4802 jessie_udp@dns-test-service.dns-4802.svc jessie_tcp@dns-test-service.dns-4802.svc jessie_udp@_http._tcp.dns-test-service.dns-4802.svc jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc]

  I0102 10:07:26.758535 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:07:26.761143 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:07:26.763485 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 10:07:31.718096 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.721696 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.724204 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.726272 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.728407 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.730816 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.732716 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.734872 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.744919 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.746813 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.748467 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.750163 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.751937 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.753601 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.755276 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.756823 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:31.762138 23 dns_common.go:489] Lookups using dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4802 wheezy_tcp@dns-test-service.dns-4802 wheezy_udp@dns-test-service.dns-4802.svc wheezy_tcp@dns-test-service.dns-4802.svc wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4802 jessie_tcp@dns-test-service.dns-4802 jessie_udp@dns-test-service.dns-4802.svc jessie_tcp@dns-test-service.dns-4802.svc jessie_udp@_http._tcp.dns-test-service.dns-4802.svc jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc]

  I0102 10:07:31.765083 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:07:31.767644 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:07:31.770190 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 10:07:36.718028 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.721713 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.726111 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.728825 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.731032 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.733180 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.735180 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.737248 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.745372 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.747092 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.748802 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.750711 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.752531 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.754341 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.756083 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.757885 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:36.764038 23 dns_common.go:489] Lookups using dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4802 wheezy_tcp@dns-test-service.dns-4802 wheezy_udp@dns-test-service.dns-4802.svc wheezy_tcp@dns-test-service.dns-4802.svc wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4802 jessie_tcp@dns-test-service.dns-4802 jessie_udp@dns-test-service.dns-4802.svc jessie_tcp@dns-test-service.dns-4802.svc jessie_udp@_http._tcp.dns-test-service.dns-4802.svc jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc]

  I0102 10:07:36.767576 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:07:36.770527 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:07:36.774405 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 10:07:41.726507 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.734288 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.741064 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.744374 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.747044 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.749559 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.751581 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.753437 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.762033 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.763636 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.765149 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.766561 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.767882 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.769303 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.770726 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.772062 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:41.777272 23 dns_common.go:489] Lookups using dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4802 wheezy_tcp@dns-test-service.dns-4802 wheezy_udp@dns-test-service.dns-4802.svc wheezy_tcp@dns-test-service.dns-4802.svc wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4802 jessie_tcp@dns-test-service.dns-4802 jessie_udp@dns-test-service.dns-4802.svc jessie_tcp@dns-test-service.dns-4802.svc jessie_udp@_http._tcp.dns-test-service.dns-4802.svc jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc]

  I0102 10:07:41.781665 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:07:41.784668 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:07:41.787231 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 10:07:46.722870 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.730109 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.733915 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.737156 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.741037 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.744221 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.747172 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.749833 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.759201 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.760993 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.762385 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.763805 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.765177 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.766459 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.767786 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.769085 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:46.774963 23 dns_common.go:489] Lookups using dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4802 wheezy_tcp@dns-test-service.dns-4802 wheezy_udp@dns-test-service.dns-4802.svc wheezy_tcp@dns-test-service.dns-4802.svc wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4802 jessie_tcp@dns-test-service.dns-4802 jessie_udp@dns-test-service.dns-4802.svc jessie_tcp@dns-test-service.dns-4802.svc jessie_udp@_http._tcp.dns-test-service.dns-4802.svc jessie_tcp@_http._tcp.dns-test-service.dns-4802.svc]

  I0102 10:07:46.778361 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:07:46.782083 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:07:46.785103 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 10:07:51.726989 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:51.731201 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4802 from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:51.735133 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:51.741782 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:51.744337 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc from pod dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a: the server could not find the requested resource (get pods dns-test-046eded3-db08-47f5-a717-6ca06ed0411a)
  I0102 10:07:51.779039 23 dns_common.go:489] Lookups using dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a failed for: [wheezy_udp@dns-test-service.dns-4802 wheezy_tcp@dns-test-service.dns-4802 wheezy_udp@dns-test-service.dns-4802.svc wheezy_udp@_http._tcp.dns-test-service.dns-4802.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4802.svc]

  I0102 10:07:51.782586 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:07:51.786075 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:07:51.789381 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I0102 10:07:56.756883 23 dns_common.go:527] DNS probes using dns-4802/dns-test-046eded3-db08-47f5-a717-6ca06ed0411a succeeded

  STEP: deleting the pod @ 01/02/25 10:07:56.757
  STEP: deleting the test service @ 01/02/25 10:07:56.782
  STEP: deleting the test headless service @ 01/02/25 10:07:56.803
  I0102 10:07:56.817505 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4802" for this suite. @ 01/02/25 10:07:56.822
• [37.174 seconds]
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 01/02/25 10:07:56.834
  I0102 10:07:56.834364 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 10:07:56.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:07:56.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:07:56.848
  STEP: Creating secret with name s-test-opt-del-59b6a903-8527-40c1-8dae-100015fab701 @ 01/02/25 10:07:56.922
  STEP: Creating secret with name s-test-opt-upd-b39c2a91-9e21-43cb-b0c0-6c0900bcb284 @ 01/02/25 10:07:56.926
  STEP: Creating the pod @ 01/02/25 10:07:56.929
  STEP: Deleting secret s-test-opt-del-59b6a903-8527-40c1-8dae-100015fab701 @ 01/02/25 10:07:58.949
  STEP: Updating secret s-test-opt-upd-b39c2a91-9e21-43cb-b0c0-6c0900bcb284 @ 01/02/25 10:07:58.953
  STEP: Creating secret with name s-test-opt-create-187a9cb4-87f5-476d-ae08-2a8158fb4e14 @ 01/02/25 10:07:58.957
  STEP: waiting to observe update in volume @ 01/02/25 10:07:58.962
  I0102 10:08:00.978587 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2679" for this suite. @ 01/02/25 10:08:00.983
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 01/02/25 10:08:00.991
  I0102 10:08:00.991488 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 10:08:00.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:08:01.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:08:01.014
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 01/02/25 10:08:01.016
  STEP: Saw pod success @ 01/02/25 10:08:05.037
  I0102 10:08:05.038921 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-f39af112-9ae9-4665-b891-01b455f43414 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 10:08:05.044
  I0102 10:08:05.056551 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9832" for this suite. @ 01/02/25 10:08:05.059
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 01/02/25 10:08:05.065
  I0102 10:08:05.065087 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 10:08:05.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:08:05.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:08:05.078
  I0102 10:08:05.080707 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/02/25 10:08:06.627
  I0102 10:08:06.627305 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3896 --namespace=crd-publish-openapi-3896 create -f -'
  I0102 10:08:08.707609 23 builder.go:146] stderr: ""
  I0102 10:08:08.707813 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8755-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0102 10:08:08.707912 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3896 --namespace=crd-publish-openapi-3896 delete e2e-test-crd-publish-openapi-8755-crds test-cr'
  I0102 10:08:08.776301 23 builder.go:146] stderr: ""
  I0102 10:08:08.776335 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8755-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0102 10:08:08.776372 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3896 --namespace=crd-publish-openapi-3896 apply -f -'
  I0102 10:08:08.826911 23 builder.go:146] stderr: ""
  I0102 10:08:08.827006 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8755-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0102 10:08:08.827053 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3896 --namespace=crd-publish-openapi-3896 delete e2e-test-crd-publish-openapi-8755-crds test-cr'
  I0102 10:08:08.876356 23 builder.go:146] stderr: ""
  I0102 10:08:08.876400 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8755-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/02/25 10:08:08.876
  I0102 10:08:08.876461 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-3896 explain e2e-test-crd-publish-openapi-8755-crds'
  I0102 10:08:08.924538 23 builder.go:146] stderr: ""
  I0102 10:08:08.924717 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8755-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0102 10:08:10.280519 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3896" for this suite. @ 01/02/25 10:08:10.287
• [5.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 01/02/25 10:08:10.292
  I0102 10:08:10.292219 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 10:08:10.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:08:10.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:08:10.303
  STEP: Creating pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613 @ 01/02/25 10:08:10.304
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/02/25 10:08:12.317
  I0102 10:08:12.318484 23 container_probe.go:1749] Initial restart count of pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 is 0
  I0102 10:08:12.319603 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:14.321986 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:16.326204 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:18.334185 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:20.341722 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:22.344401 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:24.353672 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:26.361350 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:28.364178 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:30.367253 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:32.370351 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:34.377636 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:36.385672 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:38.394793 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:40.398527 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:42.406150 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:44.413759 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:46.421836 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:48.427929 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:50.431818 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:52.440148 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:54.444175 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:56.448180 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:08:58.451347 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:00.453937 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:02.466173 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:04.475789 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:06.479843 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:08.485193 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:10.494656 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:12.502185 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:14.512468 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:16.524641 23 container_probe.go:1759] Get pod test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 in namespace container-probe-1613
  I0102 10:09:16.524761 23 container_probe.go:1763] Restart count of pod container-probe-1613/test-grpc-84265aaa-cf94-4ede-864f-97c06ecab620 is now 1 (1m4.206137145s elapsed)
  STEP: deleting the pod @ 01/02/25 10:09:16.525
  I0102 10:09:16.535547 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1613" for this suite. @ 01/02/25 10:09:16.538
• [66.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 01/02/25 10:09:16.541
  I0102 10:09:16.541416 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:09:16.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:09:16.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:09:16.554
  STEP: creating service multi-endpoint-test in namespace services-4787 @ 01/02/25 10:09:16.556
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4787 to expose endpoints map[] @ 01/02/25 10:09:16.564
  I0102 10:09:16.573824 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4787 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4787 @ 01/02/25 10:09:16.573
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4787 to expose endpoints map[pod1:[100]] @ 01/02/25 10:09:18.592
  I0102 10:09:18.603290 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4787 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4787 @ 01/02/25 10:09:18.603
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4787 to expose endpoints map[pod1:[100] pod2:[101]] @ 01/02/25 10:09:20.62
  I0102 10:09:20.629632 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4787 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 01/02/25 10:09:20.629
  I0102 10:09:20.629707 23 resource.go:361] Creating new exec pod
  I0102 10:09:23.645925 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-4787 exec execpodsp6np -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0102 10:09:23.779639 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0102 10:09:23.779701 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 10:09:23.779775 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-4787 exec execpodsp6np -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.155.199 80'
  I0102 10:09:23.887624 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.155.199 80\nConnection to 10.43.155.199 80 port [tcp/http] succeeded!\n"
  I0102 10:09:23.887693 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 10:09:23.887761 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-4787 exec execpodsp6np -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0102 10:09:23.984335 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0102 10:09:23.984381 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 10:09:23.984440 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-4787 exec execpodsp6np -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.155.199 81'
  I0102 10:09:24.081966 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.155.199 81\nConnection to 10.43.155.199 81 port [tcp/*] succeeded!\n"
  I0102 10:09:24.082001 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4787 @ 01/02/25 10:09:24.082
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4787 to expose endpoints map[pod2:[101]] @ 01/02/25 10:09:24.099
  I0102 10:09:24.111869 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4787 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4787 @ 01/02/25 10:09:24.111
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4787 to expose endpoints map[] @ 01/02/25 10:09:24.127
  I0102 10:09:24.145888 23 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4787 exposes endpoints map[]
  I0102 10:09:24.171431 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4787" for this suite. @ 01/02/25 10:09:24.176
• [7.639 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 01/02/25 10:09:24.18
  I0102 10:09:24.180948 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 10:09:24.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:09:24.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:09:24.206
  STEP: Creating the pod @ 01/02/25 10:09:24.208
  I0102 10:09:26.765500 23 pod_client.go:173] Successfully updated pod "labelsupdate1f876e8c-6ff9-4358-b1db-02c1d635ad07"
  I0102 10:09:30.794138 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6972" for this suite. @ 01/02/25 10:09:30.799
• [6.625 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 01/02/25 10:09:30.806
  I0102 10:09:30.807021 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename csi-storageclass @ 01/02/25 10:09:30.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:09:30.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:09:30.821
  STEP: Creating a StorageClass @ 01/02/25 10:09:30.822
  STEP: Get StorageClass "e2e-qvzwn" @ 01/02/25 10:09:30.825
  STEP: Patching the StorageClass "e2e-qvzwn" @ 01/02/25 10:09:30.826
  STEP: Delete StorageClass "e2e-qvzwn" @ 01/02/25 10:09:30.831
  STEP: Confirm deletion of StorageClass "e2e-qvzwn" @ 01/02/25 10:09:30.834
  STEP: Create a replacement StorageClass @ 01/02/25 10:09:30.837
  STEP: Updating StorageClass "e2e-v2-x9wm2" @ 01/02/25 10:09:30.839
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-x9wm2=updated" @ 01/02/25 10:09:30.843
  STEP: Deleting StorageClass "e2e-v2-x9wm2" via DeleteCollection @ 01/02/25 10:09:30.845
  STEP: Confirm deletion of StorageClass "e2e-v2-x9wm2" @ 01/02/25 10:09:30.848
  I0102 10:09:30.849299 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-9706" for this suite. @ 01/02/25 10:09:30.903
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 01/02/25 10:09:30.91
  I0102 10:09:30.910258 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename statefulset @ 01/02/25 10:09:30.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:09:30.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:09:30.924
  STEP: Creating service test in namespace statefulset-4870 @ 01/02/25 10:09:30.926
  I0102 10:09:30.943326 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0102 10:09:40.946258 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 01/02/25 10:09:40.964
  I0102 10:09:41.010022 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0102 10:09:41.010369 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0102 10:09:51.006152 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0102 10:09:51.006278 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 01/02/25 10:09:51.009
  STEP: Delete all of the StatefulSets @ 01/02/25 10:09:51.01
  STEP: Verify that StatefulSets have been deleted @ 01/02/25 10:09:51.015
  I0102 10:09:51.016434 23 statefulset.go:138] Deleting all statefulset in ns statefulset-4870
  I0102 10:09:51.024696 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4870" for this suite. @ 01/02/25 10:09:51.042
• [20.141 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 01/02/25 10:09:51.051
  I0102 10:09:51.051785 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 10:09:51.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:09:51.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:09:51.067
  STEP: creating Agnhost RC @ 01/02/25 10:09:51.069
  I0102 10:09:51.069529 23 kubectl.go:1537] namespace kubectl-800
  I0102 10:09:51.069783 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-800 create -f -'
  I0102 10:09:51.184140 23 builder.go:146] stderr: ""
  I0102 10:09:51.184192 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/02/25 10:09:51.184
  I0102 10:09:52.186943 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 10:09:52.186971 23 framework.go:733] Found 0 / 1
  I0102 10:09:53.186568 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 10:09:53.186599 23 framework.go:733] Found 1 / 1
  I0102 10:09:53.186620 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0102 10:09:53.188365 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 10:09:53.188390 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0102 10:09:53.188399 23 kubectl.go:1544] wait on agnhost-primary startup in kubectl-800 
  I0102 10:09:53.188438 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-800 logs agnhost-primary-r8mc9 agnhost-primary'
  I0102 10:09:53.241352 23 builder.go:146] stderr: ""
  I0102 10:09:53.241396 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 01/02/25 10:09:53.241
  I0102 10:09:53.241462 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-800 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0102 10:09:53.310397 23 builder.go:146] stderr: ""
  I0102 10:09:53.310429 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I0102 10:09:53.311908 23 utils.go:1203] Service rm2 in namespace kubectl-800 found.
  STEP: exposing service @ 01/02/25 10:09:55.324
  I0102 10:09:55.324177 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-800 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0102 10:09:55.417515 23 builder.go:146] stderr: ""
  I0102 10:09:55.417547 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I0102 10:09:55.418909 23 utils.go:1203] Service rm3 in namespace kubectl-800 found.
  I0102 10:09:57.421782 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-800" for this suite. @ 01/02/25 10:09:57.423
• [6.376 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 01/02/25 10:09:57.428
  I0102 10:09:57.429268 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename daemonsets @ 01/02/25 10:09:57.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:09:57.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:09:57.444
  I0102 10:09:57.534984 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0102 10:09:57.540036 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0102 10:09:57.626081 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:09:57.626143 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:09:57.628032 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:09:57.628293 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 10:09:58.549048 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:09:58.550089 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:09:58.554102 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 10:09:58.554341 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0102 10:09:58.554497 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0102 10:09:58.558356 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0102 10:10:01.564574 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0102 10:10:01.569121 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0102 10:10:01.569152 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0102 10:10:01.573231 23 daemon_set.go:1193] Wrong image for pod: daemon-set-4xfcj. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0102 10:10:01.573265 23 daemon_set.go:1198] Pod daemon-set-4xfcj is not available
  I0102 10:10:01.665375 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:10:01.665711 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:10:02.577946 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:10:02.578006 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:10:03.586500 23 daemon_set.go:1198] Pod daemon-set-q2wsh is not available
  I0102 10:10:03.590265 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:10:03.590296 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 01/02/25 10:10:03.593
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2415, will wait for the garbage collector to delete the pods @ 01/02/25 10:10:03.593
  I0102 10:10:03.647679 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.835107ms
  I0102 10:10:03.748262 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.578639ms
  I0102 10:10:05.550103 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:10:05.550132 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0102 10:10:05.551399 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"39567"},"items":null}

  I0102 10:10:05.552592 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"39567"},"items":null}

  I0102 10:10:05.556894 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2415" for this suite. @ 01/02/25 10:10:05.558
• [8.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 01/02/25 10:10:05.562
  I0102 10:10:05.562668 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/02/25 10:10:05.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:10:05.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:10:05.575
  I0102 10:10:05.577384 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:10:08.667799 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2685" for this suite. @ 01/02/25 10:10:08.739
• [3.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 01/02/25 10:10:08.747
  I0102 10:10:08.747907 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename prestop @ 01/02/25 10:10:08.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:10:08.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:10:08.762
  STEP: Creating server pod server in namespace prestop-1097 @ 01/02/25 10:10:08.764
  STEP: Waiting for pods to come up. @ 01/02/25 10:10:08.769
  STEP: Creating tester pod tester in namespace prestop-1097 @ 01/02/25 10:10:10.782
  STEP: Deleting pre-stop pod @ 01/02/25 10:10:12.797
  I0102 10:10:17.816975 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 01/02/25 10:10:17.817
  I0102 10:10:17.834238 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1097" for this suite. @ 01/02/25 10:10:17.836
• [9.097 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 01/02/25 10:10:17.846
  I0102 10:10:17.846473 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 01/02/25 10:10:17.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:10:17.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:10:17.865
  STEP: creating a target pod @ 01/02/25 10:10:17.867
  STEP: adding an ephemeral container @ 01/02/25 10:10:19.886
  STEP: checking pod container endpoints @ 01/02/25 10:10:23.909
  I0102 10:10:23.909390 23 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6757 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:10:23.909421 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:10:23.909847 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:10:23.909931 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-6757/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0102 10:10:23.962747 23 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 01/02/25 10:10:23.966
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 01/02/25 10:10:23.968
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 01/02/25 10:10:23.975
  I0102 10:10:23.980809 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6757" for this suite. @ 01/02/25 10:10:23.988
• [6.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 01/02/25 10:10:23.993
  I0102 10:10:23.993536 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename namespaces @ 01/02/25 10:10:23.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:10:24.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:10:24.007
  STEP: Read namespace status @ 01/02/25 10:10:24.009
  I0102 10:10:24.011306 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 01/02/25 10:10:24.011
  I0102 10:10:24.015954 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 01/02/25 10:10:24.015
  I0102 10:10:24.020566 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0102 10:10:24.022010 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2925" for this suite. @ 01/02/25 10:10:24.085
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 01/02/25 10:10:24.09
  I0102 10:10:24.090502 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 10:10:24.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:10:24.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:10:24.106
  STEP: creating Agnhost RC @ 01/02/25 10:10:24.108
  I0102 10:10:24.108854 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-828 create -f -'
  I0102 10:10:24.247778 23 builder.go:146] stderr: ""
  I0102 10:10:24.247833 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 01/02/25 10:10:24.248
  I0102 10:10:25.251699 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 10:10:25.251723 23 framework.go:733] Found 0 / 1
  I0102 10:10:26.252671 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 10:10:26.252716 23 framework.go:733] Found 1 / 1
  I0102 10:10:26.252741 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 01/02/25 10:10:26.252
  I0102 10:10:26.255215 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 10:10:26.255247 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0102 10:10:26.255316 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-828 patch pod agnhost-primary-nrpvh -p {"metadata":{"annotations":{"x":"y"}}}'
  I0102 10:10:26.324532 23 builder.go:146] stderr: ""
  I0102 10:10:26.324584 23 builder.go:147] stdout: "pod/agnhost-primary-nrpvh patched\n"
  STEP: checking annotations @ 01/02/25 10:10:26.324
  I0102 10:10:26.326059 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0102 10:10:26.326075 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0102 10:10:26.326278 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-828" for this suite. @ 01/02/25 10:10:26.328
• [2.241 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 01/02/25 10:10:26.331
  I0102 10:10:26.332000 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:10:26.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:10:26.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:10:26.344
  STEP: creating service multiprotocol-test in namespace services-8263 @ 01/02/25 10:10:26.345
  STEP: creating pod pod1 in namespace services-8263 @ 01/02/25 10:10:26.352
  STEP: Creating pod pod1 in namespace services-8263 @ 01/02/25 10:10:26.352
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8263 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 01/02/25 10:10:28.374
  I0102 10:10:28.378379 23 service.go:4392] successfully validated that service multiprotocol-test in namespace services-8263 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 01/02/25 10:10:28.378
  I0102 10:10:28.378470 23 resource.go:361] Creating new exec pod
  I0102 10:10:30.388685 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.53 80'
  I0102 10:10:30.507173 23 builder.go:146] stderr: "+ + ncecho hostName\n -v -t -w 2 10.43.65.53 80\nConnection to 10.43.65.53 80 port [tcp/http] succeeded!\n"
  I0102 10:10:30.507235 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 10:10:30.507305 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.65.53 80'
  I0102 10:10:34.599577 23 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.65.53 80\n+ echo hostName\nConnection to 10.43.65.53 80 port [udp/*] succeeded!\n"
  I0102 10:10:34.599611 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 01/02/25 10:10:34.599
  I0102 10:10:34.603629 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.53 80'
  I0102 10:10:34.735901 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.65.53 80\n+ echo hostName\nConnection to 10.43.65.53 80 port [tcp/http] succeeded!\n"
  I0102 10:10:34.735961 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 10:10:34.736225 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.65.53 80'
  I0102 10:10:38.847139 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.65.53 80\nConnection to 10.43.65.53 80 port [udp/*] succeeded!\n"
  I0102 10:10:38.847199 23 builder.go:147] stdout: ""
  I0102 10:10:38.847482 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.65.53 80'
  I0102 10:10:42.968278 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.65.53 80\nConnection to 10.43.65.53 80 port [udp/*] succeeded!\n"
  I0102 10:10:42.968401 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 01/02/25 10:10:42.968
  I0102 10:10:42.995026 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.65.53 80'
  I0102 10:10:47.151276 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.65.53 80\nConnection to 10.43.65.53 80 port [udp/*] succeeded!\n"
  I0102 10:10:47.151309 23 builder.go:147] stdout: "pod1"
  I0102 10:10:47.151382 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.53 80'
  I0102 10:10:49.255175 23 builder.go:135] rc: 1
  I0102 10:10:49.255251 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.53 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.65.53 80
  nc: connect to 10.43.65.53 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0102 10:10:49.255326 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.53 80'
  I0102 10:10:51.359059 23 builder.go:135] rc: 1
  I0102 10:10:51.359128 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.53 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.65.53 80
  nc: connect to 10.43.65.53 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0102 10:10:51.359260 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.53 80'
  I0102 10:10:53.483826 23 builder.go:135] rc: 1
  I0102 10:10:53.483882 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8263 exec execpod5mbdt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.65.53 80:
  Command stdout:

  stderr:
  + nc+ echo -v hostName -t
   -w 2 10.43.65.53 80
  nc: connect to 10.43.65.53 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0102 10:10:53.484027 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8263" for this suite. @ 01/02/25 10:10:53.488
• [27.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 01/02/25 10:10:53.501
  I0102 10:10:53.501505 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 10:10:53.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:10:53.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:10:53.583
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 01/02/25 10:10:53.585
  I0102 10:10:53.585613 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:10:55.084407 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:11:00.536335 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8380" for this suite. @ 01/02/25 10:11:00.54
• [7.043 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 01/02/25 10:11:00.545
  I0102 10:11:00.545354 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename taint-multiple-pods @ 01/02/25 10:11:00.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:11:00.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:11:00.558
  I0102 10:11:00.559601 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0102 10:12:00.561007 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0102 10:12:00.562920 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 01/02/25 10:12:00.562
  I0102 10:12:00.587003 23 taints.go:463] Pod1 is running on oneke-ip-192-168-150-105. Tainting Node
  I0102 10:12:02.803870 23 taints.go:471] Pod2 is running on oneke-ip-192-168-150-105. Tainting Node
  STEP: Trying to apply a taint on the Node @ 01/02/25 10:12:02.803
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/02/25 10:12:02.815
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 01/02/25 10:12:02.819
  I0102 10:12:08.963224 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0102 10:12:29.016040 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 01/02/25 10:12:29.029
  I0102 10:12:29.032891 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-4882" for this suite. @ 01/02/25 10:12:29.038
• [88.500 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 01/02/25 10:12:29.045
  I0102 10:12:29.045393 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename daemonsets @ 01/02/25 10:12:29.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:29.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:29.231
  STEP: Creating simple DaemonSet "daemon-set" @ 01/02/25 10:12:29.246
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/02/25 10:12:29.25
  I0102 10:12:29.341095 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:12:29.341283 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:12:29.345140 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:12:29.345166 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 10:12:30.255169 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:12:30.255356 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:12:30.257278 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:12:30.257298 23 fixtures.go:130] Node oneke-ip-192-168-150-105 is running 0 daemon pod, expected 1
  I0102 10:12:31.253737 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:12:31.253791 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:12:31.255775 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 10:12:31.255800 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 01/02/25 10:12:31.257
  I0102 10:12:31.258952 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 01/02/25 10:12:31.258
  I0102 10:12:31.266377 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 01/02/25 10:12:31.266
  I0102 10:12:31.268400 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0102 10:12:31.268768 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0102 10:12:31.269188 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0102 10:12:31.269492 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0102 10:12:31.269752 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-4201 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0102 10:12:31.269987 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 01/02/25 10:12:31.27
  STEP: watching for the daemon set status to be patched @ 01/02/25 10:12:31.283
  I0102 10:12:31.287023 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0102 10:12:31.287500 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0102 10:12:31.287877 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0102 10:12:31.288347 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0102 10:12:31.288583 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-4201 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0102 10:12:31.289005 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0102 10:12:31.289253 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-4201 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0102 10:12:31.289541 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 01/02/25 10:12:31.291
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4201, will wait for the garbage collector to delete the pods @ 01/02/25 10:12:31.291
  I0102 10:12:31.349923 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.199693ms
  I0102 10:12:31.451739 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.811497ms
  I0102 10:12:34.156382 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:12:34.156424 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0102 10:12:34.159836 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40815"},"items":null}

  I0102 10:12:34.165490 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40815"},"items":null}

  I0102 10:12:34.227843 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4201" for this suite. @ 01/02/25 10:12:34.287
• [5.249 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 01/02/25 10:12:34.295
  I0102 10:12:34.295544 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:12:34.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:34.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:34.311
  STEP: Creating projection with secret that has name projected-secret-test-51807505-ac6e-41e5-9654-f0d1be2d92d6 @ 01/02/25 10:12:34.313
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:12:34.316
  STEP: Saw pod success @ 01/02/25 10:12:38.34
  I0102 10:12:38.346578 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-secrets-78e48885-35be-4a8b-acdf-8c8859228b73 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:12:38.357
  I0102 10:12:38.371435 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5295" for this suite. @ 01/02/25 10:12:38.374
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 01/02/25 10:12:38.378
  I0102 10:12:38.378821 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubelet-test @ 01/02/25 10:12:38.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:38.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:38.391
  I0102 10:12:42.405298 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7694" for this suite. @ 01/02/25 10:12:42.41
• [4.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 01/02/25 10:12:42.418
  I0102 10:12:42.418648 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename tables @ 01/02/25 10:12:42.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:42.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:42.433
  I0102 10:12:42.436161 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-99" for this suite. @ 01/02/25 10:12:42.51
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 01/02/25 10:12:42.521
  I0102 10:12:42.521738 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:12:42.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:42.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:42.542
  STEP: Creating projection with secret that has name projected-secret-test-700c6b8b-f9df-4174-8220-00e2c703edba @ 01/02/25 10:12:42.544
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:12:42.547
  STEP: Saw pod success @ 01/02/25 10:12:46.569
  I0102 10:12:46.571294 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-secrets-c5286701-355f-4779-ad1b-77a5d112b934 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:12:46.576
  I0102 10:12:46.586287 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5459" for this suite. @ 01/02/25 10:12:46.588
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 01/02/25 10:12:46.595
  I0102 10:12:46.595476 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename disruption @ 01/02/25 10:12:46.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:46.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:46.607
  STEP: Waiting for the pdb to be processed @ 01/02/25 10:12:46.611
  STEP: Waiting for all pods to be running @ 01/02/25 10:12:46.639
  I0102 10:12:46.647947 23 disruption.go:691] running pods: 0 < 3
  I0102 10:12:48.654702 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5077" for this suite. @ 01/02/25 10:12:48.668
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 01/02/25 10:12:48.687
  I0102 10:12:48.687528 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename containers @ 01/02/25 10:12:48.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:48.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:48.706
  I0102 10:12:50.734331 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-777" for this suite. @ 01/02/25 10:12:50.751
• [2.074 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 01/02/25 10:12:50.764
  I0102 10:12:50.764565 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename apf @ 01/02/25 10:12:50.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:50.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:50.783
  STEP: getting /apis @ 01/02/25 10:12:50.785
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/02/25 10:12:50.789
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/02/25 10:12:50.789
  STEP: creating @ 01/02/25 10:12:50.79
  STEP: getting @ 01/02/25 10:12:50.798
  STEP: listing @ 01/02/25 10:12:50.799
  STEP: watching @ 01/02/25 10:12:50.8
  I0102 10:12:50.800578 23 flowcontrol.go:620] starting watch
  STEP: patching @ 01/02/25 10:12:50.801
  STEP: updating @ 01/02/25 10:12:50.804
  I0102 10:12:50.808266 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 01/02/25 10:12:50.808
  STEP: patching /status @ 01/02/25 10:12:50.809
  STEP: updating /status @ 01/02/25 10:12:50.811
  STEP: deleting @ 01/02/25 10:12:50.814
  STEP: deleting a collection @ 01/02/25 10:12:50.818
  I0102 10:12:50.824668 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3027" for this suite. @ 01/02/25 10:12:50.843
• [0.083 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 01/02/25 10:12:50.847
  I0102 10:12:50.847846 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 10:12:50.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:50.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:50.929
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 10:12:50.931
  STEP: Saw pod success @ 01/02/25 10:12:54.954
  I0102 10:12:54.956145 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-ba5e8349-6bb6-41ee-83fc-3f6e6247f790 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 10:12:54.97
  I0102 10:12:54.981348 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4676" for this suite. @ 01/02/25 10:12:54.983
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 01/02/25 10:12:54.987
  I0102 10:12:54.987692 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename namespaces @ 01/02/25 10:12:54.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:54.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:54.999
  STEP: creating a Namespace @ 01/02/25 10:12:55.001
  STEP: patching the Namespace @ 01/02/25 10:12:55.102
  STEP: get the Namespace and ensuring it has the label @ 01/02/25 10:12:55.105
  I0102 10:12:55.107624 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5298" for this suite. @ 01/02/25 10:12:55.11
  STEP: Destroying namespace "nspatchtest-73bc9ecf-9b99-4307-acbb-1ba975714532-4403" for this suite. @ 01/02/25 10:12:55.115
• [0.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 01/02/25 10:12:55.125
  I0102 10:12:55.125344 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename svcaccounts @ 01/02/25 10:12:55.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:55.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:55.223
  I0102 10:12:55.247967 23 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0102 10:12:55.248016 23 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0102 10:12:55.254871 23 service_accounts.go:253] created pod pod-service-account-mountsa
  I0102 10:12:55.254932 23 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0102 10:12:55.264136 23 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0102 10:12:55.264167 23 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0102 10:12:55.275384 23 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0102 10:12:55.275432 23 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0102 10:12:55.292243 23 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0102 10:12:55.292286 23 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0102 10:12:55.301272 23 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0102 10:12:55.303742 23 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0102 10:12:55.323778 23 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0102 10:12:55.323841 23 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0102 10:12:55.336312 23 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0102 10:12:55.336381 23 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0102 10:12:55.351432 23 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0102 10:12:55.351464 23 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0102 10:12:55.351537 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7650" for this suite. @ 01/02/25 10:12:55.358
• [0.240 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 01/02/25 10:12:55.365
  I0102 10:12:55.365543 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename custom-resource-definition @ 01/02/25 10:12:55.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:55.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:55.379
  I0102 10:12:55.383161 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:12:56.413503 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-295" for this suite. @ 01/02/25 10:12:56.417
• [1.056 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 01/02/25 10:12:56.421
  I0102 10:12:56.421559 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 10:12:56.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:56.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:56.436
  STEP: creating the pod @ 01/02/25 10:12:56.438
  STEP: submitting the pod to kubernetes @ 01/02/25 10:12:56.438
  STEP: verifying QOS class is set on the pod @ 01/02/25 10:12:56.446
  I0102 10:12:56.453802 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5998" for this suite. @ 01/02/25 10:12:56.518
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 01/02/25 10:12:56.525
  I0102 10:12:56.525407 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename gc @ 01/02/25 10:12:56.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:56.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:56.543
  STEP: create the deployment @ 01/02/25 10:12:56.547
  W0102 10:12:56.550845      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 01/02/25 10:12:56.55
  STEP: delete the deployment @ 01/02/25 10:12:56.554
  STEP: wait for all rs to be garbage collected @ 01/02/25 10:12:56.573
  STEP: Gathering metrics @ 01/02/25 10:12:56.604
  I0102 10:12:56.683819 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0102 10:12:56.687757 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8915" for this suite. @ 01/02/25 10:12:56.695
• [0.174 seconds]
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 01/02/25 10:12:56.7
  I0102 10:12:56.700204 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:12:56.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:56.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:56.712
  STEP: creating a collection of services @ 01/02/25 10:12:56.713
  I0102 10:12:56.714062 23 service.go:3655] Creating e2e-svc-a-m5g6c
  I0102 10:12:56.718839 23 service.go:3655] Creating e2e-svc-b-qmqzh
  I0102 10:12:56.729425 23 service.go:3655] Creating e2e-svc-c-859js
  STEP: deleting service collection @ 01/02/25 10:12:56.74
  I0102 10:12:56.791409 23 service.go:3690] Collection of services has been deleted
  I0102 10:12:56.791772 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9821" for this suite. @ 01/02/25 10:12:56.794
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 01/02/25 10:12:56.806
  I0102 10:12:56.806211 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:12:56.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:12:56.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:12:56.823
  STEP: Creating projection with secret that has name projected-secret-test-map-39677bef-ab97-4f74-9463-f3ba393f759d @ 01/02/25 10:12:56.826
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:12:56.831
  STEP: Saw pod success @ 01/02/25 10:13:00.851
  I0102 10:13:00.854734 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-secrets-7495b572-fa9a-49bd-806b-944c1e1cfca8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:13:00.859
  I0102 10:13:00.872296 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6621" for this suite. @ 01/02/25 10:13:00.874
• [4.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 01/02/25 10:13:00.879
  I0102 10:13:00.879877 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename validating-admission-policy @ 01/02/25 10:13:00.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:13:00.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:13:00.891
  STEP: creating the policy @ 01/02/25 10:13:00.897
  STEP: waiting until the marker is denied @ 01/02/25 10:13:00.91
  STEP: testing a replicated Deployment to be allowed @ 01/02/25 10:13:01.019
  STEP: testing a non-replicated ReplicaSet not to be denied @ 01/02/25 10:13:01.034
  I0102 10:13:01.084420 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5180" for this suite. @ 01/02/25 10:13:01.095
• [0.221 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 01/02/25 10:13:01.1
  I0102 10:13:01.100413 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename subpath @ 01/02/25 10:13:01.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:13:01.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:13:01.216
  STEP: Setting up data @ 01/02/25 10:13:01.227
  STEP: Creating pod pod-subpath-test-configmap-68vv @ 01/02/25 10:13:01.234
  STEP: Creating a pod to test atomic-volume-subpath @ 01/02/25 10:13:01.234
  STEP: Saw pod success @ 01/02/25 10:13:25.313
  I0102 10:13:25.320752 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-subpath-test-configmap-68vv container test-container-subpath-configmap-68vv: <nil>
  STEP: delete the pod @ 01/02/25 10:13:25.341
  STEP: Deleting pod pod-subpath-test-configmap-68vv @ 01/02/25 10:13:25.354
  I0102 10:13:25.354290 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-68vv" in namespace "subpath-9834"
  I0102 10:13:25.355645 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9834" for this suite. @ 01/02/25 10:13:25.358
• [24.262 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 01/02/25 10:13:25.362
  I0102 10:13:25.362802 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename statefulset @ 01/02/25 10:13:25.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:13:25.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:13:25.374
  STEP: Creating service test in namespace statefulset-7648 @ 01/02/25 10:13:25.375
  STEP: Looking for a node to schedule stateful set and pod @ 01/02/25 10:13:25.383
  STEP: Creating pod with conflicting port in namespace statefulset-7648 @ 01/02/25 10:13:25.46
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7648 @ 01/02/25 10:13:25.47
  STEP: Creating statefulset with conflicting port in namespace statefulset-7648 @ 01/02/25 10:13:27.475
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7648 @ 01/02/25 10:13:27.482
  I0102 10:13:27.488388 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-7648, name: ss-0, uid: 2c216fa3-0cb9-44e4-8bc9-60bee82c8445, status phase: Pending. Waiting for statefulset controller to delete.
  I0102 10:13:27.501062 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-7648, name: ss-0, uid: 2c216fa3-0cb9-44e4-8bc9-60bee82c8445, status phase: Failed. Waiting for statefulset controller to delete.
  I0102 10:13:27.505501 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-7648, name: ss-0, uid: 2c216fa3-0cb9-44e4-8bc9-60bee82c8445, status phase: Failed. Waiting for statefulset controller to delete.
  I0102 10:13:27.507163 23 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-7648
  STEP: Removing pod with conflicting port in namespace statefulset-7648 @ 01/02/25 10:13:27.507
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7648 and will be in running state @ 01/02/25 10:13:27.523
  I0102 10:13:29.529377 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7648
  I0102 10:13:29.530686 23 rest.go:150] Scaling statefulset ss to 0
  I0102 10:13:39.537333 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0102 10:13:39.538747 23 rest.go:88] Deleting statefulset ss
  I0102 10:13:39.548244 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7648" for this suite. @ 01/02/25 10:13:39.551
• [14.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 01/02/25 10:13:39.556
  I0102 10:13:39.556662 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/02/25 10:13:39.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:13:39.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:13:39.57
  I0102 10:13:39.575200 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-160" for this suite. @ 01/02/25 10:13:39.653
• [0.105 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 01/02/25 10:13:39.666
  I0102 10:13:39.666434 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename svc-latency @ 01/02/25 10:13:39.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:13:39.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:13:39.69
  I0102 10:13:39.692253 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2478 @ 01/02/25 10:13:39.692
  I0102 10:13:39.698350      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2478, replica count: 1
  I0102 10:13:40.750499      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 10:13:41.752721      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 10:13:41.866826 23 service_latency.go:356] Created: latency-svc-l424s
  I0102 10:13:41.876341 23 service_latency.go:363] Got endpoints: latency-svc-l424s [20.826713ms]
  I0102 10:13:41.889170 23 service_latency.go:356] Created: latency-svc-pqj2c
  I0102 10:13:41.892737 23 service_latency.go:363] Got endpoints: latency-svc-pqj2c [16.15652ms]
  I0102 10:13:41.895356 23 service_latency.go:356] Created: latency-svc-vzcp8
  I0102 10:13:41.906025 23 service_latency.go:363] Got endpoints: latency-svc-vzcp8 [29.327563ms]
  I0102 10:13:41.914690 23 service_latency.go:356] Created: latency-svc-rmck7
  I0102 10:13:41.914717 23 service_latency.go:363] Got endpoints: latency-svc-rmck7 [37.955299ms]
  I0102 10:13:42.003977 23 service_latency.go:356] Created: latency-svc-8fp6c
  I0102 10:13:42.004069 23 service_latency.go:356] Created: latency-svc-qlkzs
  I0102 10:13:42.004188 23 service_latency.go:356] Created: latency-svc-bpgpb
  I0102 10:13:42.005707 23 service_latency.go:356] Created: latency-svc-8cvrs
  I0102 10:13:42.005898 23 service_latency.go:356] Created: latency-svc-kj9wq
  I0102 10:13:42.005990 23 service_latency.go:356] Created: latency-svc-8db2t
  I0102 10:13:42.006074 23 service_latency.go:356] Created: latency-svc-z98z6
  I0102 10:13:42.006868 23 service_latency.go:356] Created: latency-svc-f5l7q
  I0102 10:13:42.007118 23 service_latency.go:356] Created: latency-svc-r5gk9
  I0102 10:13:42.007296 23 service_latency.go:356] Created: latency-svc-n2thg
  I0102 10:13:42.007397 23 service_latency.go:356] Created: latency-svc-4x7z7
  I0102 10:13:42.007521 23 service_latency.go:356] Created: latency-svc-fxj2p
  I0102 10:13:42.007605 23 service_latency.go:356] Created: latency-svc-xqqs9
  I0102 10:13:42.007700 23 service_latency.go:356] Created: latency-svc-wcsm7
  I0102 10:13:42.007791 23 service_latency.go:363] Got endpoints: latency-svc-4x7z7 [130.669711ms]
  I0102 10:13:42.008025 23 service_latency.go:363] Got endpoints: latency-svc-8fp6c [130.932811ms]
  I0102 10:13:42.008149 23 service_latency.go:363] Got endpoints: latency-svc-8cvrs [131.137295ms]
  I0102 10:13:42.008253 23 service_latency.go:363] Got endpoints: latency-svc-bpgpb [131.32354ms]
  I0102 10:13:42.008343 23 service_latency.go:363] Got endpoints: latency-svc-kj9wq [131.383796ms]
  I0102 10:13:42.008429 23 service_latency.go:363] Got endpoints: latency-svc-qlkzs [92.156427ms]
  I0102 10:13:42.008549 23 service_latency.go:363] Got endpoints: latency-svc-8db2t [131.511112ms]
  I0102 10:13:42.009031 23 service_latency.go:363] Got endpoints: latency-svc-wcsm7 [132.233946ms]
  I0102 10:13:42.009132 23 service_latency.go:363] Got endpoints: latency-svc-f5l7q [132.526546ms]
  I0102 10:13:42.009237 23 service_latency.go:363] Got endpoints: latency-svc-n2thg [132.10793ms]
  I0102 10:13:42.009324 23 service_latency.go:363] Got endpoints: latency-svc-z98z6 [132.244486ms]
  I0102 10:13:42.014379 23 service_latency.go:356] Created: latency-svc-t8kl2
  I0102 10:13:42.014407 23 service_latency.go:363] Got endpoints: latency-svc-t8kl2 [137.54031ms]
  I0102 10:13:42.028488 23 service_latency.go:363] Got endpoints: latency-svc-r5gk9 [151.328257ms]
  I0102 10:13:42.028686 23 service_latency.go:363] Got endpoints: latency-svc-fxj2p [113.956014ms]
  I0102 10:13:42.028793 23 service_latency.go:363] Got endpoints: latency-svc-xqqs9 [135.632052ms]
  I0102 10:13:42.028972 23 service_latency.go:356] Created: latency-svc-bzqvt
  I0102 10:13:42.046475 23 service_latency.go:363] Got endpoints: latency-svc-bzqvt [38.665636ms]
  I0102 10:13:42.049334 23 service_latency.go:356] Created: latency-svc-b7qzs
  I0102 10:13:42.049772 23 service_latency.go:356] Created: latency-svc-59jx8
  I0102 10:13:42.049985 23 service_latency.go:363] Got endpoints: latency-svc-59jx8 [41.82327ms]
  I0102 10:13:42.050132 23 service_latency.go:363] Got endpoints: latency-svc-b7qzs [42.090396ms]
  I0102 10:13:42.094265 23 service_latency.go:356] Created: latency-svc-kx8mg
  I0102 10:13:42.107949 23 service_latency.go:356] Created: latency-svc-xbvf7
  I0102 10:13:42.142539 23 service_latency.go:356] Created: latency-svc-m8hwv
  I0102 10:13:42.147052 23 service_latency.go:356] Created: latency-svc-6pktb
  I0102 10:13:42.147385 23 service_latency.go:356] Created: latency-svc-qlgcw
  I0102 10:13:42.147719 23 service_latency.go:356] Created: latency-svc-5z7mg
  I0102 10:13:42.147908 23 service_latency.go:356] Created: latency-svc-q7mmk
  I0102 10:13:42.147785 23 service_latency.go:356] Created: latency-svc-9rfdk
  I0102 10:13:42.148106 23 service_latency.go:356] Created: latency-svc-nnrgn
  I0102 10:13:42.148418 23 service_latency.go:356] Created: latency-svc-nmc22
  I0102 10:13:42.148707 23 service_latency.go:356] Created: latency-svc-7ch89
  I0102 10:13:42.148990 23 service_latency.go:356] Created: latency-svc-kwmvj
  I0102 10:13:42.149333 23 service_latency.go:356] Created: latency-svc-v4vn5
  I0102 10:13:42.149592 23 service_latency.go:363] Got endpoints: latency-svc-m8hwv [141.310891ms]
  I0102 10:13:42.149705 23 service_latency.go:356] Created: latency-svc-mpsvr
  I0102 10:13:42.149871 23 service_latency.go:363] Got endpoints: latency-svc-mpsvr [141.515414ms]
  I0102 10:13:42.149998 23 service_latency.go:363] Got endpoints: latency-svc-kx8mg [99.848601ms]
  I0102 10:13:42.150005 23 service_latency.go:363] Got endpoints: latency-svc-6pktb [100.003573ms]
  I0102 10:13:42.150009 23 service_latency.go:363] Got endpoints: latency-svc-7ch89 [103.483062ms]
  I0102 10:13:42.150012 23 service_latency.go:363] Got endpoints: latency-svc-nmc22 [140.965413ms]
  I0102 10:13:42.150015 23 service_latency.go:363] Got endpoints: latency-svc-5z7mg [140.679512ms]
  I0102 10:13:42.150017 23 service_latency.go:363] Got endpoints: latency-svc-qlgcw [140.768692ms]
  I0102 10:13:42.150019 23 service_latency.go:363] Got endpoints: latency-svc-xbvf7 [135.554675ms]
  I0102 10:13:42.150021 23 service_latency.go:363] Got endpoints: latency-svc-q7mmk [140.876461ms]
  I0102 10:13:42.150024 23 service_latency.go:363] Got endpoints: latency-svc-9rfdk [141.582438ms]
  I0102 10:13:42.150028 23 service_latency.go:363] Got endpoints: latency-svc-kwmvj [121.22001ms]
  I0102 10:13:42.153818 23 service_latency.go:356] Created: latency-svc-48lmz
  I0102 10:13:42.154022 23 service_latency.go:363] Got endpoints: latency-svc-48lmz [145.459061ms]
  I0102 10:13:42.162374 23 service_latency.go:356] Created: latency-svc-dwvlf
  I0102 10:13:42.166520 23 service_latency.go:356] Created: latency-svc-xtdjk
  I0102 10:13:42.174648 23 service_latency.go:363] Got endpoints: latency-svc-nnrgn [146.119352ms]
  I0102 10:13:42.175238 23 service_latency.go:356] Created: latency-svc-rln2r
  I0102 10:13:42.183861 23 service_latency.go:356] Created: latency-svc-jgb9f
  I0102 10:13:42.185021 23 service_latency.go:356] Created: latency-svc-d96p9
  I0102 10:13:42.192763 23 service_latency.go:356] Created: latency-svc-mct9j
  I0102 10:13:42.196504 23 service_latency.go:356] Created: latency-svc-v4zh8
  I0102 10:13:42.196874 23 service_latency.go:356] Created: latency-svc-gtt9j
  I0102 10:13:42.200867 23 service_latency.go:356] Created: latency-svc-ddzlv
  I0102 10:13:42.205758 23 service_latency.go:356] Created: latency-svc-f2wtr
  I0102 10:13:42.213671 23 service_latency.go:356] Created: latency-svc-x5pr2
  I0102 10:13:42.213986 23 service_latency.go:356] Created: latency-svc-6g9jc
  I0102 10:13:42.220475 23 service_latency.go:356] Created: latency-svc-xfk9m
  I0102 10:13:42.224147 23 service_latency.go:356] Created: latency-svc-9hpwj
  I0102 10:13:42.226293 23 service_latency.go:363] Got endpoints: latency-svc-v4vn5 [197.587527ms]
  I0102 10:13:42.235098 23 service_latency.go:356] Created: latency-svc-7z79m
  I0102 10:13:42.274303 23 service_latency.go:363] Got endpoints: latency-svc-dwvlf [124.685785ms]
  I0102 10:13:42.281794 23 service_latency.go:356] Created: latency-svc-g95jf
  I0102 10:13:42.321328 23 service_latency.go:363] Got endpoints: latency-svc-xtdjk [170.973335ms]
  I0102 10:13:42.335731 23 service_latency.go:356] Created: latency-svc-pcvf6
  I0102 10:13:42.372443 23 service_latency.go:363] Got endpoints: latency-svc-rln2r [219.56803ms]
  I0102 10:13:42.379578 23 service_latency.go:356] Created: latency-svc-vrmfp
  I0102 10:13:42.422125 23 service_latency.go:363] Got endpoints: latency-svc-jgb9f [271.481528ms]
  I0102 10:13:42.430335 23 service_latency.go:356] Created: latency-svc-zgszg
  I0102 10:13:42.472338 23 service_latency.go:363] Got endpoints: latency-svc-d96p9 [321.454415ms]
  I0102 10:13:42.481394 23 service_latency.go:356] Created: latency-svc-vxsdt
  I0102 10:13:42.526428 23 service_latency.go:363] Got endpoints: latency-svc-mct9j [375.291669ms]
  I0102 10:13:42.536477 23 service_latency.go:356] Created: latency-svc-jbrvd
  I0102 10:13:42.580994 23 service_latency.go:363] Got endpoints: latency-svc-v4zh8 [429.58858ms]
  I0102 10:13:42.596378 23 service_latency.go:356] Created: latency-svc-f9vgq
  I0102 10:13:42.625339 23 service_latency.go:363] Got endpoints: latency-svc-gtt9j [473.71707ms]
  I0102 10:13:42.631895 23 service_latency.go:356] Created: latency-svc-x7lhq
  I0102 10:13:42.674552 23 service_latency.go:363] Got endpoints: latency-svc-ddzlv [522.663614ms]
  I0102 10:13:42.681896 23 service_latency.go:356] Created: latency-svc-xfh7h
  I0102 10:13:42.722225 23 service_latency.go:363] Got endpoints: latency-svc-f2wtr [570.122973ms]
  I0102 10:13:42.729989 23 service_latency.go:356] Created: latency-svc-4bff8
  I0102 10:13:42.772967 23 service_latency.go:363] Got endpoints: latency-svc-6g9jc [620.321028ms]
  I0102 10:13:42.779930 23 service_latency.go:356] Created: latency-svc-fnx5s
  I0102 10:13:42.822854 23 service_latency.go:363] Got endpoints: latency-svc-x5pr2 [668.673744ms]
  I0102 10:13:42.842477 23 service_latency.go:356] Created: latency-svc-bp9bj
  I0102 10:13:42.877858 23 service_latency.go:363] Got endpoints: latency-svc-xfk9m [727.730376ms]
  I0102 10:13:42.888700 23 service_latency.go:356] Created: latency-svc-fkprk
  I0102 10:13:42.922663 23 service_latency.go:363] Got endpoints: latency-svc-9hpwj [747.73751ms]
  I0102 10:13:42.930459 23 service_latency.go:356] Created: latency-svc-jjt4w
  I0102 10:13:42.970491 23 service_latency.go:363] Got endpoints: latency-svc-7z79m [743.738631ms]
  I0102 10:13:42.979761 23 service_latency.go:356] Created: latency-svc-d5m6l
  I0102 10:13:43.027045 23 service_latency.go:363] Got endpoints: latency-svc-g95jf [752.70157ms]
  I0102 10:13:43.039619 23 service_latency.go:356] Created: latency-svc-tc9q9
  I0102 10:13:43.072080 23 service_latency.go:363] Got endpoints: latency-svc-pcvf6 [749.757252ms]
  I0102 10:13:43.082405 23 service_latency.go:356] Created: latency-svc-l6zwp
  I0102 10:13:43.121068 23 service_latency.go:363] Got endpoints: latency-svc-vrmfp [748.297121ms]
  I0102 10:13:43.129345 23 service_latency.go:356] Created: latency-svc-67cfd
  I0102 10:13:43.172258 23 service_latency.go:363] Got endpoints: latency-svc-zgszg [749.912402ms]
  I0102 10:13:43.178860 23 service_latency.go:356] Created: latency-svc-psx46
  I0102 10:13:43.224069 23 service_latency.go:363] Got endpoints: latency-svc-vxsdt [751.354921ms]
  I0102 10:13:43.229423 23 service_latency.go:356] Created: latency-svc-mvdfd
  I0102 10:13:43.271472 23 service_latency.go:363] Got endpoints: latency-svc-jbrvd [744.364223ms]
  I0102 10:13:43.278199 23 service_latency.go:356] Created: latency-svc-jqkbj
  I0102 10:13:43.335110 23 service_latency.go:363] Got endpoints: latency-svc-f9vgq [751.491474ms]
  I0102 10:13:43.347616 23 service_latency.go:356] Created: latency-svc-x2jnx
  I0102 10:13:43.372915 23 service_latency.go:363] Got endpoints: latency-svc-x7lhq [747.248861ms]
  I0102 10:13:43.383346 23 service_latency.go:356] Created: latency-svc-j4q54
  I0102 10:13:43.422762 23 service_latency.go:363] Got endpoints: latency-svc-xfh7h [747.632664ms]
  I0102 10:13:43.444169 23 service_latency.go:356] Created: latency-svc-5w9f8
  I0102 10:13:43.475738 23 service_latency.go:363] Got endpoints: latency-svc-4bff8 [753.228186ms]
  I0102 10:13:43.484614 23 service_latency.go:356] Created: latency-svc-sbfrw
  I0102 10:13:43.531329 23 service_latency.go:363] Got endpoints: latency-svc-fnx5s [758.039801ms]
  I0102 10:13:43.568583 23 service_latency.go:356] Created: latency-svc-78r4t
  I0102 10:13:43.574862 23 service_latency.go:363] Got endpoints: latency-svc-bp9bj [749.616996ms]
  I0102 10:13:43.587442 23 service_latency.go:356] Created: latency-svc-zkwpt
  I0102 10:13:43.622251 23 service_latency.go:363] Got endpoints: latency-svc-fkprk [743.459121ms]
  I0102 10:13:43.629896 23 service_latency.go:356] Created: latency-svc-bzl8j
  I0102 10:13:43.674297 23 service_latency.go:363] Got endpoints: latency-svc-jjt4w [751.588599ms]
  I0102 10:13:43.681233 23 service_latency.go:356] Created: latency-svc-h5cwj
  I0102 10:13:43.722703 23 service_latency.go:363] Got endpoints: latency-svc-d5m6l [751.649573ms]
  I0102 10:13:43.729662 23 service_latency.go:356] Created: latency-svc-6jtcp
  I0102 10:13:43.770883 23 service_latency.go:363] Got endpoints: latency-svc-tc9q9 [743.774284ms]
  I0102 10:13:43.783016 23 service_latency.go:356] Created: latency-svc-n5wlk
  I0102 10:13:43.822543 23 service_latency.go:363] Got endpoints: latency-svc-l6zwp [750.405943ms]
  I0102 10:13:43.829465 23 service_latency.go:356] Created: latency-svc-jds6b
  I0102 10:13:43.872730 23 service_latency.go:363] Got endpoints: latency-svc-67cfd [751.58107ms]
  I0102 10:13:43.884618 23 service_latency.go:356] Created: latency-svc-zckph
  I0102 10:13:43.921285 23 service_latency.go:363] Got endpoints: latency-svc-psx46 [748.752719ms]
  I0102 10:13:43.931317 23 service_latency.go:356] Created: latency-svc-lbw8g
  I0102 10:13:43.976916 23 service_latency.go:363] Got endpoints: latency-svc-mvdfd [752.793703ms]
  I0102 10:13:43.995454 23 service_latency.go:356] Created: latency-svc-f468x
  I0102 10:13:44.027993 23 service_latency.go:363] Got endpoints: latency-svc-jqkbj [756.449084ms]
  I0102 10:13:44.037183 23 service_latency.go:356] Created: latency-svc-26wwr
  I0102 10:13:44.072239 23 service_latency.go:363] Got endpoints: latency-svc-x2jnx [736.481834ms]
  I0102 10:13:44.079402 23 service_latency.go:356] Created: latency-svc-lvktv
  I0102 10:13:44.122701 23 service_latency.go:363] Got endpoints: latency-svc-j4q54 [749.241567ms]
  I0102 10:13:44.130564 23 service_latency.go:356] Created: latency-svc-zcmbk
  I0102 10:13:44.175935 23 service_latency.go:363] Got endpoints: latency-svc-5w9f8 [752.714802ms]
  I0102 10:13:44.184706 23 service_latency.go:356] Created: latency-svc-nm664
  I0102 10:13:44.224546 23 service_latency.go:363] Got endpoints: latency-svc-sbfrw [748.768927ms]
  I0102 10:13:44.231557 23 service_latency.go:356] Created: latency-svc-4dzxx
  I0102 10:13:44.272268 23 service_latency.go:363] Got endpoints: latency-svc-78r4t [732.543652ms]
  I0102 10:13:44.279983 23 service_latency.go:356] Created: latency-svc-tzf5d
  I0102 10:13:44.321806 23 service_latency.go:363] Got endpoints: latency-svc-zkwpt [746.904173ms]
  I0102 10:13:44.327527 23 service_latency.go:356] Created: latency-svc-b28r8
  I0102 10:13:44.378316 23 service_latency.go:363] Got endpoints: latency-svc-bzl8j [755.981817ms]
  I0102 10:13:44.391123 23 service_latency.go:356] Created: latency-svc-ldn7q
  I0102 10:13:44.423837 23 service_latency.go:363] Got endpoints: latency-svc-h5cwj [749.144063ms]
  I0102 10:13:44.432586 23 service_latency.go:356] Created: latency-svc-75bbw
  I0102 10:13:44.474443 23 service_latency.go:363] Got endpoints: latency-svc-6jtcp [751.322057ms]
  I0102 10:13:44.483336 23 service_latency.go:356] Created: latency-svc-bjz5k
  I0102 10:13:44.519891 23 service_latency.go:363] Got endpoints: latency-svc-n5wlk [748.452806ms]
  I0102 10:13:44.527197 23 service_latency.go:356] Created: latency-svc-n6gkr
  I0102 10:13:44.587916 23 service_latency.go:363] Got endpoints: latency-svc-jds6b [764.973964ms]
  I0102 10:13:44.599940 23 service_latency.go:356] Created: latency-svc-zwbsq
  I0102 10:13:44.625168 23 service_latency.go:363] Got endpoints: latency-svc-zckph [751.739059ms]
  I0102 10:13:44.636694 23 service_latency.go:356] Created: latency-svc-l9grt
  I0102 10:13:44.670195 23 service_latency.go:363] Got endpoints: latency-svc-lbw8g [747.720424ms]
  I0102 10:13:44.679010 23 service_latency.go:356] Created: latency-svc-sbshq
  I0102 10:13:44.721017 23 service_latency.go:363] Got endpoints: latency-svc-f468x [743.209988ms]
  I0102 10:13:44.729490 23 service_latency.go:356] Created: latency-svc-t4c67
  I0102 10:13:44.773605 23 service_latency.go:363] Got endpoints: latency-svc-26wwr [745.312246ms]
  I0102 10:13:44.791425 23 service_latency.go:356] Created: latency-svc-hn9kl
  I0102 10:13:44.827359 23 service_latency.go:363] Got endpoints: latency-svc-lvktv [754.899838ms]
  I0102 10:13:44.845480 23 service_latency.go:356] Created: latency-svc-nhwmf
  I0102 10:13:44.871804 23 service_latency.go:363] Got endpoints: latency-svc-zcmbk [748.834153ms]
  I0102 10:13:44.892180 23 service_latency.go:356] Created: latency-svc-v5xzl
  I0102 10:13:44.922977 23 service_latency.go:363] Got endpoints: latency-svc-nm664 [746.761048ms]
  I0102 10:13:44.931441 23 service_latency.go:356] Created: latency-svc-qzstp
  I0102 10:13:44.972294 23 service_latency.go:363] Got endpoints: latency-svc-4dzxx [747.417134ms]
  I0102 10:13:44.981216 23 service_latency.go:356] Created: latency-svc-87xfw
  I0102 10:13:45.021084 23 service_latency.go:363] Got endpoints: latency-svc-tzf5d [748.573067ms]
  I0102 10:13:45.030866 23 service_latency.go:356] Created: latency-svc-8mpfc
  I0102 10:13:45.072732 23 service_latency.go:363] Got endpoints: latency-svc-b28r8 [750.533228ms]
  I0102 10:13:45.080488 23 service_latency.go:356] Created: latency-svc-5r9np
  I0102 10:13:45.134578 23 service_latency.go:363] Got endpoints: latency-svc-ldn7q [755.644982ms]
  I0102 10:13:45.142888 23 service_latency.go:356] Created: latency-svc-b8pjq
  I0102 10:13:45.177997 23 service_latency.go:363] Got endpoints: latency-svc-75bbw [753.858072ms]
  I0102 10:13:45.186077 23 service_latency.go:356] Created: latency-svc-g2585
  I0102 10:13:45.222524 23 service_latency.go:363] Got endpoints: latency-svc-bjz5k [746.279692ms]
  I0102 10:13:45.230081 23 service_latency.go:356] Created: latency-svc-c4b5d
  I0102 10:13:45.272209 23 service_latency.go:363] Got endpoints: latency-svc-n6gkr [752.112885ms]
  I0102 10:13:45.279690 23 service_latency.go:356] Created: latency-svc-z9wlz
  I0102 10:13:45.323445 23 service_latency.go:363] Got endpoints: latency-svc-zwbsq [734.381626ms]
  I0102 10:13:45.332956 23 service_latency.go:356] Created: latency-svc-sq8s4
  I0102 10:13:45.369506 23 service_latency.go:363] Got endpoints: latency-svc-l9grt [744.280003ms]
  I0102 10:13:45.379227 23 service_latency.go:356] Created: latency-svc-m4pps
  I0102 10:13:45.421141 23 service_latency.go:363] Got endpoints: latency-svc-sbshq [749.138192ms]
  I0102 10:13:45.428026 23 service_latency.go:356] Created: latency-svc-qcgcf
  I0102 10:13:45.473963 23 service_latency.go:363] Got endpoints: latency-svc-t4c67 [752.614382ms]
  I0102 10:13:45.482503 23 service_latency.go:356] Created: latency-svc-bggf4
  I0102 10:13:45.522683 23 service_latency.go:363] Got endpoints: latency-svc-hn9kl [749.015715ms]
  I0102 10:13:45.527549 23 service_latency.go:356] Created: latency-svc-h2zgs
  I0102 10:13:45.571309 23 service_latency.go:363] Got endpoints: latency-svc-nhwmf [743.909445ms]
  I0102 10:13:45.579437 23 service_latency.go:356] Created: latency-svc-rgwrv
  I0102 10:13:45.626588 23 service_latency.go:363] Got endpoints: latency-svc-v5xzl [754.653441ms]
  I0102 10:13:45.637817 23 service_latency.go:356] Created: latency-svc-rgqfq
  I0102 10:13:45.671137 23 service_latency.go:363] Got endpoints: latency-svc-qzstp [748.121423ms]
  I0102 10:13:45.681167 23 service_latency.go:356] Created: latency-svc-4tt49
  I0102 10:13:45.723325 23 service_latency.go:363] Got endpoints: latency-svc-87xfw [750.816861ms]
  I0102 10:13:45.730667 23 service_latency.go:356] Created: latency-svc-68t72
  I0102 10:13:45.774715 23 service_latency.go:363] Got endpoints: latency-svc-8mpfc [751.440923ms]
  I0102 10:13:45.784174 23 service_latency.go:356] Created: latency-svc-mhrkx
  I0102 10:13:45.823055 23 service_latency.go:363] Got endpoints: latency-svc-5r9np [750.268075ms]
  I0102 10:13:45.829665 23 service_latency.go:356] Created: latency-svc-kfzjz
  I0102 10:13:45.871449 23 service_latency.go:363] Got endpoints: latency-svc-b8pjq [736.802452ms]
  I0102 10:13:45.882869 23 service_latency.go:356] Created: latency-svc-g48cz
  I0102 10:13:45.922673 23 service_latency.go:363] Got endpoints: latency-svc-g2585 [744.636924ms]
  I0102 10:13:45.929508 23 service_latency.go:356] Created: latency-svc-7pbz7
  I0102 10:13:45.973277 23 service_latency.go:363] Got endpoints: latency-svc-c4b5d [750.714619ms]
  I0102 10:13:45.980667 23 service_latency.go:356] Created: latency-svc-gbd7d
  I0102 10:13:46.023489 23 service_latency.go:363] Got endpoints: latency-svc-z9wlz [751.213945ms]
  I0102 10:13:46.032857 23 service_latency.go:356] Created: latency-svc-9zh97
  I0102 10:13:46.131628 23 service_latency.go:363] Got endpoints: latency-svc-sq8s4 [808.140127ms]
  I0102 10:13:46.140610 23 service_latency.go:356] Created: latency-svc-kjnw5
  I0102 10:13:46.183902 23 service_latency.go:363] Got endpoints: latency-svc-m4pps [812.842333ms]
  I0102 10:13:46.194128 23 service_latency.go:356] Created: latency-svc-75mdg
  I0102 10:13:46.223110 23 service_latency.go:363] Got endpoints: latency-svc-qcgcf [801.249706ms]
  I0102 10:13:46.230484 23 service_latency.go:356] Created: latency-svc-7n6sj
  I0102 10:13:46.271924 23 service_latency.go:363] Got endpoints: latency-svc-bggf4 [797.179943ms]
  I0102 10:13:46.278987 23 service_latency.go:356] Created: latency-svc-gq69b
  I0102 10:13:46.339835 23 service_latency.go:363] Got endpoints: latency-svc-h2zgs [817.072612ms]
  I0102 10:13:46.352834 23 service_latency.go:356] Created: latency-svc-kvknn
  I0102 10:13:46.372060 23 service_latency.go:363] Got endpoints: latency-svc-rgwrv [800.697229ms]
  I0102 10:13:46.379231 23 service_latency.go:356] Created: latency-svc-h259h
  I0102 10:13:46.426277 23 service_latency.go:363] Got endpoints: latency-svc-rgqfq [798.905557ms]
  I0102 10:13:46.432988 23 service_latency.go:356] Created: latency-svc-csgbx
  I0102 10:13:46.473221 23 service_latency.go:363] Got endpoints: latency-svc-4tt49 [801.861068ms]
  I0102 10:13:46.480572 23 service_latency.go:356] Created: latency-svc-2nlpn
  I0102 10:13:46.525141 23 service_latency.go:363] Got endpoints: latency-svc-68t72 [801.514197ms]
  I0102 10:13:46.538068 23 service_latency.go:356] Created: latency-svc-8nndq
  I0102 10:13:46.574042 23 service_latency.go:363] Got endpoints: latency-svc-mhrkx [799.06254ms]
  I0102 10:13:46.582980 23 service_latency.go:356] Created: latency-svc-5x7gw
  I0102 10:13:46.632550 23 service_latency.go:363] Got endpoints: latency-svc-kfzjz [809.419514ms]
  I0102 10:13:46.642244 23 service_latency.go:356] Created: latency-svc-658bf
  I0102 10:13:46.678448 23 service_latency.go:363] Got endpoints: latency-svc-g48cz [806.366771ms]
  I0102 10:13:46.685459 23 service_latency.go:356] Created: latency-svc-ndtxm
  I0102 10:13:46.723385 23 service_latency.go:363] Got endpoints: latency-svc-7pbz7 [800.673663ms]
  I0102 10:13:46.730781 23 service_latency.go:356] Created: latency-svc-fznvh
  I0102 10:13:46.773406 23 service_latency.go:363] Got endpoints: latency-svc-gbd7d [800.084328ms]
  I0102 10:13:46.784735 23 service_latency.go:356] Created: latency-svc-fbm7f
  I0102 10:13:46.823601 23 service_latency.go:363] Got endpoints: latency-svc-9zh97 [800.072747ms]
  I0102 10:13:46.840870 23 service_latency.go:356] Created: latency-svc-z8fcl
  I0102 10:13:46.880150 23 service_latency.go:363] Got endpoints: latency-svc-kjnw5 [748.414718ms]
  I0102 10:13:46.896638 23 service_latency.go:356] Created: latency-svc-8psgp
  I0102 10:13:46.922677 23 service_latency.go:363] Got endpoints: latency-svc-75mdg [738.717373ms]
  I0102 10:13:46.928200 23 service_latency.go:356] Created: latency-svc-69jcf
  I0102 10:13:46.985506 23 service_latency.go:363] Got endpoints: latency-svc-7n6sj [762.113167ms]
  I0102 10:13:46.992788 23 service_latency.go:356] Created: latency-svc-gglsk
  I0102 10:13:47.022683 23 service_latency.go:363] Got endpoints: latency-svc-gq69b [750.574713ms]
  I0102 10:13:47.030201 23 service_latency.go:356] Created: latency-svc-c9tsn
  I0102 10:13:47.072915 23 service_latency.go:363] Got endpoints: latency-svc-kvknn [732.093423ms]
  I0102 10:13:47.082030 23 service_latency.go:356] Created: latency-svc-ppcq2
  I0102 10:13:47.128221 23 service_latency.go:363] Got endpoints: latency-svc-h259h [756.12255ms]
  I0102 10:13:47.142617 23 service_latency.go:356] Created: latency-svc-9zrgg
  I0102 10:13:47.172027 23 service_latency.go:363] Got endpoints: latency-svc-csgbx [745.705125ms]
  I0102 10:13:47.185891 23 service_latency.go:356] Created: latency-svc-fw4v6
  I0102 10:13:47.221860 23 service_latency.go:363] Got endpoints: latency-svc-2nlpn [748.595694ms]
  I0102 10:13:47.228628 23 service_latency.go:356] Created: latency-svc-6txgf
  I0102 10:13:47.279485 23 service_latency.go:363] Got endpoints: latency-svc-8nndq [754.281278ms]
  I0102 10:13:47.295340 23 service_latency.go:356] Created: latency-svc-d99tp
  I0102 10:13:47.322773 23 service_latency.go:363] Got endpoints: latency-svc-5x7gw [748.67584ms]
  I0102 10:13:47.329306 23 service_latency.go:356] Created: latency-svc-6zbnd
  I0102 10:13:47.373750 23 service_latency.go:363] Got endpoints: latency-svc-658bf [740.997017ms]
  I0102 10:13:47.380996 23 service_latency.go:356] Created: latency-svc-jh74s
  I0102 10:13:47.428793 23 service_latency.go:363] Got endpoints: latency-svc-ndtxm [750.262582ms]
  I0102 10:13:47.447041 23 service_latency.go:356] Created: latency-svc-bz5mk
  I0102 10:13:47.479462 23 service_latency.go:363] Got endpoints: latency-svc-fznvh [756.029939ms]
  I0102 10:13:47.486670 23 service_latency.go:356] Created: latency-svc-xj5hq
  I0102 10:13:47.524564 23 service_latency.go:363] Got endpoints: latency-svc-fbm7f [751.115296ms]
  I0102 10:13:47.535337 23 service_latency.go:356] Created: latency-svc-82z4w
  I0102 10:13:47.583712 23 service_latency.go:363] Got endpoints: latency-svc-z8fcl [759.891022ms]
  I0102 10:13:47.590604 23 service_latency.go:356] Created: latency-svc-wjzbj
  I0102 10:13:47.622006 23 service_latency.go:363] Got endpoints: latency-svc-8psgp [741.244026ms]
  I0102 10:13:47.631310 23 service_latency.go:356] Created: latency-svc-ljntn
  I0102 10:13:47.672043 23 service_latency.go:363] Got endpoints: latency-svc-69jcf [749.321306ms]
  I0102 10:13:47.678773 23 service_latency.go:356] Created: latency-svc-sskbm
  I0102 10:13:47.726703 23 service_latency.go:363] Got endpoints: latency-svc-gglsk [741.124622ms]
  I0102 10:13:47.738009 23 service_latency.go:356] Created: latency-svc-2xt5n
  I0102 10:13:47.776333 23 service_latency.go:363] Got endpoints: latency-svc-c9tsn [753.573935ms]
  I0102 10:13:47.786407 23 service_latency.go:356] Created: latency-svc-58g6m
  I0102 10:13:47.823013 23 service_latency.go:363] Got endpoints: latency-svc-ppcq2 [749.910177ms]
  I0102 10:13:47.833378 23 service_latency.go:356] Created: latency-svc-wkjnx
  I0102 10:13:47.874398 23 service_latency.go:363] Got endpoints: latency-svc-9zrgg [746.115056ms]
  I0102 10:13:47.882212 23 service_latency.go:356] Created: latency-svc-zkskz
  I0102 10:13:47.922608 23 service_latency.go:363] Got endpoints: latency-svc-fw4v6 [749.727339ms]
  I0102 10:13:47.930911 23 service_latency.go:356] Created: latency-svc-vc6wt
  I0102 10:13:47.972787 23 service_latency.go:363] Got endpoints: latency-svc-6txgf [750.591442ms]
  I0102 10:13:47.978869 23 service_latency.go:356] Created: latency-svc-vmtd6
  I0102 10:13:48.024600 23 service_latency.go:363] Got endpoints: latency-svc-d99tp [745.052518ms]
  I0102 10:13:48.031531 23 service_latency.go:356] Created: latency-svc-dddk4
  I0102 10:13:48.080683 23 service_latency.go:363] Got endpoints: latency-svc-6zbnd [757.856829ms]
  I0102 10:13:48.091107 23 service_latency.go:356] Created: latency-svc-jbvqq
  I0102 10:13:48.124018 23 service_latency.go:363] Got endpoints: latency-svc-jh74s [750.040578ms]
  I0102 10:13:48.133978 23 service_latency.go:356] Created: latency-svc-fmqp6
  I0102 10:13:48.174948 23 service_latency.go:363] Got endpoints: latency-svc-bz5mk [745.089185ms]
  I0102 10:13:48.183623 23 service_latency.go:356] Created: latency-svc-pctvl
  I0102 10:13:48.225546 23 service_latency.go:363] Got endpoints: latency-svc-xj5hq [746.045599ms]
  I0102 10:13:48.231558 23 service_latency.go:356] Created: latency-svc-zh8gd
  I0102 10:13:48.274104 23 service_latency.go:363] Got endpoints: latency-svc-82z4w [749.472957ms]
  I0102 10:13:48.280038 23 service_latency.go:356] Created: latency-svc-hm77f
  I0102 10:13:48.322649 23 service_latency.go:363] Got endpoints: latency-svc-wjzbj [738.584893ms]
  I0102 10:13:48.328975 23 service_latency.go:356] Created: latency-svc-qfnqr
  I0102 10:13:48.373111 23 service_latency.go:363] Got endpoints: latency-svc-ljntn [750.545681ms]
  I0102 10:13:48.379760 23 service_latency.go:356] Created: latency-svc-dpjdg
  I0102 10:13:48.422409 23 service_latency.go:363] Got endpoints: latency-svc-sskbm [750.105798ms]
  I0102 10:13:48.428949 23 service_latency.go:356] Created: latency-svc-4m6xr
  I0102 10:13:48.481115 23 service_latency.go:363] Got endpoints: latency-svc-2xt5n [753.971577ms]
  I0102 10:13:48.492068 23 service_latency.go:356] Created: latency-svc-4w2jz
  I0102 10:13:48.522792 23 service_latency.go:363] Got endpoints: latency-svc-58g6m [745.829476ms]
  I0102 10:13:48.532860 23 service_latency.go:356] Created: latency-svc-88cwv
  I0102 10:13:48.570623 23 service_latency.go:363] Got endpoints: latency-svc-wkjnx [747.272902ms]
  I0102 10:13:48.577738 23 service_latency.go:356] Created: latency-svc-x2p45
  I0102 10:13:48.621631 23 service_latency.go:363] Got endpoints: latency-svc-zkskz [747.18318ms]
  I0102 10:13:48.629212 23 service_latency.go:356] Created: latency-svc-67lfq
  I0102 10:13:48.672076 23 service_latency.go:363] Got endpoints: latency-svc-vc6wt [749.428886ms]
  I0102 10:13:48.680852 23 service_latency.go:356] Created: latency-svc-8h97s
  I0102 10:13:48.722399 23 service_latency.go:363] Got endpoints: latency-svc-vmtd6 [749.552217ms]
  I0102 10:13:48.729338 23 service_latency.go:356] Created: latency-svc-65sds
  I0102 10:13:48.774342 23 service_latency.go:363] Got endpoints: latency-svc-dddk4 [749.704382ms]
  I0102 10:13:48.783047 23 service_latency.go:356] Created: latency-svc-r2nhn
  I0102 10:13:48.820828 23 service_latency.go:363] Got endpoints: latency-svc-jbvqq [740.055217ms]
  I0102 10:13:48.830322 23 service_latency.go:356] Created: latency-svc-4tsvx
  I0102 10:13:48.872234 23 service_latency.go:363] Got endpoints: latency-svc-fmqp6 [746.718295ms]
  I0102 10:13:48.881957 23 service_latency.go:356] Created: latency-svc-hhpg5
  I0102 10:13:48.921831 23 service_latency.go:363] Got endpoints: latency-svc-pctvl [746.488513ms]
  I0102 10:13:48.929275 23 service_latency.go:356] Created: latency-svc-wc5c8
  I0102 10:13:48.970449 23 service_latency.go:363] Got endpoints: latency-svc-zh8gd [744.543999ms]
  I0102 10:13:48.978361 23 service_latency.go:356] Created: latency-svc-c5qxq
  I0102 10:13:49.023189 23 service_latency.go:363] Got endpoints: latency-svc-hm77f [749.044458ms]
  I0102 10:13:49.032388 23 service_latency.go:356] Created: latency-svc-fjts8
  I0102 10:13:49.072408 23 service_latency.go:363] Got endpoints: latency-svc-qfnqr [749.706065ms]
  I0102 10:13:49.079905 23 service_latency.go:356] Created: latency-svc-grdmv
  I0102 10:13:49.121963 23 service_latency.go:363] Got endpoints: latency-svc-dpjdg [748.797289ms]
  I0102 10:13:49.130714 23 service_latency.go:356] Created: latency-svc-rms77
  I0102 10:13:49.172369 23 service_latency.go:363] Got endpoints: latency-svc-4m6xr [749.889097ms]
  I0102 10:13:49.179563 23 service_latency.go:356] Created: latency-svc-qg4sl
  I0102 10:13:49.222487 23 service_latency.go:363] Got endpoints: latency-svc-4w2jz [741.313256ms]
  I0102 10:13:49.229050 23 service_latency.go:356] Created: latency-svc-d4ml6
  I0102 10:13:49.272784 23 service_latency.go:363] Got endpoints: latency-svc-88cwv [749.952896ms]
  I0102 10:13:49.280318 23 service_latency.go:356] Created: latency-svc-2g87s
  I0102 10:13:49.322457 23 service_latency.go:363] Got endpoints: latency-svc-x2p45 [751.749631ms]
  I0102 10:13:49.329644 23 service_latency.go:356] Created: latency-svc-l5wvk
  I0102 10:13:49.373028 23 service_latency.go:363] Got endpoints: latency-svc-67lfq [751.085374ms]
  I0102 10:13:49.379646 23 service_latency.go:356] Created: latency-svc-xghlj
  I0102 10:13:49.422987 23 service_latency.go:363] Got endpoints: latency-svc-8h97s [750.639729ms]
  I0102 10:13:49.430504 23 service_latency.go:356] Created: latency-svc-27tn7
  I0102 10:13:49.473426 23 service_latency.go:363] Got endpoints: latency-svc-65sds [750.771385ms]
  I0102 10:13:49.483906 23 service_latency.go:356] Created: latency-svc-cmnk4
  I0102 10:13:49.523805 23 service_latency.go:363] Got endpoints: latency-svc-r2nhn [749.178601ms]
  I0102 10:13:49.531424 23 service_latency.go:356] Created: latency-svc-rh9cm
  I0102 10:13:49.572575 23 service_latency.go:363] Got endpoints: latency-svc-4tsvx [751.365698ms]
  I0102 10:13:49.579471 23 service_latency.go:356] Created: latency-svc-gl7tk
  I0102 10:13:49.621604 23 service_latency.go:363] Got endpoints: latency-svc-hhpg5 [749.330884ms]
  I0102 10:13:49.628561 23 service_latency.go:356] Created: latency-svc-l899g
  I0102 10:13:49.671824 23 service_latency.go:363] Got endpoints: latency-svc-wc5c8 [749.955696ms]
  I0102 10:13:49.679940 23 service_latency.go:356] Created: latency-svc-9q4jb
  I0102 10:13:49.721883 23 service_latency.go:363] Got endpoints: latency-svc-c5qxq [751.3948ms]
  I0102 10:13:49.728931 23 service_latency.go:356] Created: latency-svc-pl2lr
  I0102 10:13:49.773434 23 service_latency.go:363] Got endpoints: latency-svc-fjts8 [750.207223ms]
  I0102 10:13:49.823038 23 service_latency.go:363] Got endpoints: latency-svc-grdmv [750.592977ms]
  I0102 10:13:49.873416 23 service_latency.go:363] Got endpoints: latency-svc-rms77 [751.391677ms]
  I0102 10:13:49.921651 23 service_latency.go:363] Got endpoints: latency-svc-qg4sl [749.240708ms]
  I0102 10:13:49.971622 23 service_latency.go:363] Got endpoints: latency-svc-d4ml6 [749.096304ms]
  I0102 10:13:50.023131 23 service_latency.go:363] Got endpoints: latency-svc-2g87s [750.296958ms]
  I0102 10:13:50.073716 23 service_latency.go:363] Got endpoints: latency-svc-l5wvk [751.217091ms]
  I0102 10:13:50.122653 23 service_latency.go:363] Got endpoints: latency-svc-xghlj [749.584905ms]
  I0102 10:13:50.173753 23 service_latency.go:363] Got endpoints: latency-svc-27tn7 [750.594314ms]
  I0102 10:13:50.222456 23 service_latency.go:363] Got endpoints: latency-svc-cmnk4 [748.972064ms]
  I0102 10:13:50.271433 23 service_latency.go:363] Got endpoints: latency-svc-rh9cm [747.584558ms]
  I0102 10:13:50.321697 23 service_latency.go:363] Got endpoints: latency-svc-gl7tk [749.056122ms]
  I0102 10:13:50.377489 23 service_latency.go:363] Got endpoints: latency-svc-l899g [755.843192ms]
  I0102 10:13:50.426142 23 service_latency.go:363] Got endpoints: latency-svc-9q4jb [754.265303ms]
  I0102 10:13:50.470959 23 service_latency.go:363] Got endpoints: latency-svc-pl2lr [749.025468ms]
  I0102 10:13:50.471344 23 service_latency.go:114] Latencies: [16.15652ms 29.327563ms 37.955299ms 38.665636ms 41.82327ms 42.090396ms 92.156427ms 99.848601ms 100.003573ms 103.483062ms 113.956014ms 121.22001ms 124.685785ms 130.669711ms 130.932811ms 131.137295ms 131.32354ms 131.383796ms 131.511112ms 132.10793ms 132.233946ms 132.244486ms 132.526546ms 135.554675ms 135.632052ms 137.54031ms 140.679512ms 140.768692ms 140.876461ms 140.965413ms 141.310891ms 141.515414ms 141.582438ms 145.459061ms 146.119352ms 151.328257ms 170.973335ms 197.587527ms 219.56803ms 271.481528ms 321.454415ms 375.291669ms 429.58858ms 473.71707ms 522.663614ms 570.122973ms 620.321028ms 668.673744ms 727.730376ms 732.093423ms 732.543652ms 734.381626ms 736.481834ms 736.802452ms 738.584893ms 738.717373ms 740.055217ms 740.997017ms 741.124622ms 741.244026ms 741.313256ms 743.209988ms 743.459121ms 743.738631ms 743.774284ms 743.909445ms 744.280003ms 744.364223ms 744.543999ms 744.636924ms 745.052518ms 745.089185ms 745.312246ms 745.705125ms 745.829476ms 746.045599ms 746.115056ms 746.279692ms 746.488513ms 746.718295ms 746.761048ms 746.904173ms 747.18318ms 747.248861ms 747.272902ms 747.417134ms 747.584558ms 747.632664ms 747.720424ms 747.73751ms 748.121423ms 748.297121ms 748.414718ms 748.452806ms 748.573067ms 748.595694ms 748.67584ms 748.752719ms 748.768927ms 748.797289ms 748.834153ms 748.972064ms 749.015715ms 749.025468ms 749.044458ms 749.056122ms 749.096304ms 749.138192ms 749.144063ms 749.178601ms 749.240708ms 749.241567ms 749.321306ms 749.330884ms 749.428886ms 749.472957ms 749.552217ms 749.584905ms 749.616996ms 749.704382ms 749.706065ms 749.727339ms 749.757252ms 749.889097ms 749.910177ms 749.912402ms 749.952896ms 749.955696ms 750.040578ms 750.105798ms 750.207223ms 750.262582ms 750.268075ms 750.296958ms 750.405943ms 750.533228ms 750.545681ms 750.574713ms 750.591442ms 750.592977ms 750.594314ms 750.639729ms 750.714619ms 750.771385ms 750.816861ms 751.085374ms 751.115296ms 751.213945ms 751.217091ms 751.322057ms 751.354921ms 751.365698ms 751.391677ms 751.3948ms 751.440923ms 751.491474ms 751.58107ms 751.588599ms 751.649573ms 751.739059ms 751.749631ms 752.112885ms 752.614382ms 752.70157ms 752.714802ms 752.793703ms 753.228186ms 753.573935ms 753.858072ms 753.971577ms 754.265303ms 754.281278ms 754.653441ms 754.899838ms 755.644982ms 755.843192ms 755.981817ms 756.029939ms 756.12255ms 756.449084ms 757.856829ms 758.039801ms 759.891022ms 762.113167ms 764.973964ms 797.179943ms 798.905557ms 799.06254ms 800.072747ms 800.084328ms 800.673663ms 800.697229ms 801.249706ms 801.514197ms 801.861068ms 806.366771ms 808.140127ms 809.419514ms 812.842333ms 817.072612ms]
  I0102 10:13:50.471369 23 service_latency.go:118] 50 %ile: 748.834153ms
  I0102 10:13:50.471459 23 service_latency.go:119] 90 %ile: 757.856829ms
  I0102 10:13:50.471472 23 service_latency.go:120] 99 %ile: 812.842333ms
  I0102 10:13:50.471482 23 service_latency.go:121] Total sample count: 200
  I0102 10:13:50.471760 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2478" for this suite. @ 01/02/25 10:13:50.475
• [10.813 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 01/02/25 10:13:50.479
  I0102 10:13:50.479922 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 10:13:50.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:13:50.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:13:50.493
  STEP: Discovering how many secrets are in namespace by default @ 01/02/25 10:13:50.495
  STEP: Counting existing ResourceQuota @ 01/02/25 10:13:55.496
  STEP: Creating a ResourceQuota @ 01/02/25 10:14:00.5
  STEP: Ensuring resource quota status is calculated @ 01/02/25 10:14:00.503
  STEP: Creating a Secret @ 01/02/25 10:14:02.505
  STEP: Ensuring resource quota status captures secret creation @ 01/02/25 10:14:02.514
  STEP: Deleting a secret @ 01/02/25 10:14:04.516
  STEP: Ensuring resource quota status released usage @ 01/02/25 10:14:04.52
  I0102 10:14:06.525102 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3163" for this suite. @ 01/02/25 10:14:06.529
• [16.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 01/02/25 10:14:06.549
  I0102 10:14:06.549671 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename var-expansion @ 01/02/25 10:14:06.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:14:06.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:14:06.567
  STEP: Creating a pod to test env composition @ 01/02/25 10:14:06.569
  STEP: Saw pod success @ 01/02/25 10:14:10.587
  I0102 10:14:10.595742 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod var-expansion-8b02ca47-84f5-4208-97cd-5b9ba15af147 container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 10:14:10.613
  I0102 10:14:10.628907 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-973" for this suite. @ 01/02/25 10:14:10.633
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 01/02/25 10:14:10.64
  I0102 10:14:10.640858 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:14:10.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:14:10.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:14:10.654
  STEP: creating service nodeport-test with type=NodePort in namespace services-5960 @ 01/02/25 10:14:10.655
  STEP: creating replication controller nodeport-test in namespace services-5960 @ 01/02/25 10:14:10.668
  I0102 10:14:10.678159      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5960, replica count: 2
  I0102 10:14:13.729954      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 10:14:13.730616 23 resource.go:361] Creating new exec pod
  I0102 10:14:16.747898 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5960 exec execpod5dnlg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0102 10:14:16.873901 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0102 10:14:16.873935 23 builder.go:147] stdout: "nodeport-test-b9q8d"
  I0102 10:14:16.874108 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5960 exec execpod5dnlg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.24 80'
  I0102 10:14:16.979030 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.107.24 80\nConnection to 10.43.107.24 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0102 10:14:16.979068 23 builder.go:147] stdout: ""
  I0102 10:14:17.875387 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5960 exec execpod5dnlg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.24 80'
  I0102 10:14:18.008510 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.107.24 80\nConnection to 10.43.107.24 80 port [tcp/http] succeeded!\n"
  I0102 10:14:18.008544 23 builder.go:147] stdout: ""
  I0102 10:14:18.874515 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5960 exec execpod5dnlg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.107.24 80'
  I0102 10:14:19.006876 23 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.107.24 80\n+ echoConnection to 10.43.107.24 80 port [tcp/http] succeeded!\n hostName\n"
  I0102 10:14:19.006910 23 builder.go:147] stdout: "nodeport-test-b9q8d"
  I0102 10:14:19.007199 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5960 exec execpod5dnlg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 31356'
  I0102 10:14:19.106388 23 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.150.103 31356\n+ echo hostName\nConnection to 192.168.150.103 31356 port [tcp/*] succeeded!\n"
  I0102 10:14:19.106422 23 builder.go:147] stdout: ""
  I0102 10:14:20.007599 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5960 exec execpod5dnlg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 31356'
  I0102 10:14:20.130820 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 31356\nConnection to 192.168.150.103 31356 port [tcp/*] succeeded!\n"
  I0102 10:14:20.130853 23 builder.go:147] stdout: ""
  I0102 10:14:21.007642 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5960 exec execpod5dnlg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 31356'
  I0102 10:14:21.107961 23 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.150.103 31356\n+ echo hostName\nConnection to 192.168.150.103 31356 port [tcp/*] succeeded!\n"
  I0102 10:14:21.107997 23 builder.go:147] stdout: "nodeport-test-b9q8d"
  I0102 10:14:21.108177 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-5960 exec execpod5dnlg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.105 31356'
  I0102 10:14:21.215947 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.105 31356\nConnection to 192.168.150.105 31356 port [tcp/*] succeeded!\n"
  I0102 10:14:21.215984 23 builder.go:147] stdout: "nodeport-test-8flls"
  I0102 10:14:21.216224 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5960" for this suite. @ 01/02/25 10:14:21.218
• [10.581 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 01/02/25 10:14:21.222
  I0102 10:14:21.222310 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename cronjob @ 01/02/25 10:14:21.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:14:21.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:14:21.235
  STEP: Creating a cronjob @ 01/02/25 10:14:21.237
  STEP: Ensuring more than one job is running at a time @ 01/02/25 10:14:21.241
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 01/02/25 10:16:01.243
  STEP: Removing cronjob @ 01/02/25 10:16:01.244
  I0102 10:16:01.247603 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2323" for this suite. @ 01/02/25 10:16:01.263
• [100.046 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 01/02/25 10:16:01.276
  I0102 10:16:01.281418 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sysctl @ 01/02/25 10:16:01.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:16:01.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:16:01.303
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 01/02/25 10:16:01.305
  STEP: Watching for error events or started pod @ 01/02/25 10:16:01.312
  STEP: Waiting for pod completion @ 01/02/25 10:16:03.317
  STEP: Checking that the pod succeeded @ 01/02/25 10:16:05.329
  STEP: Getting logs from the pod @ 01/02/25 10:16:05.33
  STEP: Checking that the sysctl is actually updated @ 01/02/25 10:16:05.362
  I0102 10:16:05.362861 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2499" for this suite. @ 01/02/25 10:16:05.374
• [4.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 01/02/25 10:16:05.381
  I0102 10:16:05.381770 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 10:16:05.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:16:05.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:16:05.396
  STEP: Creating configMap with name configmap-test-volume-map-2881fcc0-37b6-4158-8e6e-9feab4dd947f @ 01/02/25 10:16:05.397
  STEP: Creating a pod to test consume configMaps @ 01/02/25 10:16:05.399
  STEP: Saw pod success @ 01/02/25 10:16:09.413
  I0102 10:16:09.414732 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-configmaps-cbb53ae6-5766-4d1f-81d1-d54700319c12 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 10:16:09.422
  I0102 10:16:09.444777 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7022" for this suite. @ 01/02/25 10:16:09.446
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 01/02/25 10:16:09.452
  I0102 10:16:09.453082 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 10:16:09.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:16:09.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:16:09.466
  STEP: Creating configMap with name configmap-test-upd-702d9d8f-0605-4167-b875-3736d2b51615 @ 01/02/25 10:16:09.555
  STEP: Creating the pod @ 01/02/25 10:16:09.569
  STEP: Waiting for pod with text data @ 01/02/25 10:16:11.59
  STEP: Waiting for pod with binary data @ 01/02/25 10:16:11.594
  I0102 10:16:11.597625 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2252" for this suite. @ 01/02/25 10:16:11.599
• [2.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 01/02/25 10:16:11.603
  I0102 10:16:11.604069 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename chunking @ 01/02/25 10:16:11.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:16:11.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:16:11.641
  STEP: creating a large number of resources @ 01/02/25 10:16:11.642
  I0102 10:16:13.482689      23 request.go:700] Waited for 1.022833746s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-5244/podtemplates
  I0102 10:16:24.163750      23 request.go:700] Waited for 1.005503915s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-5244/podtemplates
  STEP: retrieving the first page @ 01/02/25 10:16:29.308
  I0102 10:16:29.357795 23 chunking.go:163] Retrieved 40/40 results with rv 45090 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 01/02/25 10:16:29.358
  I0102 10:16:49.366642 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:17:09.369724 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:17:29.363944 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:17:49.360901 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:18:09.376731 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:18:29.366142 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:18:49.377435 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:19:09.362187 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:19:29.370100 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:19:49.364206 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:20:09.364032 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:20:29.361373 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:20:49.361459 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:21:09.364638 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:21:29.369848 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:21:49.362926 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:22:09.363338 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDUwOTAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0102 10:22:29.368728 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0102 10:22:29.370037 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 01/02/25 10:22:29.37
  STEP: retrieving all remaining pages @ 01/02/25 10:22:29.374
  I0102 10:22:29.376792 23 chunking.go:221] Retrieved 40/40 results with rv 46659 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY2NTksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0102 10:22:29.378736 23 chunking.go:221] Retrieved 40/40 results with rv 46659 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY2NTksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0102 10:22:29.380770 23 chunking.go:221] Retrieved 40/40 results with rv 46659 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY2NTksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0102 10:22:29.382933 23 chunking.go:221] Retrieved 40/40 results with rv 46659 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY2NTksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0102 10:22:29.385345 23 chunking.go:221] Retrieved 40/40 results with rv 46659 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY2NTksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0102 10:22:29.387409 23 chunking.go:221] Retrieved 40/40 results with rv 46659 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY2NTksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0102 10:22:29.389511 23 chunking.go:221] Retrieved 40/40 results with rv 46659 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDY2NTksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0102 10:22:29.391538 23 chunking.go:221] Retrieved 40/40 results with rv 46659 and continue 
  I0102 10:22:29.391783 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5244" for this suite. @ 01/02/25 10:22:29.393
• [377.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 01/02/25 10:22:29.399
  I0102 10:22:29.399608 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replication-controller @ 01/02/25 10:22:29.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:22:29.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:22:29.413
  STEP: Creating ReplicationController "e2e-rc-ttgk6" @ 01/02/25 10:22:29.414
  I0102 10:22:29.417066 23 rc.go:792] Get Replication Controller "e2e-rc-ttgk6" to confirm replicas
  I0102 10:22:30.416993 23 rc.go:792] Get Replication Controller "e2e-rc-ttgk6" to confirm replicas
  I0102 10:22:30.426700 23 rc.go:801] Found 1 replicas for "e2e-rc-ttgk6" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-ttgk6" @ 01/02/25 10:22:30.431
  STEP: Updating a scale subresource @ 01/02/25 10:22:30.438
  STEP: Verifying replicas where modified for replication controller "e2e-rc-ttgk6" @ 01/02/25 10:22:30.449
  I0102 10:22:30.450206 23 rc.go:792] Get Replication Controller "e2e-rc-ttgk6" to confirm replicas
  I0102 10:22:31.451132 23 rc.go:792] Get Replication Controller "e2e-rc-ttgk6" to confirm replicas
  I0102 10:22:31.453411 23 rc.go:801] Found 2 replicas for "e2e-rc-ttgk6" replication controller
  I0102 10:22:31.453953 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7673" for this suite. @ 01/02/25 10:22:31.457
• [2.065 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 01/02/25 10:22:31.464
  I0102 10:22:31.464318 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:22:31.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:22:31.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:22:31.477
  STEP: Creating configMap with name projected-configmap-test-volume-96eea4c3-c8d7-4857-8d24-922a04ef4450 @ 01/02/25 10:22:31.478
  STEP: Creating a pod to test consume configMaps @ 01/02/25 10:22:31.481
  STEP: Saw pod success @ 01/02/25 10:22:35.496
  I0102 10:22:35.497873 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-projected-configmaps-ee0e3b90-09f1-4421-95ee-0f5129c319c9 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 10:22:35.506
  I0102 10:22:35.516138 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2658" for this suite. @ 01/02/25 10:22:35.519
• [4.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 01/02/25 10:22:35.524
  I0102 10:22:35.524425 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/02/25 10:22:35.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:22:35.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:22:35.537
  I0102 10:22:35.542055 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9119" for this suite. @ 01/02/25 10:22:35.62
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 01/02/25 10:22:35.629
  I0102 10:22:35.629388 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 10:22:35.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:22:35.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:22:35.642
  I0102 10:22:35.643898 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 01/02/25 10:22:37.134
  I0102 10:22:37.134511 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-2395 --namespace=crd-publish-openapi-2395 create -f -'
  I0102 10:22:37.196768 23 builder.go:146] stderr: ""
  I0102 10:22:37.196807 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-197-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0102 10:22:37.196852 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-2395 --namespace=crd-publish-openapi-2395 delete e2e-test-crd-publish-openapi-197-crds test-cr'
  I0102 10:22:37.243774 23 builder.go:146] stderr: ""
  I0102 10:22:37.243813 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-197-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0102 10:22:37.244035 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-2395 --namespace=crd-publish-openapi-2395 apply -f -'
  I0102 10:22:37.291283 23 builder.go:146] stderr: ""
  I0102 10:22:37.291324 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-197-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0102 10:22:37.291363 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-2395 --namespace=crd-publish-openapi-2395 delete e2e-test-crd-publish-openapi-197-crds test-cr'
  I0102 10:22:37.338086 23 builder.go:146] stderr: ""
  I0102 10:22:37.338119 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-197-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 01/02/25 10:22:37.338
  I0102 10:22:37.338177 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=crd-publish-openapi-2395 explain e2e-test-crd-publish-openapi-197-crds'
  I0102 10:22:37.385507 23 builder.go:146] stderr: ""
  I0102 10:22:37.385570 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-197-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0102 10:22:38.773920 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2395" for this suite. @ 01/02/25 10:22:38.777
• [3.153 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 01/02/25 10:22:38.785
  I0102 10:22:38.785320 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-watch @ 01/02/25 10:22:38.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:22:38.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:22:38.799
  I0102 10:22:38.800733 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Creating first CR  @ 01/02/25 10:22:41.326
  I0102 10:22:41.329987 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-02T10:22:41Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-02T10:22:41Z]] name:name1 resourceVersion:47235 uid:fbfd9658-764a-4dfb-aeab-1fab451a4cb8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 01/02/25 10:22:51.331
  I0102 10:22:51.344549 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-02T10:22:51Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-02T10:22:51Z]] name:name2 resourceVersion:47281 uid:cada1879-e6c9-4809-81a8-71d3d952a5f2] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 01/02/25 10:23:01.345
  I0102 10:23:01.359504 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-02T10:22:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-02T10:23:01Z]] name:name1 resourceVersion:47324 uid:fbfd9658-764a-4dfb-aeab-1fab451a4cb8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 01/02/25 10:23:11.36
  I0102 10:23:11.376403 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-02T10:22:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-02T10:23:11Z]] name:name2 resourceVersion:47371 uid:cada1879-e6c9-4809-81a8-71d3d952a5f2] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 01/02/25 10:23:21.377
  I0102 10:23:21.381067 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-02T10:22:41Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-02T10:23:01Z]] name:name1 resourceVersion:47413 uid:fbfd9658-764a-4dfb-aeab-1fab451a4cb8] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 01/02/25 10:23:31.382
  I0102 10:23:31.396903 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-01-02T10:22:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-01-02T10:23:11Z]] name:name2 resourceVersion:47455 uid:cada1879-e6c9-4809-81a8-71d3d952a5f2] num:map[num1:9223372036854775807 num2:1000000]]}
  I0102 10:23:41.931338 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6290" for this suite. @ 01/02/25 10:23:41.94
• [63.160 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 01/02/25 10:23:41.945
  I0102 10:23:41.945586 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-runtime @ 01/02/25 10:23:41.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:23:41.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:23:41.96
  STEP: create the container @ 01/02/25 10:23:41.962
  W0102 10:23:41.965969      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/02/25 10:23:41.966
  STEP: get the container status @ 01/02/25 10:23:44.987
  STEP: the container should be terminated @ 01/02/25 10:23:44.989
  STEP: the termination message should be set @ 01/02/25 10:23:44.989
  I0102 10:23:44.989257 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 01/02/25 10:23:44.989
  I0102 10:23:45.000967 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5742" for this suite. @ 01/02/25 10:23:45.003
• [3.061 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 01/02/25 10:23:45.006
  I0102 10:23:45.006552 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 10:23:45.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:23:45.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:23:45.021
  I0102 10:23:45.047766 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9928" for this suite. @ 01/02/25 10:23:45.103
• [0.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 01/02/25 10:23:45.11
  I0102 10:23:45.110264 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename job @ 01/02/25 10:23:45.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:23:45.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:23:45.123
  STEP: Creating Indexed job @ 01/02/25 10:23:45.125
  STEP: Ensuring job reaches completions @ 01/02/25 10:23:45.13
  STEP: Ensuring pods with index for job exist @ 01/02/25 10:23:55.138
  I0102 10:23:55.143246 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3179" for this suite. @ 01/02/25 10:23:55.149
• [10.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 01/02/25 10:23:55.159
  I0102 10:23:55.159346 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:23:55.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:23:55.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:23:55.178
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8261 @ 01/02/25 10:23:55.18
  STEP: changing the ExternalName service to type=NodePort @ 01/02/25 10:23:55.184
  STEP: creating replication controller externalname-service in namespace services-8261 @ 01/02/25 10:23:55.195
  I0102 10:23:55.220034      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8261, replica count: 2
  I0102 10:23:58.271232      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 10:23:58.271582 23 resource.go:361] Creating new exec pod
  I0102 10:24:01.289482 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0102 10:24:01.404042 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0102 10:24:01.404276 23 builder.go:147] stdout: ""
  I0102 10:24:02.291744 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0102 10:24:02.417481 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0102 10:24:02.417516 23 builder.go:147] stdout: ""
  I0102 10:24:03.289683 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0102 10:24:03.401773 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0102 10:24:03.401815 23 builder.go:147] stdout: "externalname-service-6lmww"
  I0102 10:24:03.401877 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.219.123 80'
  I0102 10:24:03.634232 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.219.123 80\nConnection to 10.43.219.123 80 port [tcp/http] succeeded!\n"
  I0102 10:24:03.634267 23 builder.go:147] stdout: "externalname-service-6lmww"
  I0102 10:24:03.634350 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 32177'
  I0102 10:24:03.730424 23 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.150.103 32177\n+ echo hostName\nConnection to 192.168.150.103 32177 port [tcp/*] succeeded!\n"
  I0102 10:24:03.730459 23 builder.go:147] stdout: ""
  I0102 10:24:04.635374 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 32177'
  I0102 10:24:04.764188 23 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.150.103 32177\n+ echo hostName\nConnection to 192.168.150.103 32177 port [tcp/*] succeeded!\n"
  I0102 10:24:04.764233 23 builder.go:147] stdout: ""
  I0102 10:24:05.634586 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 32177'
  I0102 10:24:05.747612 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 32177\nConnection to 192.168.150.103 32177 port [tcp/*] succeeded!\n"
  I0102 10:24:05.747647 23 builder.go:147] stdout: ""
  I0102 10:24:06.634526 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 32177'
  I0102 10:24:06.732779 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 32177\nConnection to 192.168.150.103 32177 port [tcp/*] succeeded!\n"
  I0102 10:24:06.732866 23 builder.go:147] stdout: ""
  I0102 10:24:07.635174 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 32177'
  I0102 10:24:07.778296 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 32177\nConnection to 192.168.150.103 32177 port [tcp/*] succeeded!\n"
  I0102 10:24:07.778342 23 builder.go:147] stdout: ""
  I0102 10:24:08.635538 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.103 32177'
  I0102 10:24:08.773346 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.103 32177\nConnection to 192.168.150.103 32177 port [tcp/*] succeeded!\n"
  I0102 10:24:08.773404 23 builder.go:147] stdout: "externalname-service-rrkjb"
  I0102 10:24:08.773529 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-8261 exec execpodh8swg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.150.105 32177'
  I0102 10:24:08.877286 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.150.105 32177\nConnection to 192.168.150.105 32177 port [tcp/*] succeeded!\n"
  I0102 10:24:08.877329 23 builder.go:147] stdout: "externalname-service-6lmww"
  I0102 10:24:08.877444 23 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0102 10:24:08.899524 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8261" for this suite. @ 01/02/25 10:24:08.901
• [13.745 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 01/02/25 10:24:08.903
  I0102 10:24:08.903951 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename namespaces @ 01/02/25 10:24:08.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:24:08.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:24:08.926
  STEP: Updating Namespace "namespaces-5015" @ 01/02/25 10:24:08.931
  I0102 10:24:08.938408 23 namespace.go:389] Namespace "namespaces-5015" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"f06cdf57-c49c-4f44-b15c-b862c2645b5d", "kubernetes.io/metadata.name":"namespaces-5015", "namespaces-5015":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0102 10:24:08.938533 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5015" for this suite. @ 01/02/25 10:24:09.002
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 01/02/25 10:24:09.007
  I0102 10:24:09.007602 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:24:09.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:24:09.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:24:09.02
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 10:24:09.022
  STEP: Saw pod success @ 01/02/25 10:24:13.035
  I0102 10:24:13.039194 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-0b830e07-2462-4842-b89c-484a4500fdc7 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 10:24:13.053
  I0102 10:24:13.066833 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1629" for this suite. @ 01/02/25 10:24:13.068
• [4.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 01/02/25 10:24:13.073
  I0102 10:24:13.073488 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename statefulset @ 01/02/25 10:24:13.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:24:13.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:24:13.086
  STEP: Creating service test in namespace statefulset-1305 @ 01/02/25 10:24:13.087
  STEP: Creating statefulset ss in namespace statefulset-1305 @ 01/02/25 10:24:13.097
  I0102 10:24:13.103628 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0102 10:24:23.114417 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 01/02/25 10:24:23.118
  STEP: Getting /status @ 01/02/25 10:24:23.122
  I0102 10:24:23.124592 23 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 01/02/25 10:24:23.124
  I0102 10:24:23.128198 23 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 01/02/25 10:24:23.128
  I0102 10:24:23.129602 23 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0102 10:24:23.129631 23 statefulset.go:1111] Found Statefulset ss in namespace statefulset-1305 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0102 10:24:23.129641 23 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 01/02/25 10:24:23.129
  I0102 10:24:23.129702 23 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0102 10:24:23.135498 23 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 01/02/25 10:24:23.135
  I0102 10:24:23.137671 23 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0102 10:24:23.137969 23 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-1305 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0102 10:24:23.138319 23 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I0102 10:24:23.138592 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1305
  I0102 10:24:23.140226 23 rest.go:150] Scaling statefulset ss to 0
  I0102 10:24:33.148130 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0102 10:24:33.149414 23 rest.go:88] Deleting statefulset ss
  I0102 10:24:33.158227 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1305" for this suite. @ 01/02/25 10:24:33.162
• [20.093 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 01/02/25 10:24:33.166
  I0102 10:24:33.166315 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename var-expansion @ 01/02/25 10:24:33.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:24:33.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:24:33.182
  I0102 10:24:35.194892 23 delete.go:62] Deleting pod "var-expansion-48252ce5-f931-434c-9cc5-a74211a37010" in namespace "var-expansion-9010"
  I0102 10:24:35.200074 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-48252ce5-f931-434c-9cc5-a74211a37010" to be fully deleted
  I0102 10:24:37.204181 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9010" for this suite. @ 01/02/25 10:24:37.206
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 01/02/25 10:24:37.229
  I0102 10:24:37.229817 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl @ 01/02/25 10:24:37.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:24:37.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:24:37.339
  STEP: creating the pod @ 01/02/25 10:24:37.341
  I0102 10:24:37.341772 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3318 create -f -'
  I0102 10:24:37.431666 23 builder.go:146] stderr: ""
  I0102 10:24:37.431696 23 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 01/02/25 10:24:39.445
  I0102 10:24:39.445129 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3318 label pods pause testing-label=testing-label-value'
  I0102 10:24:39.507363 23 builder.go:146] stderr: ""
  I0102 10:24:39.507418 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 01/02/25 10:24:39.507
  I0102 10:24:39.507587 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3318 get pod pause -L testing-label'
  I0102 10:24:39.563051 23 builder.go:146] stderr: ""
  I0102 10:24:39.563092 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 01/02/25 10:24:39.563
  I0102 10:24:39.563160 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3318 label pods pause testing-label-'
  I0102 10:24:39.621624 23 builder.go:146] stderr: ""
  I0102 10:24:39.621657 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 01/02/25 10:24:39.621
  I0102 10:24:39.621720 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3318 get pod pause -L testing-label'
  I0102 10:24:39.667294 23 builder.go:146] stderr: ""
  I0102 10:24:39.667335 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 01/02/25 10:24:39.667
  I0102 10:24:39.667426 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3318 delete --grace-period=0 --force -f -'
  I0102 10:24:39.722620 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0102 10:24:39.722674 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0102 10:24:39.722809 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3318 get rc,svc -l name=pause --no-headers'
  I0102 10:24:39.774689 23 builder.go:146] stderr: "No resources found in kubectl-3318 namespace.\n"
  I0102 10:24:39.774721 23 builder.go:147] stdout: ""
  I0102 10:24:39.774760 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-3318 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0102 10:24:39.823521 23 builder.go:146] stderr: ""
  I0102 10:24:39.823554 23 builder.go:147] stdout: ""
  I0102 10:24:39.823634 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3318" for this suite. @ 01/02/25 10:24:39.826
• [2.600 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 01/02/25 10:24:39.83
  I0102 10:24:39.830240 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 10:24:39.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:24:39.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:24:39.841
  I0102 10:25:01.926852 23 container_probe.go:92] Container started at 2025-01-02 10:24:40 +0000 UTC, pod became ready at 2025-01-02 10:25:00 +0000 UTC
  I0102 10:25:01.928025 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5851" for this suite. @ 01/02/25 10:25:01.941
• [22.122 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 01/02/25 10:25:01.954
  I0102 10:25:01.954224 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 10:25:01.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:25:01.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:25:01.967
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 10:25:01.969
  STEP: Saw pod success @ 01/02/25 10:25:05.995
  I0102 10:25:06.000106 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-7d794d38-8912-481d-b5c7-92bf5328c1d5 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 10:25:06.022
  I0102 10:25:06.035758 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1545" for this suite. @ 01/02/25 10:25:06.037
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 01/02/25 10:25:06.044
  I0102 10:25:06.044455 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 10:25:06.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:25:06.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:25:06.056
  STEP: Creating secret with name secret-test-47a047fb-e335-418e-a2b4-59b1f9bc82ce @ 01/02/25 10:25:06.162
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:25:06.165
  STEP: Saw pod success @ 01/02/25 10:25:10.181
  I0102 10:25:10.189309 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-secrets-f631f8cb-d493-4c7b-b64a-72a6b0360007 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:25:10.211
  I0102 10:25:10.233970 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7829" for this suite. @ 01/02/25 10:25:10.236
  STEP: Destroying namespace "secret-namespace-9327" for this suite. @ 01/02/25 10:25:10.241
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 01/02/25 10:25:10.249
  I0102 10:25:10.249181 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/02/25 10:25:10.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:25:10.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:25:10.263
  STEP: creating @ 01/02/25 10:25:10.264
  STEP: getting @ 01/02/25 10:25:10.277
  STEP: listing in namespace @ 01/02/25 10:25:10.281
  STEP: patching @ 01/02/25 10:25:10.286
  STEP: deleting @ 01/02/25 10:25:10.291
  I0102 10:25:10.297973 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-969" for this suite. @ 01/02/25 10:25:10.337
• [0.092 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 01/02/25 10:25:10.341
  I0102 10:25:10.341618 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:25:10.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:25:10.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:25:10.361
  STEP: creating an Endpoint @ 01/02/25 10:25:10.363
  STEP: waiting for available Endpoint @ 01/02/25 10:25:10.367
  STEP: listing all Endpoints @ 01/02/25 10:25:10.368
  STEP: updating the Endpoint @ 01/02/25 10:25:10.369
  STEP: fetching the Endpoint @ 01/02/25 10:25:10.372
  STEP: patching the Endpoint @ 01/02/25 10:25:10.373
  STEP: fetching the Endpoint @ 01/02/25 10:25:10.378
  STEP: deleting the Endpoint by Collection @ 01/02/25 10:25:10.379
  STEP: waiting for Endpoint deletion @ 01/02/25 10:25:10.382
  STEP: fetching the Endpoint @ 01/02/25 10:25:10.383
  I0102 10:25:10.384314 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3621" for this suite. @ 01/02/25 10:25:10.443
• [0.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 01/02/25 10:25:10.454
  I0102 10:25:10.454325 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename deployment @ 01/02/25 10:25:10.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:25:10.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:25:10.47
  I0102 10:25:10.472506 23 deployment.go:1645] Creating simple deployment test-new-deployment
  I0102 10:25:10.491727 23 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 01/02/25 10:25:12.519
  STEP: updating a scale subresource @ 01/02/25 10:25:12.523
  STEP: verifying the deployment Spec.Replicas was modified @ 01/02/25 10:25:12.53
  STEP: Patch a scale subresource @ 01/02/25 10:25:12.532
  I0102 10:25:12.576809 23 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9e7944b6-7023-4add-9bb2-1951f35d9036",
      ResourceVersion: (string) (len=5) "48458",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 2,
      UpdatedReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0102 10:25:12.603248 23 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ffd4fad-ab55-4620-a7a3-6ce2480b0f5d",
      ResourceVersion: (string) (len=5) "48469",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "9e7944b6-7023-4add-9bb2-1951f35d9036",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 65 37 39 34 34  62 36 2d 37 30 32 33 2d  |\"9e7944b6-7023-|
              00000120  34 61 64 64 2d 39 62 62  32 2d 31 39 35 31 66 33  |4add-9bb2-1951f3|
              00000130  35 64 39 30 33 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5d9036\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 4,
      FullyLabeledReplicas: (int32) 4,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 10:25:12.629321 23 deployment.go:67] Pod "test-new-deployment-64bcfc6446-2xpcx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-2xpcx",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92aac8b2-d12f-4e0a-ba9c-00f36789f869",
      ResourceVersion: (string) (len=5) "48456",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9ffd4fad-ab55-4620-a7a3-6ce2480b0f5d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  66 64 34 66 61 64 2d 61  |d\":\"9ffd4fad-a|
              00000090  62 35 35 2d 34 36 32 30  2d 61 37 61 33 2d 36 63  |b55-4620-a7a3-6c|
              000000a0  65 32 34 38 30 62 30 66  35 64 5c 22 7d 22 3a 7b  |e2480b0f5d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8hhz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8hhz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v8hhz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 10:25:12.634203 23 deployment.go:67] Pod "test-new-deployment-64bcfc6446-ckz9x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-ckz9x",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df62d6cc-7e4a-4db4-84a7-30f60ec03754",
      ResourceVersion: (string) (len=5) "48468",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9ffd4fad-ab55-4620-a7a3-6ce2480b0f5d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  66 64 34 66 61 64 2d 61  |d\":\"9ffd4fad-a|
              00000090  62 35 35 2d 34 36 32 30  2d 61 37 61 33 2d 36 63  |b55-4620-a7a3-6c|
              000000a0  65 32 34 38 30 62 30 66  35 64 5c 22 7d 22 3a 7b  |e2480b0f5d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8jpmh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8jpmh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-103",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8jpmh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 10:25:12.642677 23 deployment.go:67] Pod "test-new-deployment-64bcfc6446-qvbx5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-qvbx5",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "319faaef-c99d-4738-a717-32f07b6c1644",
      ResourceVersion: (string) (len=5) "48472",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9ffd4fad-ab55-4620-a7a3-6ce2480b0f5d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  66 64 34 66 61 64 2d 61  |d\":\"9ffd4fad-a|
              00000090  62 35 35 2d 34 36 32 30  2d 61 37 61 33 2d 36 63  |b55-4620-a7a3-6c|
              000000a0  65 32 34 38 30 62 30 66  35 64 5c 22 7d 22 3a 7b  |e2480b0f5d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bxncm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bxncm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410312,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410312,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bxncm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 10:25:12.651564 23 deployment.go:67] Pod "test-new-deployment-64bcfc6446-wr767" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-wr767",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7758",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84e3488c-2abe-4874-9a58-ef57cf8864c1",
      ResourceVersion: (string) (len=5) "48435",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e8cc4dc41cb30ee41123cddf44c965b422ed2b4d60a35bfa2b6b80d90412e90d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.246/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.246/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=113) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.246\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "9ffd4fad-ab55-4620-a7a3-6ce2480b0f5d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  66 64 34 66 61 64 2d 61  |d\":\"9ffd4fad-a|
              00000090  62 35 35 2d 34 36 32 30  2d 61 37 61 33 2d 36 63  |b55-4620-a7a3-6c|
              000000a0  65 32 34 38 30 62 30 66  35 64 5c 22 7d 22 3a 7b  |e2480b0f5d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 34  36 5c 22 7d 22 3a 7b 22  |.42.3.246\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvprx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvprx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410311,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871410310,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=11) "10.42.3.246",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.246"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871410310,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871410311,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ba70fa6078134c78af126d089de752e0bff1d05a5ee84e1460e33e60b12c7c56",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lvprx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 10:25:12.661924 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7758" for this suite. @ 01/02/25 10:25:12.664
• [2.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 01/02/25 10:25:12.671
  I0102 10:25:12.671687 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename dns @ 01/02/25 10:25:12.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:25:12.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:25:12.683
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 01/02/25 10:25:12.684
  I0102 10:25:12.691017 23 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6665  7d046c2e-a892-4df0-b66c-833a7d5b9608 48478 0 2025-01-02 10:25:12 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-01-02 10:25:12 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jk9z2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jk9z2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 01/02/25 10:25:14.703
  I0102 10:25:14.703622 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6665 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:25:14.704146 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:25:14.705339 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:25:14.705882 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-6665/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 01/02/25 10:25:14.776
  I0102 10:25:14.776230 23 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6665 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:25:14.776246 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:25:14.776765 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:25:14.776836 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-6665/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0102 10:25:14.834234 23 dns.go:423] Deleting pod test-dns-nameservers...
  I0102 10:25:14.842856 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6665" for this suite. @ 01/02/25 10:25:14.844
• [2.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 01/02/25 10:25:14.849
  I0102 10:25:14.849553 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-preemption @ 01/02/25 10:25:14.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:25:14.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:25:14.861
  I0102 10:25:14.868733 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0102 10:26:14.879633 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 01/02/25 10:26:14.886
  I0102 10:26:14.917505 23 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0102 10:26:14.928979 23 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0102 10:26:14.959565 23 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0102 10:26:14.974431 23 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 01/02/25 10:26:14.974
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 01/02/25 10:26:16.994
  I0102 10:26:21.040151 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6174" for this suite. @ 01/02/25 10:26:21.042
• [66.196 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 01/02/25 10:26:21.046
  I0102 10:26:21.046157 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename discovery @ 01/02/25 10:26:21.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:26:21.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:26:21.062
  STEP: Setting up server cert @ 01/02/25 10:26:21.065
  I0102 10:26:21.357289 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0102 10:26:21.357971 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0102 10:26:21.357989 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0102 10:26:21.357998 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0102 10:26:21.358005 23 discovery.go:139] Checking APIGroup: apps
  I0102 10:26:21.358510 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0102 10:26:21.358527 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0102 10:26:21.358535 23 discovery.go:154] apps/v1 matches apps/v1
  I0102 10:26:21.358542 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0102 10:26:21.359061 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0102 10:26:21.359078 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0102 10:26:21.359086 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0102 10:26:21.359093 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0102 10:26:21.359582 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0102 10:26:21.359597 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0102 10:26:21.359605 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0102 10:26:21.359612 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0102 10:26:21.360111 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0102 10:26:21.360127 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0102 10:26:21.360136 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0102 10:26:21.360143 23 discovery.go:139] Checking APIGroup: autoscaling
  I0102 10:26:21.360585 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0102 10:26:21.360600 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0102 10:26:21.360608 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0102 10:26:21.360615 23 discovery.go:139] Checking APIGroup: batch
  I0102 10:26:21.361112 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0102 10:26:21.361127 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0102 10:26:21.361134 23 discovery.go:154] batch/v1 matches batch/v1
  I0102 10:26:21.361142 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0102 10:26:21.361613 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0102 10:26:21.361683 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0102 10:26:21.361692 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0102 10:26:21.361699 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0102 10:26:21.362149 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0102 10:26:21.362163 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0102 10:26:21.362171 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0102 10:26:21.362180 23 discovery.go:139] Checking APIGroup: policy
  I0102 10:26:21.362659 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0102 10:26:21.362674 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0102 10:26:21.362681 23 discovery.go:154] policy/v1 matches policy/v1
  I0102 10:26:21.362688 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0102 10:26:21.363151 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0102 10:26:21.363165 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0102 10:26:21.363173 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0102 10:26:21.363180 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0102 10:26:21.363698 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0102 10:26:21.363712 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0102 10:26:21.363720 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0102 10:26:21.363728 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0102 10:26:21.364211 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0102 10:26:21.364349 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0102 10:26:21.364434 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0102 10:26:21.364444 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0102 10:26:21.365202 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0102 10:26:21.365365 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0102 10:26:21.365504 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0102 10:26:21.365614 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0102 10:26:21.366170 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0102 10:26:21.366307 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0102 10:26:21.366425 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0102 10:26:21.366547 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0102 10:26:21.367187 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0102 10:26:21.367315 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0102 10:26:21.367427 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0102 10:26:21.367533 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0102 10:26:21.368090 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0102 10:26:21.368232 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0102 10:26:21.368348 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0102 10:26:21.368470 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0102 10:26:21.369083 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0102 10:26:21.369216 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0102 10:26:21.369333 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0102 10:26:21.369463 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0102 10:26:21.370005 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0102 10:26:21.370152 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0102 10:26:21.370276 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0102 10:26:21.370387 23 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0102 10:26:21.370927 23 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0102 10:26:21.371051 23 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0102 10:26:21.371176 23 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0102 10:26:21.371290 23 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0102 10:26:21.371855 23 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0102 10:26:21.371992 23 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0102 10:26:21.372116 23 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0102 10:26:21.372229 23 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0102 10:26:21.372802 23 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0102 10:26:21.372952 23 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0102 10:26:21.373081 23 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0102 10:26:21.373196 23 discovery.go:139] Checking APIGroup: k8s.cni.cncf.io
  I0102 10:26:21.373813 23 discovery.go:147] PreferredVersion.GroupVersion: k8s.cni.cncf.io/v1
  I0102 10:26:21.373963 23 discovery.go:148] Versions found [{k8s.cni.cncf.io/v1 v1}]
  I0102 10:26:21.374133 23 discovery.go:154] k8s.cni.cncf.io/v1 matches k8s.cni.cncf.io/v1
  I0102 10:26:21.374327 23 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0102 10:26:21.374935 23 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0102 10:26:21.375138 23 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
  I0102 10:26:21.375326 23 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0102 10:26:21.375524 23 discovery.go:139] Checking APIGroup: groupsnapshot.storage.k8s.io
  I0102 10:26:21.376150 23 discovery.go:147] PreferredVersion.GroupVersion: groupsnapshot.storage.k8s.io/v1alpha1
  I0102 10:26:21.376422 23 discovery.go:148] Versions found [{groupsnapshot.storage.k8s.io/v1alpha1 v1alpha1}]
  I0102 10:26:21.376614 23 discovery.go:154] groupsnapshot.storage.k8s.io/v1alpha1 matches groupsnapshot.storage.k8s.io/v1alpha1
  I0102 10:26:21.376772 23 discovery.go:139] Checking APIGroup: policy.networking.k8s.io
  I0102 10:26:21.377435 23 discovery.go:147] PreferredVersion.GroupVersion: policy.networking.k8s.io/v1alpha1
  I0102 10:26:21.377657 23 discovery.go:148] Versions found [{policy.networking.k8s.io/v1alpha1 v1alpha1}]
  I0102 10:26:21.377849 23 discovery.go:154] policy.networking.k8s.io/v1alpha1 matches policy.networking.k8s.io/v1alpha1
  I0102 10:26:21.378019 23 discovery.go:139] Checking APIGroup: traefik.io
  I0102 10:26:21.378678 23 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I0102 10:26:21.378856 23 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I0102 10:26:21.379067 23 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I0102 10:26:21.379200 23 discovery.go:139] Checking APIGroup: whereabouts.cni.cncf.io
  I0102 10:26:21.379868 23 discovery.go:147] PreferredVersion.GroupVersion: whereabouts.cni.cncf.io/v1alpha1
  I0102 10:26:21.380049 23 discovery.go:148] Versions found [{whereabouts.cni.cncf.io/v1alpha1 v1alpha1}]
  I0102 10:26:21.380201 23 discovery.go:154] whereabouts.cni.cncf.io/v1alpha1 matches whereabouts.cni.cncf.io/v1alpha1
  I0102 10:26:21.380328 23 discovery.go:139] Checking APIGroup: longhorn.io
  I0102 10:26:21.380951 23 discovery.go:147] PreferredVersion.GroupVersion: longhorn.io/v1beta2
  I0102 10:26:21.381152 23 discovery.go:148] Versions found [{longhorn.io/v1beta2 v1beta2} {longhorn.io/v1beta1 v1beta1}]
  I0102 10:26:21.381331 23 discovery.go:154] longhorn.io/v1beta2 matches longhorn.io/v1beta2
  I0102 10:26:21.381522 23 discovery.go:139] Checking APIGroup: metallb.io
  I0102 10:26:21.382144 23 discovery.go:147] PreferredVersion.GroupVersion: metallb.io/v1beta2
  I0102 10:26:21.382355 23 discovery.go:148] Versions found [{metallb.io/v1beta2 v1beta2} {metallb.io/v1beta1 v1beta1}]
  I0102 10:26:21.382523 23 discovery.go:154] metallb.io/v1beta2 matches metallb.io/v1beta2
  I0102 10:26:21.382693 23 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0102 10:26:21.383321 23 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0102 10:26:21.383536 23 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0102 10:26:21.383772 23 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0102 10:26:21.384050 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8337" for this suite. @ 01/02/25 10:26:21.386
• [0.344 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 01/02/25 10:26:21.39
  I0102 10:26:21.390769 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 10:26:21.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:26:21.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:26:21.405
  STEP: Creating configMap with name configmap-test-volume-be8ba2a9-384f-41b6-a759-6839d6d55308 @ 01/02/25 10:26:21.406
  STEP: Creating a pod to test consume configMaps @ 01/02/25 10:26:21.408
  STEP: Saw pod success @ 01/02/25 10:26:25.433
  I0102 10:26:25.440693 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-configmaps-13c80b6f-6226-45de-9397-5b8d5b0c45de container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 10:26:25.453
  I0102 10:26:25.465040 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4746" for this suite. @ 01/02/25 10:26:25.467
• [4.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 01/02/25 10:26:25.47
  I0102 10:26:25.470963 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-runtime @ 01/02/25 10:26:25.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:26:25.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:26:25.484
  STEP: create the container @ 01/02/25 10:26:25.485
  W0102 10:26:25.491334      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 01/02/25 10:26:25.491
  STEP: get the container status @ 01/02/25 10:26:28.507
  STEP: the container should be terminated @ 01/02/25 10:26:28.508
  STEP: the termination message should be set @ 01/02/25 10:26:28.509
  I0102 10:26:28.509143 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 01/02/25 10:26:28.509
  I0102 10:26:28.527863 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6412" for this suite. @ 01/02/25 10:26:28.534
• [3.067 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 01/02/25 10:26:28.538
  I0102 10:26:28.538400 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename csiinlinevolumes @ 01/02/25 10:26:28.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:26:28.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:26:28.606
  STEP: Creating two CSIDrivers @ 01/02/25 10:26:28.607
  STEP: Getting "inline-driver-3e987a75-6673-46db-86d3-182fe1419472" & "inline-driver-adea775c-1ecd-4186-a9a5-eed97b88d05c" @ 01/02/25 10:26:28.615
  STEP: Patching the CSIDriver "inline-driver-adea775c-1ecd-4186-a9a5-eed97b88d05c" @ 01/02/25 10:26:28.618
  STEP: Updating the CSIDriver "inline-driver-adea775c-1ecd-4186-a9a5-eed97b88d05c" @ 01/02/25 10:26:28.623
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7987" @ 01/02/25 10:26:28.628
  STEP: Deleting CSIDriver "inline-driver-3e987a75-6673-46db-86d3-182fe1419472" @ 01/02/25 10:26:28.629
  STEP: Confirm deletion of CSIDriver "inline-driver-3e987a75-6673-46db-86d3-182fe1419472" @ 01/02/25 10:26:28.633
  STEP: Deleting CSIDriver "inline-driver-adea775c-1ecd-4186-a9a5-eed97b88d05c" via DeleteCollection @ 01/02/25 10:26:28.634
  STEP: Confirm deletion of CSIDriver "inline-driver-adea775c-1ecd-4186-a9a5-eed97b88d05c" @ 01/02/25 10:26:28.638
  I0102 10:26:28.639379 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7987" for this suite. @ 01/02/25 10:26:28.641
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 01/02/25 10:26:28.653
  I0102 10:26:28.653978 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sysctl @ 01/02/25 10:26:28.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:26:28.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:26:28.669
  STEP: Creating a pod with one valid and two invalid sysctls @ 01/02/25 10:26:28.672
  I0102 10:26:28.676551 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5674" for this suite. @ 01/02/25 10:26:28.743
• [0.094 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 01/02/25 10:26:28.748
  I0102 10:26:28.748103 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename statefulset @ 01/02/25 10:26:28.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:26:28.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:26:28.77
  STEP: Creating service test in namespace statefulset-8636 @ 01/02/25 10:26:28.771
  STEP: Creating stateful set ss in namespace statefulset-8636 @ 01/02/25 10:26:28.776
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8636 @ 01/02/25 10:26:28.783
  I0102 10:26:28.787066 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I0102 10:26:38.795315 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 01/02/25 10:26:38.796
  I0102 10:26:38.803031 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-8636 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 10:26:38.926228 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 10:26:38.926282 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 10:26:38.926293 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 10:26:38.927652 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0102 10:26:48.938253 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0102 10:26:48.938399 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0102 10:26:48.959985 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.99999973s
  I0102 10:26:49.963309 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995465974s
  I0102 10:26:50.965565 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.992462886s
  I0102 10:26:51.970309 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.990373675s
  I0102 10:26:52.984747 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.984390121s
  I0102 10:26:54.000322 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.96954516s
  I0102 10:26:55.003800 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.954903924s
  I0102 10:26:56.009218 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.951577815s
  I0102 10:26:57.012159 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.94642158s
  I0102 10:26:58.017353 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 943.329583ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8636 @ 01/02/25 10:26:59.017
  I0102 10:26:59.020102 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-8636 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 10:26:59.114199 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0102 10:26:59.114232 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 10:26:59.114347 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0102 10:26:59.114453 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-8636 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 10:26:59.225188 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0102 10:26:59.225221 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 10:26:59.225240 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0102 10:26:59.225281 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-8636 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0102 10:26:59.327396 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0102 10:26:59.327437 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0102 10:26:59.327449 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0102 10:26:59.329587 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0102 10:27:09.333938 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0102 10:27:09.333986 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0102 10:27:09.334010 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 01/02/25 10:27:09.334
  I0102 10:27:09.337247 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-8636 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 10:27:09.473045 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 10:27:09.473078 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 10:27:09.473089 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 10:27:09.473125 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-8636 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 10:27:09.571272 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 10:27:09.571304 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 10:27:09.571316 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 10:27:09.571355 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=statefulset-8636 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0102 10:27:09.667201 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0102 10:27:09.667233 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0102 10:27:09.667244 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0102 10:27:09.667254 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0102 10:27:09.668854 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0102 10:27:19.674455 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0102 10:27:19.674491 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0102 10:27:19.674506 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0102 10:27:19.689291 23 resource.go:168] POD   NODE                      PHASE    GRACE  CONDITIONS
  I0102 10:27:19.689346 23 resource.go:175] ss-0  oneke-ip-192-168-150-103  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:28 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:27:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:27:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:28 +0000 UTC  }]
  I0102 10:27:19.689369 23 resource.go:175] ss-1  oneke-ip-192-168-150-105  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:49 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:27:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:27:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:48 +0000 UTC  }]
  I0102 10:27:19.689394 23 resource.go:175] ss-2  oneke-ip-192-168-150-103  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:50 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:27:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:27:10 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-01-02 10:26:48 +0000 UTC  }]
  I0102 10:27:19.689404 23 resource.go:178] 
  I0102 10:27:19.689416 23 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0102 10:27:20.691332 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.990203685s
  I0102 10:27:21.699766 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.987548424s
  I0102 10:27:22.701718 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.979553817s
  I0102 10:27:23.708462 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.977736608s
  I0102 10:27:24.716588 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.969162728s
  I0102 10:27:25.722780 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.962836491s
  I0102 10:27:26.727168 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.955470141s
  I0102 10:27:27.731912 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.950819609s
  I0102 10:27:28.737629 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 947.218889ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8636 @ 01/02/25 10:27:29.739
  I0102 10:27:29.744506 23 rest.go:150] Scaling statefulset ss to 0
  I0102 10:27:29.752637 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0102 10:27:29.758176 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8636
  I0102 10:27:29.763227 23 rest.go:150] Scaling statefulset ss to 0
  I0102 10:27:29.772682 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0102 10:27:29.776979 23 rest.go:88] Deleting statefulset ss
  I0102 10:27:29.798392 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8636" for this suite. @ 01/02/25 10:27:29.801
• [61.057 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 01/02/25 10:27:29.805
  I0102 10:27:29.805915 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename proxy @ 01/02/25 10:27:29.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:27:29.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:27:29.82
  STEP: starting an echo server on multiple ports @ 01/02/25 10:27:29.831
  STEP: creating replication controller proxy-service-25c7h in namespace proxy-8860 @ 01/02/25 10:27:29.835
  I0102 10:27:29.840676      23 runners.go:193] Created replication controller with name: proxy-service-25c7h, namespace: proxy-8860, replica count: 1
  I0102 10:27:30.891308      23 runners.go:193] proxy-service-25c7h Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0102 10:27:31.892307      23 runners.go:193] proxy-service-25c7h Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0102 10:27:31.894005 23 proxy.go:230] setup took 2.072168636s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 01/02/25 10:27:31.894
  I0102 10:27:31.915633 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 21.434366ms)
  I0102 10:27:31.919552 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 24.559831ms)
  I0102 10:27:31.919940 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 25.730862ms)
  I0102 10:27:31.920219 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 25.8149ms)
  I0102 10:27:31.920376 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 25.444958ms)
  I0102 10:27:31.920615 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 26.131651ms)
  I0102 10:27:31.920899 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 26.237665ms)
  I0102 10:27:31.921137 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 26.89049ms)
  I0102 10:27:31.921282 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 26.476893ms)
  I0102 10:27:31.921428 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 26.377814ms)
  I0102 10:27:31.921602 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 26.408298ms)
  I0102 10:27:31.921871 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 26.956508ms)
  I0102 10:27:31.921899 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 27.634213ms)
  I0102 10:27:31.921963 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 26.849812ms)
  I0102 10:27:31.922042 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 27.504976ms)
  I0102 10:27:31.922043 23 proxy.go:558] (0) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 23.726582ms)
  I0102 10:27:31.929864 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 7.264116ms)
  I0102 10:27:31.930085 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 7.401397ms)
  I0102 10:27:31.930194 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 7.555129ms)
  I0102 10:27:31.930373 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 7.963189ms)
  I0102 10:27:31.930511 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 6.700243ms)
  I0102 10:27:31.930595 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 7.172617ms)
  I0102 10:27:31.930682 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 8.131857ms)
  I0102 10:27:31.930780 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 8.511543ms)
  I0102 10:27:31.930869 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 8.145524ms)
  I0102 10:27:31.930979 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 8.491651ms)
  I0102 10:27:31.931065 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 5.269819ms)
  I0102 10:27:31.931149 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 5.180087ms)
  I0102 10:27:31.931239 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 5.341368ms)
  I0102 10:27:31.931331 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 5.29363ms)
  I0102 10:27:31.931423 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 5.337482ms)
  I0102 10:27:31.932923 23 proxy.go:558] (1) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 1.40903ms)
  I0102 10:27:31.940528 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 6.662009ms)
  I0102 10:27:31.940740 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 7.586512ms)
  I0102 10:27:31.940869 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 7.053918ms)
  I0102 10:27:31.940947 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 7.218879ms)
  I0102 10:27:31.941038 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 6.027149ms)
  I0102 10:27:31.941637 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 5.491246ms)
  I0102 10:27:31.941723 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 4.668946ms)
  I0102 10:27:31.941807 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 3.683587ms)
  I0102 10:27:31.941880 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 4.703306ms)
  I0102 10:27:31.941961 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 8.941558ms)
  I0102 10:27:31.943351 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 4.356983ms)
  I0102 10:27:31.943499 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 4.839962ms)
  I0102 10:27:31.944218 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 5.078617ms)
  I0102 10:27:31.944227 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 5.126456ms)
  I0102 10:27:31.944854 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 5.403137ms)
  I0102 10:27:31.944887 23 proxy.go:558] (2) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 5.46337ms)
  I0102 10:27:31.950090 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 4.998374ms)
  I0102 10:27:31.950172 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 5.054123ms)
  I0102 10:27:31.950572 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 5.136245ms)
  I0102 10:27:31.950728 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 5.68837ms)
  I0102 10:27:31.950746 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 5.680676ms)
  I0102 10:27:31.950609 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 5.61016ms)
  I0102 10:27:31.952287 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 7.140622ms)
  I0102 10:27:31.955218 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 10.059631ms)
  I0102 10:27:31.955734 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 10.449828ms)
  I0102 10:27:31.955851 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 10.584881ms)
  I0102 10:27:31.955969 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 10.804291ms)
  I0102 10:27:31.956107 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 10.899267ms)
  I0102 10:27:31.956486 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 11.292175ms)
  I0102 10:27:31.957401 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 12.103079ms)
  I0102 10:27:31.957648 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 12.406518ms)
  I0102 10:27:31.958118 23 proxy.go:558] (3) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 12.88029ms)
  I0102 10:27:31.962935 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 4.721894ms)
  I0102 10:27:31.963086 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 4.819471ms)
  I0102 10:27:31.963220 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 4.894674ms)
  I0102 10:27:31.974971 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 16.249079ms)
  I0102 10:27:31.975054 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 16.638125ms)
  I0102 10:27:31.975510 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 16.965626ms)
  I0102 10:27:31.975583 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 17.226297ms)
  I0102 10:27:31.975614 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 16.981508ms)
  I0102 10:27:31.975714 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 17.198097ms)
  I0102 10:27:31.975733 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 17.001482ms)
  I0102 10:27:31.975759 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 17.363418ms)
  I0102 10:27:31.975768 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 17.195267ms)
  I0102 10:27:31.975777 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 17.343868ms)
  I0102 10:27:31.975788 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 17.288166ms)
  I0102 10:27:31.975796 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 17.088329ms)
  I0102 10:27:31.976909 23 proxy.go:558] (4) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 18.31515ms)
  I0102 10:27:31.988023 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 10.926623ms)
  I0102 10:27:31.988076 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 10.553889ms)
  I0102 10:27:31.988091 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 10.780881ms)
  I0102 10:27:31.988142 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 11.107268ms)
  I0102 10:27:31.990942 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 13.555848ms)
  I0102 10:27:31.991025 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 13.415848ms)
  I0102 10:27:31.991174 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 12.796104ms)
  I0102 10:27:31.991301 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 13.679035ms)
  I0102 10:27:31.991440 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 13.377681ms)
  I0102 10:27:31.991457 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 13.408318ms)
  I0102 10:27:31.991712 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 13.662775ms)
  I0102 10:27:31.991717 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 13.568759ms)
  I0102 10:27:31.991880 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 14.65562ms)
  I0102 10:27:31.991936 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 14.484971ms)
  I0102 10:27:31.992069 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 14.490709ms)
  I0102 10:27:31.992152 23 proxy.go:558] (5) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 14.558062ms)
  I0102 10:27:32.001110 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 5.126197ms)
  I0102 10:27:32.001212 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 8.853354ms)
  I0102 10:27:32.001368 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 9.035785ms)
  I0102 10:27:32.001382 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 8.94626ms)
  I0102 10:27:32.001389 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 8.94313ms)
  I0102 10:27:32.001397 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 8.978612ms)
  I0102 10:27:32.001403 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 8.996309ms)
  I0102 10:27:32.001408 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 6.860108ms)
  I0102 10:27:32.001487 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 9.144791ms)
  I0102 10:27:32.001516 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 9.127089ms)
  I0102 10:27:32.001523 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 9.215644ms)
  I0102 10:27:32.001537 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 9.289749ms)
  I0102 10:27:32.001548 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 9.304838ms)
  I0102 10:27:32.002478 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 7.899225ms)
  I0102 10:27:32.003482 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 5.936297ms)
  I0102 10:27:32.003969 23 proxy.go:558] (6) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 6.45442ms)
  I0102 10:27:32.011631 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 7.534447ms)
  I0102 10:27:32.012289 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 7.475399ms)
  I0102 10:27:32.012435 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 7.262537ms)
  I0102 10:27:32.012526 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 8.380939ms)
  I0102 10:27:32.012550 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 7.446007ms)
  I0102 10:27:32.012632 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 7.574877ms)
  I0102 10:27:32.012762 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 8.401225ms)
  I0102 10:27:32.012909 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 8.620037ms)
  I0102 10:27:32.012990 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 8.125018ms)
  I0102 10:27:32.013152 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 7.910392ms)
  I0102 10:27:32.013240 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 8.798876ms)
  I0102 10:27:32.013266 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 8.747157ms)
  I0102 10:27:32.013352 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 8.415562ms)
  I0102 10:27:32.013497 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 9.335246ms)
  I0102 10:27:32.013584 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 9.52372ms)
  I0102 10:27:32.013611 23 proxy.go:558] (7) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 9.489889ms)
  I0102 10:27:32.021555 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 7.723616ms)
  I0102 10:27:32.021730 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 7.771792ms)
  I0102 10:27:32.021842 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 8.03152ms)
  I0102 10:27:32.022026 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 8.254272ms)
  I0102 10:27:32.022041 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 8.185589ms)
  I0102 10:27:32.022058 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 8.027539ms)
  I0102 10:27:32.022077 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 8.127989ms)
  I0102 10:27:32.022086 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 8.070136ms)
  I0102 10:27:32.022099 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 8.221392ms)
  I0102 10:27:32.022105 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 8.041609ms)
  I0102 10:27:32.022185 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 8.224809ms)
  I0102 10:27:32.022246 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 8.262568ms)
  I0102 10:27:32.022341 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 8.369631ms)
  I0102 10:27:32.022487 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 8.44522ms)
  I0102 10:27:32.022506 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 8.450737ms)
  I0102 10:27:32.022523 23 proxy.go:558] (8) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 8.745532ms)
  I0102 10:27:32.028561 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 6.005483ms)
  I0102 10:27:32.028661 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 6.010501ms)
  I0102 10:27:32.028683 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 4.470883ms)
  I0102 10:27:32.028711 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 3.211712ms)
  I0102 10:27:32.028728 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 2.449834ms)
  I0102 10:27:32.032294 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 4.672998ms)
  I0102 10:27:32.032841 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 4.95247ms)
  I0102 10:27:32.032866 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 4.125287ms)
  I0102 10:27:32.033110 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 5.991932ms)
  I0102 10:27:32.033126 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 5.339355ms)
  I0102 10:27:32.033275 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 5.433531ms)
  I0102 10:27:32.033343 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 5.123175ms)
  I0102 10:27:32.033355 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 5.656539ms)
  I0102 10:27:32.033631 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 4.833584ms)
  I0102 10:27:32.033667 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 2.283127ms)
  I0102 10:27:32.033785 23 proxy.go:558] (9) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 2.364072ms)
  I0102 10:27:32.035557 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 1.716381ms)
  I0102 10:27:32.037592 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 3.684483ms)
  I0102 10:27:32.037650 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 3.77064ms)
  I0102 10:27:32.042401 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 8.44103ms)
  I0102 10:27:32.042446 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 8.456723ms)
  I0102 10:27:32.043603 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 9.53699ms)
  I0102 10:27:32.043725 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 9.58879ms)
  I0102 10:27:32.043745 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 9.769922ms)
  I0102 10:27:32.043872 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 9.769043ms)
  I0102 10:27:32.043883 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 9.878998ms)
  I0102 10:27:32.043980 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 9.894423ms)
  I0102 10:27:32.044139 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 10.118526ms)
  I0102 10:27:32.044242 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 10.121782ms)
  I0102 10:27:32.043993 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 10.073065ms)
  I0102 10:27:32.044406 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 10.25396ms)
  I0102 10:27:32.044539 23 proxy.go:558] (10) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 10.493073ms)
  I0102 10:27:32.048025 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 3.419478ms)
  I0102 10:27:32.048172 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 3.548717ms)
  I0102 10:27:32.050282 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 5.62759ms)
  I0102 10:27:32.052665 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 7.963589ms)
  I0102 10:27:32.053958 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 9.155552ms)
  I0102 10:27:32.053983 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 9.197204ms)
  I0102 10:27:32.054587 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 9.761455ms)
  I0102 10:27:32.054593 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 9.867944ms)
  I0102 10:27:32.054716 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 9.940233ms)
  I0102 10:27:32.054610 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 9.774716ms)
  I0102 10:27:32.054874 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 10.206423ms)
  I0102 10:27:32.054968 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 10.220975ms)
  I0102 10:27:32.055044 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 10.269291ms)
  I0102 10:27:32.055133 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 10.396584ms)
  I0102 10:27:32.054829 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 10.01563ms)
  I0102 10:27:32.055337 23 proxy.go:558] (11) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 10.491478ms)
  I0102 10:27:32.068545 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 12.963012ms)
  I0102 10:27:32.068579 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 12.958901ms)
  I0102 10:27:32.068605 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 13.055639ms)
  I0102 10:27:32.068618 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 13.102728ms)
  I0102 10:27:32.068640 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 13.14058ms)
  I0102 10:27:32.068652 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 13.00893ms)
  I0102 10:27:32.068762 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 13.152102ms)
  I0102 10:27:32.068776 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 13.144261ms)
  I0102 10:27:32.068794 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 13.360583ms)
  I0102 10:27:32.068877 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 13.338101ms)
  I0102 10:27:32.068905 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 13.315404ms)
  I0102 10:27:32.068919 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 13.38972ms)
  I0102 10:27:32.068977 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 13.412074ms)
  I0102 10:27:32.068998 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 13.567005ms)
  I0102 10:27:32.069015 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 13.415187ms)
  I0102 10:27:32.069088 23 proxy.go:558] (12) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 13.608727ms)
  I0102 10:27:32.082787 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 13.41868ms)
  I0102 10:27:32.082916 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 13.506666ms)
  I0102 10:27:32.083024 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 13.602128ms)
  I0102 10:27:32.083109 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 13.630666ms)
  I0102 10:27:32.083227 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 13.760569ms)
  I0102 10:27:32.083335 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 13.69249ms)
  I0102 10:27:32.083429 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 14.316993ms)
  I0102 10:27:32.083505 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 14.058535ms)
  I0102 10:27:32.083596 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 14.162898ms)
  I0102 10:27:32.083798 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 14.473646ms)
  I0102 10:27:32.083869 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 14.358303ms)
  I0102 10:27:32.083877 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 14.608651ms)
  I0102 10:27:32.083890 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 14.399216ms)
  I0102 10:27:32.083899 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 14.518341ms)
  I0102 10:27:32.083938 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 14.60557ms)
  I0102 10:27:32.084306 23 proxy.go:558] (13) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 14.908387ms)
  I0102 10:27:32.090876 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 6.330075ms)
  I0102 10:27:32.090838 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 5.624853ms)
  I0102 10:27:32.094450 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 9.284733ms)
  I0102 10:27:32.094325 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 9.738579ms)
  I0102 10:27:32.094840 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 9.595783ms)
  I0102 10:27:32.094854 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 9.597333ms)
  I0102 10:27:32.094863 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 9.594524ms)
  I0102 10:27:32.094902 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 9.621166ms)
  I0102 10:27:32.094913 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 9.719373ms)
  I0102 10:27:32.097239 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 11.781184ms)
  I0102 10:27:32.098470 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 13.166951ms)
  I0102 10:27:32.098819 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 13.422322ms)
  I0102 10:27:32.098961 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 13.53023ms)
  I0102 10:27:32.099063 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 13.771269ms)
  I0102 10:27:32.099233 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 13.789146ms)
  I0102 10:27:32.099567 23 proxy.go:558] (14) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 14.471317ms)
  I0102 10:27:32.104913 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 5.120899ms)
  I0102 10:27:32.104913 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 4.701798ms)
  I0102 10:27:32.104954 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 5.095791ms)
  I0102 10:27:32.104988 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 5.295829ms)
  I0102 10:27:32.105911 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 4.208787ms)
  I0102 10:27:32.107296 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 5.981798ms)
  I0102 10:27:32.107593 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 4.985099ms)
  I0102 10:27:32.107620 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 5.30071ms)
  I0102 10:27:32.107677 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 4.865085ms)
  I0102 10:27:32.107698 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 5.171346ms)
  I0102 10:27:32.107898 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 5.435639ms)
  I0102 10:27:32.107927 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 6.134966ms)
  I0102 10:27:32.107975 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 5.322755ms)
  I0102 10:27:32.108026 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 5.314126ms)
  I0102 10:27:32.108203 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 5.963835ms)
  I0102 10:27:32.108223 23 proxy.go:558] (15) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 5.826355ms)
  I0102 10:27:32.115199 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 6.012406ms)
  I0102 10:27:32.115253 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 6.431095ms)
  I0102 10:27:32.115275 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 6.796818ms)
  I0102 10:27:32.115317 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 6.774922ms)
  I0102 10:27:32.115343 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 6.742427ms)
  I0102 10:27:32.115364 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 6.227306ms)
  I0102 10:27:32.115643 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 6.630478ms)
  I0102 10:27:32.115758 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 6.68225ms)
  I0102 10:27:32.115853 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 7.538246ms)
  I0102 10:27:32.115930 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 7.274516ms)
  I0102 10:27:32.115999 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 7.12206ms)
  I0102 10:27:32.116073 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 7.309822ms)
  I0102 10:27:32.116149 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 7.448053ms)
  I0102 10:27:32.116237 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 7.812792ms)
  I0102 10:27:32.116327 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 7.373622ms)
  I0102 10:27:32.116456 23 proxy.go:558] (16) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 7.210701ms)
  I0102 10:27:32.120471 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 3.897327ms)
  I0102 10:27:32.120967 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 4.466654ms)
  I0102 10:27:32.121056 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 4.509983ms)
  I0102 10:27:32.126072 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 9.482884ms)
  I0102 10:27:32.126176 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 9.538399ms)
  I0102 10:27:32.126271 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 9.611293ms)
  I0102 10:27:32.126437 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 9.650737ms)
  I0102 10:27:32.126527 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 9.770526ms)
  I0102 10:27:32.126613 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 9.909129ms)
  I0102 10:27:32.126688 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 9.942989ms)
  I0102 10:27:32.126774 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 9.976683ms)
  I0102 10:27:32.126848 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 10.199091ms)
  I0102 10:27:32.126932 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 10.201553ms)
  I0102 10:27:32.127007 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 10.385851ms)
  I0102 10:27:32.127145 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 10.475561ms)
  I0102 10:27:32.127153 23 proxy.go:558] (17) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 10.433341ms)
  I0102 10:27:32.133695 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 6.30651ms)
  I0102 10:27:32.133721 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 6.304328ms)
  I0102 10:27:32.133736 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 6.391498ms)
  I0102 10:27:32.133763 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 6.333215ms)
  I0102 10:27:32.133776 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 6.4382ms)
  I0102 10:27:32.133789 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 6.388423ms)
  I0102 10:27:32.133800 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 6.361521ms)
  I0102 10:27:32.135832 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 8.360297ms)
  I0102 10:27:32.135929 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 8.388219ms)
  I0102 10:27:32.136023 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 8.571825ms)
  I0102 10:27:32.136139 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 8.679425ms)
  I0102 10:27:32.136226 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 8.631842ms)
  I0102 10:27:32.136307 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 8.755433ms)
  I0102 10:27:32.136386 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 8.904083ms)
  I0102 10:27:32.136650 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 9.137694ms)
  I0102 10:27:32.136827 23 proxy.go:558] (18) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 9.263378ms)
  I0102 10:27:32.139186 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname2/proxy/: bar (200; 2.214543ms)
  I0102 10:27:32.141112 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname2/proxy/: tls qux (200; 4.081192ms)
  I0102 10:27:32.141693 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:443/proxy/tlsrewritem... (200; 4.777392ms)
  I0102 10:27:32.142940 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname1/proxy/: foo (200; 5.814746ms)
  I0102 10:27:32.143557 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:460/proxy/: tls baz (200; 6.47304ms)
  I0102 10:27:32.145981 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7/proxy/rewriteme">test</a> (200; 8.875656ms)
  I0102 10:27:32.146008 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 8.942896ms)
  I0102 10:27:32.148757 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">test<... (200; 11.565805ms)
  I0102 10:27:32.148757 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/services/http:proxy-service-25c7h:portname2/proxy/: bar (200; 11.514751ms)
  I0102 10:27:32.148786 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 11.578388ms)
  I0102 10:27:32.148833 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/https:proxy-service-25c7h-hvxq7:462/proxy/: tls qux (200; 11.651134ms)
  I0102 10:27:32.148925 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/services/proxy-service-25c7h:portname1/proxy/: foo (200; 11.754982ms)
  I0102 10:27:32.149001 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:162/proxy/: bar (200; 11.78343ms)
  I0102 10:27:32.149072 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/services/https:proxy-service-25c7h:tlsportname1/proxy/: tls baz (200; 11.830147ms)
  I0102 10:27:32.148799 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:160/proxy/: foo (200; 11.644424ms)
  I0102 10:27:32.149457 23 proxy.go:558] (19) /api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/: <a href="/api/v1/namespaces/proxy-8860/pods/http:proxy-service-25c7h-hvxq7:1080/proxy/rewriteme">... (200; 12.204638ms)
  STEP: deleting ReplicationController proxy-service-25c7h in namespace proxy-8860, will wait for the garbage collector to delete the pods @ 01/02/25 10:27:32.149
  I0102 10:27:32.205116 23 resources.go:139] Deleting ReplicationController proxy-service-25c7h took: 3.698848ms
  I0102 10:27:32.305756 23 resources.go:163] Terminating ReplicationController proxy-service-25c7h pods took: 100.638523ms
  I0102 10:27:34.706289 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8860" for this suite. @ 01/02/25 10:27:34.708
• [4.907 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 01/02/25 10:27:34.713
  I0102 10:27:34.713813 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replicaset @ 01/02/25 10:27:34.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:27:34.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:27:34.726
  STEP: Create a ReplicaSet @ 01/02/25 10:27:34.728
  STEP: Verify that the required pods have come up @ 01/02/25 10:27:34.73
  I0102 10:27:34.733722 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0102 10:27:39.747986 23 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 01/02/25 10:27:39.748
  I0102 10:27:39.752983 23 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 01/02/25 10:27:39.753
  STEP: DeleteCollection of the ReplicaSets @ 01/02/25 10:27:39.755
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 01/02/25 10:27:39.758
  I0102 10:27:39.762880 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8514" for this suite. @ 01/02/25 10:27:39.777
• [5.072 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 01/02/25 10:27:39.786
  I0102 10:27:39.787127 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename svcaccounts @ 01/02/25 10:27:39.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:27:39.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:27:39.805
  STEP: Creating ServiceAccount "e2e-sa-9v7cq"  @ 01/02/25 10:27:39.806
  I0102 10:27:39.809473 23 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-9v7cq"  @ 01/02/25 10:27:39.809
  I0102 10:27:39.814003 23 service_accounts.go:839] AutomountServiceAccountToken: true
  I0102 10:27:39.814155 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2937" for this suite. @ 01/02/25 10:27:39.87
• [0.088 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 01/02/25 10:27:39.875
  I0102 10:27:39.875379 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename gc @ 01/02/25 10:27:39.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:27:39.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:27:39.906
  STEP: create the rc @ 01/02/25 10:27:39.973
  W0102 10:27:39.990576      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 01/02/25 10:27:43.995
  STEP: wait for the rc to be deleted @ 01/02/25 10:27:44.013
  I0102 10:27:45.025636 23 garbage_collector.go:670] 80 pods remaining
  I0102 10:27:45.025948 23 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0102 10:27:45.025959 23 garbage_collector.go:678] 
  I0102 10:27:46.019763 23 garbage_collector.go:670] 70 pods remaining
  I0102 10:27:46.020062 23 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0102 10:27:46.020126 23 garbage_collector.go:678] 
  I0102 10:27:47.032590 23 garbage_collector.go:670] 60 pods remaining
  I0102 10:27:47.032785 23 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0102 10:27:47.032853 23 garbage_collector.go:678] 
  I0102 10:27:48.020837 23 garbage_collector.go:670] 40 pods remaining
  I0102 10:27:48.020872 23 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0102 10:27:48.020886 23 garbage_collector.go:678] 
  I0102 10:27:49.020094 23 garbage_collector.go:670] 30 pods remaining
  I0102 10:27:49.020127 23 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0102 10:27:49.020137 23 garbage_collector.go:678] 
  I0102 10:27:50.018572 23 garbage_collector.go:670] 20 pods remaining
  I0102 10:27:50.018599 23 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0102 10:27:50.018608 23 garbage_collector.go:678] 
  STEP: Gathering metrics @ 01/02/25 10:27:51.016
  I0102 10:27:51.097704 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0102 10:27:51.098013 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8713" for this suite. @ 01/02/25 10:27:51.102
• [11.235 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 01/02/25 10:27:51.111
  I0102 10:27:51.111070 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename var-expansion @ 01/02/25 10:27:51.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:27:51.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:27:51.136
  STEP: Creating a pod to test substitution in container's command @ 01/02/25 10:27:51.141
  STEP: Saw pod success @ 01/02/25 10:28:03.174
  I0102 10:28:03.176149 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod var-expansion-57353f92-00ed-4022-bc8f-5db9928e72bf container dapi-container: <nil>
  STEP: delete the pod @ 01/02/25 10:28:03.184
  I0102 10:28:03.195629 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9878" for this suite. @ 01/02/25 10:28:03.199
• [12.094 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 01/02/25 10:28:03.205
  I0102 10:28:03.205828 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:28:03.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:28:03.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:28:03.221
  STEP: Creating projection with secret that has name projected-secret-test-map-203597a7-91e6-497a-ad64-9191effa7699 @ 01/02/25 10:28:03.223
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:28:03.227
  STEP: Saw pod success @ 01/02/25 10:28:07.25
  I0102 10:28:07.254798 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-secrets-70b6d6d4-f960-48d9-8e24-d12bfea9b2a4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:28:07.263
  I0102 10:28:07.279842 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9090" for this suite. @ 01/02/25 10:28:07.282
• [4.081 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 01/02/25 10:28:07.287
  I0102 10:28:07.287795 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 10:28:07.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:28:07.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:28:07.301
  STEP: Creating pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124 @ 01/02/25 10:28:07.303
  STEP: checking the pod's current state and verifying that restartCount is present @ 01/02/25 10:28:09.313
  I0102 10:28:09.314693 23 container_probe.go:1749] Initial restart count of pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac is 0
  I0102 10:28:09.315766 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:11.319797 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:13.337485 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:15.346967 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:17.349292 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:19.356651 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:21.359519 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:23.362494 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:25.369696 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:27.372835 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:29.382973 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:31.392878 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:33.397183 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:35.406203 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:37.409363 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:39.411799 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:41.418774 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:43.422620 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:45.430524 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:47.433116 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:49.435701 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:51.445210 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:53.447430 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:55.456471 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:57.458647 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:28:59.460589 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:01.462768 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:03.466994 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:05.469542 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:07.472570 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:09.475815 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:11.480358 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:13.507795 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:15.514495 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:17.519112 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:19.521442 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:21.524177 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:23.526225 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:25.528987 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:27.535346 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:29.541553 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:31.550346 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:33.560297 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:35.569791 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:37.574279 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:39.579347 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:41.589272 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:43.593151 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:45.595747 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:47.599529 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:49.609514 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:51.612046 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:53.614497 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:55.618682 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:57.625893 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:29:59.634246 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:01.638165 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:03.640640 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:05.643739 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:07.650811 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:09.655018 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:11.664281 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:13.673157 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:15.682184 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:17.688603 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:19.692963 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:21.700535 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:23.707656 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:25.712159 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:27.716096 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:29.725164 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:31.727919 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:33.734853 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:35.743718 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:37.753100 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:39.756521 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:41.766157 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:43.769545 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:45.776727 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:47.786024 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:49.788719 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:51.796212 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:53.805014 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:55.813130 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:57.817624 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:30:59.823430 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:01.826102 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:03.833400 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:05.841805 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:07.850335 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:09.854133 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:11.860133 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:13.869839 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:15.876898 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:17.884300 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:19.889372 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:21.898463 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:23.906867 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:25.915119 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:27.916932 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:29.919020 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:31.926097 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:33.930599 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:35.941200 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:37.952212 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:39.956340 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:41.965915 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:43.969699 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:45.977135 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:47.982834 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:49.992060 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:52.004665 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:54.008310 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:56.016132 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:31:58.024513 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:32:00.030834 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:32:02.033626 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:32:04.036322 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:32:06.038770 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  I0102 10:32:08.046765 23 container_probe.go:1759] Get pod liveness-af45a599-02c9-4ffd-a4ca-1cd538585fac in namespace container-probe-3124
  STEP: deleting the pod @ 01/02/25 10:32:10.048
  I0102 10:32:10.063685 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3124" for this suite. @ 01/02/25 10:32:10.068
• [242.784 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 01/02/25 10:32:10.074
  I0102 10:32:10.074668 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 10:32:10.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:32:10.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:32:10.096
  STEP: Setting up server cert @ 01/02/25 10:32:10.188
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 10:32:10.371
  STEP: Deploying the webhook pod @ 01/02/25 10:32:10.375
  STEP: Wait for the deployment to be ready @ 01/02/25 10:32:10.384
  I0102 10:32:10.389450 23 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 01/02/25 10:32:12.399
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 10:32:12.412
  I0102 10:32:13.412506 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 01/02/25 10:32:13.425
  STEP: create a pod that should be updated by the webhook @ 01/02/25 10:32:13.452
  I0102 10:32:13.536311 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1363" for this suite. @ 01/02/25 10:32:13.539
  STEP: Destroying namespace "webhook-markers-8691" for this suite. @ 01/02/25 10:32:13.542
• [3.476 seconds]
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 01/02/25 10:32:13.551
  I0102 10:32:13.551105 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:32:13.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:32:13.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:32:13.613
  STEP: Creating configMap with name cm-test-opt-del-1d36ecdc-edb1-4388-9788-5cb5caef4e77 @ 01/02/25 10:32:13.639
  STEP: Creating configMap with name cm-test-opt-upd-5553df45-d0b9-4d95-b823-3a0ecfc71101 @ 01/02/25 10:32:13.642
  STEP: Creating the pod @ 01/02/25 10:32:13.645
  STEP: Deleting configmap cm-test-opt-del-1d36ecdc-edb1-4388-9788-5cb5caef4e77 @ 01/02/25 10:32:15.707
  STEP: Updating configmap cm-test-opt-upd-5553df45-d0b9-4d95-b823-3a0ecfc71101 @ 01/02/25 10:32:15.71
  STEP: Creating configMap with name cm-test-opt-create-61ed4483-b310-463f-be32-be29d52821db @ 01/02/25 10:32:15.714
  STEP: waiting to observe update in volume @ 01/02/25 10:32:15.716
  I0102 10:32:17.766342 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1081" for this suite. @ 01/02/25 10:32:17.772
• [4.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 01/02/25 10:32:17.781
  I0102 10:32:17.781210 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename var-expansion @ 01/02/25 10:32:17.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:32:17.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:32:17.796
  STEP: creating the pod @ 01/02/25 10:32:17.798
  STEP: waiting for pod running @ 01/02/25 10:32:17.802
  STEP: creating a file in subpath @ 01/02/25 10:32:19.812
  I0102 10:32:19.824019 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-222 PodName:var-expansion-4c45e9a9-d51c-4bc3-8926-4cc84e37e26e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:32:19.824256 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:32:19.829407 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:32:19.830132 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-222/pods/var-expansion-4c45e9a9-d51c-4bc3-8926-4cc84e37e26e/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 01/02/25 10:32:19.896
  I0102 10:32:19.898555 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-222 PodName:var-expansion-4c45e9a9-d51c-4bc3-8926-4cc84e37e26e ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:32:19.898576 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:32:19.898913 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:32:19.898947 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-222/pods/var-expansion-4c45e9a9-d51c-4bc3-8926-4cc84e37e26e/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 01/02/25 10:32:19.95
  I0102 10:32:20.484718 23 pod_client.go:173] Successfully updated pod "var-expansion-4c45e9a9-d51c-4bc3-8926-4cc84e37e26e"
  STEP: waiting for annotated pod running @ 01/02/25 10:32:20.485
  STEP: deleting the pod gracefully @ 01/02/25 10:32:20.486
  I0102 10:32:20.487023 23 delete.go:62] Deleting pod "var-expansion-4c45e9a9-d51c-4bc3-8926-4cc84e37e26e" in namespace "var-expansion-222"
  I0102 10:32:20.490470 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-4c45e9a9-d51c-4bc3-8926-4cc84e37e26e" to be fully deleted
  I0102 10:32:54.587268 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-222" for this suite. @ 01/02/25 10:32:54.59
• [36.814 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 01/02/25 10:32:54.596
  I0102 10:32:54.596140 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-pred @ 01/02/25 10:32:54.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:32:54.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:32:54.608
  I0102 10:32:54.610249 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0102 10:32:54.693242 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0102 10:32:54.695352 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-103 before test
  I0102 10:32:54.705752 23 predicates.go:957] helm-install-one-longhorn-j7cts from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.705786 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:32:54.705805 23 predicates.go:957] helm-install-one-metallb-5cplm from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.705818 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:32:54.705834 23 predicates.go:957] helm-install-one-traefik-lsm6x from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.705847 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:32:54.706035 23 predicates.go:957] helm-install-rke2-metrics-server-vsc4h from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706051 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:32:54.706114 23 predicates.go:957] helm-install-rke2-snapshot-controller-5vllt from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706130 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:32:54.706179 23 predicates.go:957] helm-install-rke2-snapshot-controller-crd-j9tmw from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706195 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:32:54.706210 23 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-2cckd from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706445 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:32:54.706491 23 predicates.go:957] kube-proxy-oneke-ip-192-168-150-103 from kube-system started at 2025-01-02 08:53:05 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706507 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0102 10:32:54.706522 23 predicates.go:957] rke2-canal-pkbjj from kube-system started at 2025-01-02 08:53:06 +0000 UTC (2 container statuses recorded)
  I0102 10:32:54.706535 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0102 10:32:54.706588 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0102 10:32:54.706605 23 predicates.go:957] rke2-coredns-rke2-coredns-9579797d8-7ztp8 from kube-system started at 2025-01-02 08:53:32 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706647 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0102 10:32:54.706663 23 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-78db5d674-nfmvf from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706676 23 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0102 10:32:54.706690 23 predicates.go:957] rke2-metrics-server-7c85d458bd-8v2m5 from kube-system started at 2025-01-02 08:53:34 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706826 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0102 10:32:54.706844 23 predicates.go:957] rke2-multus-rke2-whereabouts-2rllf from kube-system started at 2025-01-02 08:53:06 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706900 23 predicates.go:959] 	Container rke2-whereabouts ready: true, restart count 1
  I0102 10:32:54.706944 23 predicates.go:957] rke2-multus-ztfpd from kube-system started at 2025-01-02 08:53:06 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.706959 23 predicates.go:959] 	Container kube-rke2-multus ready: true, restart count 0
  I0102 10:32:54.706974 23 predicates.go:957] rke2-snapshot-controller-65bc6fbd57-ptsnl from kube-system started at 2025-01-02 08:53:34 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707064 23 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0102 10:32:54.707114 23 predicates.go:957] rke2-snapshot-validation-webhook-859c7896df-nzq94 from kube-system started at 2025-01-02 08:53:32 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707150 23 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0102 10:32:54.707263 23 predicates.go:957] csi-attacher-8464bbbfbb-kh98w from longhorn-system started at 2025-01-02 08:55:26 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707279 23 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0102 10:32:54.707294 23 predicates.go:957] csi-provisioner-d49d45b74-7sbfz from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707348 23 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0102 10:32:54.707394 23 predicates.go:957] csi-provisioner-d49d45b74-t25rj from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707409 23 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0102 10:32:54.707423 23 predicates.go:957] csi-resizer-84cb56f65d-wpcmc from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707534 23 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0102 10:32:54.707554 23 predicates.go:957] csi-snapshotter-798cbc54c9-pc88b from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707568 23 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0102 10:32:54.707624 23 predicates.go:957] engine-image-ei-51cc7b9c-x5zgv from longhorn-system started at 2025-01-02 08:53:57 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707684 23 predicates.go:959] 	Container engine-image-ei-51cc7b9c ready: true, restart count 0
  I0102 10:32:54.707701 23 predicates.go:957] instance-manager-9a67f2b20f30eb18f131e1fe823ac093 from longhorn-system started at 2025-01-02 08:53:57 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.707714 23 predicates.go:959] 	Container instance-manager ready: true, restart count 0
  I0102 10:32:54.707839 23 predicates.go:957] longhorn-csi-plugin-9z6gl from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (3 container statuses recorded)
  I0102 10:32:54.707855 23 predicates.go:959] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0102 10:32:54.707868 23 predicates.go:959] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0102 10:32:54.707926 23 predicates.go:959] 	Container node-driver-registrar ready: true, restart count 0
  I0102 10:32:54.708003 23 predicates.go:957] longhorn-manager-7n279 from longhorn-system started at 2025-01-02 08:53:36 +0000 UTC (2 container statuses recorded)
  I0102 10:32:54.708104 23 predicates.go:959] 	Container longhorn-manager ready: true, restart count 0
  I0102 10:32:54.708118 23 predicates.go:959] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0102 10:32:54.708134 23 predicates.go:957] one-metallb-controller-6f47d95d95-dc4b8 from metallb-system started at 2025-01-02 08:53:36 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.708192 23 predicates.go:959] 	Container controller ready: true, restart count 0
  I0102 10:32:54.708240 23 predicates.go:957] one-metallb-speaker-fx5tn from metallb-system started at 2025-01-02 08:53:36 +0000 UTC (4 container statuses recorded)
  I0102 10:32:54.708256 23 predicates.go:959] 	Container frr ready: true, restart count 0
  I0102 10:32:54.708269 23 predicates.go:959] 	Container frr-metrics ready: true, restart count 0
  I0102 10:32:54.708382 23 predicates.go:959] 	Container reloader ready: true, restart count 0
  I0102 10:32:54.708398 23 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0102 10:32:54.708413 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-02 09:09:14 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.708510 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0102 10:32:54.708529 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-rfqcx from sonobuoy started at 2025-01-02 09:09:17 +0000 UTC (2 container statuses recorded)
  I0102 10:32:54.708542 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0102 10:32:54.708649 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0102 10:32:54.708673 23 predicates.go:957] one-traefik-7d55ff8d54-rpxbr from traefik-system started at 2025-01-02 08:53:35 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.708687 23 predicates.go:959] 	Container one-traefik ready: true, restart count 0
  I0102 10:32:54.708700 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-105 before test
  I0102 10:32:54.713469 23 predicates.go:957] kube-proxy-oneke-ip-192-168-150-105 from kube-system started at 2025-01-02 09:02:35 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.713501 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0102 10:32:54.713521 23 predicates.go:957] rke2-canal-hcz42 from kube-system started at 2025-01-02 09:02:36 +0000 UTC (2 container statuses recorded)
  I0102 10:32:54.713534 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0102 10:32:54.713547 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0102 10:32:54.713563 23 predicates.go:957] rke2-multus-rke2-whereabouts-7lh79 from kube-system started at 2025-01-02 10:12:33 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.713646 23 predicates.go:959] 	Container rke2-whereabouts ready: true, restart count 0
  I0102 10:32:54.713714 23 predicates.go:957] rke2-multus-zt6l7 from kube-system started at 2025-01-02 09:02:36 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.713731 23 predicates.go:959] 	Container kube-rke2-multus ready: true, restart count 0
  I0102 10:32:54.713745 23 predicates.go:957] engine-image-ei-51cc7b9c-d9xxn from longhorn-system started at 2025-01-02 10:12:33 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.713758 23 predicates.go:959] 	Container engine-image-ei-51cc7b9c ready: true, restart count 0
  I0102 10:32:54.713899 23 predicates.go:957] instance-manager-34052943e1fa230ecb64d623e9fcdb0c from longhorn-system started at 2025-01-02 10:12:36 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.714046 23 predicates.go:959] 	Container instance-manager ready: true, restart count 0
  I0102 10:32:54.714104 23 predicates.go:957] longhorn-csi-plugin-nm9lb from longhorn-system started at 2025-01-02 10:12:29 +0000 UTC (3 container statuses recorded)
  I0102 10:32:54.714175 23 predicates.go:959] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0102 10:32:54.714230 23 predicates.go:959] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0102 10:32:54.714356 23 predicates.go:959] 	Container node-driver-registrar ready: true, restart count 0
  I0102 10:32:54.714376 23 predicates.go:957] longhorn-manager-v4pfn from longhorn-system started at 2025-01-02 10:12:33 +0000 UTC (2 container statuses recorded)
  I0102 10:32:54.714391 23 predicates.go:959] 	Container longhorn-manager ready: true, restart count 0
  I0102 10:32:54.714471 23 predicates.go:959] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0102 10:32:54.714519 23 predicates.go:957] one-metallb-speaker-r96zp from metallb-system started at 2025-01-02 10:12:29 +0000 UTC (4 container statuses recorded)
  I0102 10:32:54.714550 23 predicates.go:959] 	Container frr ready: true, restart count 0
  I0102 10:32:54.714671 23 predicates.go:959] 	Container frr-metrics ready: true, restart count 0
  I0102 10:32:54.714689 23 predicates.go:959] 	Container reloader ready: true, restart count 0
  I0102 10:32:54.714702 23 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0102 10:32:54.714844 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-j9zwr from sonobuoy started at 2025-01-02 09:09:17 +0000 UTC (2 container statuses recorded)
  I0102 10:32:54.714861 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0102 10:32:54.714876 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0102 10:32:54.714949 23 predicates.go:957] one-traefik-7d55ff8d54-prlpp from traefik-system started at 2025-01-02 10:12:38 +0000 UTC (1 container statuses recorded)
  I0102 10:32:54.715001 23 predicates.go:959] 	Container one-traefik ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 01/02/25 10:32:54.715
  STEP: Explicitly delete pod here to free the resource it takes. @ 01/02/25 10:32:56.742
  STEP: Trying to apply a random label on the found node. @ 01/02/25 10:32:56.76
  STEP: verifying the node has the label kubernetes.io/e2e-9729b57b-12e9-4833-bba4-78ce78f8e235 95 @ 01/02/25 10:32:56.776
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 01/02/25 10:32:56.777
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.150.103 on the node which pod4 resides and expect not scheduled @ 01/02/25 10:32:58.793
  STEP: removing the label kubernetes.io/e2e-9729b57b-12e9-4833-bba4-78ce78f8e235 off the node oneke-ip-192-168-150-103 @ 01/02/25 10:37:58.81
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-9729b57b-12e9-4833-bba4-78ce78f8e235 @ 01/02/25 10:37:58.848
  I0102 10:37:58.850862 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-834" for this suite. @ 01/02/25 10:37:58.853
• [304.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 01/02/25 10:37:58.857
  I0102 10:37:58.857665 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replication-controller @ 01/02/25 10:37:58.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:37:58.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:37:58.872
  STEP: Given a ReplicationController is created @ 01/02/25 10:37:58.873
  STEP: When the matched label of one of its pods change @ 01/02/25 10:37:58.876
  I0102 10:37:58.879430 23 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0102 10:38:03.882248 23 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 01/02/25 10:38:03.89
  I0102 10:38:04.896896 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6531" for this suite. @ 01/02/25 10:38:04.902
• [6.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 01/02/25 10:38:04.917
  I0102 10:38:04.917719 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 10:38:04.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:38:04.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:38:04.936
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 01/02/25 10:38:04.937
  I0102 10:38:04.938237 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:38:06.425923 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:38:11.898824 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6922" for this suite. @ 01/02/25 10:38:11.901
• [6.988 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 01/02/25 10:38:11.907
  I0102 10:38:11.908512 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-pred @ 01/02/25 10:38:11.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:38:11.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:38:11.925
  I0102 10:38:11.926730 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0102 10:38:12.004133 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0102 10:38:12.005419 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-103 before test
  I0102 10:38:12.009876 23 predicates.go:957] helm-install-one-longhorn-j7cts from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.009905 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:38:12.009931 23 predicates.go:957] helm-install-one-metallb-5cplm from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010042 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:38:12.010127 23 predicates.go:957] helm-install-one-traefik-lsm6x from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010185 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:38:12.010246 23 predicates.go:957] helm-install-rke2-metrics-server-vsc4h from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010258 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:38:12.010325 23 predicates.go:957] helm-install-rke2-snapshot-controller-5vllt from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010384 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:38:12.010397 23 predicates.go:957] helm-install-rke2-snapshot-controller-crd-j9tmw from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010464 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:38:12.010478 23 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-2cckd from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010541 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:38:12.010609 23 predicates.go:957] kube-proxy-oneke-ip-192-168-150-103 from kube-system started at 2025-01-02 08:53:05 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010621 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0102 10:38:12.010682 23 predicates.go:957] rke2-canal-pkbjj from kube-system started at 2025-01-02 08:53:06 +0000 UTC (2 container statuses recorded)
  I0102 10:38:12.010745 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0102 10:38:12.010757 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0102 10:38:12.010816 23 predicates.go:957] rke2-coredns-rke2-coredns-9579797d8-7ztp8 from kube-system started at 2025-01-02 08:53:32 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010882 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0102 10:38:12.010903 23 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-78db5d674-nfmvf from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.010962 23 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0102 10:38:12.010970 23 predicates.go:957] rke2-metrics-server-7c85d458bd-8v2m5 from kube-system started at 2025-01-02 08:53:34 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011032 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0102 10:38:12.011043 23 predicates.go:957] rke2-multus-rke2-whereabouts-2rllf from kube-system started at 2025-01-02 08:53:06 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011114 23 predicates.go:959] 	Container rke2-whereabouts ready: true, restart count 1
  I0102 10:38:12.011195 23 predicates.go:957] rke2-multus-ztfpd from kube-system started at 2025-01-02 08:53:06 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011207 23 predicates.go:959] 	Container kube-rke2-multus ready: true, restart count 0
  I0102 10:38:12.011275 23 predicates.go:957] rke2-snapshot-controller-65bc6fbd57-ptsnl from kube-system started at 2025-01-02 08:53:34 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011287 23 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0102 10:38:12.011355 23 predicates.go:957] rke2-snapshot-validation-webhook-859c7896df-nzq94 from kube-system started at 2025-01-02 08:53:32 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011419 23 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0102 10:38:12.011533 23 predicates.go:957] csi-attacher-8464bbbfbb-kh98w from longhorn-system started at 2025-01-02 08:55:26 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011545 23 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0102 10:38:12.011554 23 predicates.go:957] csi-provisioner-d49d45b74-7sbfz from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011619 23 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0102 10:38:12.011701 23 predicates.go:957] csi-provisioner-d49d45b74-t25rj from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011757 23 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0102 10:38:12.011818 23 predicates.go:957] csi-resizer-84cb56f65d-wpcmc from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011830 23 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0102 10:38:12.011895 23 predicates.go:957] csi-snapshotter-798cbc54c9-pc88b from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.011953 23 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0102 10:38:12.012024 23 predicates.go:957] engine-image-ei-51cc7b9c-x5zgv from longhorn-system started at 2025-01-02 08:53:57 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.012035 23 predicates.go:959] 	Container engine-image-ei-51cc7b9c ready: true, restart count 0
  I0102 10:38:12.012112 23 predicates.go:957] instance-manager-9a67f2b20f30eb18f131e1fe823ac093 from longhorn-system started at 2025-01-02 08:53:57 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.012180 23 predicates.go:959] 	Container instance-manager ready: true, restart count 0
  I0102 10:38:12.012238 23 predicates.go:957] longhorn-csi-plugin-9z6gl from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (3 container statuses recorded)
  I0102 10:38:12.012302 23 predicates.go:959] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0102 10:38:12.012313 23 predicates.go:959] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0102 10:38:12.012385 23 predicates.go:959] 	Container node-driver-registrar ready: true, restart count 0
  I0102 10:38:12.012458 23 predicates.go:957] longhorn-manager-7n279 from longhorn-system started at 2025-01-02 08:53:36 +0000 UTC (2 container statuses recorded)
  I0102 10:38:12.012466 23 predicates.go:959] 	Container longhorn-manager ready: true, restart count 0
  I0102 10:38:12.012524 23 predicates.go:959] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0102 10:38:12.012601 23 predicates.go:957] one-metallb-controller-6f47d95d95-dc4b8 from metallb-system started at 2025-01-02 08:53:36 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.012613 23 predicates.go:959] 	Container controller ready: true, restart count 0
  I0102 10:38:12.012683 23 predicates.go:957] one-metallb-speaker-fx5tn from metallb-system started at 2025-01-02 08:53:36 +0000 UTC (4 container statuses recorded)
  I0102 10:38:12.012715 23 predicates.go:959] 	Container frr ready: true, restart count 0
  I0102 10:38:12.012771 23 predicates.go:959] 	Container frr-metrics ready: true, restart count 0
  I0102 10:38:12.012778 23 predicates.go:959] 	Container reloader ready: true, restart count 0
  I0102 10:38:12.012844 23 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0102 10:38:12.012868 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-02 09:09:14 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.012972 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0102 10:38:12.013037 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-rfqcx from sonobuoy started at 2025-01-02 09:09:17 +0000 UTC (2 container statuses recorded)
  I0102 10:38:12.013048 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0102 10:38:12.013104 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0102 10:38:12.013113 23 predicates.go:957] one-traefik-7d55ff8d54-rpxbr from traefik-system started at 2025-01-02 08:53:35 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.013120 23 predicates.go:959] 	Container one-traefik ready: true, restart count 0
  I0102 10:38:12.013191 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-105 before test
  I0102 10:38:12.015588 23 predicates.go:957] kube-proxy-oneke-ip-192-168-150-105 from kube-system started at 2025-01-02 09:02:35 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.015605 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0102 10:38:12.015626 23 predicates.go:957] rke2-canal-hcz42 from kube-system started at 2025-01-02 09:02:36 +0000 UTC (2 container statuses recorded)
  I0102 10:38:12.015726 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0102 10:38:12.015796 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0102 10:38:12.015862 23 predicates.go:957] rke2-multus-rke2-whereabouts-7lh79 from kube-system started at 2025-01-02 10:12:33 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.015932 23 predicates.go:959] 	Container rke2-whereabouts ready: true, restart count 0
  I0102 10:38:12.016030 23 predicates.go:957] rke2-multus-zt6l7 from kube-system started at 2025-01-02 09:02:36 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.016098 23 predicates.go:959] 	Container kube-rke2-multus ready: true, restart count 0
  I0102 10:38:12.016156 23 predicates.go:957] engine-image-ei-51cc7b9c-d9xxn from longhorn-system started at 2025-01-02 10:12:33 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.016220 23 predicates.go:959] 	Container engine-image-ei-51cc7b9c ready: true, restart count 0
  I0102 10:38:12.016240 23 predicates.go:957] instance-manager-34052943e1fa230ecb64d623e9fcdb0c from longhorn-system started at 2025-01-02 10:12:36 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.016300 23 predicates.go:959] 	Container instance-manager ready: true, restart count 0
  I0102 10:38:12.016364 23 predicates.go:957] longhorn-csi-plugin-nm9lb from longhorn-system started at 2025-01-02 10:12:29 +0000 UTC (3 container statuses recorded)
  I0102 10:38:12.016424 23 predicates.go:959] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0102 10:38:12.016474 23 predicates.go:959] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0102 10:38:12.016533 23 predicates.go:959] 	Container node-driver-registrar ready: true, restart count 0
  I0102 10:38:12.016642 23 predicates.go:957] longhorn-manager-v4pfn from longhorn-system started at 2025-01-02 10:12:33 +0000 UTC (2 container statuses recorded)
  I0102 10:38:12.016674 23 predicates.go:959] 	Container longhorn-manager ready: true, restart count 0
  I0102 10:38:12.016735 23 predicates.go:959] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0102 10:38:12.016795 23 predicates.go:957] one-metallb-speaker-r96zp from metallb-system started at 2025-01-02 10:12:29 +0000 UTC (4 container statuses recorded)
  I0102 10:38:12.016807 23 predicates.go:959] 	Container frr ready: true, restart count 0
  I0102 10:38:12.016877 23 predicates.go:959] 	Container frr-metrics ready: true, restart count 0
  I0102 10:38:12.016934 23 predicates.go:959] 	Container reloader ready: true, restart count 0
  I0102 10:38:12.016941 23 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0102 10:38:12.017015 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-j9zwr from sonobuoy started at 2025-01-02 09:09:17 +0000 UTC (2 container statuses recorded)
  I0102 10:38:12.017079 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0102 10:38:12.017143 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0102 10:38:12.017153 23 predicates.go:957] one-traefik-7d55ff8d54-prlpp from traefik-system started at 2025-01-02 10:12:38 +0000 UTC (1 container statuses recorded)
  I0102 10:38:12.017219 23 predicates.go:959] 	Container one-traefik ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 01/02/25 10:38:12.017
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1816d9e6e090c754], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {CriticalAddonsOnly: true}, 1 node(s) had untolerated taint {node.longhorn.io/create-default-disk: true}, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 01/02/25 10:38:12.037
  I0102 10:38:13.044769 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8637" for this suite. @ 01/02/25 10:38:13.058
• [1.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 01/02/25 10:38:13.071
  I0102 10:38:13.071344 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename cronjob @ 01/02/25 10:38:13.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:38:13.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:38:13.091
  STEP: Creating a ForbidConcurrent cronjob @ 01/02/25 10:38:13.092
  STEP: Ensuring a job is scheduled @ 01/02/25 10:38:13.095
  STEP: Ensuring exactly one is scheduled @ 01/02/25 10:39:01.098
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 01/02/25 10:39:01.099
  STEP: Ensuring no more jobs are scheduled @ 01/02/25 10:39:01.101
  STEP: Removing cronjob @ 01/02/25 10:39:01.102
  I0102 10:39:01.107494 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3647" for this suite. @ 01/02/25 10:39:01.115
• [48.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 01/02/25 10:39:01.127
  I0102 10:39:01.127471 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename endpointslice @ 01/02/25 10:39:01.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:39:01.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:39:01.146
  STEP: referencing a single matching pod @ 01/02/25 10:39:03.212
  STEP: referencing matching pods with named port @ 01/02/25 10:39:03.217
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 01/02/25 10:39:03.219
  STEP: recreating EndpointSlices after they've been deleted @ 01/02/25 10:39:03.221
  I0102 10:39:03.237048 23 endpointslice.go:938] EndpointSlice for Service endpointslice-7654/example-named-port not found
  I0102 10:39:05.248824 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7654" for this suite. @ 01/02/25 10:39:05.269
• [4.150 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 01/02/25 10:39:05.278
  I0102 10:39:05.279054 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename limitrange @ 01/02/25 10:39:05.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:39:05.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:39:05.292
  STEP: Creating LimitRange "e2e-limitrange-t7r4q" in namespace "limitrange-4820" @ 01/02/25 10:39:05.294
  STEP: Creating another limitRange in another namespace @ 01/02/25 10:39:05.296
  I0102 10:39:05.391311 23 limit_range.go:299] Namespace "e2e-limitrange-t7r4q-4100" created
  I0102 10:39:05.391339 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-t7r4q" in namespace "e2e-limitrange-t7r4q-4100"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-t7r4q" @ 01/02/25 10:39:05.394
  I0102 10:39:05.396187 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-t7r4q" in "limitrange-4820" namespace @ 01/02/25 10:39:05.396
  I0102 10:39:05.401507 23 limit_range.go:335] LimitRange "e2e-limitrange-t7r4q" has been patched
  STEP: Delete LimitRange "e2e-limitrange-t7r4q" by Collection with labelSelector: "e2e-limitrange-t7r4q=patched" @ 01/02/25 10:39:05.401
  STEP: Confirm that the limitRange "e2e-limitrange-t7r4q" has been deleted @ 01/02/25 10:39:05.404
  I0102 10:39:05.404471 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0102 10:39:05.405515 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-t7r4q=patched"
  I0102 10:39:05.405536 23 limit_range.go:344] LimitRange "e2e-limitrange-t7r4q" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-t7r4q" @ 01/02/25 10:39:05.405
  I0102 10:39:05.406603 23 limit_range.go:350] Found 1 limitRange
  I0102 10:39:05.406752 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4820" for this suite. @ 01/02/25 10:39:05.408
  STEP: Destroying namespace "e2e-limitrange-t7r4q-4100" for this suite. @ 01/02/25 10:39:05.412
• [0.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 01/02/25 10:39:05.416
  I0102 10:39:05.416972 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 10:39:05.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:39:05.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:39:05.505
  STEP: Setting up server cert @ 01/02/25 10:39:05.59
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 10:39:06.1
  STEP: Deploying the webhook pod @ 01/02/25 10:39:06.106
  STEP: Wait for the deployment to be ready @ 01/02/25 10:39:06.117
  I0102 10:39:06.131554 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 01/02/25 10:39:08.137
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 10:39:08.158
  I0102 10:39:09.159487 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 01/02/25 10:39:09.176
  STEP: create a pod that should be denied by the webhook @ 01/02/25 10:39:09.207
  STEP: create a pod that causes the webhook to hang @ 01/02/25 10:39:09.22
  STEP: create a configmap that should be denied by the webhook @ 01/02/25 10:39:19.231
  STEP: create a configmap that should be admitted by the webhook @ 01/02/25 10:39:19.397
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/02/25 10:39:19.408
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 01/02/25 10:39:19.413
  STEP: create a namespace that bypass the webhook @ 01/02/25 10:39:19.416
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 01/02/25 10:39:19.426
  I0102 10:39:19.472522 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3386" for this suite. @ 01/02/25 10:39:19.477
  STEP: Destroying namespace "webhook-markers-1887" for this suite. @ 01/02/25 10:39:19.493
  STEP: Destroying namespace "exempted-namespace-1277" for this suite. @ 01/02/25 10:39:19.497
• [14.084 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 01/02/25 10:39:19.501
  I0102 10:39:19.501973 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:39:19.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:39:19.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:39:19.533
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1545 @ 01/02/25 10:39:19.536
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 01/02/25 10:39:19.546
  STEP: creating service externalsvc in namespace services-1545 @ 01/02/25 10:39:19.546
  STEP: creating replication controller externalsvc in namespace services-1545 @ 01/02/25 10:39:19.557
  I0102 10:39:19.561018      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1545, replica count: 2
  I0102 10:39:22.612130      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 01/02/25 10:39:22.613
  I0102 10:39:22.623948 23 resource.go:361] Creating new exec pod
  I0102 10:39:24.638593 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1545 exec execpodvbtnc -- /bin/sh -x -c nslookup clusterip-service.services-1545.svc.cluster.local'
  I0102 10:39:24.867885 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-1545.svc.cluster.local\n"
  I0102 10:39:24.867955 23 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-1545.svc.cluster.local\tcanonical name = externalsvc.services-1545.svc.cluster.local.\nName:\texternalsvc.services-1545.svc.cluster.local\nAddress: 10.43.2.3\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1545, will wait for the garbage collector to delete the pods @ 01/02/25 10:39:24.868
  I0102 10:39:24.925198 23 resources.go:139] Deleting ReplicationController externalsvc took: 5.353199ms
  I0102 10:39:25.027745 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 102.543634ms
  I0102 10:39:28.041796 23 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0102 10:39:28.053517 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1545" for this suite. @ 01/02/25 10:39:28.055
• [8.559 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 01/02/25 10:39:28.061
  I0102 10:39:28.061598 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-probe @ 01/02/25 10:39:28.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:39:28.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:39:28.074
  I0102 10:40:28.088503 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-875" for this suite. @ 01/02/25 10:40:28.101
• [60.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 01/02/25 10:40:28.111
  I0102 10:40:28.111403 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pods @ 01/02/25 10:40:28.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:28.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:28.127
  STEP: Saw pod success @ 01/02/25 10:40:34.203
  I0102 10:40:34.222834 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod client-envvars-6115f015-43d0-43b5-93ad-3747913b746a container env3cont: <nil>
  STEP: delete the pod @ 01/02/25 10:40:34.234
  I0102 10:40:34.246806 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7437" for this suite. @ 01/02/25 10:40:34.251
• [6.145 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 01/02/25 10:40:34.256
  I0102 10:40:34.256793 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename deployment @ 01/02/25 10:40:34.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:34.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:34.269
  STEP: creating a Deployment @ 01/02/25 10:40:34.271
  I0102 10:40:34.271836 23 deployment.go:507] Creating simple deployment test-deployment-65xnq
  I0102 10:40:34.282158 23 deployment.go:222] deployment "test-deployment-65xnq" doesn't have the required revision set
  STEP: Getting /status @ 01/02/25 10:40:36.287
  I0102 10:40:36.289001 23 deployment.go:532] Deployment test-deployment-65xnq has Conditions: [{Available True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-65xnq-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 01/02/25 10:40:36.289
  I0102 10:40:36.292992 23 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 10, 40, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 10, 40, 35, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.January, 2, 10, 40, 35, 0, time.Local), LastTransitionTime:time.Date(2025, time.January, 2, 10, 40, 34, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-65xnq-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 01/02/25 10:40:36.293
  I0102 10:40:36.295080 23 deployment.go:579] Observed &Deployment event: ADDED
  I0102 10:40:36.295219 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-65xnq-f4dbbbf74"}
  I0102 10:40:36.295457 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0102 10:40:36.295687 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-65xnq-f4dbbbf74"}
  I0102 10:40:36.295824 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0102 10:40:36.296093 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0102 10:40:36.296237 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0102 10:40:36.296379 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-65xnq-f4dbbbf74" is progressing.}
  I0102 10:40:36.296637 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0102 10:40:36.296895 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0102 10:40:36.297030 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-65xnq-f4dbbbf74" has successfully progressed.}
  I0102 10:40:36.297265 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I0102 10:40:36.297396 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0102 10:40:36.297535 23 deployment.go:575] Observed Deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-65xnq-f4dbbbf74" has successfully progressed.}
  I0102 10:40:36.297643 23 deployment.go:572] Found Deployment test-deployment-65xnq in namespace deployment-2379 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0102 10:40:36.297777 23 deployment.go:583] Deployment test-deployment-65xnq has an updated status
  STEP: patching the Statefulset Status @ 01/02/25 10:40:36.298
  I0102 10:40:36.298184 23 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0102 10:40:36.302819 23 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 01/02/25 10:40:36.302
  I0102 10:40:36.304643 23 deployment.go:616] Observed &Deployment event: ADDED
  I0102 10:40:36.304789 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-65xnq-f4dbbbf74"}
  I0102 10:40:36.305047 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0102 10:40:36.305256 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-65xnq-f4dbbbf74"}
  I0102 10:40:36.305528 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0102 10:40:36.305786 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0102 10:40:36.305940 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0102 10:40:36.306361 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:34 +0000 UTC 2025-01-02 10:40:34 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-65xnq-f4dbbbf74" is progressing.}
  I0102 10:40:36.306624 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0102 10:40:36.306850 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0102 10:40:36.307091 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-65xnq-f4dbbbf74" has successfully progressed.}
  I0102 10:40:36.307345 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0102 10:40:36.307504 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:35 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0102 10:40:36.307703 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-01-02 10:40:35 +0000 UTC 2025-01-02 10:40:34 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-65xnq-f4dbbbf74" has successfully progressed.}
  I0102 10:40:36.307966 23 deployment.go:612] Observed deployment test-deployment-65xnq in namespace deployment-2379 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0102 10:40:36.308340 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I0102 10:40:36.308683 23 deployment.go:609] Found deployment test-deployment-65xnq in namespace deployment-2379 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0102 10:40:36.308861 23 deployment.go:620] Deployment test-deployment-65xnq has a patched status
  I0102 10:40:36.311844 23 deployment.go:633] Deployment "test-deployment-65xnq":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-65xnq",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68537459-8b15-4e20-bd51-c9e765c426f7",
      ResourceVersion: (string) (len=5) "55416",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871411234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411236,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-65xnq-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0102 10:40:36.386442 23 deployment.go:39] New ReplicaSet "test-deployment-65xnq-f4dbbbf74" of Deployment "test-deployment-65xnq":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-65xnq-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0eb7ae63-c4de-450e-a2ee-7fb61386f124",
      ResourceVersion: (string) (len=5) "55409",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871411234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-65xnq",
          UID: (types.UID) (len=36) "68537459-8b15-4e20-bd51-c9e765c426f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 38 35  |k:{\"uid\":\"685|
              00000120  33 37 34 35 39 2d 38 62  31 35 2d 34 65 32 30 2d  |37459-8b15-4e20-|
              00000130  62 64 35 31 2d 63 39 65  37 36 35 63 34 32 36 66  |bd51-c9e765c426f|
              00000140  37 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |7\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0102 10:40:36.394610 23 deployment.go:67] Pod "test-deployment-65xnq-f4dbbbf74-sbgp9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-65xnq-f4dbbbf74-sbgp9",
      GenerateName: (string) (len=32) "test-deployment-65xnq-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-2379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9617739-0c49-413f-97ce-5b4b208a3030",
      ResourceVersion: (string) (len=5) "55408",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871411234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=4) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e173a8ae4c1c0b5b37ba16678457956c8f28ca13be11e63debfc5c551894015c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.55/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.55/32",
        (string) (len=33) "k8s.v1.cni.cncf.io/network-status": (string) (len=112) "[{\n    \"name\": \"k8s-pod-network\",\n    \"ips\": [\n        \"10.42.3.55\"\n    ],\n    \"default\": true,\n    \"dns\": {}\n}]"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-65xnq-f4dbbbf74",
          UID: (types.UID) (len=36) "0eb7ae63-c4de-450e-a2ee-7fb61386f124",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=4) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 65 62 37 61 65 36  33 2d 63 34 64 65 2d 34  |"0eb7ae63-c4de-4|
              000000a0  35 30 65 2d 61 32 65 65  2d 37 66 62 36 31 33 38  |50e-a2ee-7fb6138|
              000000b0  36 66 31 32 34 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |6f124\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "multus",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=75) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 6b 38 73 2e 76  31 2e 63 6e 69 2e 63 6e  |"f:k8s.v1.cni.cn|
              00000030  63 66 2e 69 6f 2f 6e 65  74 77 6f 72 6b 2d 73 74  |cf.io/network-st|
              00000040  61 74 75 73 22 3a 7b 7d  7d 7d 7d                 |atus":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 35 35  5c 22 7d 22 3a 7b 22 2e  |.42.3.55\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5g6w5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5g6w5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=24) "oneke-ip-192-168-150-105",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411235,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63871411234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.150.105",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.150.105"
        }
      },
      PodIP: (string) (len=10) "10.42.3.55",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.55"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63871411234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63871411234,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6cbdcda690d27035d050c42bda053b427d495f97695a1c153c0751278f20658f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5g6w5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0102 10:40:36.396673 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2379" for this suite. @ 01/02/25 10:40:36.4
• [2.148 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 01/02/25 10:40:36.405
  I0102 10:40:36.405201 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 10:40:36.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:36.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:36.418
  I0102 10:40:36.437421 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8894" for this suite. @ 01/02/25 10:40:36.501
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 01/02/25 10:40:36.508
  I0102 10:40:36.508145 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename job @ 01/02/25 10:40:36.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:36.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:36.52
  STEP: Looking for a node to schedule job pod @ 01/02/25 10:40:36.521
  STEP: Creating a job @ 01/02/25 10:40:36.601
  STEP: Ensuring job fails @ 01/02/25 10:40:36.607
  I0102 10:40:40.612130 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5274" for this suite. @ 01/02/25 10:40:40.614
• [4.110 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 01/02/25 10:40:40.619
  I0102 10:40:40.619380 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename job @ 01/02/25 10:40:40.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:40.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:40.633
  STEP: Creating a job @ 01/02/25 10:40:40.634
  STEP: Ensuring job reaches completions @ 01/02/25 10:40:40.641
  I0102 10:40:52.650711 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3592" for this suite. @ 01/02/25 10:40:52.652
• [12.037 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 01/02/25 10:40:52.656
  I0102 10:40:52.656965 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pv @ 01/02/25 10:40:52.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:52.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:52.67
  STEP: Creating initial PV and PVC @ 01/02/25 10:40:52.672
  I0102 10:40:52.672161 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4328" @ 01/02/25 10:40:52.682
  STEP: Listing PVCs in namespace "pv-4328" @ 01/02/25 10:40:52.685
  STEP: Reading "pvc-8q225" Status @ 01/02/25 10:40:52.687
  STEP: Reading "pv-4328-srb28" Status @ 01/02/25 10:40:52.689
  STEP: Patching "pvc-8q225" Status @ 01/02/25 10:40:52.692
  STEP: Patching "pv-4328-srb28" Status @ 01/02/25 10:40:52.697
  STEP: Updating "pvc-8q225" Status @ 01/02/25 10:40:52.702
  STEP: Updating "pv-4328-srb28" Status @ 01/02/25 10:40:52.711
  I0102 10:40:52.718903 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0102 10:40:52.719045 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-8q225"
  I0102 10:40:52.725143 23 pv.go:193] Deleting PersistentVolume "pv-4328-srb28"
  I0102 10:40:52.731515 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4328" for this suite. @ 01/02/25 10:40:52.754
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 01/02/25 10:40:52.759
  I0102 10:40:52.759259 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:40:52.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:52.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:52.772
  STEP: Creating configMap with name configmap-projected-all-test-volume-53c4bf4a-25a3-4641-ba73-567671d8c621 @ 01/02/25 10:40:52.774
  STEP: Creating secret with name secret-projected-all-test-volume-045f63cc-1339-41c6-8b97-85e7e1224e77 @ 01/02/25 10:40:52.777
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 01/02/25 10:40:52.78
  STEP: Saw pod success @ 01/02/25 10:40:56.798
  I0102 10:40:56.802561 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod projected-volume-b2193560-8368-4120-988a-6110fcd55a40 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:40:56.812
  I0102 10:40:56.830894 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6188" for this suite. @ 01/02/25 10:40:56.833
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 01/02/25 10:40:56.836
  I0102 10:40:56.836880 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename podtemplate @ 01/02/25 10:40:56.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:56.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:56.849
  STEP: Create a pod template @ 01/02/25 10:40:56.85
  STEP: Replace a pod template @ 01/02/25 10:40:56.854
  I0102 10:40:56.857757 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0102 10:40:56.857855 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1261" for this suite. @ 01/02/25 10:40:56.934
• [0.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 01/02/25 10:40:56.941
  I0102 10:40:56.941034 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename job @ 01/02/25 10:40:56.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:56.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:56.955
  STEP: Creating a job @ 01/02/25 10:40:56.956
  STEP: Ensure pods equal to parallelism count is attached to the job @ 01/02/25 10:40:56.959
  STEP: patching /status @ 01/02/25 10:40:58.961
  STEP: updating /status @ 01/02/25 10:40:58.969
  STEP: get /status @ 01/02/25 10:40:58.972
  I0102 10:40:58.973684 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4279" for this suite. @ 01/02/25 10:40:58.975
• [2.038 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 01/02/25 10:40:58.979
  I0102 10:40:58.980010 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename apf @ 01/02/25 10:40:58.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:58.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:59.001
  STEP: getting /apis @ 01/02/25 10:40:59.002
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 01/02/25 10:40:59.006
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 01/02/25 10:40:59.007
  STEP: creating @ 01/02/25 10:40:59.007
  STEP: getting @ 01/02/25 10:40:59.018
  STEP: listing @ 01/02/25 10:40:59.02
  STEP: watching @ 01/02/25 10:40:59.022
  I0102 10:40:59.022047 23 flowcontrol.go:394] starting watch
  STEP: patching @ 01/02/25 10:40:59.023
  STEP: updating @ 01/02/25 10:40:59.029
  I0102 10:40:59.033338 23 flowcontrol.go:422] waiting for watch events with expected annotations
  I0102 10:40:59.033442 23 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 01/02/25 10:40:59.033
  STEP: patching /status @ 01/02/25 10:40:59.034
  STEP: updating /status @ 01/02/25 10:40:59.038
  STEP: deleting @ 01/02/25 10:40:59.046
  STEP: deleting a collection @ 01/02/25 10:40:59.052
  I0102 10:40:59.058708 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7294" for this suite. @ 01/02/25 10:40:59.076
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 01/02/25 10:40:59.081
  I0102 10:40:59.081332 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename daemonsets @ 01/02/25 10:40:59.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:40:59.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:40:59.093
  I0102 10:40:59.180257 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 01/02/25 10:40:59.183
  I0102 10:40:59.185090 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:40:59.185114 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 01/02/25 10:40:59.185
  I0102 10:40:59.303994 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:40:59.304080 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 10:41:00.304926 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:41:00.305025 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 10:41:01.306642 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:41:01.308836 23 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 01/02/25 10:41:01.318
  I0102 10:41:01.360312 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:41:01.360921 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 01/02/25 10:41:01.361
  I0102 10:41:01.404230 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:41:01.404262 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 10:41:02.426510 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:41:02.428287 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 10:41:03.368533 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:41:03.368581 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  I0102 10:41:04.381696 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:41:04.382268 23 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/02/25 10:41:04.389
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2392, will wait for the garbage collector to delete the pods @ 01/02/25 10:41:04.389
  I0102 10:41:04.445063 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.45637ms
  I0102 10:41:04.546098 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.031226ms
  I0102 10:41:07.448570 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:41:07.448599 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0102 10:41:07.449772 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"56017"},"items":null}

  I0102 10:41:07.450745 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"56017"},"items":null}

  I0102 10:41:07.466202 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2392" for this suite. @ 01/02/25 10:41:07.469
• [8.392 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 01/02/25 10:41:07.473
  I0102 10:41:07.473546 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:41:07.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:41:07.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:41:07.491
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 10:41:07.494
  STEP: Saw pod success @ 01/02/25 10:41:11.523
  I0102 10:41:11.530531 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod downwardapi-volume-3b5220b2-c010-4d9f-8f9e-4c0ad409fff3 container client-container: <nil>
  STEP: delete the pod @ 01/02/25 10:41:11.539
  I0102 10:41:11.551309 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4165" for this suite. @ 01/02/25 10:41:11.553
• [4.085 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 01/02/25 10:41:11.558
  I0102 10:41:11.558634 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename crd-publish-openapi @ 01/02/25 10:41:11.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:41:11.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:41:11.571
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 01/02/25 10:41:11.573
  I0102 10:41:11.573403 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 01/02/25 10:41:17.093
  I0102 10:41:17.094162 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:41:18.473863 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:41:23.965459 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-355" for this suite. @ 01/02/25 10:41:23.968
• [12.414 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 01/02/25 10:41:23.972
  I0102 10:41:23.972893 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 10:41:23.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:41:23.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:41:23.99
  STEP: Creating configMap with name configmap-test-volume-c4cf740b-927c-4d67-acc4-017b9e79f816 @ 01/02/25 10:41:23.992
  STEP: Creating a pod to test consume configMaps @ 01/02/25 10:41:23.994
  STEP: Saw pod success @ 01/02/25 10:41:28.02
  I0102 10:41:28.026530 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-103 pod pod-configmaps-805886d7-665a-49dd-8444-5411cfb882f9 container configmap-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:41:28.036
  I0102 10:41:28.055420 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-46" for this suite. @ 01/02/25 10:41:28.058
• [4.090 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 01/02/25 10:41:28.064
  I0102 10:41:28.064891 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename replication-controller @ 01/02/25 10:41:28.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:41:28.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:41:28.076
  STEP: creating a ReplicationController @ 01/02/25 10:41:28.079
  STEP: waiting for RC to be added @ 01/02/25 10:41:28.084
  STEP: waiting for available Replicas @ 01/02/25 10:41:28.088
  STEP: patching ReplicationController @ 01/02/25 10:41:29.457
  STEP: waiting for RC to be modified @ 01/02/25 10:41:29.463
  STEP: patching ReplicationController status @ 01/02/25 10:41:29.463
  STEP: waiting for RC to be modified @ 01/02/25 10:41:29.466
  STEP: waiting for available Replicas @ 01/02/25 10:41:29.466
  STEP: fetching ReplicationController status @ 01/02/25 10:41:29.47
  STEP: patching ReplicationController scale @ 01/02/25 10:41:29.471
  STEP: waiting for RC to be modified @ 01/02/25 10:41:29.475
  STEP: waiting for ReplicationController's scale to be the max amount @ 01/02/25 10:41:29.476
  STEP: fetching ReplicationController; ensuring that it's patched @ 01/02/25 10:41:30.407
  STEP: updating ReplicationController status @ 01/02/25 10:41:30.409
  STEP: waiting for RC to be modified @ 01/02/25 10:41:30.412
  STEP: listing all ReplicationControllers @ 01/02/25 10:41:30.412
  STEP: checking that ReplicationController has expected values @ 01/02/25 10:41:30.415
  STEP: deleting ReplicationControllers by collection @ 01/02/25 10:41:30.415
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 01/02/25 10:41:30.422
  E0102 10:41:30.468374      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:41:30.468522 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-499" for this suite. @ 01/02/25 10:41:30.47
• [2.410 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 01/02/25 10:41:30.474
  I0102 10:41:30.474691 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename downward-api @ 01/02/25 10:41:30.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:41:30.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:41:30.489
  STEP: Creating a pod to test downward API volume plugin @ 01/02/25 10:41:30.49
  E0102 10:41:31.468687      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:32.468750      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:33.471801      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:34.472231      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/02/25 10:41:34.509
  I0102 10:41:34.511779 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod downwardapi-volume-eeaf46d8-d8a5-41e9-be4e-dee68587a7ca container client-container: <nil>
  STEP: delete the pod @ 01/02/25 10:41:34.522
  I0102 10:41:34.531447 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3409" for this suite. @ 01/02/25 10:41:34.533
• [4.062 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 01/02/25 10:41:34.538
  I0102 10:41:34.538108 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename resourcequota @ 01/02/25 10:41:34.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:41:34.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:41:34.552
  STEP: Creating resourceQuota "e2e-rq-status-jrcp4" @ 01/02/25 10:41:34.641
  I0102 10:41:34.647336 23 resource_quota.go:1102] Resource quota "e2e-rq-status-jrcp4" reports spec: hard cpu limit of 500m
  I0102 10:41:34.647384 23 resource_quota.go:1104] Resource quota "e2e-rq-status-jrcp4" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-jrcp4" /status @ 01/02/25 10:41:34.647
  STEP: Confirm /status for "e2e-rq-status-jrcp4" resourceQuota via watch @ 01/02/25 10:41:34.651
  I0102 10:41:34.654842 23 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-jrcp4" in namespace "resourcequota-4399" with hard status: v1.ResourceList(nil)
  I0102 10:41:34.654970 23 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-jrcp4" in namespace "resourcequota-4399" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0102 10:41:34.654989 23 resource_quota.go:1141] ResourceQuota "e2e-rq-status-jrcp4" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 01/02/25 10:41:34.742
  I0102 10:41:34.748010 23 resource_quota.go:1152] Resource quota "e2e-rq-status-jrcp4" reports spec: hard cpu limit of 1
  I0102 10:41:34.748079 23 resource_quota.go:1153] Resource quota "e2e-rq-status-jrcp4" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-jrcp4" /status @ 01/02/25 10:41:34.748
  STEP: Confirm /status for "e2e-rq-status-jrcp4" resourceQuota via watch @ 01/02/25 10:41:34.752
  I0102 10:41:34.753781 23 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-jrcp4" in namespace "resourcequota-4399" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0102 10:41:34.754160 23 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-jrcp4" in namespace "resourcequota-4399" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0102 10:41:34.754451 23 resource_quota.go:1185] ResourceQuota "e2e-rq-status-jrcp4" /status was patched
  STEP: Get "e2e-rq-status-jrcp4" /status @ 01/02/25 10:41:34.754
  I0102 10:41:34.757163 23 resource_quota.go:1196] Resourcequota "e2e-rq-status-jrcp4" reports status: hard cpu of 1
  I0102 10:41:34.757196 23 resource_quota.go:1198] Resourcequota "e2e-rq-status-jrcp4" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-jrcp4" /status before checking Spec is unchanged @ 01/02/25 10:41:34.759
  I0102 10:41:34.763459 23 resource_quota.go:1218] Resourcequota "e2e-rq-status-jrcp4" reports status: hard cpu of 2
  I0102 10:41:34.763646 23 resource_quota.go:1220] Resourcequota "e2e-rq-status-jrcp4" reports status: hard memory of 2Gi
  I0102 10:41:34.764872 23 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-jrcp4" in namespace "resourcequota-4399" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0102 10:41:34.767041 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b72dc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b72df8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b72e40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:41:35.473041      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:36.473788      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:37.473969      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:38.474186      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:39.474392      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:41:39.767318 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b730c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b73140), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b731b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:41:40.475273      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:41.476071      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:42.476513      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:43.476775      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:44.481103      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:41:44.771921 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b734a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b734e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b73518), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:41:45.482063      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:46.482827      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:47.484275      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:48.483782      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:49.492222      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:41:49.777894 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b737e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b73860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b73890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:41:50.492813      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:51.493188      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:52.494294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:53.495778      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:54.496362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:41:54.769545 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dde900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dde948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003dde978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:41:55.497676      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:56.499002      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:57.499160      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:58.499163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:41:59.499217      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:41:59.767648 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b73bc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b73c08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002b73c80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:42:00.499352      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:01.499577      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:02.499825      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:03.503786      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:04.503955      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:42:04.773683 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddec00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddec30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddec90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:42:05.504035      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:06.504137      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:07.504541      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:08.504550      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:09.504861      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:42:09.771921 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddee28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddee58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddeed0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:42:10.505362      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:11.506225      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:12.506801      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:13.511729      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:14.508019      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:42:14.803899 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddf158), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddf1a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddf1d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:42:15.507834      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:16.509141      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:17.509554      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:18.511918      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:19.512174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:42:19.778051 23 resource_quota.go:1263] ResourceQuota "e2e-rq-status-jrcp4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-jrcp4", GenerateName:"", Namespace:"resourcequota-4399", SelfLink:"", UID:"80968041-e332-4969-8ee6-569b84ab5dd3", ResourceVersion:"56320", Generation:0, CreationTimestamp:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-jrcp4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddf3c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddf3f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.January, 2, 10, 41, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ddf4a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0102 10:42:20.512207      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:21.512730      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:22.513193      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:23.515377      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:24.516535      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:42:24.768618 23 resource_quota.go:1260] ResourceQuota "e2e-rq-status-jrcp4" Spec was unchanged and /status reset
  I0102 10:42:24.769185 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4399" for this suite. @ 01/02/25 10:42:24.776
• [50.245 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 01/02/25 10:42:24.784
  I0102 10:42:24.784457 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename configmap @ 01/02/25 10:42:24.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:42:24.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:42:24.807
  STEP: Creating configMap with name configmap-test-upd-a1b7e9bb-e280-4d46-a4c5-aca1c2d328bd @ 01/02/25 10:42:24.873
  STEP: Creating the pod @ 01/02/25 10:42:24.877
  E0102 10:42:25.516869      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:26.517110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-a1b7e9bb-e280-4d46-a4c5-aca1c2d328bd @ 01/02/25 10:42:26.895
  STEP: waiting to observe update in volume @ 01/02/25 10:42:26.9
  E0102 10:42:27.517620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:28.518118      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:29.518601      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:30.519517      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:31.520166      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:32.520501      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:33.527157      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:34.527315      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:35.528054      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:36.528402      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:37.528940      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:38.531196      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:39.531796      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:40.531937      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:41.532191      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:42.533294      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:43.535788      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:44.535876      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:45.537183      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:46.537865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:47.537815      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:48.542100      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:49.542522      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:50.544301      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:51.545204      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:52.545644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:53.546535      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:54.546984      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:55.547153      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:56.548521      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:57.548368      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:58.548431      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:42:59.548573      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:00.549070      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:01.549920      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:02.550599      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:03.550965      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:04.551058      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:05.105270 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-376" for this suite. @ 01/02/25 10:43:05.11
• [40.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 01/02/25 10:43:05.119
  I0102 10:43:05.119222 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 10:43:05.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:05.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:05.135
  STEP: Creating secret with name secret-test-afb4fa16-601a-4a5d-ac1b-71b5c7b88cfb @ 01/02/25 10:43:05.136
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:43:05.14
  E0102 10:43:05.551309      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:06.551947      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:07.552526      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:08.552550      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/02/25 10:43:09.15
  I0102 10:43:09.151948 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-secrets-bd2bad83-fc85-4902-9cf1-d43c22a4f023 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:43:09.16
  I0102 10:43:09.171317 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9354" for this suite. @ 01/02/25 10:43:09.173
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 01/02/25 10:43:09.177
  I0102 10:43:09.177906 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 01/02/25 10:43:09.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:09.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:09.189
  STEP: create the container to handle the HTTPGet hook request. @ 01/02/25 10:43:09.274
  E0102 10:43:09.553962      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:10.554452      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 01/02/25 10:43:11.291
  E0102 10:43:11.556407      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:12.556527      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 01/02/25 10:43:13.316
  STEP: delete the pod with lifecycle hook @ 01/02/25 10:43:13.334
  E0102 10:43:13.556462      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:14.556712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:15.557864      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:16.558247      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:17.353049 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8940" for this suite. @ 01/02/25 10:43:17.355
• [8.181 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 01/02/25 10:43:17.359
  I0102 10:43:17.359359 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:43:17.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:17.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:17.373
  STEP: creating service endpoint-test2 in namespace services-1985 @ 01/02/25 10:43:17.374
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1985 to expose endpoints map[] @ 01/02/25 10:43:17.381
  I0102 10:43:17.395028 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1985 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1985 @ 01/02/25 10:43:17.395
  E0102 10:43:17.559651      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:18.560327      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1985 to expose endpoints map[pod1:[80]] @ 01/02/25 10:43:19.41
  I0102 10:43:19.415017 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1985 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 01/02/25 10:43:19.415
  I0102 10:43:19.415154 23 resource.go:361] Creating new exec pod
  E0102 10:43:19.561234      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:20.561506      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:21.561723      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:22.437865 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1985 exec execpodgrj2s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0102 10:43:22.564615      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:22.615381 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0102 10:43:22.615417 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 10:43:22.615568 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1985 exec execpodgrj2s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.148.20 80'
  I0102 10:43:22.722373 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.148.20 80\nConnection to 10.43.148.20 80 port [tcp/http] succeeded!\n"
  I0102 10:43:22.722408 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1985 @ 01/02/25 10:43:22.722
  E0102 10:43:23.565373      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:24.566607      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1985 to expose endpoints map[pod1:[80] pod2:[80]] @ 01/02/25 10:43:24.738
  I0102 10:43:24.748858 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1985 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 01/02/25 10:43:24.749
  E0102 10:43:25.565966      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:25.750817 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1985 exec execpodgrj2s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0102 10:43:25.854213 23 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0102 10:43:25.854260 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 10:43:25.854502 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1985 exec execpodgrj2s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.148.20 80'
  I0102 10:43:25.958219 23 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.148.20 80\necho hostName\nConnection to 10.43.148.20 80 port [tcp/http] succeeded!\n"
  I0102 10:43:25.958254 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1985 @ 01/02/25 10:43:25.958
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1985 to expose endpoints map[pod2:[80]] @ 01/02/25 10:43:25.975
  I0102 10:43:25.988400 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1985 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 01/02/25 10:43:25.988
  E0102 10:43:26.566722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:26.988994 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1985 exec execpodgrj2s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0102 10:43:27.113050 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0102 10:43:27.113085 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0102 10:43:27.113277 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=services-1985 exec execpodgrj2s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.148.20 80'
  I0102 10:43:27.226961 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.148.20 80\nConnection to 10.43.148.20 80 port [tcp/http] succeeded!\n"
  I0102 10:43:27.226996 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1985 @ 01/02/25 10:43:27.227
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1985 to expose endpoints map[] @ 01/02/25 10:43:27.25
  I0102 10:43:27.257802 23 service.go:4299] successfully validated that service endpoint-test2 in namespace services-1985 exposes endpoints map[]
  I0102 10:43:27.276401 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1985" for this suite. @ 01/02/25 10:43:27.28
• [9.926 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 01/02/25 10:43:27.285
  I0102 10:43:27.285509 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename daemonsets @ 01/02/25 10:43:27.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:27.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:27.3
  STEP: Creating simple DaemonSet "daemon-set" @ 01/02/25 10:43:27.383
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/02/25 10:43:27.386
  I0102 10:43:27.480452 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:43:27.480567 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:43:27.482195 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:43:27.482214 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:43:27.567472      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:28.407866 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:43:28.408207 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:43:28.420289 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:43:28.420382 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:43:28.567836      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:29.394167 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:43:29.394609 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:43:29.398129 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 10:43:29.398525 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 01/02/25 10:43:29.401
  I0102 10:43:29.497742 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:43:29.498126 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:43:29.501913 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:43:29.502255 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:43:29.568830      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:30.428911 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:43:30.430009 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:43:30.440117 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:43:30.440221 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:43:30.569543      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:31.418291 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:43:31.418996 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:43:31.422225 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:43:31.422842 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:43:31.570644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:32.433233 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:43:32.433549 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:43:32.439190 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:43:32.440278 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:43:32.572096      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:33.422689 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:43:33.422846 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:43:33.439189 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 10:43:33.439387 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 01/02/25 10:43:33.454
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4809, will wait for the garbage collector to delete the pods @ 01/02/25 10:43:33.454
  I0102 10:43:33.519058 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.829068ms
  E0102 10:43:33.574015      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:33.619171 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.111312ms
  E0102 10:43:34.574644      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:35.574686      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:36.121598 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:43:36.121652 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0102 10:43:36.122779 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"57156"},"items":null}

  I0102 10:43:36.123962 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"57156"},"items":null}

  I0102 10:43:36.128590 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4809" for this suite. @ 01/02/25 10:43:36.13
• [8.849 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 01/02/25 10:43:36.135
  I0102 10:43:36.135469 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:43:36.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:36.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:36.148
  STEP: Creating configMap with name projected-configmap-test-volume-map-1dfee392-61e1-47d7-9999-d7fff60d8649 @ 01/02/25 10:43:36.15
  STEP: Creating a pod to test consume configMaps @ 01/02/25 10:43:36.154
  E0102 10:43:36.575722      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:37.576397      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:38.576546      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:39.577125      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/02/25 10:43:40.173
  I0102 10:43:40.196065 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-projected-configmaps-c38e21e3-e009-4f8c-8d41-8c73f6566549 container agnhost-container: <nil>
  STEP: delete the pod @ 01/02/25 10:43:40.214
  I0102 10:43:40.227121 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7702" for this suite. @ 01/02/25 10:43:40.229
• [4.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 01/02/25 10:43:40.236
  I0102 10:43:40.236697 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename dns @ 01/02/25 10:43:40.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:40.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:40.251
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-924.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-924.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 01/02/25 10:43:40.252
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-924.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-924.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 01/02/25 10:43:40.252
  STEP: creating a pod to probe /etc/hosts @ 01/02/25 10:43:40.252
  STEP: submitting the pod to kubernetes @ 01/02/25 10:43:40.253
  E0102 10:43:40.580178      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:41.579839      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/02/25 10:43:42.263
  STEP: looking for the results for each expected name from probers @ 01/02/25 10:43:42.264
  I0102 10:43:42.272385 23 dns_common.go:527] DNS probes using dns-924/dns-test-cb589b08-6718-4223-a5e4-3fa21ef04ff9 succeeded

  STEP: deleting the pod @ 01/02/25 10:43:42.272
  I0102 10:43:42.284169 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-924" for this suite. @ 01/02/25 10:43:42.287
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 01/02/25 10:43:42.293
  I0102 10:43:42.294063 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:43:42.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:42.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:42.309
  STEP: creating a Service @ 01/02/25 10:43:42.312
  STEP: watching for the Service to be added @ 01/02/25 10:43:42.321
  I0102 10:43:42.326376 23 service.go:3445] Found Service test-service-bnnv4 in namespace services-9198 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31691}]
  I0102 10:43:42.326406 23 service.go:3452] Service test-service-bnnv4 created
  STEP: Getting /status @ 01/02/25 10:43:42.326
  I0102 10:43:42.328433 23 service.go:3463] Service test-service-bnnv4 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 01/02/25 10:43:42.328
  STEP: watching for the Service to be patched @ 01/02/25 10:43:42.334
  I0102 10:43:42.336294 23 service.go:3486] observed Service test-service-bnnv4 in namespace services-9198 with annotations: map[] & LoadBalancer: {[]}
  I0102 10:43:42.336395 23 service.go:3489] Found Service test-service-bnnv4 in namespace services-9198 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc004c9efe0 []}]}
  I0102 10:43:42.336409 23 service.go:3496] Service test-service-bnnv4 has service status patched
  STEP: updating the ServiceStatus @ 01/02/25 10:43:42.336
  I0102 10:43:42.346124 23 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 01/02/25 10:43:42.346
  I0102 10:43:42.347641 23 service.go:3527] Observed Service test-service-bnnv4 in namespace services-9198 with annotations: map[] & Conditions: []
  I0102 10:43:42.347703 23 service.go:3538] Observed Service test-service-bnnv4 in namespace services-9198 with annotations: map[patchedstatus:true] & Conditions: []
  I0102 10:43:42.347751 23 service.go:3534] Found Service test-service-bnnv4 in namespace services-9198 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0102 10:43:42.347773 23 service.go:3545] Service test-service-bnnv4 has service status updated
  STEP: patching the service @ 01/02/25 10:43:42.347
  STEP: watching for the Service to be patched @ 01/02/25 10:43:42.358
  I0102 10:43:42.359406 23 service.go:3568] observed Service test-service-bnnv4 in namespace services-9198 with labels: map[test-service-static:true]
  I0102 10:43:42.359495 23 service.go:3568] observed Service test-service-bnnv4 in namespace services-9198 with labels: map[test-service-static:true]
  I0102 10:43:42.359562 23 service.go:3568] observed Service test-service-bnnv4 in namespace services-9198 with labels: map[test-service-static:true]
  I0102 10:43:42.359588 23 service.go:3571] Found Service test-service-bnnv4 in namespace services-9198 with labels: map[test-service:patched test-service-static:true]
  I0102 10:43:42.359598 23 service.go:3578] Service test-service-bnnv4 patched
  STEP: deleting the service @ 01/02/25 10:43:42.359
  STEP: watching for the Service to be deleted @ 01/02/25 10:43:42.371
  I0102 10:43:42.372746 23 service.go:3602] Observed event: ADDED
  I0102 10:43:42.372770 23 service.go:3602] Observed event: MODIFIED
  I0102 10:43:42.372782 23 service.go:3602] Observed event: MODIFIED
  I0102 10:43:42.372900 23 service.go:3602] Observed event: MODIFIED
  I0102 10:43:42.373015 23 service.go:3598] Found Service test-service-bnnv4 in namespace services-9198 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0102 10:43:42.373069 23 service.go:3607] Service test-service-bnnv4 deleted
  I0102 10:43:42.373170 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9198" for this suite. @ 01/02/25 10:43:42.387
• [0.098 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 01/02/25 10:43:42.391
  I0102 10:43:42.392013 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-pred @ 01/02/25 10:43:42.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:42.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:42.409
  I0102 10:43:42.412111 23 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0102 10:43:42.494304 23 util.go:393] Waiting for terminating namespaces to be deleted...
  I0102 10:43:42.497629 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-103 before test
  I0102 10:43:42.508376 23 predicates.go:957] helm-install-one-longhorn-j7cts from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508412 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:43:42.508431 23 predicates.go:957] helm-install-one-metallb-5cplm from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508443 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:43:42.508458 23 predicates.go:957] helm-install-one-traefik-lsm6x from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508546 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:43:42.508585 23 predicates.go:957] helm-install-rke2-metrics-server-vsc4h from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508600 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:43:42.508614 23 predicates.go:957] helm-install-rke2-snapshot-controller-5vllt from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508626 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:43:42.508641 23 predicates.go:957] helm-install-rke2-snapshot-controller-crd-j9tmw from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508653 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:43:42.508755 23 predicates.go:957] helm-install-rke2-snapshot-validation-webhook-2cckd from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508769 23 predicates.go:959] 	Container helm ready: false, restart count 0
  I0102 10:43:42.508782 23 predicates.go:957] kube-proxy-oneke-ip-192-168-150-103 from kube-system started at 2025-01-02 08:53:05 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508824 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0102 10:43:42.508846 23 predicates.go:957] rke2-canal-pkbjj from kube-system started at 2025-01-02 08:53:06 +0000 UTC (2 container statuses recorded)
  I0102 10:43:42.508859 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0102 10:43:42.508871 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0102 10:43:42.508885 23 predicates.go:957] rke2-coredns-rke2-coredns-9579797d8-7ztp8 from kube-system started at 2025-01-02 08:53:32 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508897 23 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0102 10:43:42.508910 23 predicates.go:957] rke2-coredns-rke2-coredns-autoscaler-78db5d674-nfmvf from kube-system started at 2025-01-02 08:53:21 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508921 23 predicates.go:959] 	Container autoscaler ready: true, restart count 0
  I0102 10:43:42.508935 23 predicates.go:957] rke2-metrics-server-7c85d458bd-8v2m5 from kube-system started at 2025-01-02 08:53:34 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508947 23 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0102 10:43:42.508960 23 predicates.go:957] rke2-multus-rke2-whereabouts-2rllf from kube-system started at 2025-01-02 08:53:06 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.508972 23 predicates.go:959] 	Container rke2-whereabouts ready: true, restart count 1
  I0102 10:43:42.509049 23 predicates.go:957] rke2-multus-ztfpd from kube-system started at 2025-01-02 08:53:06 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509087 23 predicates.go:959] 	Container kube-rke2-multus ready: true, restart count 0
  I0102 10:43:42.509102 23 predicates.go:957] rke2-snapshot-controller-65bc6fbd57-ptsnl from kube-system started at 2025-01-02 08:53:34 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509114 23 predicates.go:959] 	Container rke2-snapshot-controller ready: true, restart count 0
  I0102 10:43:42.509127 23 predicates.go:957] rke2-snapshot-validation-webhook-859c7896df-nzq94 from kube-system started at 2025-01-02 08:53:32 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509161 23 predicates.go:959] 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  I0102 10:43:42.509177 23 predicates.go:957] csi-attacher-8464bbbfbb-kh98w from longhorn-system started at 2025-01-02 08:55:26 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509188 23 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0102 10:43:42.509201 23 predicates.go:957] csi-provisioner-d49d45b74-7sbfz from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509271 23 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0102 10:43:42.509289 23 predicates.go:957] csi-provisioner-d49d45b74-t25rj from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509301 23 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0102 10:43:42.509315 23 predicates.go:957] csi-resizer-84cb56f65d-wpcmc from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509327 23 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0102 10:43:42.509342 23 predicates.go:957] csi-snapshotter-798cbc54c9-pc88b from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509353 23 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0102 10:43:42.509366 23 predicates.go:957] engine-image-ei-51cc7b9c-x5zgv from longhorn-system started at 2025-01-02 08:53:57 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509378 23 predicates.go:959] 	Container engine-image-ei-51cc7b9c ready: true, restart count 0
  I0102 10:43:42.509391 23 predicates.go:957] instance-manager-9a67f2b20f30eb18f131e1fe823ac093 from longhorn-system started at 2025-01-02 08:53:57 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509404 23 predicates.go:959] 	Container instance-manager ready: true, restart count 0
  I0102 10:43:42.509417 23 predicates.go:957] longhorn-csi-plugin-9z6gl from longhorn-system started at 2025-01-02 08:55:27 +0000 UTC (3 container statuses recorded)
  I0102 10:43:42.509487 23 predicates.go:959] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0102 10:43:42.509502 23 predicates.go:959] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0102 10:43:42.509514 23 predicates.go:959] 	Container node-driver-registrar ready: true, restart count 0
  I0102 10:43:42.509528 23 predicates.go:957] longhorn-manager-7n279 from longhorn-system started at 2025-01-02 08:53:36 +0000 UTC (2 container statuses recorded)
  I0102 10:43:42.509560 23 predicates.go:959] 	Container longhorn-manager ready: true, restart count 0
  I0102 10:43:42.509573 23 predicates.go:959] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0102 10:43:42.509588 23 predicates.go:957] one-metallb-controller-6f47d95d95-dc4b8 from metallb-system started at 2025-01-02 08:53:36 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509600 23 predicates.go:959] 	Container controller ready: true, restart count 0
  I0102 10:43:42.509613 23 predicates.go:957] one-metallb-speaker-fx5tn from metallb-system started at 2025-01-02 08:53:36 +0000 UTC (4 container statuses recorded)
  I0102 10:43:42.509681 23 predicates.go:959] 	Container frr ready: true, restart count 0
  I0102 10:43:42.509696 23 predicates.go:959] 	Container frr-metrics ready: true, restart count 0
  I0102 10:43:42.509709 23 predicates.go:959] 	Container reloader ready: true, restart count 0
  I0102 10:43:42.509720 23 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0102 10:43:42.509734 23 predicates.go:957] sonobuoy from sonobuoy started at 2025-01-02 09:09:14 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509770 23 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0102 10:43:42.509785 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-rfqcx from sonobuoy started at 2025-01-02 09:09:17 +0000 UTC (2 container statuses recorded)
  I0102 10:43:42.509797 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0102 10:43:42.509810 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0102 10:43:42.509911 23 predicates.go:957] one-traefik-7d55ff8d54-rpxbr from traefik-system started at 2025-01-02 08:53:35 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.509949 23 predicates.go:959] 	Container one-traefik ready: true, restart count 0
  I0102 10:43:42.509963 23 predicates.go:119] 
  Logging pods the apiserver thinks is on node oneke-ip-192-168-150-105 before test
  I0102 10:43:42.514481 23 predicates.go:957] kube-proxy-oneke-ip-192-168-150-105 from kube-system started at 2025-01-02 09:02:35 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.514507 23 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0102 10:43:42.514522 23 predicates.go:957] rke2-canal-hcz42 from kube-system started at 2025-01-02 09:02:36 +0000 UTC (2 container statuses recorded)
  I0102 10:43:42.514534 23 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0102 10:43:42.514545 23 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0102 10:43:42.514621 23 predicates.go:957] rke2-multus-rke2-whereabouts-7lh79 from kube-system started at 2025-01-02 10:12:33 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.514634 23 predicates.go:959] 	Container rke2-whereabouts ready: true, restart count 0
  I0102 10:43:42.514648 23 predicates.go:957] rke2-multus-zt6l7 from kube-system started at 2025-01-02 09:02:36 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.514658 23 predicates.go:959] 	Container kube-rke2-multus ready: true, restart count 0
  I0102 10:43:42.514670 23 predicates.go:957] engine-image-ei-51cc7b9c-d9xxn from longhorn-system started at 2025-01-02 10:12:33 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.514702 23 predicates.go:959] 	Container engine-image-ei-51cc7b9c ready: true, restart count 0
  I0102 10:43:42.514753 23 predicates.go:957] instance-manager-34052943e1fa230ecb64d623e9fcdb0c from longhorn-system started at 2025-01-02 10:12:36 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.514784 23 predicates.go:959] 	Container instance-manager ready: true, restart count 0
  I0102 10:43:42.514797 23 predicates.go:957] longhorn-csi-plugin-nm9lb from longhorn-system started at 2025-01-02 10:12:29 +0000 UTC (3 container statuses recorded)
  I0102 10:43:42.514807 23 predicates.go:959] 	Container longhorn-csi-plugin ready: true, restart count 0
  I0102 10:43:42.514818 23 predicates.go:959] 	Container longhorn-liveness-probe ready: true, restart count 0
  I0102 10:43:42.514828 23 predicates.go:959] 	Container node-driver-registrar ready: true, restart count 0
  I0102 10:43:42.514901 23 predicates.go:957] longhorn-manager-v4pfn from longhorn-system started at 2025-01-02 10:12:33 +0000 UTC (2 container statuses recorded)
  I0102 10:43:42.514914 23 predicates.go:959] 	Container longhorn-manager ready: true, restart count 0
  I0102 10:43:42.514958 23 predicates.go:959] 	Container pre-pull-share-manager-image ready: true, restart count 0
  I0102 10:43:42.514973 23 predicates.go:957] one-metallb-speaker-r96zp from metallb-system started at 2025-01-02 10:12:29 +0000 UTC (4 container statuses recorded)
  I0102 10:43:42.514983 23 predicates.go:959] 	Container frr ready: true, restart count 0
  I0102 10:43:42.514996 23 predicates.go:959] 	Container frr-metrics ready: true, restart count 0
  I0102 10:43:42.515006 23 predicates.go:959] 	Container reloader ready: true, restart count 0
  I0102 10:43:42.515037 23 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0102 10:43:42.515049 23 predicates.go:957] sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-j9zwr from sonobuoy started at 2025-01-02 09:09:17 +0000 UTC (2 container statuses recorded)
  I0102 10:43:42.515059 23 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0102 10:43:42.515069 23 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0102 10:43:42.515081 23 predicates.go:957] one-traefik-7d55ff8d54-prlpp from traefik-system started at 2025-01-02 10:12:38 +0000 UTC (1 container statuses recorded)
  I0102 10:43:42.515121 23 predicates.go:959] 	Container one-traefik ready: true, restart count 0
  STEP: verifying the node has the label node oneke-ip-192-168-150-103 @ 01/02/25 10:43:42.539
  STEP: verifying the node has the label node oneke-ip-192-168-150-105 @ 01/02/25 10:43:42.546
  I0102 10:43:42.572333 23 predicates.go:372] Pod kube-proxy-oneke-ip-192-168-150-103 requesting resource cpu=250m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572360 23 predicates.go:372] Pod kube-proxy-oneke-ip-192-168-150-105 requesting resource cpu=250m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572385 23 predicates.go:372] Pod rke2-canal-hcz42 requesting resource cpu=250m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572437 23 predicates.go:372] Pod rke2-canal-pkbjj requesting resource cpu=250m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572448 23 predicates.go:372] Pod rke2-coredns-rke2-coredns-9579797d8-7ztp8 requesting resource cpu=100m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572456 23 predicates.go:372] Pod rke2-coredns-rke2-coredns-autoscaler-78db5d674-nfmvf requesting resource cpu=25m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572463 23 predicates.go:372] Pod rke2-metrics-server-7c85d458bd-8v2m5 requesting resource cpu=100m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572486 23 predicates.go:372] Pod rke2-multus-rke2-whereabouts-2rllf requesting resource cpu=100m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572496 23 predicates.go:372] Pod rke2-multus-rke2-whereabouts-7lh79 requesting resource cpu=100m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572505 23 predicates.go:372] Pod rke2-multus-zt6l7 requesting resource cpu=250m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572512 23 predicates.go:372] Pod rke2-multus-ztfpd requesting resource cpu=250m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572519 23 predicates.go:372] Pod rke2-snapshot-controller-65bc6fbd57-ptsnl requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572527 23 predicates.go:372] Pod rke2-snapshot-validation-webhook-859c7896df-nzq94 requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572534 23 predicates.go:372] Pod csi-attacher-8464bbbfbb-kh98w requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572541 23 predicates.go:372] Pod csi-provisioner-d49d45b74-7sbfz requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572548 23 predicates.go:372] Pod csi-provisioner-d49d45b74-t25rj requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572555 23 predicates.go:372] Pod csi-resizer-84cb56f65d-wpcmc requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572562 23 predicates.go:372] Pod csi-snapshotter-798cbc54c9-pc88b requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572569 23 predicates.go:372] Pod engine-image-ei-51cc7b9c-d9xxn requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572597 23 predicates.go:372] Pod engine-image-ei-51cc7b9c-x5zgv requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572606 23 predicates.go:372] Pod instance-manager-34052943e1fa230ecb64d623e9fcdb0c requesting resource cpu=240m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572614 23 predicates.go:372] Pod instance-manager-9a67f2b20f30eb18f131e1fe823ac093 requesting resource cpu=240m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572621 23 predicates.go:372] Pod longhorn-csi-plugin-9z6gl requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572628 23 predicates.go:372] Pod longhorn-csi-plugin-nm9lb requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572635 23 predicates.go:372] Pod longhorn-manager-7n279 requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572642 23 predicates.go:372] Pod longhorn-manager-v4pfn requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572649 23 predicates.go:372] Pod one-metallb-controller-6f47d95d95-dc4b8 requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572656 23 predicates.go:372] Pod one-metallb-speaker-fx5tn requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572664 23 predicates.go:372] Pod one-metallb-speaker-r96zp requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572671 23 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572677 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-j9zwr requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572684 23 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-88ca244d4af44be9-rfqcx requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.572691 23 predicates.go:372] Pod one-traefik-7d55ff8d54-prlpp requesting resource cpu=0m on Node oneke-ip-192-168-150-105
  I0102 10:43:42.572698 23 predicates.go:372] Pod one-traefik-7d55ff8d54-rpxbr requesting resource cpu=0m on Node oneke-ip-192-168-150-103
  STEP: Starting Pods to consume most of the cluster CPU. @ 01/02/25 10:43:42.572
  I0102 10:43:42.572724 23 predicates.go:382] Creating a pod which consumes cpu=479m on Node oneke-ip-192-168-150-103
  I0102 10:43:42.578935 23 predicates.go:382] Creating a pod which consumes cpu=637m on Node oneke-ip-192-168-150-105
  E0102 10:43:42.579701      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:43.579896      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:44.580125      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 01/02/25 10:43:44.609
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0529f970-49ce-4106-9246-c299cc0b2360.1816da33d7aa846f], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2250/filler-pod-0529f970-49ce-4106-9246-c299cc0b2360 to oneke-ip-192-168-150-105] @ 01/02/25 10:43:44.616
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0529f970-49ce-4106-9246-c299cc0b2360.1816da33f0f3b82b], Reason = [AddedInterface], Message = [Add eth0 [10.42.3.69/32] from k8s-pod-network] @ 01/02/25 10:43:44.617
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0529f970-49ce-4106-9246-c299cc0b2360.1816da33f837b091], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/02/25 10:43:44.617
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0529f970-49ce-4106-9246-c299cc0b2360.1816da33f8d263b4], Reason = [Created], Message = [Created container filler-pod-0529f970-49ce-4106-9246-c299cc0b2360] @ 01/02/25 10:43:44.617
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0529f970-49ce-4106-9246-c299cc0b2360.1816da33fe2406cf], Reason = [Started], Message = [Started container filler-pod-0529f970-49ce-4106-9246-c299cc0b2360] @ 01/02/25 10:43:44.617
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ac7b672e-cf96-42af-ab03-fb83556063e7.1816da33d70fc74e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2250/filler-pod-ac7b672e-cf96-42af-ab03-fb83556063e7 to oneke-ip-192-168-150-103] @ 01/02/25 10:43:44.618
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ac7b672e-cf96-42af-ab03-fb83556063e7.1816da33f1d97864], Reason = [AddedInterface], Message = [Add eth0 [10.42.1.123/32] from k8s-pod-network] @ 01/02/25 10:43:44.618
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ac7b672e-cf96-42af-ab03-fb83556063e7.1816da33fdda6783], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 01/02/25 10:43:44.618
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ac7b672e-cf96-42af-ab03-fb83556063e7.1816da33fe9bdee9], Reason = [Created], Message = [Created container filler-pod-ac7b672e-cf96-42af-ab03-fb83556063e7] @ 01/02/25 10:43:44.618
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ac7b672e-cf96-42af-ab03-fb83556063e7.1816da34047a78f0], Reason = [Started], Message = [Started container filler-pod-ac7b672e-cf96-42af-ab03-fb83556063e7] @ 01/02/25 10:43:44.618
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1816da3450f91d76], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {CriticalAddonsOnly: true}, 1 node(s) had untolerated taint {node.longhorn.io/create-default-disk: true}, 2 Insufficient cpu. preemption: 0/4 nodes are available: 2 No preemption victims found for incoming pod, 2 Preemption is not helpful for scheduling.] @ 01/02/25 10:43:44.64
  E0102 10:43:45.580901      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label node off the node oneke-ip-192-168-150-103 @ 01/02/25 10:43:45.635
  STEP: verifying the node doesn't have the label node @ 01/02/25 10:43:45.653
  STEP: removing the label node off the node oneke-ip-192-168-150-105 @ 01/02/25 10:43:45.656
  STEP: verifying the node doesn't have the label node @ 01/02/25 10:43:45.67
  I0102 10:43:45.672255 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2250" for this suite. @ 01/02/25 10:43:45.675
• [3.287 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 01/02/25 10:43:45.679
  I0102 10:43:45.679178 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename dns @ 01/02/25 10:43:45.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:43:45.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:43:45.692
  STEP: Creating a test headless service @ 01/02/25 10:43:45.694
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7834.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7834.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7834.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7834.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7834.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7834.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7834.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7834.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7834.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 189.112.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.112.189_udp@PTR;check="$$(dig +tcp +noall +answer +search 189.112.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.112.189_tcp@PTR;sleep 1; done
   @ 01/02/25 10:43:45.71
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7834.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7834.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7834.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7834.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7834.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7834.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7834.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7834.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7834.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7834.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 189.112.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.112.189_udp@PTR;check="$$(dig +tcp +noall +answer +search 189.112.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.112.189_tcp@PTR;sleep 1; done
   @ 01/02/25 10:43:45.71
  STEP: creating a pod to probe DNS @ 01/02/25 10:43:45.71
  STEP: submitting the pod to kubernetes @ 01/02/25 10:43:45.71
  E0102 10:43:46.581028      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:47.581153      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 01/02/25 10:43:47.733
  STEP: looking for the results for each expected name from probers @ 01/02/25 10:43:47.735
  I0102 10:43:47.740783 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:47.743987 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:47.747820 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:47.750610 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:47.788057 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:47.807919 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:47.827874 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:47.843879 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:47.905625 23 dns_common.go:489] Lookups using dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e failed for: [wheezy_udp@dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_udp@dns-test-service.dns-7834.svc.cluster.local jessie_tcp@dns-test-service.dns-7834.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local]

  I0102 10:43:47.908897 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:43:47.911819 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:43:47.914627 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E0102 10:43:48.581280      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:49.581732      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:50.582285      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:51.582809      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:52.583539      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:52.739118 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:52.741422 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:52.743385 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:52.745515 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:52.755322 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:52.757588 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:52.759630 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:52.761341 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:52.768278 23 dns_common.go:489] Lookups using dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e failed for: [wheezy_udp@dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_udp@dns-test-service.dns-7834.svc.cluster.local jessie_tcp@dns-test-service.dns-7834.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local]

  I0102 10:43:52.771712 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:43:52.774272 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:43:52.776698 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E0102 10:43:53.583768      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:54.583944      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:55.585193      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:56.585423      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:57.586510      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:43:57.745308 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:57.756209 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:57.765363 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:57.771804 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:57.788426 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:57.790963 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:57.793007 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:57.795096 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:43:57.801929 23 dns_common.go:489] Lookups using dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e failed for: [wheezy_udp@dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_udp@dns-test-service.dns-7834.svc.cluster.local jessie_tcp@dns-test-service.dns-7834.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local]

  I0102 10:43:57.805483 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:43:57.808196 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:43:57.810730 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E0102 10:43:58.587066      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:43:59.587073      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:00.587147      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:01.587276      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:02.587396      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:02.738672 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:02.742222 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:02.752816 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:02.755228 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:02.764613 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:02.766983 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:02.769301 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:02.771462 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:02.779030 23 dns_common.go:489] Lookups using dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e failed for: [wheezy_udp@dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_udp@dns-test-service.dns-7834.svc.cluster.local jessie_tcp@dns-test-service.dns-7834.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local]

  I0102 10:44:02.783328 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:44:02.787351 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:44:02.791167 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E0102 10:44:03.590460      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:04.590952      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:05.591576      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:06.598674      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:07.599400      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:07.738332 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:07.740534 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:07.742595 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:07.744385 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:07.753346 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:07.755262 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:07.756951 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:07.758630 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:07.764903 23 dns_common.go:489] Lookups using dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e failed for: [wheezy_udp@dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_udp@dns-test-service.dns-7834.svc.cluster.local jessie_tcp@dns-test-service.dns-7834.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local]

  I0102 10:44:07.768046 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:44:07.770922 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:44:07.773727 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E0102 10:44:08.600154      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:09.600620      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:10.601230      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:11.602426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:12.602712      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:12.739643 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:12.742447 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:12.744536 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:12.747135 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:12.761631 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:12.763935 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:12.765791 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:12.767563 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local from pod dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e: the server could not find the requested resource (get pods dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e)
  I0102 10:44:12.774993 23 dns_common.go:489] Lookups using dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e failed for: [wheezy_udp@dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@dns-test-service.dns-7834.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_udp@dns-test-service.dns-7834.svc.cluster.local jessie_tcp@dns-test-service.dns-7834.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7834.svc.cluster.local]

  I0102 10:44:12.778818 23 dns_common.go:495] Pod client logs for webserver: 
  I0102 10:44:12.781999 23 dns_common.go:495] Pod client logs for querier: 
  I0102 10:44:12.785083 23 dns_common.go:495] Pod client logs for jessie-querier: 
  E0102 10:44:13.603049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:14.603202      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:15.603343      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:16.603977      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:17.603865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:17.773325 23 dns_common.go:527] DNS probes using dns-7834/dns-test-e66447b4-e036-4a4a-8acf-32c842a8110e succeeded

  STEP: deleting the pod @ 01/02/25 10:44:17.773
  STEP: deleting the test service @ 01/02/25 10:44:17.786
  STEP: deleting the test headless service @ 01/02/25 10:44:17.81
  I0102 10:44:17.819893 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7834" for this suite. @ 01/02/25 10:44:17.824
• [32.154 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 01/02/25 10:44:17.834
  I0102 10:44:17.834697 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename init-container @ 01/02/25 10:44:17.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:17.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:17.846
  STEP: creating the pod @ 01/02/25 10:44:17.848
  I0102 10:44:17.848291 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0102 10:44:18.604021      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:19.604110      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:20.604256      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:21.022926 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3833" for this suite. @ 01/02/25 10:44:21.025
• [3.194 seconds]
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 01/02/25 10:44:21.028
  I0102 10:44:21.028634 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename kubectl-logs @ 01/02/25 10:44:21.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:21.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:21.039
  STEP: creating a pod @ 01/02/25 10:44:21.041
  I0102 10:44:21.041328 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-logs-3342 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0102 10:44:21.102001 23 builder.go:146] stderr: ""
  I0102 10:44:21.102041 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 01/02/25 10:44:21.102
  I0102 10:44:21.102347 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0102 10:44:21.604340      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:22.604443      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:23.107122 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 01/02/25 10:44:23.107
  I0102 10:44:23.107305 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-logs-3342 logs logs-generator logs-generator'
  I0102 10:44:23.187613 23 builder.go:146] stderr: ""
  I0102 10:44:23.187772 23 builder.go:147] stdout: "I0102 10:44:21.741864       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/shw 395\nI0102 10:44:21.941997       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/7lj 347\nI0102 10:44:22.142599       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/94b 359\nI0102 10:44:22.342041       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/jn6w 404\nI0102 10:44:22.542388       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/p9jw 484\nI0102 10:44:22.742518       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/q4d 517\nI0102 10:44:22.942893       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/vjl 339\nI0102 10:44:23.142478       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/v96h 332\n"
  STEP: limiting log lines @ 01/02/25 10:44:23.187
  I0102 10:44:23.187880 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-logs-3342 logs logs-generator logs-generator --tail=1'
  I0102 10:44:23.252972 23 builder.go:146] stderr: ""
  I0102 10:44:23.253018 23 builder.go:147] stdout: "I0102 10:44:23.142478       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/v96h 332\n"
  I0102 10:44:23.253043 23 logs.go:180] got output "I0102 10:44:23.142478       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/v96h 332\n"
  STEP: limiting log bytes @ 01/02/25 10:44:23.253
  I0102 10:44:23.253257 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-logs-3342 logs logs-generator logs-generator --limit-bytes=1'
  I0102 10:44:23.302070 23 builder.go:146] stderr: ""
  I0102 10:44:23.302102 23 builder.go:147] stdout: "I"
  I0102 10:44:23.302112 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 01/02/25 10:44:23.302
  I0102 10:44:23.302245 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-logs-3342 logs logs-generator logs-generator --tail=1 --timestamps'
  I0102 10:44:23.355711 23 builder.go:146] stderr: ""
  I0102 10:44:23.355745 23 builder.go:147] stdout: "2025-01-02T10:44:23.149982871Z I0102 10:44:23.142478       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/v96h 332\n"
  I0102 10:44:23.355757 23 logs.go:192] got output "2025-01-02T10:44:23.149982871Z I0102 10:44:23.142478       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/v96h 332\n"
  STEP: restricting to a time range @ 01/02/25 10:44:23.355
  E0102 10:44:23.605162      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:24.605878      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:25.606022      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:25.857083 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-logs-3342 logs logs-generator logs-generator --since=1s'
  I0102 10:44:25.937163 23 builder.go:146] stderr: ""
  I0102 10:44:25.937212 23 builder.go:147] stdout: "I0102 10:44:24.947275       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/gk8 406\nI0102 10:44:25.142968       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/8l7 283\nI0102 10:44:25.342521       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/89zw 385\nI0102 10:44:25.543416       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/ksnm 545\nI0102 10:44:25.742823       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/m5pz 458\n"
  I0102 10:44:25.937377 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-logs-3342 logs logs-generator logs-generator --since=24h'
  I0102 10:44:25.988407 23 builder.go:146] stderr: ""
  I0102 10:44:25.988469 23 builder.go:147] stdout: "I0102 10:44:21.741864       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/shw 395\nI0102 10:44:21.941997       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/7lj 347\nI0102 10:44:22.142599       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/94b 359\nI0102 10:44:22.342041       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/jn6w 404\nI0102 10:44:22.542388       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/p9jw 484\nI0102 10:44:22.742518       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/q4d 517\nI0102 10:44:22.942893       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/vjl 339\nI0102 10:44:23.142478       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/v96h 332\nI0102 10:44:23.341880       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/mpgq 213\nI0102 10:44:23.542361       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/wc8 423\nI0102 10:44:23.743055       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/pvh 568\nI0102 10:44:23.942862       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/kg9 461\nI0102 10:44:24.142499       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/msf 333\nI0102 10:44:24.342098       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/wnq 242\nI0102 10:44:24.542844       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/nbm 598\nI0102 10:44:24.742779       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/jzs 362\nI0102 10:44:24.947275       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/gk8 406\nI0102 10:44:25.142968       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/8l7 283\nI0102 10:44:25.342521       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/89zw 385\nI0102 10:44:25.543416       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/ksnm 545\nI0102 10:44:25.742823       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/m5pz 458\nI0102 10:44:25.942219       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/4vn9 520\n"
  I0102 10:44:25.988546 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-65258338 --namespace=kubectl-logs-3342 delete pod logs-generator'
  E0102 10:44:26.606461      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:27.229857 23 builder.go:146] stderr: ""
  I0102 10:44:27.229908 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0102 10:44:27.230037 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3342" for this suite. @ 01/02/25 10:44:27.232
• [6.208 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 01/02/25 10:44:27.237
  I0102 10:44:27.237826 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 10:44:27.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:27.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:27.251
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 01/02/25 10:44:27.253
  E0102 10:44:27.611987      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:28.612534      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:29.613555      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:30.613558      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/02/25 10:44:31.266
  I0102 10:44:31.269315 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-09ca319d-a12c-4827-8c02-b3c2f8088f26 container test-container: <nil>
  STEP: delete the pod @ 01/02/25 10:44:31.274
  I0102 10:44:31.291457 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1478" for this suite. @ 01/02/25 10:44:31.295
• [4.062 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 01/02/25 10:44:31.302
  I0102 10:44:31.302866 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename discovery @ 01/02/25 10:44:31.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:31.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:31.321
  STEP: Setting up server cert @ 01/02/25 10:44:31.324
  E0102 10:44:31.614535      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 01/02/25 10:44:31.698
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 01/02/25 10:44:31.699
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 01/02/25 10:44:31.701
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 01/02/25 10:44:31.702
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 01/02/25 10:44:31.704
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 01/02/25 10:44:31.706
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 01/02/25 10:44:31.708
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 01/02/25 10:44:31.71
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 01/02/25 10:44:31.711
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 01/02/25 10:44:31.712
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 01/02/25 10:44:31.713
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 01/02/25 10:44:31.715
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 01/02/25 10:44:31.716
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 01/02/25 10:44:31.716
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 01/02/25 10:44:31.717
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 01/02/25 10:44:31.722
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 01/02/25 10:44:31.723
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 01/02/25 10:44:31.724
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 01/02/25 10:44:31.725
  I0102 10:44:31.730247 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3467" for this suite. @ 01/02/25 10:44:31.739
• [0.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 01/02/25 10:44:31.745
  I0102 10:44:31.745371 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename disruption @ 01/02/25 10:44:31.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:31.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:31.759
  STEP: Creating a pdb that targets all three pods in a test replica set @ 01/02/25 10:44:31.76
  STEP: Waiting for the pdb to be processed @ 01/02/25 10:44:31.763
  E0102 10:44:32.614760      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:33.615087      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 01/02/25 10:44:33.771
  STEP: Waiting for all pods to be running @ 01/02/25 10:44:33.772
  I0102 10:44:33.784137 23 disruption.go:680] pods: 1 < 3
  E0102 10:44:34.615508      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:35.617142      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 01/02/25 10:44:35.777
  STEP: Updating the pdb to allow a pod to be evicted @ 01/02/25 10:44:35.785
  STEP: Waiting for the pdb to be processed @ 01/02/25 10:44:35.79
  E0102 10:44:36.617192      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:37.617665      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/02/25 10:44:37.793
  STEP: Waiting for all pods to be running @ 01/02/25 10:44:37.794
  STEP: Waiting for the pdb to observed all healthy pods @ 01/02/25 10:44:37.797
  STEP: Patching the pdb to disallow a pod to be evicted @ 01/02/25 10:44:37.823
  STEP: Waiting for the pdb to be processed @ 01/02/25 10:44:37.852
  E0102 10:44:38.618274      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:39.618713      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 01/02/25 10:44:39.855
  STEP: locating a running pod @ 01/02/25 10:44:39.857
  STEP: Deleting the pdb to allow a pod to be evicted @ 01/02/25 10:44:39.86
  STEP: Waiting for the pdb to be deleted @ 01/02/25 10:44:39.863
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 01/02/25 10:44:39.865
  STEP: Waiting for all pods to be running @ 01/02/25 10:44:39.865
  I0102 10:44:39.971763 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3529" for this suite. @ 01/02/25 10:44:39.992
• [8.252 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 01/02/25 10:44:39.997
  I0102 10:44:39.997499 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename aggregateddiscovery @ 01/02/25 10:44:39.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:40.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:40.009
  I0102 10:44:40.010143 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  E0102 10:44:40.620026      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:41.620347      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:42.621262      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:43.108371 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1104" for this suite. @ 01/02/25 10:44:43.126
• [3.138 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 01/02/25 10:44:43.138
  I0102 10:44:43.138746 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 10:44:43.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:43.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:43.155
  STEP: Setting up server cert @ 01/02/25 10:44:43.251
  E0102 10:44:43.621175      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 10:44:43.672
  STEP: Deploying the webhook pod @ 01/02/25 10:44:43.676
  STEP: Wait for the deployment to be ready @ 01/02/25 10:44:43.686
  I0102 10:44:43.697310 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0102 10:44:44.622173      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:45.621873      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/02/25 10:44:45.73
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 10:44:45.744
  E0102 10:44:46.622866      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:46.745293 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 01/02/25 10:44:46.749
  STEP: create the configmap with a random name @ 01/02/25 10:44:46.766
  STEP: verify the configmap is mutated @ 01/02/25 10:44:46.778
  STEP: create the configmap with 'skip-me' name @ 01/02/25 10:44:46.778
  I0102 10:44:46.822043 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8758" for this suite. @ 01/02/25 10:44:46.828
  STEP: Destroying namespace "webhook-markers-1640" for this suite. @ 01/02/25 10:44:46.831
• [3.697 seconds]
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 01/02/25 10:44:46.836
  I0102 10:44:46.836237 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename runtimeclass @ 01/02/25 10:44:46.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:46.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:46.854
  STEP: getting /apis @ 01/02/25 10:44:46.856
  STEP: getting /apis/node.k8s.io @ 01/02/25 10:44:46.859
  STEP: getting /apis/node.k8s.io/v1 @ 01/02/25 10:44:46.86
  STEP: creating @ 01/02/25 10:44:46.86
  STEP: watching @ 01/02/25 10:44:46.868
  I0102 10:44:46.868336 23 runtimeclass.go:275] starting watch
  STEP: getting @ 01/02/25 10:44:46.871
  STEP: listing @ 01/02/25 10:44:46.872
  STEP: patching @ 01/02/25 10:44:46.873
  STEP: updating @ 01/02/25 10:44:46.876
  I0102 10:44:46.878561 23 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 01/02/25 10:44:46.878
  STEP: deleting a collection @ 01/02/25 10:44:46.882
  I0102 10:44:46.887632 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1506" for this suite. @ 01/02/25 10:44:46.926
• [0.097 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 01/02/25 10:44:46.933
  I0102 10:44:46.933826 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename webhook @ 01/02/25 10:44:46.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:46.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:46.95
  STEP: Setting up server cert @ 01/02/25 10:44:47.049
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 01/02/25 10:44:47.437
  STEP: Deploying the webhook pod @ 01/02/25 10:44:47.44
  STEP: Wait for the deployment to be ready @ 01/02/25 10:44:47.451
  I0102 10:44:47.462231 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0102 10:44:47.623517      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:48.623163      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 01/02/25 10:44:49.468
  STEP: Verifying the service has paired with the endpoint @ 01/02/25 10:44:49.48
  E0102 10:44:49.624598      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:50.480966 23 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 01/02/25 10:44:50.484
  STEP: create a namespace for the webhook @ 01/02/25 10:44:50.5
  STEP: create a configmap should be unconditionally rejected by the webhook @ 01/02/25 10:44:50.512
  I0102 10:44:50.569766 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5831" for this suite. @ 01/02/25 10:44:50.576
  STEP: Destroying namespace "webhook-markers-971" for this suite. @ 01/02/25 10:44:50.581
  STEP: Destroying namespace "fail-closed-namespace-3655" for this suite. @ 01/02/25 10:44:50.585
• [3.656 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 01/02/25 10:44:50.59
  I0102 10:44:50.590375 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:44:50.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:50.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:50.614
  STEP: fetching services @ 01/02/25 10:44:50.617
  I0102 10:44:50.619913 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0102 10:44:50.624474      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-6487" for this suite. @ 01/02/25 10:44:50.674
• [0.088 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 01/02/25 10:44:50.678
  I0102 10:44:50.678689 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename watch @ 01/02/25 10:44:50.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:50.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:50.737
  STEP: getting a starting resourceVersion @ 01/02/25 10:44:50.74
  STEP: starting a background goroutine to produce watch events @ 01/02/25 10:44:50.741
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 01/02/25 10:44:50.741
  E0102 10:44:51.625314      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:52.626313      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:44:53.493786 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5954" for this suite. @ 01/02/25 10:44:53.538
• [2.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 01/02/25 10:44:53.587
  I0102 10:44:53.587268 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename gc @ 01/02/25 10:44:53.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:44:53.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:44:53.6
  E0102 10:44:53.626776      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the rc @ 01/02/25 10:44:53.638
  W0102 10:44:53.640749      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0102 10:44:54.627192      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:55.628848      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:56.628055      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:57.628060      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:58.629239      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:44:59.629372      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 01/02/25 10:44:59.642
  STEP: wait for the rc to be deleted @ 01/02/25 10:44:59.659
  E0102 10:45:00.629499      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:01.630493      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:02.630495      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:03.631206      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:04.631336      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 01/02/25 10:45:04.666
  E0102 10:45:05.631918      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:06.631935      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:07.632049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:08.632174      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:09.632935      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:10.633944      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:11.634200      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:12.634279      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:13.634448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:14.634817      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:15.636065      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:16.636057      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:17.636461      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:18.636537      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:19.637498      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:20.637758      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:21.637708      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:22.638545      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:23.638192      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:24.638717      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:25.638832      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:26.639495      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:27.640066      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:28.640088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:29.640427      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:30.640649      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:31.640910      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:32.641038      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:33.641533      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:34.641557      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 01/02/25 10:45:34.682
  I0102 10:45:34.748526 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0102 10:45:34.752170 23 delete.go:95] Deleting pod "simpletest.rc-2clhj" in namespace "gc-4381"
  I0102 10:45:34.763255 23 delete.go:95] Deleting pod "simpletest.rc-2h8zf" in namespace "gc-4381"
  I0102 10:45:34.773090 23 delete.go:95] Deleting pod "simpletest.rc-2q8fd" in namespace "gc-4381"
  I0102 10:45:34.792733 23 delete.go:95] Deleting pod "simpletest.rc-47ngl" in namespace "gc-4381"
  I0102 10:45:34.804380 23 delete.go:95] Deleting pod "simpletest.rc-49cgj" in namespace "gc-4381"
  I0102 10:45:34.818399 23 delete.go:95] Deleting pod "simpletest.rc-54zg5" in namespace "gc-4381"
  I0102 10:45:34.831096 23 delete.go:95] Deleting pod "simpletest.rc-5jhck" in namespace "gc-4381"
  I0102 10:45:34.840022 23 delete.go:95] Deleting pod "simpletest.rc-5jhdg" in namespace "gc-4381"
  I0102 10:45:34.859298 23 delete.go:95] Deleting pod "simpletest.rc-5v4sn" in namespace "gc-4381"
  I0102 10:45:34.872818 23 delete.go:95] Deleting pod "simpletest.rc-69qm7" in namespace "gc-4381"
  I0102 10:45:34.885748 23 delete.go:95] Deleting pod "simpletest.rc-6xp4r" in namespace "gc-4381"
  I0102 10:45:34.896255 23 delete.go:95] Deleting pod "simpletest.rc-6ztvc" in namespace "gc-4381"
  I0102 10:45:34.904954 23 delete.go:95] Deleting pod "simpletest.rc-77689" in namespace "gc-4381"
  I0102 10:45:34.915543 23 delete.go:95] Deleting pod "simpletest.rc-78bwj" in namespace "gc-4381"
  I0102 10:45:34.925682 23 delete.go:95] Deleting pod "simpletest.rc-7lrr8" in namespace "gc-4381"
  I0102 10:45:34.939710 23 delete.go:95] Deleting pod "simpletest.rc-7n72k" in namespace "gc-4381"
  I0102 10:45:34.958495 23 delete.go:95] Deleting pod "simpletest.rc-7qqzs" in namespace "gc-4381"
  I0102 10:45:34.967971 23 delete.go:95] Deleting pod "simpletest.rc-92rqs" in namespace "gc-4381"
  I0102 10:45:34.976388 23 delete.go:95] Deleting pod "simpletest.rc-92xxz" in namespace "gc-4381"
  I0102 10:45:34.987792 23 delete.go:95] Deleting pod "simpletest.rc-948vt" in namespace "gc-4381"
  I0102 10:45:34.998048 23 delete.go:95] Deleting pod "simpletest.rc-95ndt" in namespace "gc-4381"
  I0102 10:45:35.008590 23 delete.go:95] Deleting pod "simpletest.rc-9d99l" in namespace "gc-4381"
  I0102 10:45:35.018039 23 delete.go:95] Deleting pod "simpletest.rc-9pvb4" in namespace "gc-4381"
  I0102 10:45:35.031397 23 delete.go:95] Deleting pod "simpletest.rc-bfnnv" in namespace "gc-4381"
  I0102 10:45:35.040187 23 delete.go:95] Deleting pod "simpletest.rc-c5c92" in namespace "gc-4381"
  I0102 10:45:35.052722 23 delete.go:95] Deleting pod "simpletest.rc-c6fr2" in namespace "gc-4381"
  I0102 10:45:35.062105 23 delete.go:95] Deleting pod "simpletest.rc-cmhmk" in namespace "gc-4381"
  I0102 10:45:35.073711 23 delete.go:95] Deleting pod "simpletest.rc-cxnlv" in namespace "gc-4381"
  I0102 10:45:35.086195 23 delete.go:95] Deleting pod "simpletest.rc-czkxl" in namespace "gc-4381"
  I0102 10:45:35.095297 23 delete.go:95] Deleting pod "simpletest.rc-d6qrt" in namespace "gc-4381"
  I0102 10:45:35.102188 23 delete.go:95] Deleting pod "simpletest.rc-ddmth" in namespace "gc-4381"
  I0102 10:45:35.110967 23 delete.go:95] Deleting pod "simpletest.rc-djcs4" in namespace "gc-4381"
  I0102 10:45:35.120474 23 delete.go:95] Deleting pod "simpletest.rc-dl4kj" in namespace "gc-4381"
  I0102 10:45:35.130642 23 delete.go:95] Deleting pod "simpletest.rc-f6xtf" in namespace "gc-4381"
  I0102 10:45:35.138698 23 delete.go:95] Deleting pod "simpletest.rc-fmrmw" in namespace "gc-4381"
  I0102 10:45:35.153847 23 delete.go:95] Deleting pod "simpletest.rc-fs2nf" in namespace "gc-4381"
  I0102 10:45:35.162353 23 delete.go:95] Deleting pod "simpletest.rc-fvx4b" in namespace "gc-4381"
  I0102 10:45:35.170955 23 delete.go:95] Deleting pod "simpletest.rc-ggnzw" in namespace "gc-4381"
  I0102 10:45:35.179805 23 delete.go:95] Deleting pod "simpletest.rc-gpzhj" in namespace "gc-4381"
  I0102 10:45:35.188168 23 delete.go:95] Deleting pod "simpletest.rc-gqs84" in namespace "gc-4381"
  I0102 10:45:35.195919 23 delete.go:95] Deleting pod "simpletest.rc-h6l44" in namespace "gc-4381"
  I0102 10:45:35.204979 23 delete.go:95] Deleting pod "simpletest.rc-hblpk" in namespace "gc-4381"
  I0102 10:45:35.211908 23 delete.go:95] Deleting pod "simpletest.rc-hd2t4" in namespace "gc-4381"
  I0102 10:45:35.219393 23 delete.go:95] Deleting pod "simpletest.rc-hjq44" in namespace "gc-4381"
  I0102 10:45:35.229500 23 delete.go:95] Deleting pod "simpletest.rc-hkhs7" in namespace "gc-4381"
  I0102 10:45:35.238385 23 delete.go:95] Deleting pod "simpletest.rc-hrpdg" in namespace "gc-4381"
  I0102 10:45:35.246888 23 delete.go:95] Deleting pod "simpletest.rc-jdbg9" in namespace "gc-4381"
  I0102 10:45:35.257758 23 delete.go:95] Deleting pod "simpletest.rc-jl6gd" in namespace "gc-4381"
  I0102 10:45:35.279488 23 delete.go:95] Deleting pod "simpletest.rc-jwhqc" in namespace "gc-4381"
  I0102 10:45:35.338792 23 delete.go:95] Deleting pod "simpletest.rc-k9k6k" in namespace "gc-4381"
  I0102 10:45:35.429024 23 delete.go:95] Deleting pod "simpletest.rc-kcf8f" in namespace "gc-4381"
  I0102 10:45:35.448568 23 delete.go:95] Deleting pod "simpletest.rc-kdmsg" in namespace "gc-4381"
  I0102 10:45:35.468788 23 delete.go:95] Deleting pod "simpletest.rc-knrk5" in namespace "gc-4381"
  I0102 10:45:35.478849 23 delete.go:95] Deleting pod "simpletest.rc-ktksw" in namespace "gc-4381"
  I0102 10:45:35.488675 23 delete.go:95] Deleting pod "simpletest.rc-kv2rf" in namespace "gc-4381"
  I0102 10:45:35.505323 23 delete.go:95] Deleting pod "simpletest.rc-kvbqm" in namespace "gc-4381"
  I0102 10:45:35.516742 23 delete.go:95] Deleting pod "simpletest.rc-l897r" in namespace "gc-4381"
  I0102 10:45:35.524861 23 delete.go:95] Deleting pod "simpletest.rc-m6n27" in namespace "gc-4381"
  I0102 10:45:35.534323 23 delete.go:95] Deleting pod "simpletest.rc-m9rt7" in namespace "gc-4381"
  I0102 10:45:35.542697 23 delete.go:95] Deleting pod "simpletest.rc-mzh86" in namespace "gc-4381"
  I0102 10:45:35.558981 23 delete.go:95] Deleting pod "simpletest.rc-n2xhr" in namespace "gc-4381"
  I0102 10:45:35.572212 23 delete.go:95] Deleting pod "simpletest.rc-nmqsj" in namespace "gc-4381"
  I0102 10:45:35.579396 23 delete.go:95] Deleting pod "simpletest.rc-nsjtv" in namespace "gc-4381"
  I0102 10:45:35.591238 23 delete.go:95] Deleting pod "simpletest.rc-p2nz7" in namespace "gc-4381"
  I0102 10:45:35.605975 23 delete.go:95] Deleting pod "simpletest.rc-p7s6n" in namespace "gc-4381"
  I0102 10:45:35.625642 23 delete.go:95] Deleting pod "simpletest.rc-q2dh9" in namespace "gc-4381"
  E0102 10:45:35.642214      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:45:35.675808 23 delete.go:95] Deleting pod "simpletest.rc-q8jn9" in namespace "gc-4381"
  I0102 10:45:35.730633 23 delete.go:95] Deleting pod "simpletest.rc-qdxgv" in namespace "gc-4381"
  I0102 10:45:35.779876 23 delete.go:95] Deleting pod "simpletest.rc-qf556" in namespace "gc-4381"
  I0102 10:45:35.828563 23 delete.go:95] Deleting pod "simpletest.rc-qgxlc" in namespace "gc-4381"
  I0102 10:45:35.877490 23 delete.go:95] Deleting pod "simpletest.rc-qqgnr" in namespace "gc-4381"
  I0102 10:45:35.928151 23 delete.go:95] Deleting pod "simpletest.rc-qt5mx" in namespace "gc-4381"
  I0102 10:45:35.976966 23 delete.go:95] Deleting pod "simpletest.rc-qz4jl" in namespace "gc-4381"
  I0102 10:45:36.031328 23 delete.go:95] Deleting pod "simpletest.rc-qzcwz" in namespace "gc-4381"
  I0102 10:45:36.075859 23 delete.go:95] Deleting pod "simpletest.rc-rfvmg" in namespace "gc-4381"
  I0102 10:45:36.126592 23 delete.go:95] Deleting pod "simpletest.rc-rkwvd" in namespace "gc-4381"
  I0102 10:45:36.175026 23 delete.go:95] Deleting pod "simpletest.rc-rl4r6" in namespace "gc-4381"
  I0102 10:45:36.227132 23 delete.go:95] Deleting pod "simpletest.rc-rp6j7" in namespace "gc-4381"
  I0102 10:45:36.274718 23 delete.go:95] Deleting pod "simpletest.rc-rqpbt" in namespace "gc-4381"
  I0102 10:45:36.324624 23 delete.go:95] Deleting pod "simpletest.rc-s48wh" in namespace "gc-4381"
  I0102 10:45:36.376147 23 delete.go:95] Deleting pod "simpletest.rc-s6xzc" in namespace "gc-4381"
  I0102 10:45:36.426600 23 delete.go:95] Deleting pod "simpletest.rc-s8bj4" in namespace "gc-4381"
  I0102 10:45:36.477493 23 delete.go:95] Deleting pod "simpletest.rc-sqmwn" in namespace "gc-4381"
  I0102 10:45:36.526607 23 delete.go:95] Deleting pod "simpletest.rc-t5gtn" in namespace "gc-4381"
  I0102 10:45:36.581356 23 delete.go:95] Deleting pod "simpletest.rc-t9ql4" in namespace "gc-4381"
  I0102 10:45:36.627632 23 delete.go:95] Deleting pod "simpletest.rc-tc2t2" in namespace "gc-4381"
  E0102 10:45:36.642986      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:45:36.677074 23 delete.go:95] Deleting pod "simpletest.rc-tlkdx" in namespace "gc-4381"
  I0102 10:45:36.726552 23 delete.go:95] Deleting pod "simpletest.rc-tp92p" in namespace "gc-4381"
  I0102 10:45:36.780956 23 delete.go:95] Deleting pod "simpletest.rc-tpfxs" in namespace "gc-4381"
  I0102 10:45:36.826649 23 delete.go:95] Deleting pod "simpletest.rc-tv5lw" in namespace "gc-4381"
  I0102 10:45:36.876709 23 delete.go:95] Deleting pod "simpletest.rc-v6wff" in namespace "gc-4381"
  I0102 10:45:36.924845 23 delete.go:95] Deleting pod "simpletest.rc-vs854" in namespace "gc-4381"
  I0102 10:45:36.974462 23 delete.go:95] Deleting pod "simpletest.rc-w2pwx" in namespace "gc-4381"
  I0102 10:45:37.024575 23 delete.go:95] Deleting pod "simpletest.rc-w54vt" in namespace "gc-4381"
  I0102 10:45:37.076471 23 delete.go:95] Deleting pod "simpletest.rc-wwlqz" in namespace "gc-4381"
  I0102 10:45:37.125922 23 delete.go:95] Deleting pod "simpletest.rc-wxbzz" in namespace "gc-4381"
  I0102 10:45:37.177419 23 delete.go:95] Deleting pod "simpletest.rc-xcp2d" in namespace "gc-4381"
  I0102 10:45:37.227785 23 delete.go:95] Deleting pod "simpletest.rc-xjf95" in namespace "gc-4381"
  I0102 10:45:37.275634 23 delete.go:95] Deleting pod "simpletest.rc-xpj2z" in namespace "gc-4381"
  I0102 10:45:37.337561 23 delete.go:95] Deleting pod "simpletest.rc-zdn4g" in namespace "gc-4381"
  I0102 10:45:37.381863 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4381" for this suite. @ 01/02/25 10:45:37.419
• [43.884 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 01/02/25 10:45:37.472
  I0102 10:45:37.472336 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename namespaces @ 01/02/25 10:45:37.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:45:37.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:45:37.491
  STEP: Creating namespace "e2e-ns-z2cmq" @ 01/02/25 10:45:37.493
  I0102 10:45:37.586869 23 namespace.go:411] Namespace "e2e-ns-z2cmq-7815" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-z2cmq-7815" @ 01/02/25 10:45:37.586
  I0102 10:45:37.592716 23 namespace.go:434] Namespace "e2e-ns-z2cmq-7815" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-z2cmq-7815" @ 01/02/25 10:45:37.592
  I0102 10:45:37.597401 23 namespace.go:463] Namespace "e2e-ns-z2cmq-7815" has []v1.FinalizerName{"kubernetes"}
  I0102 10:45:37.597541 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6466" for this suite. @ 01/02/25 10:45:37.6
  STEP: Destroying namespace "e2e-ns-z2cmq-7815" for this suite. @ 01/02/25 10:45:37.604
• [0.135 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 01/02/25 10:45:37.608
  I0102 10:45:37.608884 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename services @ 01/02/25 10:45:37.61
  E0102 10:45:37.642862      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:45:37.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:45:37.688
  I0102 10:45:37.690899 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2785" for this suite. @ 01/02/25 10:45:37.7
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 01/02/25 10:45:37.706
  I0102 10:45:37.706901 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename secrets @ 01/02/25 10:45:37.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:45:37.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:45:37.79
  STEP: Creating secret with name secret-test-0f56920b-26af-4703-8391-32d84622cc1c @ 01/02/25 10:45:37.791
  STEP: Creating a pod to test consume secrets @ 01/02/25 10:45:37.795
  E0102 10:45:38.642969      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:39.643116      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:40.643999      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:41.644946      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:42.644984      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:43.645611      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:44.646424      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:45.646535      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:46.646627      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:47.647426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/02/25 10:45:47.828
  I0102 10:45:47.831094 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-secrets-f92c6bdc-f0fd-4aa1-8f10-472157162e94 container secret-volume-test: <nil>
  STEP: delete the pod @ 01/02/25 10:45:47.837
  I0102 10:45:47.851443 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4868" for this suite. @ 01/02/25 10:45:47.853
• [10.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 01/02/25 10:45:47.859
  I0102 10:45:47.859466 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename init-container @ 01/02/25 10:45:47.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:45:47.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:45:47.872
  STEP: creating the pod @ 01/02/25 10:45:47.873
  I0102 10:45:47.873545 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0102 10:45:48.647747      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:49.647961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:50.649108      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:45:51.147244 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1908" for this suite. @ 01/02/25 10:45:51.15
• [3.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 01/02/25 10:45:51.156
  I0102 10:45:51.156908 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:45:51.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:45:51.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:45:51.171
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-52b1ae77-6cef-495d-ab53-1e70fa78d8db @ 01/02/25 10:45:51.251
  STEP: Creating the pod @ 01/02/25 10:45:51.254
  E0102 10:45:51.649569      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:52.650549      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-52b1ae77-6cef-495d-ab53-1e70fa78d8db @ 01/02/25 10:45:53.274
  STEP: waiting to observe update in volume @ 01/02/25 10:45:53.276
  E0102 10:45:53.651077      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:54.652333      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:45:55.284258 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9265" for this suite. @ 01/02/25 10:45:55.287
• [4.138 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 01/02/25 10:45:55.297
  I0102 10:45:55.297201 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename pod-network-test @ 01/02/25 10:45:55.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:45:55.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:45:55.312
  STEP: Performing setup for networking test in namespace pod-network-test-8144 @ 01/02/25 10:45:55.314
  STEP: creating a selector @ 01/02/25 10:45:55.314
  STEP: Creating the service pods in kubernetes @ 01/02/25 10:45:55.314
  I0102 10:45:55.314568 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0102 10:45:55.652297      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:56.652332      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:57.652601      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:58.652929      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:45:59.653562      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:00.654518      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:01.655380      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:02.655785      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:03.655868      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:04.656485      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:05.656556      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:06.657571      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:07.658588      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:08.659444      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:09.659655      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:10.660497      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:11.660622      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:12.661019      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:13.662270      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:14.662624      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:15.662401      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:16.667018      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 01/02/25 10:46:17.447
  E0102 10:46:17.664521      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:18.665464      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:46:19.480828 23 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0102 10:46:19.480859 23 utils.go:496] Going to poll 10.42.1.180 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0102 10:46:19.482203 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.180 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8144 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:46:19.482222 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:46:19.483973 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:46:19.484033 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8144/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.180+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0102 10:46:19.665482      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:46:20.548999 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0102 10:46:20.549171 23 utils.go:496] Going to poll 10.42.3.127 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0102 10:46:20.550959 23 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.127 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8144 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0102 10:46:20.550980 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  I0102 10:46:20.551383 23 exec_util.go:66] ExecWithOptions: Clientset creation
  I0102 10:46:20.551442 23 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-8144/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.127+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0102 10:46:20.665796      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:46:21.620317 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0102 10:46:21.621181 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8144" for this suite. @ 01/02/25 10:46:21.64
• [26.350 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 01/02/25 10:46:21.651
  I0102 10:46:21.651029 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename projected @ 01/02/25 10:46:21.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:46:21.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:46:21.663
  STEP: Creating the pod @ 01/02/25 10:46:21.664
  E0102 10:46:21.667054      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:22.667028      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:23.667377      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:46:24.203958 23 pod_client.go:173] Successfully updated pod "labelsupdatebda7d48d-3c2a-4395-8225-af84c9402bcf"
  E0102 10:46:24.667511      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:25.668122      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:46:26.220032 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5126" for this suite. @ 01/02/25 10:46:26.225
• [4.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 01/02/25 10:46:26.233
  I0102 10:46:26.233642 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename emptydir @ 01/02/25 10:46:26.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:46:26.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:46:26.248
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 01/02/25 10:46:26.25
  E0102 10:46:26.668679      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:27.669370      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:28.669761      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:29.669930      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 01/02/25 10:46:30.26
  I0102 10:46:30.262482 23 output.go:196] Trying to get logs from node oneke-ip-192-168-150-105 pod pod-8055aac9-f404-480d-b07e-2591066986ad container test-container: <nil>
  STEP: delete the pod @ 01/02/25 10:46:30.266
  I0102 10:46:30.277777 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5177" for this suite. @ 01/02/25 10:46:30.28
• [4.053 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 01/02/25 10:46:30.287
  I0102 10:46:30.287955 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename sched-preemption @ 01/02/25 10:46:30.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:46:30.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:46:30.301
  I0102 10:46:30.310586 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0102 10:46:30.670901      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:31.670766      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:32.671592      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:33.671951      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:34.672544      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:35.673241      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:36.673335      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:37.673529      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:38.674870      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:39.680673      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:40.676350      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:41.677235      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:42.677447      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:43.677671      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:44.679909      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:45.678863      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:46.679859      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:47.680049      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:48.680474      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:49.681267      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:50.681391      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:51.682139      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:52.682858      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:53.683905      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:54.685961      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:55.684936      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:56.685088      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:57.685384      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:58.686608      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:46:59.686892      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:00.686863      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:01.687319      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:02.688047      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:03.688519      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:04.688491      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:05.688813      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:06.689743      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:07.690574      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:08.691583      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:09.692068      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:10.693149      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:11.693083      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:12.693451      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:13.693691      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:14.694674      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:15.696435      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:16.696208      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:17.696553      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:18.697635      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:19.698142      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:20.699210      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:21.699426      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:22.700475      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:23.701093      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:24.701664      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:25.703105      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:26.704448      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:27.705387      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:28.705541      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:29.706243      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:47:30.324578 23 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 01/02/25 10:47:30.336
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 01/02/25 10:47:30.356
  I0102 10:47:30.366335 23 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 01/02/25 10:47:30.366
  E0102 10:47:30.707213      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:31.707770      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 01/02/25 10:47:32.373
  I0102 10:47:32.377184 23 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 01/02/25 10:47:32.377
  E0102 10:47:32.707684      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:33.707898      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 01/02/25 10:47:34.383
  I0102 10:47:34.384474 23 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0102 10:47:34.708155      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:47:34.893493 23 pod_client.go:173] Successfully updated pod "victim-pod"
  I0102 10:47:34.925565 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2267" for this suite. @ 01/02/25 10:47:34.934
• [64.652 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 01/02/25 10:47:34.941
  I0102 10:47:34.941300 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename events @ 01/02/25 10:47:34.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:47:34.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:47:34.958
  STEP: Create set of events @ 01/02/25 10:47:34.961
  STEP: get a list of Events with a label in the current namespace @ 01/02/25 10:47:34.969
  STEP: delete a list of events @ 01/02/25 10:47:34.972
  I0102 10:47:34.972256 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 01/02/25 10:47:34.979
  I0102 10:47:34.980793 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-520" for this suite. @ 01/02/25 10:47:34.984
• [0.049 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 01/02/25 10:47:34.991
  I0102 10:47:34.991228 23 util.go:499] >>> kubeConfig: /tmp/kubeconfig-65258338
  STEP: Building a namespace api object, basename daemonsets @ 01/02/25 10:47:34.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 01/02/25 10:47:35.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 01/02/25 10:47:35.057
  STEP: Creating a simple DaemonSet "daemon-set" @ 01/02/25 10:47:35.087
  STEP: Check that daemon pods launch on every node of the cluster. @ 01/02/25 10:47:35.09
  I0102 10:47:35.185555 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:47:35.185633 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:47:35.187205 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:47:35.187430 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:47:35.708884      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:47:36.093382 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:47:36.093438 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:47:36.095192 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:47:36.095211 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:47:36.708927      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:47:37.093354 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:47:37.093644 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:47:37.095977 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 10:47:37.096016 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 01/02/25 10:47:37.097
  I0102 10:47:37.194171 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:47:37.194384 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:47:37.195899 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:47:37.196068 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:47:37.709422      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:47:38.111493 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:47:38.111567 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:47:38.113375 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0102 10:47:38.113547 23 fixtures.go:130] Node oneke-ip-192-168-150-103 is running 0 daemon pod, expected 1
  E0102 10:47:38.709589      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:47:39.119891 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-102 with taints [{Key:CriticalAddonsOnly Value:true Effect:NoExecute TimeAdded:<nil>}], skip checking this node
  I0102 10:47:39.120082 23 fixtures.go:89] DaemonSet pods can't tolerate node oneke-ip-192-168-150-104 with taints [{Key:node.longhorn.io/create-default-disk Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0102 10:47:39.124678 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0102 10:47:39.125287 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 01/02/25 10:47:39.125
  STEP: Deleting DaemonSet "daemon-set" @ 01/02/25 10:47:39.13
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4921, will wait for the garbage collector to delete the pods @ 01/02/25 10:47:39.13
  I0102 10:47:39.186257 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.802788ms
  I0102 10:47:39.287382 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.120353ms
  E0102 10:47:39.709865      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0102 10:47:40.711508      23 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0102 10:47:41.491438 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0102 10:47:41.491484 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0102 10:47:41.492401 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"61717"},"items":null}

  I0102 10:47:41.493102 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"61717"},"items":null}

  I0102 10:47:41.504718 23 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4921" for this suite. @ 01/02/25 10:47:41.508
• [6.520 seconds]
------------------------------
SSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0102 10:47:41.511166 23 suites.go:34] Running AfterSuite actions on node 1
  I0102 10:47:41.511184 23 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.074 seconds]
------------------------------

Ran 404 of 6605 Specs in 5895.404 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h38m16.546788072s
Test Suite Passed
