  I0423 18:13:13.638570      25 e2e.go:109] Starting e2e run "22d30a80-7c43-4746-bf1f-5b29f78dd3fc" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1745431993 - will randomize all specs

Will run 404 of 6608 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0423 18:13:13.751706 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:13:13.752396 25 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0423 18:13:13.772993 25 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0423 18:13:13.774356 25 e2e.go:245] e2e test version: v1.31.8
  I0423 18:13:13.775029 25 e2e.go:254] kube-apiserver version: v1.31.8
  I0423 18:13:13.775098 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:13:13.778387 25 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 04/23/25 18:13:13.856
  I0423 18:13:13.856478 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 18:13:13.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:13:13.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:13:13.867
  STEP: Creating service test in namespace statefulset-6201 @ 04/23/25 18:13:13.868
  STEP: Looking for a node to schedule stateful set and pod @ 04/23/25 18:13:13.871
  STEP: Creating pod with conflicting port in namespace statefulset-6201 @ 04/23/25 18:13:13.874
  STEP: Waiting until pod test-pod will start running in namespace statefulset-6201 @ 04/23/25 18:13:13.878
  STEP: Creating statefulset with conflicting port in namespace statefulset-6201 @ 04/23/25 18:13:19.889
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-6201 @ 04/23/25 18:13:19.894
  I0423 18:13:19.906446 25 statefulset.go:869] Observed stateful pod in namespace: statefulset-6201, name: ss-0, uid: 5b9ccf34-69a9-426c-bf07-454cf6882855, status phase: Pending. Waiting for statefulset controller to delete.
  I0423 18:13:19.913907 25 statefulset.go:869] Observed stateful pod in namespace: statefulset-6201, name: ss-0, uid: 5b9ccf34-69a9-426c-bf07-454cf6882855, status phase: Failed. Waiting for statefulset controller to delete.
  I0423 18:13:19.917369 25 statefulset.go:869] Observed stateful pod in namespace: statefulset-6201, name: ss-0, uid: 5b9ccf34-69a9-426c-bf07-454cf6882855, status phase: Failed. Waiting for statefulset controller to delete.
  I0423 18:13:19.918470 25 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-6201
  STEP: Removing pod with conflicting port in namespace statefulset-6201 @ 04/23/25 18:13:19.918
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-6201 and will be in running state @ 04/23/25 18:13:19.928
  I0423 18:13:21.951742 25 statefulset.go:138] Deleting all statefulset in ns statefulset-6201
  I0423 18:13:21.953704 25 rest.go:150] Scaling statefulset ss to 0
  I0423 18:13:32.003958 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 18:13:32.008795 25 rest.go:88] Deleting statefulset ss
  I0423 18:13:32.019401 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6201" for this suite. @ 04/23/25 18:13:32.021
• [18.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/23/25 18:13:32.025
  I0423 18:13:32.025928 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 18:13:32.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:13:32.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:13:32.032
  I0423 18:13:32.033614 25 replica_set.go:191] Creating ReplicaSet my-hostname-basic-41016322-4706-40ef-995c-e6ccb8f57ebf
  I0423 18:13:32.041485 25 resource.go:87] Pod name my-hostname-basic-41016322-4706-40ef-995c-e6ccb8f57ebf: Found 1 pods out of 1
  I0423 18:13:32.041519 25 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-41016322-4706-40ef-995c-e6ccb8f57ebf" is running
  I0423 18:13:40.060922 25 replica_set.go:220] Pod "my-hostname-basic-41016322-4706-40ef-995c-e6ccb8f57ebf-krkt4" is running (conditions: [])
  I0423 18:13:40.060978 25 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/23/25 18:13:40.061
  I0423 18:13:40.068706 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-793" for this suite. @ 04/23/25 18:13:40.07
• [8.048 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/23/25 18:13:40.074
  I0423 18:13:40.074419 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:13:40.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:13:40.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:13:40.082
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 18:13:40.083
  STEP: Saw pod success @ 04/23/25 18:13:42.092
  I0423 18:13:42.094649 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-3011a5e4-26b5-4b98-8ce2-2d86dc2a0c11 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 18:13:42.098
  I0423 18:13:42.110411 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1232" for this suite. @ 04/23/25 18:13:42.112
• [2.041 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 04/23/25 18:13:42.115
  I0423 18:13:42.115303 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 18:13:42.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:13:42.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:13:42.124
  STEP: Creating service test in namespace statefulset-5270 @ 04/23/25 18:13:42.125
  STEP: Creating statefulset ss in namespace statefulset-5270 @ 04/23/25 18:13:42.128
  I0423 18:13:42.133932 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0423 18:13:52.142001 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/23/25 18:13:52.146
  STEP: updating a scale subresource @ 04/23/25 18:13:52.157
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/23/25 18:13:52.163
  STEP: Patch a scale subresource @ 04/23/25 18:13:52.166
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/23/25 18:13:52.175
  I0423 18:13:52.178350 25 statefulset.go:138] Deleting all statefulset in ns statefulset-5270
  I0423 18:13:52.180075 25 rest.go:150] Scaling statefulset ss to 0
  I0423 18:14:02.194779 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 18:14:02.197572 25 rest.go:88] Deleting statefulset ss
  I0423 18:14:02.217144 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5270" for this suite. @ 04/23/25 18:14:02.22
• [20.108 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/23/25 18:14:02.223
  I0423 18:14:02.223962 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:14:02.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:02.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:02.232
  STEP: Creating projection with secret that has name projected-secret-test-map-349ef3b3-2716-4651-bf6c-ef5bcb48d331 @ 04/23/25 18:14:02.234
  STEP: Creating a pod to test consume secrets @ 04/23/25 18:14:02.236
  STEP: Saw pod success @ 04/23/25 18:14:04.245
  I0423 18:14:04.248095 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-7c6fd757-a49b-4072-ba2f-ece5d16a37a6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 18:14:04.251
  I0423 18:14:04.257314 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5224" for this suite. @ 04/23/25 18:14:04.258
• [2.039 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/23/25 18:14:04.263
  I0423 18:14:04.263324 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 18:14:04.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:04.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:04.27
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 18:14:04.272
  STEP: Saw pod success @ 04/23/25 18:14:06.284
  I0423 18:14:06.286769 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-951b12ab-9ec9-4e8f-94d1-abbeff5dee99 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 18:14:06.293
  I0423 18:14:06.302463 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7107" for this suite. @ 04/23/25 18:14:06.305
• [2.047 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/23/25 18:14:06.31
  I0423 18:14:06.310552 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 18:14:06.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:06.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:06.319
  STEP: creating a Pod with a static label @ 04/23/25 18:14:06.323
  STEP: watching for Pod to be ready @ 04/23/25 18:14:06.328
  I0423 18:14:06.329866 25 pods.go:945] observed Pod pod-test in namespace pods-4410 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0423 18:14:06.331663 25 pods.go:945] observed Pod pod-test in namespace pods-4410 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  }]
  I0423 18:14:06.342535 25 pods.go:945] observed Pod pod-test in namespace pods-4410 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  }]
  I0423 18:14:07.033065 25 pods.go:945] observed Pod pod-test in namespace pods-4410 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  }]
  I0423 18:14:08.099571 25 pods.go:948] Found Pod pod-test in namespace pods-4410 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:08 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:08 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:08 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 18:14:06 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/23/25 18:14:08.102
  STEP: getting the Pod and ensuring that it's patched @ 04/23/25 18:14:08.113
  STEP: replacing the Pod's status Ready condition to False @ 04/23/25 18:14:08.115
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/23/25 18:14:08.125
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/23/25 18:14:08.125
  STEP: watching for the Pod to be deleted @ 04/23/25 18:14:08.134
  I0423 18:14:08.135742 25 pods.go:1058] observed event type MODIFIED
  I0423 18:14:10.106927 25 pods.go:1058] observed event type MODIFIED
  I0423 18:14:10.205889 25 pods.go:1058] observed event type MODIFIED
  I0423 18:14:10.261466 25 pods.go:1058] observed event type MODIFIED
  I0423 18:14:11.112033 25 pods.go:1058] observed event type MODIFIED
  I0423 18:14:11.118397 25 pods.go:1058] observed event type MODIFIED
  I0423 18:14:11.122992 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4410" for this suite. @ 04/23/25 18:14:11.124
• [4.818 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1843
  STEP: Creating a kubernetes client @ 04/23/25 18:14:11.128
  I0423 18:14:11.128393 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 18:14:11.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:11.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:11.139
  STEP: starting the proxy server @ 04/23/25 18:14:11.14
  I0423 18:14:11.141058 25 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-3287 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/23/25 18:14:11.169
  I0423 18:14:11.175281 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0423 18:14:11.177846 25 kubectl.go:2234] kubectl proxy stdout: Starting to serve on 127.0.0.1:45761

  I0423 18:14:11.177880 25 kubectl.go:2239] kubectl proxy stderr: W0423 18:14:11.169705      35 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-3287" for this suite. @ 04/23/25 18:14:11.225
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/23/25 18:14:11.229
  I0423 18:14:11.229157 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename chunking @ 04/23/25 18:14:11.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:11.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:11.241
  STEP: creating a large number of resources @ 04/23/25 18:14:11.243
  STEP: retrieving those results in paged fashion several times @ 04/23/25 18:14:28.936
  I0423 18:14:28.982949 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 18:14:29.036735 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0423 18:14:29.086228 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0423 18:14:29.136425 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0423 18:14:29.183234 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0423 18:14:29.236281 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0423 18:14:29.285407 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0423 18:14:29.340120 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0423 18:14:29.382971 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0423 18:14:29.435667 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0423 18:14:29.485451 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0423 18:14:29.535047 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0423 18:14:29.587086 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0423 18:14:29.636999 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0423 18:14:29.684300 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0423 18:14:29.733643 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0423 18:14:29.783717 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0423 18:14:29.834611 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0423 18:14:29.884893 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0423 18:14:29.936171 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0423 18:14:29.986611 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0423 18:14:30.034926 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0423 18:14:30.085502 25 chunking.go:98] Retrieved 17/17 results with rv 3429 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQyOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0423 18:14:30.133275 25 chunking.go:98] Retrieved 9/17 results with rv 3429 and continue 
  I0423 18:14:30.182684 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 18:14:30.235591 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0423 18:14:30.286769 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0423 18:14:30.335102 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0423 18:14:30.384916 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0423 18:14:30.436555 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0423 18:14:30.485482 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0423 18:14:30.535213 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0423 18:14:30.584430 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0423 18:14:30.636666 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0423 18:14:30.685457 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0423 18:14:30.734532 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0423 18:14:30.785794 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0423 18:14:30.834992 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0423 18:14:30.887817 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0423 18:14:30.936449 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0423 18:14:30.985692 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0423 18:14:31.032259 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0423 18:14:31.082992 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0423 18:14:31.132262 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0423 18:14:31.186368 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0423 18:14:31.235224 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0423 18:14:31.285612 25 chunking.go:98] Retrieved 17/17 results with rv 3432 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0423 18:14:31.334815 25 chunking.go:98] Retrieved 9/17 results with rv 3432 and continue 
  I0423 18:14:31.385141 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 18:14:31.437430 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0423 18:14:31.485285 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0423 18:14:31.536512 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0423 18:14:31.587503 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0423 18:14:31.635901 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0423 18:14:31.684891 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0423 18:14:31.733728 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0423 18:14:31.785536 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0423 18:14:31.836188 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0423 18:14:31.883840 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0423 18:14:31.936171 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0423 18:14:31.987061 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0423 18:14:32.035285 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0423 18:14:32.086297 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0423 18:14:32.134388 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0423 18:14:32.186373 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0423 18:14:32.235427 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0423 18:14:32.285313 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0423 18:14:32.336730 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0423 18:14:32.385511 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0423 18:14:32.435949 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0423 18:14:32.484535 25 chunking.go:98] Retrieved 17/17 results with rv 3436 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzQzNiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0423 18:14:32.534817 25 chunking.go:98] Retrieved 9/17 results with rv 3436 and continue 
  STEP: retrieving those results all at once @ 04/23/25 18:14:32.534
  I0423 18:14:32.594062 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8931" for this suite. @ 04/23/25 18:14:32.638
• [21.458 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 04/23/25 18:14:32.688
  I0423 18:14:32.688440 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 18:14:32.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:32.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:32.698
  I0423 18:14:36.718955 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2046" for this suite. @ 04/23/25 18:14:36.722
• [4.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/23/25 18:14:36.738
  I0423 18:14:36.739007 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 18:14:36.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:36.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:36.749
  STEP: Creating configMap with name configmap-test-volume-5ffdc1f2-b7e4-4307-b578-bb1a2849fe87 @ 04/23/25 18:14:36.75
  STEP: Creating a pod to test consume configMaps @ 04/23/25 18:14:36.752
  STEP: Saw pod success @ 04/23/25 18:14:40.762
  I0423 18:14:40.765419 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-d2822997-6e80-4a3e-916b-52b463cd4072 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 18:14:40.769
  I0423 18:14:40.788733 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6939" for this suite. @ 04/23/25 18:14:40.79
• [4.055 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 04/23/25 18:14:40.794
  I0423 18:14:40.794561 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 18:14:40.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:40.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:40.802
  STEP: Creating a pod to test env composition @ 04/23/25 18:14:40.803
  STEP: Saw pod success @ 04/23/25 18:14:44.816
  I0423 18:14:44.819857 25 output.go:196] Trying to get logs from node worker00 pod var-expansion-79f60e4d-ea53-47bf-9448-cdc4d2889d8d container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 18:14:44.823
  I0423 18:14:44.839619 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4880" for this suite. @ 04/23/25 18:14:44.84
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/23/25 18:14:44.843
  I0423 18:14:44.843207 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:14:44.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:44.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:44.854
  STEP: Creating configMap with name projected-configmap-test-volume-da44afc1-dfa4-4704-b8b5-88c1c5ae97c6 @ 04/23/25 18:14:44.855
  STEP: Creating a pod to test consume configMaps @ 04/23/25 18:14:44.857
  STEP: Saw pod success @ 04/23/25 18:14:48.871
  I0423 18:14:48.875164 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-0d14bcbd-e604-409a-a6f8-12277052cb41 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 18:14:48.879
  I0423 18:14:48.898105 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9618" for this suite. @ 04/23/25 18:14:48.899
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 04/23/25 18:14:48.904
  I0423 18:14:48.904582 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:14:48.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:14:48.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:14:48.914
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4329 @ 04/23/25 18:14:48.915
  STEP: changing the ExternalName service to type=NodePort @ 04/23/25 18:14:48.917
  STEP: creating replication controller externalname-service in namespace services-4329 @ 04/23/25 18:14:48.925
  I0423 18:14:48.932474      25 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4329, replica count: 2
  I0423 18:14:51.984839      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 18:14:54.985309      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 18:14:57.987926      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 18:14:57.988011 25 resource.go:361] Creating new exec pod
  I0423 18:15:01.007132 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4329 exec execpodbrgzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 18:15:01.083104 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0423 18:15:01.083140 25 builder.go:147] stdout: ""
  I0423 18:15:02.007327 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4329 exec execpodbrgzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 18:15:02.080722 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0423 18:15:02.080756 25 builder.go:147] stdout: ""
  I0423 18:15:03.007208 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4329 exec execpodbrgzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 18:15:03.071076 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0423 18:15:03.071114 25 builder.go:147] stdout: "externalname-service-xj9g5"
  I0423 18:15:03.071181 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4329 exec execpodbrgzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.37 80'
  I0423 18:15:03.138264 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.37 80\nConnection to 10.32.0.37 80 port [tcp/http] succeeded!\n"
  I0423 18:15:03.138294 25 builder.go:147] stdout: ""
  I0423 18:15:04.072238 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4329 exec execpodbrgzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.37 80'
  I0423 18:15:04.149942 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.37 80\nConnection to 10.32.0.37 80 port [tcp/http] succeeded!\n"
  I0423 18:15:04.149974 25 builder.go:147] stdout: ""
  I0423 18:15:05.072619 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4329 exec execpodbrgzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.37 80'
  I0423 18:15:05.147286 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.37 80\nConnection to 10.32.0.37 80 port [tcp/http] succeeded!\n"
  I0423 18:15:05.147316 25 builder.go:147] stdout: "externalname-service-xj9g5"
  I0423 18:15:05.147369 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4329 exec execpodbrgzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30403'
  I0423 18:15:05.215801 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 30403\nConnection to 192.168.58.100 30403 port [tcp/*] succeeded!\n"
  I0423 18:15:05.215886 25 builder.go:147] stdout: "externalname-service-xj9g5"
  I0423 18:15:05.215991 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4329 exec execpodbrgzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30403'
  I0423 18:15:05.283738 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 30403\nConnection to 192.168.58.101 30403 port [tcp/*] succeeded!\n"
  I0423 18:15:05.283779 25 builder.go:147] stdout: "externalname-service-p42f8"
  I0423 18:15:05.283841 25 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0423 18:15:05.329529 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4329" for this suite. @ 04/23/25 18:15:05.333
• [16.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 04/23/25 18:15:05.34
  I0423 18:15:05.340536 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 18:15:05.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:15:05.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:15:05.351
  STEP: creating the pod @ 04/23/25 18:15:05.352
  STEP: waiting for pod running @ 04/23/25 18:15:05.359
  STEP: creating a file in subpath @ 04/23/25 18:15:07.365
  I0423 18:15:07.368772 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6962 PodName:var-expansion-25d35dad-97ee-4bc8-aec4-29eaed9b21d2 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:15:07.368837 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:15:07.369885 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:15:07.369966 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/var-expansion-6962/pods/var-expansion-25d35dad-97ee-4bc8-aec4-29eaed9b21d2/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/23/25 18:15:07.399
  I0423 18:15:07.401603 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6962 PodName:var-expansion-25d35dad-97ee-4bc8-aec4-29eaed9b21d2 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:15:07.401635 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:15:07.402556 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:15:07.402658 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/var-expansion-6962/pods/var-expansion-25d35dad-97ee-4bc8-aec4-29eaed9b21d2/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/23/25 18:15:07.429
  I0423 18:15:07.946491 25 pod_client.go:173] Successfully updated pod "var-expansion-25d35dad-97ee-4bc8-aec4-29eaed9b21d2"
  STEP: waiting for annotated pod running @ 04/23/25 18:15:07.946
  STEP: deleting the pod gracefully @ 04/23/25 18:15:07.951
  I0423 18:15:07.951376 25 delete.go:62] Deleting pod "var-expansion-25d35dad-97ee-4bc8-aec4-29eaed9b21d2" in namespace "var-expansion-6962"
  I0423 18:15:07.956234 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-25d35dad-97ee-4bc8-aec4-29eaed9b21d2" to be fully deleted
  I0423 18:15:42.061845 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6962" for this suite. @ 04/23/25 18:15:42.067
• [36.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/23/25 18:15:42.088
  I0423 18:15:42.088842 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:15:42.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:15:42.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:15:42.123
  STEP: Creating secret with name projected-secret-test-5981cc1e-bf72-46f0-8479-f03c70ce5f32 @ 04/23/25 18:15:42.129
  STEP: Creating a pod to test consume secrets @ 04/23/25 18:15:42.138
  STEP: Saw pod success @ 04/23/25 18:15:46.172
  I0423 18:15:46.179321 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-ee61491e-810c-4040-b31b-b3a2e3d00194 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 18:15:46.19
  I0423 18:15:46.225555 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9385" for this suite. @ 04/23/25 18:15:46.234
• [4.161 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 04/23/25 18:15:46.25
  I0423 18:15:46.250118 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 18:15:46.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:15:46.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:15:46.274
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/23/25 18:15:46.279
  I0423 18:15:46.280607 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/23/25 18:15:52.517
  I0423 18:15:52.519722 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:15:53.909067 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:15:59.612741 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6694" for this suite. @ 04/23/25 18:15:59.62
• [13.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 04/23/25 18:15:59.642
  I0423 18:15:59.642857 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:15:59.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:15:59.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:15:59.675
  STEP: creating service in namespace services-7767 @ 04/23/25 18:15:59.68
  STEP: creating service affinity-clusterip in namespace services-7767 @ 04/23/25 18:15:59.68
  STEP: creating replication controller affinity-clusterip in namespace services-7767 @ 04/23/25 18:15:59.693
  I0423 18:15:59.713806      25 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7767, replica count: 3
  I0423 18:16:02.783635      25 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 18:16:02.791933 25 resource.go:361] Creating new exec pod
  I0423 18:16:05.824657 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-7767 exec execpod-affinity7t5q6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0423 18:16:06.008874 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0423 18:16:06.008991 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 18:16:06.009106 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-7767 exec execpod-affinity7t5q6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.109 80'
  I0423 18:16:06.217142 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.109 80\nConnection to 10.32.0.109 80 port [tcp/http] succeeded!\n"
  I0423 18:16:06.217286 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 18:16:06.217598 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-7767 exec execpod-affinity7t5q6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.109:80/ ; done'
  I0423 18:16:06.488190 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.109:80/\n"
  I0423 18:16:06.488322 25 builder.go:147] stdout: "\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd\naffinity-clusterip-lrgvd"
  I0423 18:16:06.488361 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488389 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488412 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488433 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488460 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488483 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488505 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488573 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488630 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.488883 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.489209 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.489232 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.489245 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.489256 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.489267 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.489278 25 service.go:242] Received response from host: affinity-clusterip-lrgvd
  I0423 18:16:06.489374 25 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7767, will wait for the garbage collector to delete the pods @ 04/23/25 18:16:06.505
  I0423 18:16:06.566325 25 resources.go:139] Deleting ReplicationController affinity-clusterip took: 6.336828ms
  I0423 18:16:06.667751 25 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.424579ms
  I0423 18:16:09.699000 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7767" for this suite. @ 04/23/25 18:16:09.705
• [10.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/23/25 18:16:09.717
  I0423 18:16:09.717550 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 18:16:09.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:09.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:09.747
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/23/25 18:16:09.753
  STEP: Saw pod success @ 04/23/25 18:16:13.786
  I0423 18:16:13.790650 25 output.go:196] Trying to get logs from node worker00 pod pod-d0d18a51-f49b-49a9-a0cd-ecc05cf261d2 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 18:16:13.799
  I0423 18:16:13.834480 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4117" for this suite. @ 04/23/25 18:16:13.841
• [4.132 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/23/25 18:16:13.849
  I0423 18:16:13.849491 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 18:16:13.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:13.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:13.881
  I0423 18:16:13.901879 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8437" for this suite. @ 04/23/25 18:16:13.942
• [0.098 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 04/23/25 18:16:13.947
  I0423 18:16:13.948004 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 18:16:13.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:13.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:13.964
  STEP: Counting existing ResourceQuota @ 04/23/25 18:16:13.966
  STEP: Creating a ResourceQuota @ 04/23/25 18:16:19.008
  STEP: Ensuring resource quota status is calculated @ 04/23/25 18:16:19.022
  I0423 18:16:21.027731 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9223" for this suite. @ 04/23/25 18:16:21.032
• [7.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/23/25 18:16:21.04
  I0423 18:16:21.042014 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:16:21.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:21.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:21.073
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 18:16:21.105
  STEP: Saw pod success @ 04/23/25 18:16:25.163
  I0423 18:16:25.168064 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-06fced3f-e265-486e-9134-1ce1d27f3b65 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 18:16:25.179
  I0423 18:16:25.203952 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6595" for this suite. @ 04/23/25 18:16:25.209
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 04/23/25 18:16:25.219
  I0423 18:16:25.219788 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 18:16:25.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:25.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:25.249
  STEP: Creating simple DaemonSet "daemon-set" @ 04/23/25 18:16:25.324
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 18:16:25.335
  I0423 18:16:25.417013 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 18:16:25.417089 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 18:16:26.343976 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 18:16:26.344015 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 18:16:27.346150 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 18:16:27.346214 25 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0423 18:16:28.346334 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 18:16:28.346450 25 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0423 18:16:29.347552 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 18:16:29.347619 25 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0423 18:16:30.343401 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 18:16:30.343458 25 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0423 18:16:31.342875 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 18:16:31.342923 25 fixtures.go:130] Node worker01 is running 0 daemon pod, expected 1
  I0423 18:16:32.346746 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 18:16:32.346819 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 04/23/25 18:16:32.351
  I0423 18:16:32.356782 25 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/23/25 18:16:32.356
  I0423 18:16:32.383362 25 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/23/25 18:16:32.383
  I0423 18:16:32.387587 25 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0423 18:16:32.388382 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.389575 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.390615 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.391054 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.391393 25 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8116 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 18:16:32.391660 25 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/23/25 18:16:32.391
  STEP: watching for the daemon set status to be patched @ 04/23/25 18:16:32.404
  I0423 18:16:32.408040 25 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0423 18:16:32.408852 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.409049 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.409930 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.411212 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.411493 25 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8116 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 18:16:32.411695 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 18:16:32.412092 25 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8116 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0423 18:16:32.413484 25 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 18:16:32.419
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8116, will wait for the garbage collector to delete the pods @ 04/23/25 18:16:32.419
  I0423 18:16:32.486781 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.575667ms
  I0423 18:16:32.588315 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.525019ms
  I0423 18:16:35.293728 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 18:16:35.293916 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 18:16:35.298563 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4897"},"items":null}

  I0423 18:16:35.303274 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4897"},"items":null}

  I0423 18:16:35.324554 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8116" for this suite. @ 04/23/25 18:16:35.329
• [10.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 04/23/25 18:16:35.338
  I0423 18:16:35.338735 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 18:16:35.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:35.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:35.368
  STEP: creating secret secrets-1615/secret-test-7505ca44-f789-48c3-9f9a-08365a721d34 @ 04/23/25 18:16:35.373
  STEP: Creating a pod to test consume secrets @ 04/23/25 18:16:35.381
  STEP: Saw pod success @ 04/23/25 18:16:39.415
  I0423 18:16:39.418936 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-050f4bbe-0b64-4bb3-ba9e-8d0c73691056 container env-test: <nil>
  STEP: delete the pod @ 04/23/25 18:16:39.43
  I0423 18:16:39.454188 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1615" for this suite. @ 04/23/25 18:16:39.459
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/23/25 18:16:39.471
  I0423 18:16:39.471742 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename deployment @ 04/23/25 18:16:39.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:39.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:39.497
  I0423 18:16:39.502357 25 deployment.go:1645] Creating simple deployment test-new-deployment
  I0423 18:16:39.520198 25 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 04/23/25 18:16:41.535
  STEP: updating a scale subresource @ 04/23/25 18:16:41.539
  STEP: verifying the deployment Spec.Replicas was modified @ 04/23/25 18:16:41.549
  STEP: Patch a scale subresource @ 04/23/25 18:16:41.566
  I0423 18:16:41.597042 25 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58f216ca-7538-4a86-8c55-5ecc91259461",
      ResourceVersion: (string) (len=4) "4992",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881028999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881028999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881028999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 18:16:41.645624 25 deployment.go:40] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45840e0d-eaee-429d-9a4f-10d6a11b2416",
      ResourceVersion: (string) (len=4) "4996",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881028999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "58f216ca-7538-4a86-8c55-5ecc91259461",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 38 66 32 31 36  63 61 2d 37 35 33 38 2d  |\"58f216ca-7538-|
              00000120  34 61 38 36 2d 38 63 35  35 2d 35 65 63 63 39 31  |4a86-8c55-5ecc91|
              00000130  32 35 39 34 36 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |259461\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 18:16:41.666683 25 deployment.go:68] Pod "test-new-deployment-64bcfc6446-6fknf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-6fknf",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "adfa1cc4-d73a-4626-8968-1fd18e72c6bc",
      ResourceVersion: (string) (len=4) "5003",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029001,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45840e0d-eaee-429d-9a4f-10d6a11b2416",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  38 34 30 65 30 64 2d 65  |d\":\"45840e0d-e|
              00000090  61 65 65 2d 34 32 39 64  2d 39 61 34 66 2d 31 30  |aee-429d-9a4f-10|
              000000a0  64 36 61 31 31 62 32 34  31 36 5c 22 7d 22 3a 7b  |d6a11b2416\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tg9k7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tg9k7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 18:16:41.690734 25 deployment.go:68] Pod "test-new-deployment-64bcfc6446-6tqmz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-6tqmz",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ae67254-955e-4775-b6b0-3388e1f5848f",
      ResourceVersion: (string) (len=4) "4978",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881028999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "79a4fd714b26e9188126f81ec6c515d7b37e04baac99992ccf9f6f269ca7c710",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.159/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.159/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45840e0d-eaee-429d-9a4f-10d6a11b2416",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881028999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  38 34 30 65 30 64 2d 65  |d\":\"45840e0d-e|
              00000090  61 65 65 2d 34 32 39 64  2d 39 61 34 66 2d 31 30  |aee-429d-9a4f-10|
              000000a0  64 36 61 31 31 62 32 34  31 36 5c 22 7d 22 3a 7b  |d6a11b2416\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 39 5c 22 7d 22  |.200.131.159\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gl9vk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gl9vk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881028999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029000,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881028999,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881028999,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881029000,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1739f877ab086d3a41cc12b7571db4cf94704225a0488831b62683ce4755e43e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 18:16:41.779065 25 deployment.go:68] Pod "test-new-deployment-64bcfc6446-bvkxd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-bvkxd",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8712",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cc7c116-8769-4e78-bc22-a9b9aea87a2a",
      ResourceVersion: (string) (len=4) "4999",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029001,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "45840e0d-eaee-429d-9a4f-10d6a11b2416",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 35  38 34 30 65 30 64 2d 65  |d\":\"45840e0d-e|
              00000090  61 65 65 2d 34 32 39 64  2d 39 61 34 66 2d 31 30  |aee-429d-9a4f-10|
              000000a0  64 36 61 31 31 62 32 34  31 36 5c 22 7d 22 3a 7b  |d6a11b2416\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mz4db",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mz4db",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029001,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029001,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 18:16:41.790521 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8712" for this suite. @ 04/23/25 18:16:41.829
• [2.378 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/23/25 18:16:41.851
  I0423 18:16:41.851610 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 18:16:41.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:41.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:41.871
  STEP: Creating configMap with name cm-test-opt-del-2dc45982-b671-4b3c-8eea-f978eecdafa7 @ 04/23/25 18:16:41.932
  STEP: Creating configMap with name cm-test-opt-upd-b605a212-20ef-44bf-83e3-10c1f038bda4 @ 04/23/25 18:16:41.937
  STEP: Creating the pod @ 04/23/25 18:16:41.948
  STEP: Deleting configmap cm-test-opt-del-2dc45982-b671-4b3c-8eea-f978eecdafa7 @ 04/23/25 18:16:44.019
  STEP: Updating configmap cm-test-opt-upd-b605a212-20ef-44bf-83e3-10c1f038bda4 @ 04/23/25 18:16:44.029
  STEP: Creating configMap with name cm-test-opt-create-4566a49a-3954-4e39-b53b-5e3f86141156 @ 04/23/25 18:16:44.04
  STEP: waiting to observe update in volume @ 04/23/25 18:16:44.052
  I0423 18:16:48.096069 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9545" for this suite. @ 04/23/25 18:16:48.1
• [6.258 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 04/23/25 18:16:48.111
  I0423 18:16:48.111052 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename disruption @ 04/23/25 18:16:48.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:48.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:48.147
  STEP: creating the pdb @ 04/23/25 18:16:48.155
  STEP: Waiting for the pdb to be processed @ 04/23/25 18:16:48.171
  STEP: updating the pdb @ 04/23/25 18:16:48.183
  STEP: Waiting for the pdb to be processed @ 04/23/25 18:16:48.195
  STEP: patching the pdb @ 04/23/25 18:16:50.2
  STEP: Waiting for the pdb to be processed @ 04/23/25 18:16:50.215
  STEP: Waiting for the pdb to be deleted @ 04/23/25 18:16:52.238
  I0423 18:16:52.243453 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4744" for this suite. @ 04/23/25 18:16:52.249
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/23/25 18:16:52.261
  I0423 18:16:52.261448 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 18:16:52.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:52.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:52.295
  STEP: Create a ReplicaSet @ 04/23/25 18:16:52.302
  STEP: Verify that the required pods have come up @ 04/23/25 18:16:52.311
  I0423 18:16:52.321265 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0423 18:16:57.364564 25 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/23/25 18:16:57.364
  I0423 18:16:57.370783 25 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/23/25 18:16:57.37
  STEP: DeleteCollection of the ReplicaSets @ 04/23/25 18:16:57.378
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/23/25 18:16:57.39
  I0423 18:16:57.402308 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4320" for this suite. @ 04/23/25 18:16:57.419
• [5.195 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/23/25 18:16:57.479
  I0423 18:16:57.479142 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/23/25 18:16:57.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:16:57.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:16:57.512
  STEP: Setting up the test @ 04/23/25 18:16:57.518
  STEP: Creating hostNetwork=false pod @ 04/23/25 18:16:57.518
  STEP: Creating hostNetwork=true pod @ 04/23/25 18:16:59.575
  STEP: Running the test @ 04/23/25 18:17:01.598
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/23/25 18:17:01.598
  I0423 18:17:01.598405 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:01.598433 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:01.599156 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:01.599237 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0423 18:17:01.683840 25 exec_util.go:111] Exec stderr: ""
  I0423 18:17:01.683917 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:01.684031 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:01.685327 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:01.686859 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0423 18:17:01.796499 25 exec_util.go:111] Exec stderr: ""
  I0423 18:17:01.796578 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:01.796606 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:01.797508 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:01.797601 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0423 18:17:01.888591 25 exec_util.go:111] Exec stderr: ""
  I0423 18:17:01.888695 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:01.888719 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:01.891952 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:01.892123 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0423 18:17:01.970083 25 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/23/25 18:17:01.97
  I0423 18:17:01.970369 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:01.970391 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:01.971310 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:01.971404 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0423 18:17:02.039893 25 exec_util.go:111] Exec stderr: ""
  I0423 18:17:02.039974 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:02.039999 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:02.041329 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:02.041393 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0423 18:17:02.109119 25 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/23/25 18:17:02.109
  I0423 18:17:02.109262 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:02.109311 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:02.112056 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:02.112210 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0423 18:17:02.197967 25 exec_util.go:111] Exec stderr: ""
  I0423 18:17:02.198059 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:02.198081 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:02.199315 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:02.199465 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0423 18:17:02.283190 25 exec_util.go:111] Exec stderr: ""
  I0423 18:17:02.283304 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:02.283347 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:02.284343 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:02.284473 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0423 18:17:02.369357 25 exec_util.go:111] Exec stderr: ""
  I0423 18:17:02.369499 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3606 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:17:02.369543 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:17:02.370682 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:17:02.370837 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3606/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0423 18:17:02.454684 25 exec_util.go:111] Exec stderr: ""
  I0423 18:17:02.454872 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3606" for this suite. @ 04/23/25 18:17:02.465
• [5.008 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/23/25 18:17:02.492
  I0423 18:17:02.492463 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 18:17:02.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:17:02.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:17:02.527
  STEP: Creating a cronjob @ 04/23/25 18:17:02.532
  STEP: Ensuring more than one job is running at a time @ 04/23/25 18:17:02.543
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/23/25 18:19:00.552
  STEP: Removing cronjob @ 04/23/25 18:19:00.559
  I0423 18:19:00.575032 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6853" for this suite. @ 04/23/25 18:19:00.593
• [118.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/23/25 18:19:00.617
  I0423 18:19:00.617250 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename deployment @ 04/23/25 18:19:00.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:19:00.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:19:00.663
  I0423 18:19:00.702292 25 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0423 18:19:05.711962 25 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 18:19:05.712
  I0423 18:19:05.712253 25 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0423 18:19:07.717660 25 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0423 18:19:07.734320 25 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0423 18:19:09.749473 25 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0423 18:19:09.762040 25 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0423 18:19:09.775437 25 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0423 18:19:09.803947 25 deployment.go:314] Updating deployment test-rollover-deployment
  I0423 18:19:09.804033 25 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0423 18:19:11.819311 25 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0423 18:19:11.837525 25 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0423 18:19:11.853133 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 18:19:11.853288 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 18:19:13.867081 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 18:19:13.867238 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 18:19:15.863343 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 18:19:15.863440 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 18:19:17.863355 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 18:19:17.863456 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 18:19:19.865708 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 18:19:19.865828 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 18, 19, 11, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 18, 19, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 18:19:21.866174 25 deployment.go:95] 
  I0423 18:19:21.866270 25 deployment.go:974] Ensure that both old replica sets have no replicas
  I0423 18:19:21.885576 25 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7373",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbe08fda-97ea-4b08-9ca9-a5dcb115bc74",
      ResourceVersion: (string) (len=4) "5991",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 18:19:21.903814 25 deployment.go:40] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7373",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "65100a86-cff2-43c6-bd23-318a0ba27f68",
      ResourceVersion: (string) (len=4) "5979",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fbe08fda-97ea-4b08-9ca9-a5dcb115bc74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 65 30 38 66  64 61 2d 39 37 65 61 2d  |\"fbe08fda-97ea-|
              00000120  34 62 30 38 2d 39 63 61  39 2d 61 35 64 63 62 31  |4b08-9ca9-a5dcb1|
              00000130  31 35 62 63 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |15bc74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 18:19:21.907248 25 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0423 18:19:21.907688 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7373",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bf8711b-d07d-40c0-a946-772005fa3fc6",
      ResourceVersion: (string) (len=4) "5988",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029140,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fbe08fda-97ea-4b08-9ca9-a5dcb115bc74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029140,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 62 65 30 38 66 64 61  2d 39 37 65 61 2d 34 62  |fbe08fda-97ea-4b|
              000000c0  30 38 2d 39 63 61 39 2d  61 35 64 63 62 31 31 35  |08-9ca9-a5dcb115|
              000000d0  62 63 37 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |bc74\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 18:19:21.913012 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7373",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "108e6f20-ab92-4460-88b5-314e3fcb7674",
      ResourceVersion: (string) (len=4) "5921",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "fbe08fda-97ea-4b08-9ca9-a5dcb115bc74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 65 30 38 66  64 61 2d 39 37 65 61 2d  |\"fbe08fda-97ea-|
              00000120  34 62 30 38 2d 39 63 61  39 2d 61 35 64 63 62 31  |4b08-9ca9-a5dcb1|
              00000130  31 35 62 63 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |15bc74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 18:19:21.926004 25 deployment.go:68] Pod "test-rollover-deployment-5f974d7468-mx2bj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-mx2bj",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-7373",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e20f7aba-fbb5-40d2-a622-d2aba097bad2",
      ResourceVersion: (string) (len=4) "5938",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "04f048c0dc77bcc4ee5c54f0307ce60d6ad2b2778b26b63b78febc554f508a25",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.168/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.168/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "65100a86-cff2-43c6-bd23-318a0ba27f68",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 35  31 30 30 61 38 36 2d 63  |d\":\"65100a86-c|
              00000090  66 66 32 2d 34 33 63 36  2d 62 64 32 33 2d 33 31  |ff2-43c6-bd23-31|
              000000a0  38 61 30 62 61 32 37 66  36 38 5c 22 7d 22 3a 7b  |8a0ba27f68\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 36 38 5c 22 7d 22  |.200.131.168\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5pjsc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5pjsc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881029149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881029149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881029151,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://76f627afd4a08a0ed13a937a4befea8f682df96472da25a36a6a0a8b816f39a1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 18:19:21.932257 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7373" for this suite. @ 04/23/25 18:19:21.945
• [21.356 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/23/25 18:19:21.973
  I0423 18:19:21.973492 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 18:19:21.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:19:22.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:19:22.033
  STEP: Performing setup for networking test in namespace pod-network-test-3310 @ 04/23/25 18:19:22.04
  STEP: creating a selector @ 04/23/25 18:19:22.04
  STEP: Creating the service pods in kubernetes @ 04/23/25 18:19:22.04
  I0423 18:19:22.040683 25 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/23/25 18:19:44.22
  I0423 18:19:46.273728 25 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 18:19:46.273820 25 networking.go:42] Breadth first check of 10.200.131.169 on host 192.168.58.100...
  I0423 18:19:46.280763 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.170:9080/dial?request=hostname&protocol=udp&host=10.200.131.169&port=8081&tries=1'] Namespace:pod-network-test-3310 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:19:46.280826 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:19:46.282204 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:19:46.282325 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-3310/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.170%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.131.169%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0423 18:19:46.410324 25 utils.go:356] Waiting for responses: map[]
  I0423 18:19:46.410372 25 utils.go:360] reached 10.200.131.169 after 0/1 tries
  I0423 18:19:46.410388 25 networking.go:42] Breadth first check of 10.200.5.20 on host 192.168.58.101...
  I0423 18:19:46.416317 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.170:9080/dial?request=hostname&protocol=udp&host=10.200.5.20&port=8081&tries=1'] Namespace:pod-network-test-3310 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:19:46.416425 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:19:46.418193 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:19:46.418321 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-3310/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.170%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.5.20%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0423 18:19:46.504076 25 utils.go:356] Waiting for responses: map[]
  I0423 18:19:46.504224 25 utils.go:360] reached 10.200.5.20 after 0/1 tries
  I0423 18:19:46.504264 25 networking.go:53] Going to retry 0 out of 2 pods....
  I0423 18:19:46.504542 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3310" for this suite. @ 04/23/25 18:19:46.516
• [24.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 04/23/25 18:19:46.528
  I0423 18:19:46.528526 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 18:19:46.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:19:46.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:19:46.582
  STEP: Creating a ResourceQuota @ 04/23/25 18:19:46.596
  STEP: Getting a ResourceQuota @ 04/23/25 18:19:46.614
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/23/25 18:19:46.625
  STEP: Patching the ResourceQuota @ 04/23/25 18:19:46.638
  STEP: Deleting a Collection of ResourceQuotas @ 04/23/25 18:19:46.668
  STEP: Verifying the deleted ResourceQuota @ 04/23/25 18:19:46.687
  I0423 18:19:46.694850 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-418" for this suite. @ 04/23/25 18:19:46.708
• [0.197 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 04/23/25 18:19:46.727
  I0423 18:19:46.727861 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:19:46.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:19:46.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:19:46.788
  STEP: creating service in namespace services-4136 @ 04/23/25 18:19:46.799
  STEP: creating service affinity-nodeport-transition in namespace services-4136 @ 04/23/25 18:19:46.799
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4136 @ 04/23/25 18:19:46.843
  I0423 18:19:46.861259      25 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-4136, replica count: 3
  I0423 18:19:49.915003      25 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 18:19:49.945760 25 resource.go:361] Creating new exec pod
  I0423 18:19:52.982751 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4136 exec execpod-affinityv6b5h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0423 18:19:53.190034 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0423 18:19:53.190111 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 18:19:53.190232 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4136 exec execpod-affinityv6b5h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.181 80'
  I0423 18:19:53.420343 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.181 80\nConnection to 10.32.0.181 80 port [tcp/http] succeeded!\n"
  I0423 18:19:53.420416 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 18:19:53.420526 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4136 exec execpod-affinityv6b5h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31895'
  I0423 18:19:53.633744 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31895\nConnection to 192.168.58.100 31895 port [tcp/*] succeeded!\n"
  I0423 18:19:53.633821 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 18:19:53.633999 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4136 exec execpod-affinityv6b5h -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31895'
  I0423 18:19:53.786185 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31895\nConnection to 192.168.58.101 31895 port [tcp/*] succeeded!\n"
  I0423 18:19:53.786356 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 18:19:53.807725 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4136 exec execpod-affinityv6b5h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:31895/ ; done'
  I0423 18:19:54.217050 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n"
  I0423 18:19:54.217429 25 builder.go:147] stdout: "\naffinity-nodeport-transition-7ltws\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-g4785\naffinity-nodeport-transition-g4785\naffinity-nodeport-transition-7ltws\naffinity-nodeport-transition-7ltws\naffinity-nodeport-transition-7ltws\naffinity-nodeport-transition-g4785\naffinity-nodeport-transition-7ltws\naffinity-nodeport-transition-7ltws\naffinity-nodeport-transition-7ltws\naffinity-nodeport-transition-g4785\naffinity-nodeport-transition-g4785\naffinity-nodeport-transition-g4785\naffinity-nodeport-transition-7ltws"
  I0423 18:19:54.217477 25 service.go:242] Received response from host: affinity-nodeport-transition-7ltws
  I0423 18:19:54.217538 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.217559 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.217579 25 service.go:242] Received response from host: affinity-nodeport-transition-g4785
  I0423 18:19:54.217598 25 service.go:242] Received response from host: affinity-nodeport-transition-g4785
  I0423 18:19:54.217617 25 service.go:242] Received response from host: affinity-nodeport-transition-7ltws
  I0423 18:19:54.217636 25 service.go:242] Received response from host: affinity-nodeport-transition-7ltws
  I0423 18:19:54.217655 25 service.go:242] Received response from host: affinity-nodeport-transition-7ltws
  I0423 18:19:54.217674 25 service.go:242] Received response from host: affinity-nodeport-transition-g4785
  I0423 18:19:54.217692 25 service.go:242] Received response from host: affinity-nodeport-transition-7ltws
  I0423 18:19:54.217711 25 service.go:242] Received response from host: affinity-nodeport-transition-7ltws
  I0423 18:19:54.217729 25 service.go:242] Received response from host: affinity-nodeport-transition-7ltws
  I0423 18:19:54.217747 25 service.go:242] Received response from host: affinity-nodeport-transition-g4785
  I0423 18:19:54.217766 25 service.go:242] Received response from host: affinity-nodeport-transition-g4785
  I0423 18:19:54.217786 25 service.go:242] Received response from host: affinity-nodeport-transition-g4785
  I0423 18:19:54.217805 25 service.go:242] Received response from host: affinity-nodeport-transition-7ltws
  I0423 18:19:54.248284 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4136 exec execpod-affinityv6b5h -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:31895/ ; done'
  I0423 18:19:54.577846 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31895/\n"
  I0423 18:19:54.577951 25 builder.go:147] stdout: "\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt\naffinity-nodeport-transition-2wjjt"
  I0423 18:19:54.577981 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578004 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578023 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578048 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578066 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578085 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578102 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578140 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578158 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578176 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578193 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578211 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578529 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578552 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578570 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.578587 25 service.go:242] Received response from host: affinity-nodeport-transition-2wjjt
  I0423 18:19:54.579411 25 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4136, will wait for the garbage collector to delete the pods @ 04/23/25 18:19:54.617
  I0423 18:19:54.695449 25 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 16.455867ms
  I0423 18:19:54.896563 25 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 201.114703ms
  I0423 18:19:58.558721 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4136" for this suite. @ 04/23/25 18:19:58.565
• [11.853 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/23/25 18:19:58.58
  I0423 18:19:58.580332 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 18:19:58.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:19:58.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:19:58.61
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/23/25 18:19:58.614
  STEP: Saw pod success @ 04/23/25 18:20:02.656
  I0423 18:20:02.661062 25 output.go:196] Trying to get logs from node worker00 pod pod-779b47ec-8f0b-4e7d-8ea1-4843665364e4 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 18:20:02.676
  I0423 18:20:02.707406 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7053" for this suite. @ 04/23/25 18:20:02.714
• [4.144 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/23/25 18:20:02.724
  I0423 18:20:02.725020 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 18:20:02.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:20:02.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:20:02.766
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/23/25 18:20:02.774
  STEP: When a replicaset with a matching selector is created @ 04/23/25 18:20:04.817
  STEP: Then the orphan pod is adopted @ 04/23/25 18:20:04.825
  STEP: When the matched label of one of its pods change @ 04/23/25 18:20:05.842
  I0423 18:20:05.850446 25 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/23/25 18:20:05.877
  I0423 18:20:06.901182 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4710" for this suite. @ 04/23/25 18:20:06.909
• [4.197 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/23/25 18:20:06.922
  I0423 18:20:06.922565 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:20:06.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:20:06.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:20:06.948
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 18:20:06.964
  STEP: Saw pod success @ 04/23/25 18:20:11.029
  I0423 18:20:11.039377 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-522ec53f-6ce1-443a-ad9d-d107855ecefd container client-container: <nil>
  STEP: delete the pod @ 04/23/25 18:20:11.052
  I0423 18:20:11.085506 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6222" for this suite. @ 04/23/25 18:20:11.099
• [4.194 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/23/25 18:20:11.116
  I0423 18:20:11.117010 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename subpath @ 04/23/25 18:20:11.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:20:11.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:20:11.158
  STEP: Setting up data @ 04/23/25 18:20:11.166
  STEP: Creating pod pod-subpath-test-configmap-znsx @ 04/23/25 18:20:11.191
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 18:20:11.191
  STEP: Saw pod success @ 04/23/25 18:20:35.3
  I0423 18:20:35.306254 25 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-configmap-znsx container test-container-subpath-configmap-znsx: <nil>
  STEP: delete the pod @ 04/23/25 18:20:35.321
  STEP: Deleting pod pod-subpath-test-configmap-znsx @ 04/23/25 18:20:35.353
  I0423 18:20:35.353260 25 delete.go:62] Deleting pod "pod-subpath-test-configmap-znsx" in namespace "subpath-1758"
  I0423 18:20:35.359052 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1758" for this suite. @ 04/23/25 18:20:35.369
• [24.265 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/23/25 18:20:35.382
  I0423 18:20:35.382673 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 18:20:35.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:20:35.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:20:35.417
  STEP: Creating configMap with name configmap-test-volume-f866fff3-5597-4b99-94d8-45824ea85907 @ 04/23/25 18:20:35.422
  STEP: Creating a pod to test consume configMaps @ 04/23/25 18:20:35.429
  STEP: Saw pod success @ 04/23/25 18:20:39.467
  I0423 18:20:39.472556 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-53f7bd0e-d84e-4277-8f17-9208a6be3fdb container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 18:20:39.483
  I0423 18:20:39.515238 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9841" for this suite. @ 04/23/25 18:20:39.525
• [4.157 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/23/25 18:20:39.54
  I0423 18:20:39.540356 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename events @ 04/23/25 18:20:39.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:20:39.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:20:39.578
  STEP: Create set of events @ 04/23/25 18:20:39.586
  I0423 18:20:39.597799 25 core_events.go:198] created test-event-1
  I0423 18:20:39.609216 25 core_events.go:198] created test-event-2
  I0423 18:20:39.618807 25 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/23/25 18:20:39.618
  STEP: delete collection of events @ 04/23/25 18:20:39.629
  I0423 18:20:39.630088 25 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/23/25 18:20:39.664
  I0423 18:20:39.664427 25 core_events.go:230] requesting list of events to confirm quantity
  I0423 18:20:39.670067 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7553" for this suite. @ 04/23/25 18:20:39.679
• [0.153 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 04/23/25 18:20:39.692
  I0423 18:20:39.692968 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename dns @ 04/23/25 18:20:39.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:20:39.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:20:39.728
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/23/25 18:20:39.734
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/23/25 18:20:39.734
  STEP: creating a pod to probe DNS @ 04/23/25 18:20:39.734
  STEP: submitting the pod to kubernetes @ 04/23/25 18:20:39.734
  STEP: retrieving the pod @ 04/23/25 18:20:57.832
  STEP: looking for the results for each expected name from probers @ 04/23/25 18:20:57.837
  I0423 18:20:57.861261 25 dns_common.go:528] DNS probes using dns-1375/dns-test-b9428c05-1c23-499a-a0c9-0b02834526c1 succeeded

  STEP: deleting the pod @ 04/23/25 18:20:57.861
  I0423 18:20:57.888735 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1375" for this suite. @ 04/23/25 18:20:57.899
• [18.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/23/25 18:20:57.92
  I0423 18:20:57.920408 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 18:20:57.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:20:57.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:20:57.942
  STEP: referencing a single matching pod @ 04/23/25 18:21:04.073
  STEP: referencing matching pods with named port @ 04/23/25 18:21:04.088
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/23/25 18:21:04.101
  STEP: recreating EndpointSlices after they've been deleted @ 04/23/25 18:21:04.113
  I0423 18:21:04.157853 25 endpointslice.go:938] EndpointSlice for Service endpointslice-2405/example-named-port not found
  I0423 18:21:06.169458 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2405" for this suite. @ 04/23/25 18:21:06.185
• [8.294 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/23/25 18:21:06.22
  I0423 18:21:06.220760 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 18:21:06.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:21:06.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:21:06.269
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/23/25 18:21:06.275
  I0423 18:21:06.295606 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0423 18:21:11.305518 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 18:21:11.305
  STEP: getting scale subresource @ 04/23/25 18:21:11.305
  STEP: updating a scale subresource @ 04/23/25 18:21:11.312
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/23/25 18:21:11.324
  STEP: Patch a scale subresource @ 04/23/25 18:21:11.328
  I0423 18:21:11.362300 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3026" for this suite. @ 04/23/25 18:21:11.381
• [5.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/23/25 18:21:11.411
  I0423 18:21:11.411217 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 18:21:11.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:21:11.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:21:11.447
  I0423 18:21:11.453308 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:21:12.490487 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1288" for this suite. @ 04/23/25 18:21:12.499
• [1.103 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 04/23/25 18:21:12.515
  I0423 18:21:12.515087 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 18:21:12.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:21:12.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:21:12.552
  STEP: creating the policy @ 04/23/25 18:21:12.566
  STEP: waiting until the marker is denied @ 04/23/25 18:21:12.599
  STEP: testing a replicated Deployment to be allowed @ 04/23/25 18:21:12.828
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/23/25 18:21:12.864
  I0423 18:21:12.974365 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1435" for this suite. @ 04/23/25 18:21:12.978
• [0.472 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/23/25 18:21:12.987
  I0423 18:21:12.987903 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename gc @ 04/23/25 18:21:12.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:21:13.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:21:13.009
  STEP: create the rc @ 04/23/25 18:21:13.081
  W0423 18:21:13.090281      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/23/25 18:21:19.096
  STEP: wait for the rc to be deleted @ 04/23/25 18:21:19.139
  I0423 18:21:20.201771 25 garbage_collector.go:670] 80 pods remaining
  I0423 18:21:20.201844 25 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0423 18:21:20.201859 25 garbage_collector.go:678] 
  I0423 18:21:21.300310 25 garbage_collector.go:670] 71 pods remaining
  I0423 18:21:21.300357 25 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0423 18:21:21.300371 25 garbage_collector.go:678] 
  I0423 18:21:22.187053 25 garbage_collector.go:670] 58 pods remaining
  I0423 18:21:22.187104 25 garbage_collector.go:677] 57 pods has nil DeletionTimestamp
  I0423 18:21:22.187131 25 garbage_collector.go:678] 
  I0423 18:21:23.208106 25 garbage_collector.go:670] 40 pods remaining
  I0423 18:21:23.208161 25 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0423 18:21:23.208176 25 garbage_collector.go:678] 
  I0423 18:21:24.243189 25 garbage_collector.go:670] 32 pods remaining
  I0423 18:21:24.243249 25 garbage_collector.go:677] 32 pods has nil DeletionTimestamp
  I0423 18:21:24.243265 25 garbage_collector.go:678] 
  I0423 18:21:25.201170 25 garbage_collector.go:670] 17 pods remaining
  I0423 18:21:25.201518 25 garbage_collector.go:677] 17 pods has nil DeletionTimestamp
  I0423 18:21:25.201539 25 garbage_collector.go:678] 
  I0423 18:21:26.175202 25 garbage_collector.go:670] 0 pods remaining
  I0423 18:21:26.175272 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0423 18:21:26.175303 25 garbage_collector.go:678] 
  STEP: Gathering metrics @ 04/23/25 18:21:27.151
  I0423 18:21:27.321313 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 18:21:27.322494 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3224" for this suite. @ 04/23/25 18:21:27.329
• [14.360 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1634
  STEP: Creating a kubernetes client @ 04/23/25 18:21:27.348
  I0423 18:21:27.348291 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 18:21:27.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:21:27.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:21:27.418
  STEP: creating the pod @ 04/23/25 18:21:27.429
  I0423 18:21:27.429466 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4745 create -f -'
  I0423 18:21:27.982155 25 builder.go:146] stderr: ""
  I0423 18:21:27.982393 25 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/23/25 18:21:40.096
  I0423 18:21:40.096774 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4745 label pods pause testing-label=testing-label-value'
  I0423 18:21:40.240361 25 builder.go:146] stderr: ""
  I0423 18:21:40.240467 25 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/23/25 18:21:40.24
  I0423 18:21:40.240589 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4745 get pod pause -L testing-label'
  I0423 18:21:40.398437 25 builder.go:146] stderr: ""
  I0423 18:21:40.398512 25 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          13s   testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/23/25 18:21:40.398
  I0423 18:21:40.398750 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4745 label pods pause testing-label-'
  I0423 18:21:40.548704 25 builder.go:146] stderr: ""
  I0423 18:21:40.548956 25 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/23/25 18:21:40.549
  I0423 18:21:40.549168 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4745 get pod pause -L testing-label'
  I0423 18:21:40.626711 25 builder.go:146] stderr: ""
  I0423 18:21:40.626821 25 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          13s   \n"
  STEP: using delete to clean up resources @ 04/23/25 18:21:40.627
  I0423 18:21:40.628175 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4745 delete --grace-period=0 --force -f -'
  I0423 18:21:40.743186 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 18:21:40.743291 25 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0423 18:21:40.743370 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4745 get rc,svc -l name=pause --no-headers'
  I0423 18:21:40.893976 25 builder.go:146] stderr: "No resources found in kubectl-4745 namespace.\n"
  I0423 18:21:40.894073 25 builder.go:147] stdout: ""
  I0423 18:21:40.894183 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4745 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0423 18:21:41.018646 25 builder.go:146] stderr: ""
  I0423 18:21:41.018716 25 builder.go:147] stdout: ""
  I0423 18:21:41.018825 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4745" for this suite. @ 04/23/25 18:21:41.022
• [13.683 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/23/25 18:21:41.031
  I0423 18:21:41.031309 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 18:21:41.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:21:41.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:21:41.058
  I0423 18:21:41.111344 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3600" for this suite. @ 04/23/25 18:21:41.124
• [0.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/23/25 18:21:41.134
  I0423 18:21:41.134995 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 18:21:41.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:21:41.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:21:41.168
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/23/25 18:21:41.174
  STEP: Saw pod success @ 04/23/25 18:21:45.212
  I0423 18:21:45.217941 25 output.go:196] Trying to get logs from node worker00 pod pod-e36e1dd3-98b2-4298-8f08-ea74c75e15d7 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 18:21:45.231
  I0423 18:21:45.249258 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7831" for this suite. @ 04/23/25 18:21:45.255
• [4.130 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/23/25 18:21:45.263
  I0423 18:21:45.263998 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename init-container @ 04/23/25 18:21:45.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:21:45.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:21:45.297
  STEP: creating the pod @ 04/23/25 18:21:45.303
  I0423 18:21:45.303370 25 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0423 18:22:29.658814 25 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-e8c89a7b-b07d-4152-9648-a5efe66cc2c7", GenerateName:"", Namespace:"init-container-6418", SelfLink:"", UID:"bf8370d0-94d8-4928-bc80-d68fe0ae3ed3", ResourceVersion:"9278", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 18, 21, 45, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"303350790"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"fbf97709a0d279b32ed12dc754e3fec3a37d48003def58f551e5d503eaf49663", "cni.projectcalico.org/podIP":"10.200.131.180/32", "cni.projectcalico.org/podIPs":"10.200.131.180/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 18, 21, 45, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aae948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 18, 21, 45, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aae9a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 18, 22, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aae9f0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-95h8w", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0049a5800), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-95h8w", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-95h8w", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-95h8w", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002aaa820), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker00", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000c78b80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002aaa8a0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002aaa8c0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002aaa8c8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002aaa8cc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000cf2b90), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 18, 21, 46, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 18, 21, 45, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 18, 21, 45, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 18, 21, 45, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 18, 21, 45, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.58.100", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.58.100"}}, PodIP:"10.200.131.180", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.200.131.180"}}, StartTime:time.Date(2025, time.April, 23, 18, 21, 45, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00265e620)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00265e690)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://9574a0f7020c274ff7c081bf3e374914aa2bd37aa07168e050678ab52cb7829e", Started:(*bool)(0xc002aaa96f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0049a58c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc002aaa975), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0049a5880), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc002aaa944), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0423 18:22:29.659232 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6418" for this suite. @ 04/23/25 18:22:29.67
• [44.417 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 04/23/25 18:22:29.681
  I0423 18:22:29.681640 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename dns @ 04/23/25 18:22:29.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:22:29.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:22:29.722
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1174.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1174.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/23/25 18:22:29.728
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1174.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1174.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/23/25 18:22:29.728
  STEP: creating a pod to probe /etc/hosts @ 04/23/25 18:22:29.728
  STEP: submitting the pod to kubernetes @ 04/23/25 18:22:29.728
  STEP: retrieving the pod @ 04/23/25 18:22:31.766
  STEP: looking for the results for each expected name from probers @ 04/23/25 18:22:31.771
  I0423 18:22:31.795273 25 dns_common.go:528] DNS probes using dns-1174/dns-test-7811e458-5e75-4a77-ac8a-22caa040bab3 succeeded

  STEP: deleting the pod @ 04/23/25 18:22:31.795
  I0423 18:22:31.814691 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1174" for this suite. @ 04/23/25 18:22:31.823
• [2.159 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 04/23/25 18:22:31.84
  I0423 18:22:31.840701 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 18:22:31.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:22:31.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:22:31.873
  STEP: Creating pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585 @ 04/23/25 18:22:31.876
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 18:22:33.893
  I0423 18:22:33.897296 25 container_probe.go:1749] Initial restart count of pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b is 0
  I0423 18:22:33.901225 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:35.906608 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:37.912130 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:39.920659 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:41.926458 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:43.932155 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:45.939692 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:47.947973 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:49.954225 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:51.960165 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:53.966257 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:55.973526 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:57.979184 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:22:59.986822 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:01.993026 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:03.998039 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:06.004618 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:08.013075 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:10.019989 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:12.026456 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:14.032254 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:16.039488 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:18.043484 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:20.049154 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:22.057021 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:24.063494 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:26.071967 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:28.078426 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:30.085189 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:32.091451 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:34.097174 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:36.105045 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:38.110919 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:40.115561 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:42.122288 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:44.126354 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:46.132485 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:48.140592 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:50.147956 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:52.153577 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:54.167460 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:56.175219 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:23:58.182936 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:00.188274 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:02.193737 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:04.198787 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:06.206484 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:08.213510 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:10.218160 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:12.222779 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:14.228206 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:16.234674 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:18.241966 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:20.248168 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:22.254781 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:24.261242 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:26.266726 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:28.272551 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:30.278912 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:32.284818 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:34.291997 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:36.296039 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:38.301579 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:40.320144 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:42.327232 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:44.334713 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:46.338506 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:48.342930 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:50.351090 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:52.358297 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:54.364229 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:56.370743 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:24:58.377629 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:00.383413 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:02.390889 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:04.398092 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:06.403844 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:08.410493 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:10.417681 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:12.424824 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:14.430179 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:16.441115 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:18.463920 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:20.483346 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:22.497237 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:24.514724 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:26.529792 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:28.535915 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:30.556088 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:32.564322 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:34.569017 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:36.573430 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:38.581843 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:40.588656 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:42.596313 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:44.601297 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:46.605699 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:48.611405 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:50.618937 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:52.627005 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:54.632117 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:56.636396 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:25:58.645115 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:00.654973 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:02.659737 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:04.666704 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:06.672053 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:08.676742 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:10.684972 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:12.692065 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:14.698817 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:16.704067 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:18.707502 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:20.714873 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:22.720262 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:24.728385 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:26.732801 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:28.739127 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:30.745785 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  I0423 18:26:32.752242 25 container_probe.go:1759] Get pod test-webserver-fca375d2-bec7-4768-b73b-d985e7d1183b in namespace container-probe-3585
  STEP: deleting the pod @ 04/23/25 18:26:34.753
  I0423 18:26:34.793010 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3585" for this suite. @ 04/23/25 18:26:34.81
• [242.989 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 04/23/25 18:26:34.829
  I0423 18:26:34.829401 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 18:26:34.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:26:34.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:26:34.855
  STEP: create deployment with httpd image @ 04/23/25 18:26:34.862
  I0423 18:26:34.862799 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1432 create -f -'
  I0423 18:26:35.007534 25 builder.go:146] stderr: ""
  I0423 18:26:35.007587 25 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/23/25 18:26:35.007
  I0423 18:26:35.007685 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1432 diff -f -'
  I0423 18:26:35.231172 25 builder.go:135] rc: 1
  I0423 18:26:35.231380 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1432 delete -f -'
  I0423 18:26:35.371369 25 builder.go:146] stderr: ""
  I0423 18:26:35.371437 25 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0423 18:26:35.371677 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1432" for this suite. @ 04/23/25 18:26:35.381
• [0.563 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 04/23/25 18:26:35.394
  I0423 18:26:35.394899 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 18:26:35.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:26:35.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:26:35.433
  STEP: Creating a ReplaceConcurrent cronjob @ 04/23/25 18:26:35.438
  STEP: Ensuring a job is scheduled @ 04/23/25 18:26:35.449
  STEP: Ensuring exactly one is scheduled @ 04/23/25 18:27:01.455
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/23/25 18:27:01.459
  STEP: Ensuring the job is replaced with a new one @ 04/23/25 18:27:01.464
  STEP: Removing cronjob @ 04/23/25 18:28:01.472
  I0423 18:28:01.491770 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6619" for this suite. @ 04/23/25 18:28:01.5
• [86.118 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/23/25 18:28:01.511
  I0423 18:28:01.511656 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/23/25 18:28:01.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:28:01.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:28:01.553
  STEP: Cleaning up the secret @ 04/23/25 18:28:03.609
  STEP: Cleaning up the configmap @ 04/23/25 18:28:03.628
  STEP: Cleaning up the pod @ 04/23/25 18:28:03.64
  I0423 18:28:03.662364 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4465" for this suite. @ 04/23/25 18:28:03.671
• [2.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 04/23/25 18:28:03.704
  I0423 18:28:03.705235 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 18:28:03.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:28:03.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:28:03.733
  STEP: validating api versions @ 04/23/25 18:28:03.738
  I0423 18:28:03.738882 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-6190 api-versions'
  I0423 18:28:03.834954 25 builder.go:146] stderr: ""
  I0423 18:28:03.835006 25 builder.go:147] stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\nadmissionregistration.k8s.io/v1beta1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthentication.k8s.io/v1alpha1\nauthentication.k8s.io/v1beta1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncoordination.k8s.io/v1alpha1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1beta1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha3\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1alpha1\nstorage.k8s.io/v1beta1\nv1\n"
  I0423 18:28:03.835127 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6190" for this suite. @ 04/23/25 18:28:03.838
• [0.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/23/25 18:28:03.845
  I0423 18:28:03.845317 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename proxy @ 04/23/25 18:28:03.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:28:03.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:28:03.867
  I0423 18:28:03.875273 25 proxy.go:293] Creating pod...
  I0423 18:28:05.906123 25 proxy.go:317] Creating service...
  I0423 18:28:05.933904 25 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/pods/agnhost/proxy/some/path/with/DELETE
  I0423 18:28:05.948948 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 18:28:05.949076 25 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/pods/agnhost/proxy/some/path/with/GET
  I0423 18:28:05.959941 25 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0423 18:28:05.960385 25 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/pods/agnhost/proxy/some/path/with/HEAD
  I0423 18:28:05.974384 25 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0423 18:28:05.974628 25 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/pods/agnhost/proxy/some/path/with/OPTIONS
  I0423 18:28:05.979751 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 18:28:05.979887 25 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/pods/agnhost/proxy/some/path/with/PATCH
  I0423 18:28:05.985561 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 18:28:05.985619 25 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/pods/agnhost/proxy/some/path/with/POST
  I0423 18:28:05.993057 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 18:28:05.993112 25 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/pods/agnhost/proxy/some/path/with/PUT
  I0423 18:28:05.996509 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 18:28:05.996548 25 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/services/test-service/proxy/some/path/with/DELETE
  I0423 18:28:05.999617 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 18:28:05.999659 25 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/services/test-service/proxy/some/path/with/GET
  I0423 18:28:06.003224 25 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0423 18:28:06.003273 25 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/services/test-service/proxy/some/path/with/HEAD
  I0423 18:28:06.007977 25 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0423 18:28:06.008123 25 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/services/test-service/proxy/some/path/with/OPTIONS
  I0423 18:28:06.012458 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 18:28:06.012503 25 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/services/test-service/proxy/some/path/with/PATCH
  I0423 18:28:06.017043 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 18:28:06.017084 25 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/services/test-service/proxy/some/path/with/POST
  I0423 18:28:06.025090 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 18:28:06.025540 25 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-416/services/test-service/proxy/some/path/with/PUT
  I0423 18:28:06.033974 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 18:28:06.034107 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-416" for this suite. @ 04/23/25 18:28:06.04
• [2.202 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 04/23/25 18:28:06.047
  I0423 18:28:06.047375 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:28:06.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:28:06.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:28:06.066
  I0423 18:28:06.071682 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8282" for this suite. @ 04/23/25 18:28:06.142
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/23/25 18:28:06.154
  I0423 18:28:06.154528 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename lease-test @ 04/23/25 18:28:06.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:28:06.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:28:06.19
  I0423 18:28:06.275765 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-6998" for this suite. @ 04/23/25 18:28:06.28
• [0.132 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 04/23/25 18:28:06.286
  I0423 18:28:06.286149 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 18:28:06.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:28:06.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:28:06.308
  I0423 18:28:06.318290 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8896" for this suite. @ 04/23/25 18:28:06.382
• [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 04/23/25 18:28:06.389
  I0423 18:28:06.389545 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 18:28:06.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:28:06.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:28:06.406
  I0423 18:28:06.426178 25 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0423 18:29:06.433935 25 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/23/25 18:29:06.438
  I0423 18:29:06.438496 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/23/25 18:29:06.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:06.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:06.461
  I0423 18:29:06.476636 25 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0423 18:29:06.479505 25 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0423 18:29:06.549473 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5010" for this suite. @ 04/23/25 18:29:06.553
  I0423 18:29:06.559871 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5441" for this suite. @ 04/23/25 18:29:06.653
• [60.270 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/23/25 18:29:06.66
  I0423 18:29:06.660455 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename podtemplate @ 04/23/25 18:29:06.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:06.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:06.677
  STEP: Create set of pod templates @ 04/23/25 18:29:06.682
  I0423 18:29:06.686912 25 podtemplates.go:143] created test-podtemplate-1
  I0423 18:29:06.690541 25 podtemplates.go:143] created test-podtemplate-2
  I0423 18:29:06.694906 25 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/23/25 18:29:06.694
  STEP: delete collection of pod templates @ 04/23/25 18:29:06.697
  I0423 18:29:06.697937 25 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/23/25 18:29:06.716
  I0423 18:29:06.716527 25 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0423 18:29:06.719611 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1633" for this suite. @ 04/23/25 18:29:06.756
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 04/23/25 18:29:06.77
  I0423 18:29:06.770126 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:29:06.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:06.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:06.805
  STEP: creating a Service @ 04/23/25 18:29:06.821
  STEP: watching for the Service to be added @ 04/23/25 18:29:06.851
  I0423 18:29:06.856035 25 service.go:3445] Found Service test-service-6tbkk in namespace services-2496 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31081}]
  I0423 18:29:06.856137 25 service.go:3452] Service test-service-6tbkk created
  STEP: Getting /status @ 04/23/25 18:29:06.856
  I0423 18:29:06.871783 25 service.go:3463] Service test-service-6tbkk has LoadBalancer: {[{192.168.0.16  0xc0046305c0 []}]}
  STEP: patching the ServiceStatus @ 04/23/25 18:29:06.871
  STEP: watching for the Service to be patched @ 04/23/25 18:29:06.886
  I0423 18:29:06.892635 25 service.go:3486] observed Service test-service-6tbkk in namespace services-2496 with annotations: map[] & LoadBalancer: {[]}
  I0423 18:29:06.892790 25 service.go:3486] observed Service test-service-6tbkk in namespace services-2496 with annotations: map[] & LoadBalancer: {[{192.168.0.16  0xc0045d1f40 []}]}
  I0423 18:29:06.892899 25 service.go:3489] Found Service test-service-6tbkk in namespace services-2496 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc00116e050 []}]}
  I0423 18:29:06.892925 25 service.go:3496] Service test-service-6tbkk has service status patched
  STEP: updating the ServiceStatus @ 04/23/25 18:29:06.893
  I0423 18:29:06.907671 25 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/23/25 18:29:06.91
  I0423 18:29:06.919343 25 service.go:3527] Observed Service test-service-6tbkk in namespace services-2496 with annotations: map[] & Conditions: []
  I0423 18:29:06.919427 25 service.go:3527] Observed Service test-service-6tbkk in namespace services-2496 with annotations: map[] & Conditions: []
  I0423 18:29:06.919476 25 service.go:3538] Observed Service test-service-6tbkk in namespace services-2496 with annotations: map[patchedstatus:true] & Conditions: []
  I0423 18:29:06.919595 25 service.go:3534] Found Service test-service-6tbkk in namespace services-2496 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 18:29:06.919652 25 service.go:3545] Service test-service-6tbkk has service status updated
  STEP: patching the service @ 04/23/25 18:29:06.919
  STEP: watching for the Service to be patched @ 04/23/25 18:29:06.946
  I0423 18:29:06.952068 25 service.go:3568] observed Service test-service-6tbkk in namespace services-2496 with labels: map[test-service-static:true]
  I0423 18:29:06.952222 25 service.go:3568] observed Service test-service-6tbkk in namespace services-2496 with labels: map[test-service-static:true]
  I0423 18:29:06.952262 25 service.go:3568] observed Service test-service-6tbkk in namespace services-2496 with labels: map[test-service-static:true]
  I0423 18:29:06.952286 25 service.go:3568] observed Service test-service-6tbkk in namespace services-2496 with labels: map[test-service-static:true]
  I0423 18:29:06.952408 25 service.go:3568] observed Service test-service-6tbkk in namespace services-2496 with labels: map[test-service-static:true]
  I0423 18:29:06.952500 25 service.go:3571] Found Service test-service-6tbkk in namespace services-2496 with labels: map[test-service:patched test-service-static:true]
  I0423 18:29:06.952601 25 service.go:3578] Service test-service-6tbkk patched
  STEP: deleting the service @ 04/23/25 18:29:06.952
  STEP: watching for the Service to be deleted @ 04/23/25 18:29:06.981
  I0423 18:29:06.984642 25 service.go:3602] Observed event: ADDED
  I0423 18:29:06.984696 25 service.go:3602] Observed event: MODIFIED
  I0423 18:29:06.984764 25 service.go:3602] Observed event: MODIFIED
  I0423 18:29:06.984956 25 service.go:3602] Observed event: MODIFIED
  I0423 18:29:06.985007 25 service.go:3602] Observed event: MODIFIED
  I0423 18:29:06.985104 25 service.go:3602] Observed event: MODIFIED
  I0423 18:29:06.985241 25 service.go:3598] Found Service test-service-6tbkk in namespace services-2496 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0423 18:29:06.985263 25 service.go:3607] Service test-service-6tbkk deleted
  I0423 18:29:06.986257 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2496" for this suite. @ 04/23/25 18:29:06.991
• [0.232 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 04/23/25 18:29:07.002
  I0423 18:29:07.002459 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 18:29:07.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:07.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:07.026
  STEP: Setting up server cert @ 04/23/25 18:29:07.1
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 18:29:08.12
  STEP: Deploying the webhook pod @ 04/23/25 18:29:08.128
  STEP: Wait for the deployment to be ready @ 04/23/25 18:29:08.145
  I0423 18:29:08.153330 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 18:29:10.169
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 18:29:10.193
  I0423 18:29:11.194301 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/23/25 18:29:11.204
  STEP: create a pod that should be denied by the webhook @ 04/23/25 18:29:11.246
  STEP: create a pod that causes the webhook to hang @ 04/23/25 18:29:11.266
  STEP: create a configmap that should be denied by the webhook @ 04/23/25 18:29:21.286
  STEP: create a configmap that should be admitted by the webhook @ 04/23/25 18:29:21.308
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/23/25 18:29:21.323
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/23/25 18:29:21.338
  STEP: create a namespace that bypass the webhook @ 04/23/25 18:29:21.346
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/23/25 18:29:21.368
  I0423 18:29:21.498677 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6773" for this suite. @ 04/23/25 18:29:21.515
  STEP: Destroying namespace "webhook-markers-7333" for this suite. @ 04/23/25 18:29:21.525
  STEP: Destroying namespace "exempted-namespace-529" for this suite. @ 04/23/25 18:29:21.533
• [14.537 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/23/25 18:29:21.539
  I0423 18:29:21.539724 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 18:29:21.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:21.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:21.566
  I0423 18:29:21.570331 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:29:22.143478 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7465" for this suite. @ 04/23/25 18:29:22.151
• [0.621 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/23/25 18:29:22.161
  I0423 18:29:22.161217 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 18:29:22.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:22.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:22.202
  STEP: reading a file in the container @ 04/23/25 18:29:24.244
  I0423 18:29:24.244582 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7103 pod-service-account-23eeff35-a732-4a0d-9ddc-59c5af194606 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/23/25 18:29:24.481
  I0423 18:29:24.482002 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7103 pod-service-account-23eeff35-a732-4a0d-9ddc-59c5af194606 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/23/25 18:29:24.673
  I0423 18:29:24.673899 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7103 pod-service-account-23eeff35-a732-4a0d-9ddc-59c5af194606 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0423 18:29:24.889669 25 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-7103"
  I0423 18:29:24.894270 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7103" for this suite. @ 04/23/25 18:29:24.899
• [2.757 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 04/23/25 18:29:24.918
  I0423 18:29:24.918182 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 18:29:24.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:24.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:24.948
  STEP: Creating configMap configmap-1956/configmap-test-17979c1f-3540-4978-b322-ea92aa7e3387 @ 04/23/25 18:29:24.954
  STEP: Creating a pod to test consume configMaps @ 04/23/25 18:29:24.963
  STEP: Saw pod success @ 04/23/25 18:29:28.992
  I0423 18:29:28.997435 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-2f0dba93-0651-4368-a518-a03c67a2d752 container env-test: <nil>
  STEP: delete the pod @ 04/23/25 18:29:29.011
  I0423 18:29:29.050239 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1956" for this suite. @ 04/23/25 18:29:29.058
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/23/25 18:29:29.068
  I0423 18:29:29.069315 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename init-container @ 04/23/25 18:29:29.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:29.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:29.103
  STEP: creating the pod @ 04/23/25 18:29:29.109
  I0423 18:29:29.109254 25 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0423 18:29:33.823986 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1144" for this suite. @ 04/23/25 18:29:33.836
• [4.779 seconds]
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/23/25 18:29:33.847
  I0423 18:29:33.847534 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 18:29:33.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:29:33.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:29:33.87
  STEP: Creating a ForbidConcurrent cronjob @ 04/23/25 18:29:33.874
  STEP: Ensuring a job is scheduled @ 04/23/25 18:29:33.885
  STEP: Ensuring exactly one is scheduled @ 04/23/25 18:30:01.892
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/23/25 18:30:01.896
  STEP: Ensuring no more jobs are scheduled @ 04/23/25 18:30:01.902
  STEP: Removing cronjob @ 04/23/25 18:30:01.905
  I0423 18:30:01.918469 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3012" for this suite. @ 04/23/25 18:30:01.927
• [28.091 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 04/23/25 18:30:01.94
  I0423 18:30:01.940123 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 18:30:01.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:01.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:01.983
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/23/25 18:30:01.989
  I0423 18:30:01.991484 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:30:03.404738 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:30:09.213429 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2911" for this suite. @ 04/23/25 18:30:09.224
• [7.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/23/25 18:30:09.246
  I0423 18:30:09.246392 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename csi-storageclass @ 04/23/25 18:30:09.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:09.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:09.271
  STEP: Creating a StorageClass @ 04/23/25 18:30:09.274
  STEP: Get StorageClass "e2e-k7c9b" @ 04/23/25 18:30:09.279
  STEP: Patching the StorageClass "e2e-k7c9b" @ 04/23/25 18:30:09.282
  STEP: Delete StorageClass "e2e-k7c9b" @ 04/23/25 18:30:09.287
  STEP: Confirm deletion of StorageClass "e2e-k7c9b" @ 04/23/25 18:30:09.294
  STEP: Create a replacement StorageClass @ 04/23/25 18:30:09.297
  STEP: Updating StorageClass "e2e-v2-ll4nl" @ 04/23/25 18:30:09.305
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-ll4nl=updated" @ 04/23/25 18:30:09.316
  STEP: Deleting StorageClass "e2e-v2-ll4nl" via DeleteCollection @ 04/23/25 18:30:09.319
  STEP: Confirm deletion of StorageClass "e2e-v2-ll4nl" @ 04/23/25 18:30:09.328
  I0423 18:30:09.333450 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-9657" for this suite. @ 04/23/25 18:30:09.339
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/23/25 18:30:09.355
  I0423 18:30:09.355538 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename discovery @ 04/23/25 18:30:09.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:09.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:09.373
  STEP: Setting up server cert @ 04/23/25 18:30:09.378
  I0423 18:30:09.583592 25 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0423 18:30:09.584813 25 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0423 18:30:09.584918 25 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0423 18:30:09.584932 25 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0423 18:30:09.584947 25 discovery.go:139] Checking APIGroup: apps
  I0423 18:30:09.586416 25 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0423 18:30:09.586446 25 discovery.go:148] Versions found [{apps/v1 v1}]
  I0423 18:30:09.586458 25 discovery.go:154] apps/v1 matches apps/v1
  I0423 18:30:09.586469 25 discovery.go:139] Checking APIGroup: events.k8s.io
  I0423 18:30:09.587713 25 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0423 18:30:09.588180 25 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0423 18:30:09.588203 25 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0423 18:30:09.588215 25 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0423 18:30:09.590698 25 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0423 18:30:09.590731 25 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1} {authentication.k8s.io/v1beta1 v1beta1} {authentication.k8s.io/v1alpha1 v1alpha1}]
  I0423 18:30:09.590745 25 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0423 18:30:09.590756 25 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0423 18:30:09.591975 25 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0423 18:30:09.592001 25 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0423 18:30:09.592013 25 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0423 18:30:09.592025 25 discovery.go:139] Checking APIGroup: autoscaling
  I0423 18:30:09.593449 25 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0423 18:30:09.593783 25 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0423 18:30:09.593796 25 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0423 18:30:09.593807 25 discovery.go:139] Checking APIGroup: batch
  I0423 18:30:09.595437 25 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0423 18:30:09.595471 25 discovery.go:148] Versions found [{batch/v1 v1}]
  I0423 18:30:09.595484 25 discovery.go:154] batch/v1 matches batch/v1
  I0423 18:30:09.595495 25 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0423 18:30:09.596267 25 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0423 18:30:09.596289 25 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0423 18:30:09.596299 25 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0423 18:30:09.596310 25 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0423 18:30:09.598373 25 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0423 18:30:09.599122 25 discovery.go:148] Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1beta1 v1beta1}]
  I0423 18:30:09.599147 25 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0423 18:30:09.599163 25 discovery.go:139] Checking APIGroup: policy
  I0423 18:30:09.602619 25 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0423 18:30:09.602661 25 discovery.go:148] Versions found [{policy/v1 v1}]
  I0423 18:30:09.602674 25 discovery.go:154] policy/v1 matches policy/v1
  I0423 18:30:09.602687 25 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0423 18:30:09.604129 25 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0423 18:30:09.604485 25 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0423 18:30:09.604518 25 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0423 18:30:09.604538 25 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0423 18:30:09.606537 25 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0423 18:30:09.606597 25 discovery.go:148] Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1} {storage.k8s.io/v1alpha1 v1alpha1}]
  I0423 18:30:09.606612 25 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0423 18:30:09.606623 25 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0423 18:30:09.609063 25 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0423 18:30:09.609095 25 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1beta1 v1beta1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
  I0423 18:30:09.609110 25 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0423 18:30:09.609122 25 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0423 18:30:09.610489 25 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0423 18:30:09.610526 25 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0423 18:30:09.610540 25 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0423 18:30:09.610551 25 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0423 18:30:09.611607 25 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0423 18:30:09.611636 25 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0423 18:30:09.611649 25 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0423 18:30:09.611660 25 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0423 18:30:09.612930 25 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0423 18:30:09.613064 25 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1} {coordination.k8s.io/v1alpha1 v1alpha1}]
  I0423 18:30:09.613077 25 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0423 18:30:09.613208 25 discovery.go:139] Checking APIGroup: node.k8s.io
  I0423 18:30:09.614787 25 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0423 18:30:09.614822 25 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0423 18:30:09.615057 25 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0423 18:30:09.615073 25 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0423 18:30:09.616503 25 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0423 18:30:09.617220 25 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0423 18:30:09.617247 25 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0423 18:30:09.617284 25 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0423 18:30:09.618985 25 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0423 18:30:09.619015 25 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0423 18:30:09.619027 25 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0423 18:30:09.619249 25 discovery.go:139] Checking APIGroup: internal.apiserver.k8s.io
  I0423 18:30:09.620885 25 discovery.go:147] PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
  I0423 18:30:09.620920 25 discovery.go:148] Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
  I0423 18:30:09.620933 25 discovery.go:154] internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
  I0423 18:30:09.620965 25 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0423 18:30:09.622285 25 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1alpha3
  I0423 18:30:09.622318 25 discovery.go:148] Versions found [{resource.k8s.io/v1alpha3 v1alpha3}]
  I0423 18:30:09.622346 25 discovery.go:154] resource.k8s.io/v1alpha3 matches resource.k8s.io/v1alpha3
  I0423 18:30:09.622363 25 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0423 18:30:09.623743 25 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0423 18:30:09.623800 25 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0423 18:30:09.623820 25 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0423 18:30:09.623905 25 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0423 18:30:09.625067 25 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0423 18:30:09.625108 25 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1}]
  I0423 18:30:09.625125 25 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0423 18:30:09.625572 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7131" for this suite. @ 04/23/25 18:30:09.631
• [0.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/23/25 18:30:09.653
  I0423 18:30:09.653406 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename subpath @ 04/23/25 18:30:09.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:09.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:09.681
  STEP: Setting up data @ 04/23/25 18:30:09.687
  STEP: Creating pod pod-subpath-test-downwardapi-zgln @ 04/23/25 18:30:09.701
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 18:30:09.701
  STEP: Saw pod success @ 04/23/25 18:30:33.796
  I0423 18:30:33.803500 25 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-downwardapi-zgln container test-container-subpath-downwardapi-zgln: <nil>
  STEP: delete the pod @ 04/23/25 18:30:33.815
  STEP: Deleting pod pod-subpath-test-downwardapi-zgln @ 04/23/25 18:30:33.836
  I0423 18:30:33.837058 25 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-zgln" in namespace "subpath-3718"
  I0423 18:30:33.841005 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3718" for this suite. @ 04/23/25 18:30:33.844
• [24.198 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 04/23/25 18:30:33.851
  I0423 18:30:33.851742 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename job @ 04/23/25 18:30:33.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:33.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:33.872
  STEP: Creating a job @ 04/23/25 18:30:33.875
  STEP: Ensuring active pods == parallelism @ 04/23/25 18:30:33.887
  STEP: delete a job @ 04/23/25 18:30:35.896
  STEP: deleting Job.batch foo in namespace job-3769, will wait for the garbage collector to delete the pods @ 04/23/25 18:30:35.896
  I0423 18:30:35.959750 25 resources.go:139] Deleting Job.batch foo took: 7.606313ms
  I0423 18:30:36.061105 25 resources.go:163] Terminating Job.batch foo pods took: 101.3433ms
  STEP: Ensuring job was deleted @ 04/23/25 18:30:37.862
  I0423 18:30:37.867492 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3769" for this suite. @ 04/23/25 18:30:37.873
• [4.035 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1766
  STEP: Creating a kubernetes client @ 04/23/25 18:30:37.888
  I0423 18:30:37.888896 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 18:30:37.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:37.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:37.916
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 18:30:37.921
  I0423 18:30:37.921807 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9687 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0423 18:30:38.015642 25 builder.go:146] stderr: ""
  I0423 18:30:38.015697 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/23/25 18:30:38.015
  I0423 18:30:38.022971 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9687 delete pods e2e-test-httpd-pod'
  I0423 18:30:39.834747 25 builder.go:146] stderr: ""
  I0423 18:30:39.834874 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0423 18:30:39.835056 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9687" for this suite. @ 04/23/25 18:30:39.842
• [1.963 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/23/25 18:30:39.853
  I0423 18:30:39.853238 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 18:30:39.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:39.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:39.882
  I0423 18:30:39.947527 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-435" for this suite. @ 04/23/25 18:30:39.956
• [0.116 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/23/25 18:30:39.967
  I0423 18:30:39.967558 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:30:39.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:39.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:39.998
  STEP: Creating configMap with name projected-configmap-test-volume-map-9bd26b4e-480a-4681-8d24-510a2d5844af @ 04/23/25 18:30:40.003
  STEP: Creating a pod to test consume configMaps @ 04/23/25 18:30:40.008
  STEP: Saw pod success @ 04/23/25 18:30:44.04
  I0423 18:30:44.044279 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-87b70180-5488-422e-9beb-1e977385d971 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 18:30:44.052
  I0423 18:30:44.083723 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2545" for this suite. @ 04/23/25 18:30:44.09
• [4.136 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 04/23/25 18:30:44.103
  I0423 18:30:44.104027 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 18:30:44.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:44.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:44.133
  I0423 18:30:44.138387 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  W0423 18:30:46.698890      25 warnings.go:70] unknown field "alpha"
  W0423 18:30:46.698919      25 warnings.go:70] unknown field "beta"
  W0423 18:30:46.698927      25 warnings.go:70] unknown field "delta"
  W0423 18:30:46.698936      25 warnings.go:70] unknown field "epsilon"
  W0423 18:30:46.698944      25 warnings.go:70] unknown field "gamma"
  I0423 18:30:47.233077 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7104" for this suite. @ 04/23/25 18:30:47.239
• [3.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 04/23/25 18:30:47.259
  I0423 18:30:47.259202 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 18:30:47.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:47.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:47.284
  I0423 18:30:47.290701 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:30:50.426322 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-508" for this suite. @ 04/23/25 18:30:50.432
• [3.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 04/23/25 18:30:50.441
  I0423 18:30:50.441689 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 18:30:50.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:30:50.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:30:50.473
  STEP: Creating pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048 @ 04/23/25 18:30:50.478
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 18:30:52.508
  I0423 18:30:52.512993 25 container_probe.go:1749] Initial restart count of pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 is 0
  I0423 18:30:52.516785 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:30:54.522579 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:30:56.527173 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:30:58.535198 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:00.540778 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:02.546298 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:04.552803 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:06.557869 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:08.574093 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:10.581617 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:12.587353 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:14.596232 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:16.600389 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:18.606643 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:20.614430 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:22.620641 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:24.626820 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:26.630914 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:28.638018 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:30.644962 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:32.651357 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:34.657455 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:36.661748 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:38.667612 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:40.674404 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:42.681546 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:44.687953 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:46.691892 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:48.698366 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:50.703432 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:52.712339 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:54.719463 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:56.723951 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:31:58.731748 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:00.737441 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:02.743483 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:04.748973 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:06.753515 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:08.757780 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:10.763555 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:12.770247 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:14.778045 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:16.781524 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:18.788664 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:20.795819 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:22.804508 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:24.811896 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:26.819565 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:28.825303 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:30.831463 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:32.836186 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:34.842993 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:36.848526 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:38.854973 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:40.862229 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:42.869219 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:44.876788 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:46.881491 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:48.887985 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:50.896035 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:52.901166 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:54.906482 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:56.914012 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:32:58.921079 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:00.927549 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:02.933614 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:04.939405 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:06.945924 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:08.952970 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:10.960391 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:12.967572 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:14.974445 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:16.981580 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:18.986790 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:20.998274 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:23.003606 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:25.010268 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:27.016916 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:29.023377 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:31.041008 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:33.051479 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:35.058753 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:37.064444 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:39.067736 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:41.078162 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:43.082697 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:45.089711 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:47.098569 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:49.104036 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:51.111576 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:53.118567 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:55.127811 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:57.133476 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:33:59.139071 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:01.144549 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:03.148516 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:05.159203 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:07.166066 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:09.182469 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:11.187319 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:13.194804 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:15.201649 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:17.209005 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:19.212698 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:21.218319 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:23.226081 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:25.235445 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:27.242825 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:29.247669 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:31.254682 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:33.260668 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:35.269547 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:37.275603 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:39.280358 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:41.285773 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:43.293931 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:45.301385 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:47.306953 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:49.313486 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  I0423 18:34:51.321393 25 container_probe.go:1759] Get pod test-grpc-6efde89d-ad41-4d11-ba7c-101e63bb56b7 in namespace container-probe-2048
  STEP: deleting the pod @ 04/23/25 18:34:53.323
  I0423 18:34:53.355486 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2048" for this suite. @ 04/23/25 18:34:53.375
• [242.958 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/23/25 18:34:53.399
  I0423 18:34:53.399570 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 18:34:53.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:34:53.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:34:53.427
  STEP: Creating secret with name secret-test-f116bf72-914a-4e3d-a9d1-672c3e52521e @ 04/23/25 18:34:53.434
  STEP: Creating a pod to test consume secrets @ 04/23/25 18:34:53.441
  STEP: Saw pod success @ 04/23/25 18:34:57.469
  I0423 18:34:57.473785 25 output.go:196] Trying to get logs from node worker00 pod pod-secrets-68f55148-28c3-48c3-9160-59c1f20e26ec container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 18:34:57.49
  I0423 18:34:57.522366 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2719" for this suite. @ 04/23/25 18:34:57.528
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 04/23/25 18:34:57.545
  I0423 18:34:57.545564 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 18:34:57.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:34:57.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:34:57.576
  STEP: Counting existing ResourceQuota @ 04/23/25 18:34:57.58
  STEP: Creating a ResourceQuota @ 04/23/25 18:35:02.589
  STEP: Ensuring resource quota status is calculated @ 04/23/25 18:35:02.602
  STEP: Creating a Service @ 04/23/25 18:35:04.607
  STEP: Creating a NodePort Service @ 04/23/25 18:35:04.637
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/23/25 18:35:04.682
  STEP: Ensuring resource quota status captures service creation @ 04/23/25 18:35:04.714
  STEP: Deleting Services @ 04/23/25 18:35:06.72
  STEP: Ensuring resource quota status released usage @ 04/23/25 18:35:06.772
  I0423 18:35:08.779022 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7155" for this suite. @ 04/23/25 18:35:08.784
• [11.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 04/23/25 18:35:08.802
  I0423 18:35:08.803028 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename security-context @ 04/23/25 18:35:08.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:08.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:08.831
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/23/25 18:35:08.839
  STEP: Saw pod success @ 04/23/25 18:35:12.871
  I0423 18:35:12.876150 25 output.go:196] Trying to get logs from node worker00 pod security-context-caa13306-6701-4cf4-9e52-b3d36768293f container test-container: <nil>
  STEP: delete the pod @ 04/23/25 18:35:12.884
  I0423 18:35:12.914517 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3365" for this suite. @ 04/23/25 18:35:12.921
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 04/23/25 18:35:12.935
  I0423 18:35:12.935234 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 18:35:12.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:12.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:12.968
  STEP: Creating a test namespace @ 04/23/25 18:35:12.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:13
  STEP: Creating a service in the namespace @ 04/23/25 18:35:13.009
  STEP: Deleting the namespace @ 04/23/25 18:35:13.026
  STEP: Waiting for the namespace to be removed. @ 04/23/25 18:35:13.048
  STEP: Recreating the namespace @ 04/23/25 18:35:19.054
  STEP: Verifying there is no service in the namespace @ 04/23/25 18:35:19.083
  I0423 18:35:19.090073 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9726" for this suite. @ 04/23/25 18:35:19.095
  STEP: Destroying namespace "nsdeletetest-8319" for this suite. @ 04/23/25 18:35:19.103
  I0423 18:35:19.111005 25 framework.go:370] Namespace nsdeletetest-8319 was already deleted
  STEP: Destroying namespace "nsdeletetest-1121" for this suite. @ 04/23/25 18:35:19.111
• [6.185 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 04/23/25 18:35:19.12
  I0423 18:35:19.120316 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:35:19.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:19.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:19.156
  STEP: creating an Endpoint @ 04/23/25 18:35:19.167
  STEP: waiting for available Endpoint @ 04/23/25 18:35:19.177
  STEP: listing all Endpoints @ 04/23/25 18:35:19.184
  STEP: updating the Endpoint @ 04/23/25 18:35:19.19
  STEP: fetching the Endpoint @ 04/23/25 18:35:19.198
  STEP: patching the Endpoint @ 04/23/25 18:35:19.202
  STEP: fetching the Endpoint @ 04/23/25 18:35:19.212
  STEP: deleting the Endpoint by Collection @ 04/23/25 18:35:19.215
  STEP: waiting for Endpoint deletion @ 04/23/25 18:35:19.224
  STEP: fetching the Endpoint @ 04/23/25 18:35:19.229
  I0423 18:35:19.233163 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3188" for this suite. @ 04/23/25 18:35:19.237
• [0.126 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/23/25 18:35:19.246
  I0423 18:35:19.246805 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:35:19.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:19.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:19.267
  STEP: Creating projection with secret that has name projected-secret-test-a44155e0-1a07-467b-818b-02c5646def5a @ 04/23/25 18:35:19.271
  STEP: Creating a pod to test consume secrets @ 04/23/25 18:35:19.276
  STEP: Saw pod success @ 04/23/25 18:35:23.3
  I0423 18:35:23.305318 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-da68c8f0-c95f-4a4c-9371-52c9c921511f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 18:35:23.316
  I0423 18:35:23.341740 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4734" for this suite. @ 04/23/25 18:35:23.35
• [4.115 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/23/25 18:35:23.364
  I0423 18:35:23.364723 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 18:35:23.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:23.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:23.402
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 18:35:23.409
  STEP: Saw pod success @ 04/23/25 18:35:27.439
  I0423 18:35:27.444210 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-91138f2a-4759-4f84-8b36-50af2e88843e container client-container: <nil>
  STEP: delete the pod @ 04/23/25 18:35:27.472
  I0423 18:35:27.496443 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2185" for this suite. @ 04/23/25 18:35:27.505
• [4.155 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/23/25 18:35:27.519
  I0423 18:35:27.520110 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 18:35:27.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:27.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:27.554
  I0423 18:35:27.572684 25 endpointslice.go:1045] Endpoints addresses: [192.168.58.100] , ports: [6443]
  I0423 18:35:27.572750 25 endpointslice.go:1075] EndpointSlices addresses: [192.168.58.100] , ports: [6443]
  I0423 18:35:27.573307 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-128" for this suite. @ 04/23/25 18:35:27.605
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/23/25 18:35:27.621
  I0423 18:35:27.621681 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 18:35:27.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:27.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:27.649
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/23/25 18:35:27.655
  STEP: When a replication controller with a matching selector is created @ 04/23/25 18:35:29.697
  STEP: Then the orphan pod is adopted @ 04/23/25 18:35:29.716
  I0423 18:35:30.727965 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5404" for this suite. @ 04/23/25 18:35:30.736
• [3.123 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/23/25 18:35:30.746
  I0423 18:35:30.746277 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename prestop @ 04/23/25 18:35:30.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:30.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:30.774
  STEP: Creating server pod server in namespace prestop-4881 @ 04/23/25 18:35:30.781
  STEP: Waiting for pods to come up. @ 04/23/25 18:35:30.797
  STEP: Creating tester pod tester in namespace prestop-4881 @ 04/23/25 18:35:32.82
  STEP: Deleting pre-stop pod @ 04/23/25 18:35:36.861
  I0423 18:35:41.882663 25 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/23/25 18:35:41.883
  I0423 18:35:41.902606 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-4881" for this suite. @ 04/23/25 18:35:41.916
• [11.180 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/23/25 18:35:41.927
  I0423 18:35:41.927280 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename apf @ 04/23/25 18:35:41.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:41.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:41.959
  STEP: getting /apis @ 04/23/25 18:35:41.964
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/23/25 18:35:41.972
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/23/25 18:35:41.974
  STEP: creating @ 04/23/25 18:35:41.976
  STEP: getting @ 04/23/25 18:35:41.995
  STEP: listing @ 04/23/25 18:35:41.998
  STEP: watching @ 04/23/25 18:35:42.002
  I0423 18:35:42.002379 25 flowcontrol.go:394] starting watch
  STEP: patching @ 04/23/25 18:35:42.003
  STEP: updating @ 04/23/25 18:35:42.012
  I0423 18:35:42.024303 25 flowcontrol.go:422] waiting for watch events with expected annotations
  I0423 18:35:42.024660 25 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/23/25 18:35:42.025
  STEP: patching /status @ 04/23/25 18:35:42.028
  STEP: updating /status @ 04/23/25 18:35:42.036
  STEP: deleting @ 04/23/25 18:35:42.045
  STEP: deleting a collection @ 04/23/25 18:35:42.058
  I0423 18:35:42.079044 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-819" for this suite. @ 04/23/25 18:35:42.084
• [0.167 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/23/25 18:35:42.093
  I0423 18:35:42.093501 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename init-container @ 04/23/25 18:35:42.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:42.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:42.115
  STEP: creating the pod @ 04/23/25 18:35:42.119
  I0423 18:35:42.120067 25 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0423 18:35:45.136786 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3472" for this suite. @ 04/23/25 18:35:45.145
• [3.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/23/25 18:35:45.161
  I0423 18:35:45.161437 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename gc @ 04/23/25 18:35:45.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:45.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:45.194
  STEP: create the deployment @ 04/23/25 18:35:45.2
  W0423 18:35:45.206854      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/23/25 18:35:45.206
  STEP: delete the deployment @ 04/23/25 18:35:45.71
  STEP: wait for all rs to be garbage collected @ 04/23/25 18:35:45.723
  STEP: expected 0 pods, got 2 pods @ 04/23/25 18:35:45.757
  STEP: Gathering metrics @ 04/23/25 18:35:46.236
  I0423 18:35:46.329270 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 18:35:46.329743 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2163" for this suite. @ 04/23/25 18:35:46.334
• [1.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/23/25 18:35:46.34
  I0423 18:35:46.340952 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 18:35:46.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:35:46.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:35:46.36
  STEP: Performing setup for networking test in namespace pod-network-test-3631 @ 04/23/25 18:35:46.364
  STEP: creating a selector @ 04/23/25 18:35:46.364
  STEP: Creating the service pods in kubernetes @ 04/23/25 18:35:46.364
  I0423 18:35:46.364469 25 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/23/25 18:36:08.558
  I0423 18:36:10.625727 25 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 18:36:10.625866 25 utils.go:496] Going to poll 10.200.131.155 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0423 18:36:10.630629 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.131.155:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3631 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:36:10.630719 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:36:10.632152 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:36:10.633351 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-3631/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.131.155%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0423 18:36:10.746097 25 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0423 18:36:10.746181 25 utils.go:496] Going to poll 10.200.5.37 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0423 18:36:10.750969 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.5.37:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3631 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:36:10.751024 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:36:10.752224 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:36:10.752913 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-3631/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.5.37%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0423 18:36:10.841227 25 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0423 18:36:10.841433 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3631" for this suite. @ 04/23/25 18:36:10.846
• [24.524 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/23/25 18:36:10.866
  I0423 18:36:10.866182 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 18:36:10.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:36:10.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:36:10.897
  STEP: creating a ServiceAccount @ 04/23/25 18:36:10.901
  STEP: watching for the ServiceAccount to be added @ 04/23/25 18:36:10.911
  STEP: patching the ServiceAccount @ 04/23/25 18:36:10.912
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/23/25 18:36:10.918
  STEP: deleting the ServiceAccount @ 04/23/25 18:36:10.924
  I0423 18:36:10.943591 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2435" for this suite. @ 04/23/25 18:36:10.951
• [0.091 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1540
  STEP: Creating a kubernetes client @ 04/23/25 18:36:10.957
  I0423 18:36:10.957374 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 18:36:10.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:36:10.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:36:10.981
  STEP: creating Agnhost RC @ 04/23/25 18:36:10.985
  I0423 18:36:10.985751 25 kubectl.go:1547] namespace kubectl-9256
  I0423 18:36:10.985861 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9256 create -f -'
  I0423 18:36:11.199754 25 builder.go:146] stderr: ""
  I0423 18:36:11.199820 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 18:36:11.199
  I0423 18:36:12.206406 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 18:36:12.206462 25 framework.go:733] Found 0 / 1
  I0423 18:36:13.205975 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 18:36:13.206027 25 framework.go:733] Found 1 / 1
  I0423 18:36:13.206058 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0423 18:36:13.210981 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 18:36:13.211031 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 18:36:13.211052 25 kubectl.go:1554] wait on agnhost-primary startup in kubectl-9256 
  I0423 18:36:13.211132 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9256 logs agnhost-primary-cvmk2 agnhost-primary'
  I0423 18:36:13.357228 25 builder.go:146] stderr: ""
  I0423 18:36:13.357289 25 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 04/23/25 18:36:13.357
  I0423 18:36:13.357451 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9256 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0423 18:36:13.465985 25 builder.go:146] stderr: ""
  I0423 18:36:13.466123 25 builder.go:147] stdout: "service/rm2 exposed\n"
  I0423 18:36:13.472264 25 utils.go:1203] Service rm2 in namespace kubectl-9256 found.
  STEP: exposing service @ 04/23/25 18:36:15.48
  I0423 18:36:15.480206 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9256 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0423 18:36:15.635539 25 builder.go:146] stderr: ""
  I0423 18:36:15.635609 25 builder.go:147] stdout: "service/rm3 exposed\n"
  I0423 18:36:15.641142 25 utils.go:1203] Service rm3 in namespace kubectl-9256 found.
  I0423 18:36:17.651880 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9256" for this suite. @ 04/23/25 18:36:17.659
• [6.722 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/23/25 18:36:17.679
  I0423 18:36:17.679309 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 18:36:17.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:36:17.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:36:17.71
  STEP: fetching the /apis discovery document @ 04/23/25 18:36:17.715
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/23/25 18:36:17.718
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/23/25 18:36:17.718
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/23/25 18:36:17.718
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/23/25 18:36:17.72
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/23/25 18:36:17.721
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/23/25 18:36:17.724
  I0423 18:36:17.724580 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6446" for this suite. @ 04/23/25 18:36:17.761
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/23/25 18:36:17.777
  I0423 18:36:17.777473 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:36:17.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:36:17.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:36:17.806
  STEP: Creating secret with name s-test-opt-del-54967034-8b6f-4815-ad69-d0ca6a806698 @ 04/23/25 18:36:17.861
  STEP: Creating secret with name s-test-opt-upd-1f376935-473d-412c-9ba3-d2d1f81acaca @ 04/23/25 18:36:17.868
  STEP: Creating the pod @ 04/23/25 18:36:17.878
  STEP: Deleting secret s-test-opt-del-54967034-8b6f-4815-ad69-d0ca6a806698 @ 04/23/25 18:36:19.932
  STEP: Updating secret s-test-opt-upd-1f376935-473d-412c-9ba3-d2d1f81acaca @ 04/23/25 18:36:19.949
  STEP: Creating secret with name s-test-opt-create-fe7253be-7be3-4f16-ab6d-a2651fe366aa @ 04/23/25 18:36:19.961
  STEP: waiting to observe update in volume @ 04/23/25 18:36:19.969
  I0423 18:36:22.008193 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5001" for this suite. @ 04/23/25 18:36:22.014
• [4.255 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 04/23/25 18:36:22.033
  I0423 18:36:22.033426 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:36:22.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:36:22.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:36:22.064
  STEP: creating service multiprotocol-test in namespace services-4734 @ 04/23/25 18:36:22.069
  STEP: creating pod pod1 in namespace services-4734 @ 04/23/25 18:36:22.082
  STEP: Creating pod pod1 in namespace services-4734 @ 04/23/25 18:36:22.084
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4734 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/23/25 18:36:24.122
  I0423 18:36:24.137663 25 service.go:4392] successfully validated that service multiprotocol-test in namespace services-4734 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/23/25 18:36:24.137
  I0423 18:36:24.138041 25 resource.go:361] Creating new exec pod
  I0423 18:36:26.180168 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.68 80'
  I0423 18:36:26.351175 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.68 80\nConnection to 10.32.0.68 80 port [tcp/http] succeeded!\n"
  I0423 18:36:26.351261 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 18:36:26.351384 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.68 80'
  I0423 18:36:30.507613 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.68 80\nConnection to 10.32.0.68 80 port [udp/*] succeeded!\n"
  I0423 18:36:30.507791 25 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/23/25 18:36:30.507
  I0423 18:36:30.533026 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.68 80'
  I0423 18:36:30.703618 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.68 80\nConnection to 10.32.0.68 80 port [tcp/http] succeeded!\n"
  I0423 18:36:30.703683 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 18:36:30.703769 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.68 80'
  I0423 18:36:34.907109 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.68 80\nConnection to 10.32.0.68 80 port [udp/*] succeeded!\n"
  I0423 18:36:34.907186 25 builder.go:147] stdout: ""
  I0423 18:36:34.907283 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.68 80'
  I0423 18:36:39.132004 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.68 80\nConnection to 10.32.0.68 80 port [udp/*] succeeded!\n"
  I0423 18:36:39.132091 25 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/23/25 18:36:39.132
  I0423 18:36:39.156586 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.68 80'
  I0423 18:36:43.373940 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.68 80\nConnection to 10.32.0.68 80 port [udp/*] succeeded!\n"
  I0423 18:36:43.374036 25 builder.go:147] stdout: "pod1"
  I0423 18:36:43.374226 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.68 80'
  I0423 18:36:45.536584 25 builder.go:135] rc: 1
  I0423 18:36:45.536687 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.68 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.68 80
  nc: connect to 10.32.0.68 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 18:36:45.537025 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.68 80'
  I0423 18:36:47.757721 25 builder.go:135] rc: 1
  I0423 18:36:47.757953 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.68 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.68 80
  nc: connect to 10.32.0.68 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 18:36:47.758711 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.68 80'
  I0423 18:36:49.979104 25 builder.go:135] rc: 1
  I0423 18:36:49.979190 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4734 exec execpodmgphz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.68 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.68 80
  nc: connect to 10.32.0.68 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 18:36:49.981014 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4734" for this suite. @ 04/23/25 18:36:49.989
• [27.976 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/23/25 18:36:50.01
  I0423 18:36:50.010918 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:36:50.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:36:50.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:36:50.043
  STEP: Creating configMap with name cm-test-opt-del-9a64272d-edb0-4b5f-b9bb-4e7a3bbc7609 @ 04/23/25 18:36:50.09
  STEP: Creating configMap with name cm-test-opt-upd-6edf8aa4-fa26-480d-8f98-f2aa8251693e @ 04/23/25 18:36:50.098
  STEP: Creating the pod @ 04/23/25 18:36:50.106
  STEP: Deleting configmap cm-test-opt-del-9a64272d-edb0-4b5f-b9bb-4e7a3bbc7609 @ 04/23/25 18:36:52.168
  STEP: Updating configmap cm-test-opt-upd-6edf8aa4-fa26-480d-8f98-f2aa8251693e @ 04/23/25 18:36:52.186
  STEP: Creating configMap with name cm-test-opt-create-b989c635-3041-45ff-9813-7e75d8186ebb @ 04/23/25 18:36:52.193
  STEP: waiting to observe update in volume @ 04/23/25 18:36:52.202
  I0423 18:36:54.239802 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9342" for this suite. @ 04/23/25 18:36:54.246
• [4.246 seconds]
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/23/25 18:36:54.256
  I0423 18:36:54.256833 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 18:36:54.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:36:54.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:36:54.296
  I0423 18:36:54.329156 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 18:36:54.329
  STEP: Scaling up "test-rs" replicaset @ 04/23/25 18:36:56.351
  I0423 18:36:56.372879 25 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/23/25 18:36:56.372
  I0423 18:36:56.390451 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3985 with ReadyReplicas 1, AvailableReplicas 1
  I0423 18:36:56.408242 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3985 with ReadyReplicas 1, AvailableReplicas 1
  I0423 18:36:56.453895 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3985 with ReadyReplicas 1, AvailableReplicas 1
  I0423 18:36:56.463881 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3985 with ReadyReplicas 1, AvailableReplicas 1
  I0423 18:36:57.593230 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-3985 with ReadyReplicas 2, AvailableReplicas 2
  I0423 18:36:57.602183 25 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-3985 with ReadyReplicas 3 found true
  I0423 18:36:57.602531 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3985" for this suite. @ 04/23/25 18:36:57.606
• [3.354 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 04/23/25 18:36:57.611
  I0423 18:36:57.611480 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename taint-single-pod @ 04/23/25 18:36:57.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:36:57.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:36:57.64
  I0423 18:36:57.644230 25 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0423 18:37:57.644918 25 util.go:393] Waiting for terminating namespaces to be deleted...
  I0423 18:37:57.650167 25 taints.go:144] Starting informer...
  STEP: Starting pod... @ 04/23/25 18:37:57.65
  I0423 18:37:57.881466 25 taints.go:294] Pod is running on worker00. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/23/25 18:37:57.881
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 18:37:57.904
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/23/25 18:37:57.917
  I0423 18:37:57.917419 25 taints.go:313] Pod wasn't evicted. Proceeding
  I0423 18:37:57.917452 25 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 18:37:57.988
  STEP: Waiting some time to make sure that toleration time passed. @ 04/23/25 18:37:58.066
  I0423 18:39:13.066892 25 taints.go:329] Pod wasn't evicted. Test successful
  I0423 18:39:13.067300 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3774" for this suite. @ 04/23/25 18:39:13.077
• [135.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 04/23/25 18:39:13.104
  I0423 18:39:13.105031 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 18:39:13.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:39:13.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:39:13.145
  STEP: Creating service test in namespace statefulset-1802 @ 04/23/25 18:39:13.164
  STEP: Creating statefulset ss in namespace statefulset-1802 @ 04/23/25 18:39:13.197
  I0423 18:39:13.220339 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0423 18:39:23.225260 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/23/25 18:39:23.237
  STEP: Getting /status @ 04/23/25 18:39:23.266
  I0423 18:39:23.274009 25 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/23/25 18:39:23.274
  I0423 18:39:23.301185 25 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/23/25 18:39:23.301
  I0423 18:39:23.305632 25 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0423 18:39:23.305699 25 statefulset.go:1111] Found Statefulset ss in namespace statefulset-1802 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 18:39:23.305726 25 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/23/25 18:39:23.305
  I0423 18:39:23.305800 25 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0423 18:39:23.318925 25 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/23/25 18:39:23.321
  I0423 18:39:23.330144 25 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0423 18:39:23.330386 25 statefulset.go:138] Deleting all statefulset in ns statefulset-1802
  I0423 18:39:23.337981 25 rest.go:150] Scaling statefulset ss to 0
  I0423 18:39:33.382307 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 18:39:33.386631 25 rest.go:88] Deleting statefulset ss
  I0423 18:39:33.426354 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1802" for this suite. @ 04/23/25 18:39:33.439
• [20.349 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 04/23/25 18:39:33.455
  I0423 18:39:33.455646 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 18:39:33.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:39:33.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:39:33.497
  STEP: Creating pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772 @ 04/23/25 18:39:33.503
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 18:39:35.541
  I0423 18:39:35.545973 25 container_probe.go:1749] Initial restart count of pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc is 0
  I0423 18:39:35.550386 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:37.555594 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:39.563773 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:41.571490 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:43.576725 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:45.582297 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:47.589116 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:49.595286 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:51.602578 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:53.608237 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:55.612743 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:57.625349 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:39:59.632625 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:01.637524 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:03.644435 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:05.650932 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:07.660018 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:09.665843 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:11.670782 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:13.676566 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:15.684610 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:17.692315 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:19.699667 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:21.703673 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:23.710129 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:25.717184 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:27.727236 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:29.738824 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:31.745890 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:33.752528 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:35.760236 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:37.770793 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:39.778946 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:41.785890 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:43.792401 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:45.799423 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:47.807725 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:49.819046 25 container_probe.go:1759] Get pod test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc in namespace container-probe-3772
  I0423 18:40:49.819128 25 container_probe.go:1763] Restart count of pod container-probe-3772/test-grpc-72ffbbb3-14ec-4d6c-a436-3bb59a5277bc is now 1 (1m14.273075115s elapsed)
  STEP: deleting the pod @ 04/23/25 18:40:49.819
  I0423 18:40:49.849047 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3772" for this suite. @ 04/23/25 18:40:49.866
• [76.426 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 04/23/25 18:40:49.882
  I0423 18:40:49.882332 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 18:40:49.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:40:49.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:40:49.911
  STEP: Creating a test namespace @ 04/23/25 18:40:49.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:40:49.935
  STEP: Creating a pod in the namespace @ 04/23/25 18:40:49.94
  STEP: Waiting for the pod to have running status @ 04/23/25 18:40:49.962
  STEP: Deleting the namespace @ 04/23/25 18:40:51.986
  STEP: Waiting for the namespace to be removed. @ 04/23/25 18:40:52.005
  STEP: Recreating the namespace @ 04/23/25 18:41:03.011
  STEP: Verifying there are no pods in the namespace @ 04/23/25 18:41:03.032
  I0423 18:41:03.037733 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2918" for this suite. @ 04/23/25 18:41:03.042
  STEP: Destroying namespace "nsdeletetest-3836" for this suite. @ 04/23/25 18:41:03.047
  I0423 18:41:03.052096 25 framework.go:370] Namespace nsdeletetest-3836 was already deleted
  STEP: Destroying namespace "nsdeletetest-3732" for this suite. @ 04/23/25 18:41:03.052
• [13.178 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 04/23/25 18:41:03.059
  I0423 18:41:03.060009 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 18:41:03.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:41:03.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:41:03.089
  STEP: Creating secret with name secret-test-5fd21365-576a-4256-8295-7550e15515b5 @ 04/23/25 18:41:03.094
  STEP: Creating a pod to test consume secrets @ 04/23/25 18:41:03.101
  STEP: Saw pod success @ 04/23/25 18:41:07.138
  I0423 18:41:07.146430 25 output.go:196] Trying to get logs from node worker00 pod pod-secrets-ef4ad662-fb02-4894-b102-4a00d5aeed14 container secret-env-test: <nil>
  STEP: delete the pod @ 04/23/25 18:41:07.163
  I0423 18:41:07.198617 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-470" for this suite. @ 04/23/25 18:41:07.206
• [4.156 seconds]
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/23/25 18:41:07.216
  I0423 18:41:07.216568 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 18:41:07.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:41:07.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:41:07.249
  STEP: Creating a pod to test downward api env vars @ 04/23/25 18:41:07.253
  STEP: Saw pod success @ 04/23/25 18:41:11.293
  I0423 18:41:11.300093 25 output.go:196] Trying to get logs from node worker00 pod downward-api-cef4de43-d134-4854-bd1a-6c52fe099caf container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 18:41:11.31
  I0423 18:41:11.355547 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7035" for this suite. @ 04/23/25 18:41:11.373
• [4.185 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/23/25 18:41:11.402
  I0423 18:41:11.402555 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 18:41:11.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:41:11.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:41:11.473
  STEP: create the container @ 04/23/25 18:41:11.487
  W0423 18:41:11.504244      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/23/25 18:41:11.504
  STEP: get the container status @ 04/23/25 18:41:15.533
  STEP: the container should be terminated @ 04/23/25 18:41:15.537
  STEP: the termination message should be set @ 04/23/25 18:41:15.537
  I0423 18:41:15.537371 25 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/23/25 18:41:15.537
  I0423 18:41:15.560183 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-152" for this suite. @ 04/23/25 18:41:15.564
• [4.175 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/23/25 18:41:15.577
  I0423 18:41:15.577633 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename subpath @ 04/23/25 18:41:15.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:41:15.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:41:15.604
  STEP: Setting up data @ 04/23/25 18:41:15.609
  STEP: Creating pod pod-subpath-test-projected-zd7l @ 04/23/25 18:41:15.63
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 18:41:15.63
  STEP: Saw pod success @ 04/23/25 18:41:39.736
  I0423 18:41:39.741401 25 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-projected-zd7l container test-container-subpath-projected-zd7l: <nil>
  STEP: delete the pod @ 04/23/25 18:41:39.757
  STEP: Deleting pod pod-subpath-test-projected-zd7l @ 04/23/25 18:41:39.785
  I0423 18:41:39.785766 25 delete.go:62] Deleting pod "pod-subpath-test-projected-zd7l" in namespace "subpath-7208"
  I0423 18:41:39.790921 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7208" for this suite. @ 04/23/25 18:41:39.798
• [24.232 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 04/23/25 18:41:39.809
  I0423 18:41:39.809406 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 18:41:39.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:41:39.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:41:39.833
  STEP: Creating simple DaemonSet "daemon-set" @ 04/23/25 18:41:39.909
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 18:41:39.918
  I0423 18:41:40.013157 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 18:41:40.013207 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 18:41:40.935564 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 18:41:40.935610 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 18:41:41.931179 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 18:41:41.931459 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/23/25 18:41:41.938
  STEP: DeleteCollection of the DaemonSets @ 04/23/25 18:41:41.943
  STEP: Verify that ReplicaSets have been deleted @ 04/23/25 18:41:41.965
  I0423 18:41:41.983976 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15743"},"items":null}

  I0423 18:41:41.993159 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15744"},"items":[{"metadata":{"name":"daemon-set-qmh7p","generateName":"daemon-set-","namespace":"daemonsets-480","uid":"abd61a66-1bc7-44b6-bea0-6f366036ff6d","resourceVersion":"15738","creationTimestamp":"2025-04-23T18:41:39Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"73d21370276ec10e7d7ff7fcc5888477639b01c6b893d4185a707c24453ddc18","cni.projectcalico.org/podIP":"10.200.131.171/32","cni.projectcalico.org/podIPs":"10.200.131.171/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"20bdb319-6052-48e5-8f0a-0a197245e39f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-23T18:41:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"20bdb319-6052-48e5-8f0a-0a197245e39f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-04-23T18:41:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-23T18:41:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.131.171\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mxt4s","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mxt4s","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker00","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker00"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:41Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:41Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:41Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:39Z"}],"hostIP":"192.168.58.100","hostIPs":[{"ip":"192.168.58.100"}],"podIP":"10.200.131.171","podIPs":[{"ip":"10.200.131.171"}],"startTime":"2025-04-23T18:41:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-23T18:41:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1d12b164afa4efd882f811a561a241b86ccf8e65e205cf66468f380657d501b7","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tpzjh","generateName":"daemon-set-","namespace":"daemonsets-480","uid":"5fe15563-4185-46af-bc45-888f1e97adab","resourceVersion":"15735","creationTimestamp":"2025-04-23T18:41:39Z","labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"81f886eb6afeb3d9a1c1682bfd31515e5937c26587f0de94b97bd549fe07850a","cni.projectcalico.org/podIP":"10.200.5.40/32","cni.projectcalico.org/podIPs":"10.200.5.40/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"20bdb319-6052-48e5-8f0a-0a197245e39f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-23T18:41:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"20bdb319-6052-48e5-8f0a-0a197245e39f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-04-23T18:41:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-23T18:41:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.5.40\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9r9j5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9r9j5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:40Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T18:41:39Z"}],"hostIP":"192.168.58.101","hostIPs":[{"ip":"192.168.58.101"}],"podIP":"10.200.5.40","podIPs":[{"ip":"10.200.5.40"}],"startTime":"2025-04-23T18:41:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-23T18:41:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9ee6aa29581aea4f48677486325e1b16cf0bb04bbd335f3b2aaab2769db49c1a","started":true}],"qosClass":"BestEffort"}}]}

  I0423 18:41:42.044197 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-480" for this suite. @ 04/23/25 18:41:42.05
• [2.252 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 04/23/25 18:41:42.061
  I0423 18:41:42.061492 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 18:41:42.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:41:42.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:41:42.098
  STEP: set up a multi version CRD @ 04/23/25 18:41:42.105
  I0423 18:41:42.107239 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: mark a version not serverd @ 04/23/25 18:41:46.128
  STEP: check the unserved version gets removed @ 04/23/25 18:41:46.166
  STEP: check the other version is not changed @ 04/23/25 18:41:47.047
  I0423 18:41:50.110616 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9657" for this suite. @ 04/23/25 18:41:50.125
• [8.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/23/25 18:41:50.139
  I0423 18:41:50.139669 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 18:41:50.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:41:50.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:41:50.177
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 18:41:50.185
  STEP: Saw pod success @ 04/23/25 18:41:54.235
  I0423 18:41:54.242979 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-f4740556-be21-484a-aa30-5aab0ffcf5d6 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 18:41:54.251
  I0423 18:41:54.290392 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1155" for this suite. @ 04/23/25 18:41:54.298
• [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 04/23/25 18:41:54.315
  I0423 18:41:54.315255 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename disruption @ 04/23/25 18:41:54.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:41:54.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:41:54.351
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/23/25 18:41:54.356
  STEP: Waiting for the pdb to be processed @ 04/23/25 18:41:54.366
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/23/25 18:41:56.39
  STEP: Waiting for all pods to be running @ 04/23/25 18:41:56.39
  I0423 18:41:56.395414 25 disruption.go:680] pods: 0 < 3
  I0423 18:41:58.400045 25 disruption.go:691] running pods: 0 < 3
  STEP: locating a running pod @ 04/23/25 18:42:00.398
  STEP: Updating the pdb to allow a pod to be evicted @ 04/23/25 18:42:00.413
  STEP: Waiting for the pdb to be processed @ 04/23/25 18:42:00.437
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/23/25 18:42:02.444
  STEP: Waiting for all pods to be running @ 04/23/25 18:42:02.444
  STEP: Waiting for the pdb to observed all healthy pods @ 04/23/25 18:42:02.452
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/23/25 18:42:02.515
  STEP: Waiting for the pdb to be processed @ 04/23/25 18:42:02.569
  STEP: Waiting for all pods to be running @ 04/23/25 18:42:04.574
  I0423 18:42:04.579860 25 disruption.go:691] running pods: 2 < 3
  STEP: locating a running pod @ 04/23/25 18:42:06.581
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/23/25 18:42:06.588
  STEP: Waiting for the pdb to be deleted @ 04/23/25 18:42:06.606
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/23/25 18:42:06.612
  STEP: Waiting for all pods to be running @ 04/23/25 18:42:06.612
  I0423 18:42:06.702830 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7790" for this suite. @ 04/23/25 18:42:06.709
• [12.404 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/23/25 18:42:06.719
  I0423 18:42:06.719127 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 18:42:06.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:06.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:06.759
  I0423 18:42:08.816158 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1955" for this suite. @ 04/23/25 18:42:08.822
• [2.116 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 04/23/25 18:42:08.835
  I0423 18:42:08.835903 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 18:42:08.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:08.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:08.867
  STEP: Counting existing ResourceQuota @ 04/23/25 18:42:08.873
  STEP: Creating a ResourceQuota @ 04/23/25 18:42:13.95
  STEP: Ensuring resource quota status is calculated @ 04/23/25 18:42:13.959
  STEP: Creating a Pod that fits quota @ 04/23/25 18:42:15.966
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/23/25 18:42:15.994
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/23/25 18:42:17.999
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/23/25 18:42:18.005
  STEP: Ensuring a pod cannot update its resource requirements @ 04/23/25 18:42:18.008
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/23/25 18:42:18.014
  STEP: Deleting the pod @ 04/23/25 18:42:20.02
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 18:42:20.036
  I0423 18:42:22.043388 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2003" for this suite. @ 04/23/25 18:42:22.049
• [13.224 seconds]
------------------------------
S
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/23/25 18:42:22.06
  I0423 18:42:22.060352 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename ingressclass @ 04/23/25 18:42:22.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:22.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:22.094
  STEP: getting /apis @ 04/23/25 18:42:22.1
  STEP: getting /apis/networking.k8s.io @ 04/23/25 18:42:22.11
  STEP: getting /apis/networking.k8s.iov1 @ 04/23/25 18:42:22.112
  STEP: creating @ 04/23/25 18:42:22.115
  STEP: getting @ 04/23/25 18:42:22.139
  STEP: listing @ 04/23/25 18:42:22.144
  STEP: watching @ 04/23/25 18:42:22.148
  I0423 18:42:22.148956 25 ingressclass.go:348] starting watch
  STEP: patching @ 04/23/25 18:42:22.153
  STEP: updating @ 04/23/25 18:42:22.164
  I0423 18:42:22.173214 25 ingressclass.go:364] waiting for watch events with expected annotations
  I0423 18:42:22.173321 25 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 04/23/25 18:42:22.173
  STEP: deleting a collection @ 04/23/25 18:42:22.187
  I0423 18:42:22.211563 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5746" for this suite. @ 04/23/25 18:42:22.217
• [0.168 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/23/25 18:42:22.229
  I0423 18:42:22.229748 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 18:42:22.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:22.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:22.314
  STEP: Creating configMap with name configmap-test-upd-1e421873-f7c2-4c65-a7f0-bfb354f95465 @ 04/23/25 18:42:22.327
  STEP: Creating the pod @ 04/23/25 18:42:22.336
  STEP: Waiting for pod with text data @ 04/23/25 18:42:24.365
  STEP: Waiting for pod with binary data @ 04/23/25 18:42:24.377
  I0423 18:42:24.387557 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4693" for this suite. @ 04/23/25 18:42:24.393
• [2.183 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/23/25 18:42:24.413
  I0423 18:42:24.413571 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 18:42:24.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:24.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:24.443
  STEP: Creating secret with name secret-test-55df987c-1fa5-4d2c-a1de-f4d276260684 @ 04/23/25 18:42:24.449
  STEP: Creating a pod to test consume secrets @ 04/23/25 18:42:24.46
  STEP: Saw pod success @ 04/23/25 18:42:28.493
  I0423 18:42:28.501150 25 output.go:196] Trying to get logs from node worker00 pod pod-secrets-b29fdcbf-189b-4027-ba68-5880be5626ed container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 18:42:28.511
  I0423 18:42:28.535597 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4851" for this suite. @ 04/23/25 18:42:28.543
• [4.139 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/23/25 18:42:28.553
  I0423 18:42:28.553189 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename deployment @ 04/23/25 18:42:28.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:28.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:28.587
  STEP: creating a Deployment @ 04/23/25 18:42:28.598
  STEP: waiting for Deployment to be created @ 04/23/25 18:42:28.608
  STEP: waiting for all Replicas to be Ready @ 04/23/25 18:42:28.613
  I0423 18:42:28.622946 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 18:42:28.623019 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 18:42:28.629344 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 18:42:28.629384 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 18:42:28.671693 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 18:42:28.671772 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 18:42:28.700252 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 18:42:28.700782 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 18:42:29.868301 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0423 18:42:29.869254 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0423 18:42:30.408291 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/23/25 18:42:30.408
  I0423 18:42:30.427685 25 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/23/25 18:42:30.427
  I0423 18:42:30.435347 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0
  I0423 18:42:30.435433 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0
  I0423 18:42:30.435476 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0
  I0423 18:42:30.435499 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0
  I0423 18:42:30.435536 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0
  I0423 18:42:30.435707 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0
  I0423 18:42:30.436213 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0
  I0423 18:42:30.436267 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 0
  I0423 18:42:30.437176 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:30.437260 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:30.437291 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:30.437311 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:30.437336 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:30.437353 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:30.457971 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:30.458089 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:30.489972 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:30.490041 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:30.522977 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:30.523048 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:30.543231 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:30.543306 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:31.903947 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:31.904016 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:31.935860 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  STEP: listing Deployments @ 04/23/25 18:42:31.936
  I0423 18:42:31.942420 25 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/23/25 18:42:31.942
  I0423 18:42:31.960781 25 deployment.go:360] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/23/25 18:42:31.96
  I0423 18:42:31.975505 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:31.980409 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:32.036670 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:32.065389 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:32.083223 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:32.099195 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:33.437163 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:33.929815 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:33.988081 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:34.032848 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 18:42:35.490933 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/23/25 18:42:35.537
  STEP: fetching the DeploymentStatus @ 04/23/25 18:42:35.552
  I0423 18:42:35.564090 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:35.564484 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:35.565187 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:35.565275 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:35.565915 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:35.565953 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 1
  I0423 18:42:35.565970 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:35.566443 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 3
  I0423 18:42:35.566490 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:35.566527 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 2
  I0423 18:42:35.567153 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-7968 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/23/25 18:42:35.567
  I0423 18:42:35.582614 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.582723 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.582754 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583064 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583114 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583146 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583380 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583413 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583439 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583754 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583817 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.583891 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.584082 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.584111 25 deployment.go:475] observed event type MODIFIED
  I0423 18:42:35.593509 25 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0423 18:42:35.598475 25 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7968",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3af95703-7854-412c-b0ca-85a718f7a893",
      ResourceVersion: (string) (len=5) "16482",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "84fa285d-3e12-4c3e-902e-7fcdc99cf6d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 66 61  32 38 35 64 2d 33 65 31  |":\"84fa285d-3e1|
              00000130  32 2d 34 63 33 65 2d 39  30 32 65 2d 37 66 63 64  |2-4c3e-902e-7fcd|
              00000140  63 39 39 63 66 36 64 38  5c 22 7d 22 3a 7b 7d 7d  |c99cf6d8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0423 18:42:35.621245 25 deployment.go:669] pod: "test-deployment-6c86c7f765-fnm72":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-fnm72",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-7968",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eeed764d-9358-4894-be83-2be3c165aa22",
      ResourceVersion: (string) (len=5) "16434",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030552,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "58ce1ffb7c8867c0aa7fc86ffb8481a00cdea6ff2611df49aa495d7eb165e784",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.181/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.181/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "3af95703-7854-412c-b0ca-85a718f7a893",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 61 66 39 35 37 30 33  |uid\":\"3af95703|
              000000a0  2d 37 38 35 34 2d 34 31  32 63 2d 62 30 63 61 2d  |-7854-412c-b0ca-|
              000000b0  38 35 61 37 31 38 66 37  61 38 39 33 5c 22 7d 22  |85a718f7a893\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 38 31 5c 22 7d 22  |.200.131.181\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cfpkt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cfpkt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.181",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.181"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030552,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881030553,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://61a7838c346db78c5caf028cd496c14d8c55a583355e71bbd99f92edab9d25f0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0423 18:42:35.650830 25 deployment.go:669] pod: "test-deployment-6c86c7f765-vhftr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-vhftr",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-7968",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b7355db4-92ad-4a43-b43d-142689976e51",
      ResourceVersion: (string) (len=5) "16481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.47/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.47/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e307b92681e2c4f7003a09d2f56da3aacfa2b85b5de509a640b4cb65d872471f"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "3af95703-7854-412c-b0ca-85a718f7a893",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 61 66 39 35 37 30 33  |uid\":\"3af95703|
              000000a0  2d 37 38 35 34 2d 34 31  32 63 2d 62 30 63 61 2d  |-7854-412c-b0ca-|
              000000b0  38 35 61 37 31 38 66 37  61 38 39 33 5c 22 7d 22  |85a718f7a893\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030554,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 34  37 5c 22 7d 22 3a 7b 22  |.200.5.47\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-shcpk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-shcpk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.47",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.47"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030553,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881030554,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://92628b2fb9e363e57e934b2c7790677c7af0c511a9e725916d9b69c378374803",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0423 18:42:35.675664 25 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7968",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fae01213-b5a9-4af5-806a-b514cf270cdb",
      ResourceVersion: (string) (len=5) "16490",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030550,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "84fa285d-3e12-4c3e-902e-7fcdc99cf6d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 66 61  32 38 35 64 2d 33 65 31  |":\"84fa285d-3e1|
              00000130  32 2d 34 63 33 65 2d 39  30 32 65 2d 37 66 63 64  |2-4c3e-902e-7fcd|
              00000140  63 39 39 63 66 36 64 38  5c 22 7d 22 3a 7b 7d 7d  |c99cf6d8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030555,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0423 18:42:35.688424 25 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-d47sq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-d47sq",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-7968",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d24b47a-92ab-4336-8b90-5ad770be547f",
      ResourceVersion: (string) (len=5) "16486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030557,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d02153ad9cd91500168af444f1cf02c7283d5ba4dd486175f3c03748ee2a7b3c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.43/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.43/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "fae01213-b5a9-4af5-806a-b514cf270cdb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  66 61 65 30 31 32 31 33  |uid\":\"fae01213|
              000000a0  2d 62 35 61 39 2d 34 61  66 35 2d 38 30 36 61 2d  |-b5a9-4af5-806a-|
              000000b0  62 35 31 34 63 66 32 37  30 63 64 62 5c 22 7d 22  |b514cf270cdb\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030552,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 34  33 5c 22 7d 22 3a 7b 22  |.200.5.43\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g5d9v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g5d9v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030553,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.43",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.43"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030551,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881030552,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://668bb99aa5894daf37647f9eee3c6b3645dcb7534dc96d52833e53d9c6d93c56",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0423 18:42:35.694488 25 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7968",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6893b74c-1431-41bc-babe-06b4abfa6b76",
      ResourceVersion: (string) (len=5) "16366",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881030548,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "84fa285d-3e12-4c3e-902e-7fcdc99cf6d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 66 61  32 38 35 64 2d 33 65 31  |":\"84fa285d-3e1|
              00000130  32 2d 34 63 33 65 2d 39  30 32 65 2d 37 66 63 64  |2-4c3e-902e-7fcd|
              00000140  63 39 39 63 66 36 64 38  5c 22 7d 22 3a 7b 7d 7d  |c99cf6d8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881030551,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0423 18:42:35.705695 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7968" for this suite. @ 04/23/25 18:42:35.727
• [7.197 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 04/23/25 18:42:35.75
  I0423 18:42:35.750721 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:42:35.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:35.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:35.81
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8702 @ 04/23/25 18:42:35.819
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/23/25 18:42:35.831
  STEP: creating service externalsvc in namespace services-8702 @ 04/23/25 18:42:35.832
  STEP: creating replication controller externalsvc in namespace services-8702 @ 04/23/25 18:42:35.859
  I0423 18:42:35.885209      25 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8702, replica count: 2
  I0423 18:42:38.936814      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/23/25 18:42:38.944
  I0423 18:42:38.963848 25 resource.go:361] Creating new exec pod
  I0423 18:42:40.993518 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-8702 exec execpodlr57r -- /bin/sh -x -c nslookup clusterip-service.services-8702.svc.cluster.local'
  I0423 18:42:41.275273 25 builder.go:146] stderr: "+ nslookup clusterip-service.services-8702.svc.cluster.local\n"
  I0423 18:42:41.275474 25 builder.go:147] stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nclusterip-service.services-8702.svc.cluster.local\tcanonical name = externalsvc.services-8702.svc.cluster.local.\nName:\texternalsvc.services-8702.svc.cluster.local\nAddress: 10.32.0.231\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8702, will wait for the garbage collector to delete the pods @ 04/23/25 18:42:41.275
  I0423 18:42:41.341078 25 resources.go:139] Deleting ReplicationController externalsvc took: 7.681437ms
  I0423 18:42:41.442940 25 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.806002ms
  I0423 18:42:45.077291 25 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0423 18:42:45.108520 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8702" for this suite. @ 04/23/25 18:42:45.117
• [9.382 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/23/25 18:42:45.132
  I0423 18:42:45.133129 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 18:42:45.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:45.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:45.163
  I0423 18:42:45.227173 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1550" for this suite. @ 04/23/25 18:42:45.239
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/23/25 18:42:45.255
  I0423 18:42:45.255680 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 18:42:45.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:45.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:45.285
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/23/25 18:42:45.29
  STEP: Saw pod success @ 04/23/25 18:42:49.328
  I0423 18:42:49.334151 25 output.go:196] Trying to get logs from node worker00 pod pod-3d7e4b2e-6e4e-471c-95cb-518426e94a6a container test-container: <nil>
  STEP: delete the pod @ 04/23/25 18:42:49.341
  I0423 18:42:49.373159 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6442" for this suite. @ 04/23/25 18:42:49.376
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/23/25 18:42:49.387
  I0423 18:42:49.387228 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 18:42:49.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:49.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:49.41
  STEP: Creating Pod @ 04/23/25 18:42:49.414
  STEP: Reading file content from the nginx-container @ 04/23/25 18:42:51.452
  I0423 18:42:51.452134 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-6762 PodName:pod-sharedvolume-0d41c463-6b0e-4b2b-8e2b-b626404fda8f ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 18:42:51.452209 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:42:51.455764 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 18:42:51.455941 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/emptydir-6762/pods/pod-sharedvolume-0d41c463-6b0e-4b2b-8e2b-b626404fda8f/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0423 18:42:51.557172 25 exec_util.go:111] Exec stderr: ""
  I0423 18:42:51.557496 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6762" for this suite. @ 04/23/25 18:42:51.562
• [2.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 04/23/25 18:42:51.577
  I0423 18:42:51.577152 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 18:42:51.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:42:51.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:42:51.609
  STEP: Counting existing ResourceQuota @ 04/23/25 18:42:51.616
  STEP: Creating a ResourceQuota @ 04/23/25 18:42:56.622
  STEP: Ensuring resource quota status is calculated @ 04/23/25 18:42:56.63
  STEP: Creating a ReplicaSet @ 04/23/25 18:42:58.635
  STEP: Ensuring resource quota status captures replicaset creation @ 04/23/25 18:42:58.657
  STEP: Deleting a ReplicaSet @ 04/23/25 18:43:00.664
  STEP: Ensuring resource quota status released usage @ 04/23/25 18:43:00.685
  I0423 18:43:02.692151 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2633" for this suite. @ 04/23/25 18:43:02.699
• [11.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/23/25 18:43:02.724
  I0423 18:43:02.724290 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:43:02.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:43:02.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:43:02.757
  STEP: Creating configMap with name projected-configmap-test-volume-map-98b9f687-573d-424e-aee5-390dfe35f7c1 @ 04/23/25 18:43:02.763
  STEP: Creating a pod to test consume configMaps @ 04/23/25 18:43:02.772
  STEP: Saw pod success @ 04/23/25 18:43:06.81
  I0423 18:43:06.814957 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-f600c74e-de9a-4875-a2b8-65a1322986c9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 18:43:06.822
  I0423 18:43:06.863658 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2925" for this suite. @ 04/23/25 18:43:06.87
• [4.158 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 04/23/25 18:43:06.883
  I0423 18:43:06.884029 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 18:43:06.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:43:06.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:43:06.93
  I0423 18:44:06.954966 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-777" for this suite. @ 04/23/25 18:44:06.961
• [60.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 04/23/25 18:44:06.975
  I0423 18:44:06.975420 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 18:44:06.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:06.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:07.008
  STEP: fetching services @ 04/23/25 18:44:07.015
  I0423 18:44:07.024353 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-678" for this suite. @ 04/23/25 18:44:07.062
• [0.098 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/23/25 18:44:07.074
  I0423 18:44:07.074194 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 18:44:07.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:07.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:07.107
  I0423 18:44:07.113543 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: creating the pod @ 04/23/25 18:44:07.114
  STEP: submitting the pod to kubernetes @ 04/23/25 18:44:07.114
  I0423 18:44:09.262121 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7094" for this suite. @ 04/23/25 18:44:09.265
• [2.200 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/23/25 18:44:09.274
  I0423 18:44:09.274299 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 18:44:09.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:09.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:09.292
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/23/25 18:44:09.295
  STEP: Saw pod success @ 04/23/25 18:44:13.321
  I0423 18:44:13.327524 25 output.go:196] Trying to get logs from node worker00 pod pod-43ea7300-d717-4ac0-ae5e-76fc94ae90e6 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 18:44:13.337
  I0423 18:44:13.373084 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5354" for this suite. @ 04/23/25 18:44:13.379
• [4.118 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/23/25 18:44:13.395
  I0423 18:44:13.397163 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 18:44:13.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:13.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:13.432
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 18:44:13.437
  STEP: Saw pod success @ 04/23/25 18:44:17.503
  I0423 18:44:17.510463 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-3fc4e0ef-92bd-468b-8680-fd2c1ed0724d container client-container: <nil>
  STEP: delete the pod @ 04/23/25 18:44:17.516
  I0423 18:44:17.554223 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1190" for this suite. @ 04/23/25 18:44:17.565
• [4.182 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 04/23/25 18:44:17.576
  I0423 18:44:17.576590 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl-logs @ 04/23/25 18:44:17.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:17.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:17.596
  STEP: creating a pod @ 04/23/25 18:44:17.599
  I0423 18:44:17.600251 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-logs-550 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0423 18:44:17.732511 25 builder.go:146] stderr: ""
  I0423 18:44:17.732556 25 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/23/25 18:44:17.732
  I0423 18:44:17.732749 25 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0423 18:44:19.742380 25 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/23/25 18:44:19.742
  I0423 18:44:19.742566 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-logs-550 logs logs-generator logs-generator'
  I0423 18:44:19.846676 25 builder.go:146] stderr: ""
  I0423 18:44:19.846736 25 builder.go:147] stdout: "I0423 18:44:18.638229       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/p67v 290\nI0423 18:44:18.838950       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/57nw 248\nI0423 18:44:19.038253       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/frqb 380\nI0423 18:44:19.239042       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/84v 509\nI0423 18:44:19.438450       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/vbwd 254\nI0423 18:44:19.638381       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/ktb 278\nI0423 18:44:19.838894       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/j4g 359\n"
  STEP: limiting log lines @ 04/23/25 18:44:19.846
  I0423 18:44:19.846844 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-logs-550 logs logs-generator logs-generator --tail=1'
  I0423 18:44:19.936260 25 builder.go:146] stderr: ""
  I0423 18:44:19.936362 25 builder.go:147] stdout: "I0423 18:44:19.838894       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/j4g 359\n"
  I0423 18:44:19.936377 25 logs.go:180] got output "I0423 18:44:19.838894       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/j4g 359\n"
  STEP: limiting log bytes @ 04/23/25 18:44:19.936
  I0423 18:44:19.936640 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-logs-550 logs logs-generator logs-generator --limit-bytes=1'
  I0423 18:44:20.089021 25 builder.go:146] stderr: ""
  I0423 18:44:20.089079 25 builder.go:147] stdout: "I"
  I0423 18:44:20.089101 25 logs.go:186] got output "I"
  STEP: exposing timestamps @ 04/23/25 18:44:20.089
  I0423 18:44:20.089256 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-logs-550 logs logs-generator logs-generator --tail=1 --timestamps'
  I0423 18:44:20.204320 25 builder.go:146] stderr: ""
  I0423 18:44:20.204374 25 builder.go:147] stdout: "2025-04-23T18:44:20.038919359Z I0423 18:44:20.038415       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/c9rd 555\n"
  I0423 18:44:20.204392 25 logs.go:192] got output "2025-04-23T18:44:20.038919359Z I0423 18:44:20.038415       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/c9rd 555\n"
  STEP: restricting to a time range @ 04/23/25 18:44:20.204
  I0423 18:44:22.707001 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-logs-550 logs logs-generator logs-generator --since=1s'
  I0423 18:44:22.840918 25 builder.go:146] stderr: ""
  I0423 18:44:22.841880 25 builder.go:147] stdout: "I0423 18:44:21.838971       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/2ksp 271\nI0423 18:44:22.038413       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/rtb2 539\nI0423 18:44:22.238409       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/mmb 447\nI0423 18:44:22.439204       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/vb6 590\nI0423 18:44:22.639036       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/gtjq 267\n"
  I0423 18:44:22.842035 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-logs-550 logs logs-generator logs-generator --since=24h'
  I0423 18:44:22.982030 25 builder.go:146] stderr: ""
  I0423 18:44:22.982118 25 builder.go:147] stdout: "I0423 18:44:18.638229       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/p67v 290\nI0423 18:44:18.838950       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/57nw 248\nI0423 18:44:19.038253       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/frqb 380\nI0423 18:44:19.239042       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/84v 509\nI0423 18:44:19.438450       1 logs_generator.go:76] 4 POST /api/v1/namespaces/ns/pods/vbwd 254\nI0423 18:44:19.638381       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/ktb 278\nI0423 18:44:19.838894       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/j4g 359\nI0423 18:44:20.038415       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/c9rd 555\nI0423 18:44:20.239075       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/tsjd 553\nI0423 18:44:20.438743       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/h4k 286\nI0423 18:44:20.638547       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/czj 403\nI0423 18:44:20.838585       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/txrc 478\nI0423 18:44:21.039024       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/4k82 492\nI0423 18:44:21.238597       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/dnj 505\nI0423 18:44:21.438385       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/v88 490\nI0423 18:44:21.639268       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/f5w 305\nI0423 18:44:21.838971       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/2ksp 271\nI0423 18:44:22.038413       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/rtb2 539\nI0423 18:44:22.238409       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/mmb 447\nI0423 18:44:22.439204       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/vb6 590\nI0423 18:44:22.639036       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/gtjq 267\nI0423 18:44:22.838252       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/j4pg 349\n"
  I0423 18:44:22.982248 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-logs-550 delete pod logs-generator'
  I0423 18:44:24.550675 25 builder.go:146] stderr: ""
  I0423 18:44:24.550946 25 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0423 18:44:24.551258 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-550" for this suite. @ 04/23/25 18:44:24.559
• [7.003 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 04/23/25 18:44:24.581
  I0423 18:44:24.581684 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 18:44:24.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:24.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:24.618
  STEP: Setting up server cert @ 04/23/25 18:44:24.663
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 18:44:25.024
  STEP: Deploying the webhook pod @ 04/23/25 18:44:25.042
  STEP: Wait for the deployment to be ready @ 04/23/25 18:44:25.054
  I0423 18:44:25.062498 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 18:44:27.075
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 18:44:27.088
  I0423 18:44:28.089559 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/23/25 18:44:28.096
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/23/25 18:44:28.098
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/23/25 18:44:28.098
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/23/25 18:44:28.098
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/23/25 18:44:28.101
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/23/25 18:44:28.101
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/23/25 18:44:28.103
  I0423 18:44:28.157317 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2391" for this suite. @ 04/23/25 18:44:28.163
  STEP: Destroying namespace "webhook-markers-7913" for this suite. @ 04/23/25 18:44:28.178
• [3.605 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/23/25 18:44:28.189
  I0423 18:44:28.189755 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 18:44:28.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:28.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:28.222
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 18:44:28.227
  STEP: Saw pod success @ 04/23/25 18:44:32.262
  I0423 18:44:32.266358 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-5b76b922-5aa4-4257-8577-ce0bb8d0c2dd container client-container: <nil>
  STEP: delete the pod @ 04/23/25 18:44:32.275
  I0423 18:44:32.318146 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5180" for this suite. @ 04/23/25 18:44:32.327
• [4.146 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 04/23/25 18:44:32.336
  I0423 18:44:32.337501 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 18:44:32.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:32.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:32.371
  STEP: creating a ConfigMap @ 04/23/25 18:44:32.374
  STEP: fetching the ConfigMap @ 04/23/25 18:44:32.38
  STEP: patching the ConfigMap @ 04/23/25 18:44:32.384
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/23/25 18:44:32.391
  STEP: deleting the ConfigMap by collection with a label selector @ 04/23/25 18:44:32.396
  STEP: listing all ConfigMaps in test namespace @ 04/23/25 18:44:32.409
  I0423 18:44:32.415516 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8071" for this suite. @ 04/23/25 18:44:32.427
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/23/25 18:44:32.437
  I0423 18:44:32.437728 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 18:44:32.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:32.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:32.468
  STEP: Creating ServiceAccount "e2e-sa-xddp5"  @ 04/23/25 18:44:32.472
  I0423 18:44:32.476830 25 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-xddp5"  @ 04/23/25 18:44:32.476
  I0423 18:44:32.495264 25 service_accounts.go:839] AutomountServiceAccountToken: true
  I0423 18:44:32.495496 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8702" for this suite. @ 04/23/25 18:44:32.528
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 04/23/25 18:44:32.543
  I0423 18:44:32.543149 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 18:44:32.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:32.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:32.576
  I0423 18:44:34.615340 25 delete.go:62] Deleting pod "var-expansion-21f31734-4878-4ef9-9e4b-857fc884a74a" in namespace "var-expansion-8371"
  I0423 18:44:34.635701 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-21f31734-4878-4ef9-9e4b-857fc884a74a" to be fully deleted
  I0423 18:44:36.643736 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8371" for this suite. @ 04/23/25 18:44:36.65
• [4.117 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/23/25 18:44:36.659
  I0423 18:44:36.659162 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename gc @ 04/23/25 18:44:36.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:36.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:36.68
  STEP: create the deployment @ 04/23/25 18:44:36.684
  W0423 18:44:36.692186      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/23/25 18:44:36.692
  STEP: delete the deployment @ 04/23/25 18:44:37.208
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/23/25 18:44:37.24
  STEP: Gathering metrics @ 04/23/25 18:44:37.952
  I0423 18:44:38.043573 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 18:44:38.043807 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3144" for this suite. @ 04/23/25 18:44:38.049
• [1.395 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/23/25 18:44:38.054
  I0423 18:44:38.054598 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename certificates @ 04/23/25 18:44:38.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:38.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:38.081
  STEP: getting /apis @ 04/23/25 18:44:38.967
  STEP: getting /apis/certificates.k8s.io @ 04/23/25 18:44:38.973
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/23/25 18:44:38.974
  STEP: creating @ 04/23/25 18:44:38.976
  STEP: getting @ 04/23/25 18:44:38.996
  STEP: listing @ 04/23/25 18:44:39
  STEP: watching @ 04/23/25 18:44:39.005
  I0423 18:44:39.005119 25 certificates.go:316] starting watch
  STEP: patching @ 04/23/25 18:44:39.007
  STEP: updating @ 04/23/25 18:44:39.013
  I0423 18:44:39.021643 25 certificates.go:332] waiting for watch events with expected annotations
  I0423 18:44:39.021707 25 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 04/23/25 18:44:39.021
  STEP: patching /approval @ 04/23/25 18:44:39.024
  STEP: updating /approval @ 04/23/25 18:44:39.032
  STEP: getting /status @ 04/23/25 18:44:39.04
  STEP: patching /status @ 04/23/25 18:44:39.044
  STEP: updating /status @ 04/23/25 18:44:39.057
  STEP: deleting @ 04/23/25 18:44:39.07
  STEP: deleting a collection @ 04/23/25 18:44:39.084
  I0423 18:44:39.098988 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8804" for this suite. @ 04/23/25 18:44:39.104
• [1.058 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 04/23/25 18:44:39.117
  I0423 18:44:39.117625 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 18:44:39.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:39.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:39.142
  STEP: Setting up server cert @ 04/23/25 18:44:39.178
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 18:44:39.712
  STEP: Deploying the webhook pod @ 04/23/25 18:44:39.719
  STEP: Wait for the deployment to be ready @ 04/23/25 18:44:39.731
  I0423 18:44:39.742416 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 18:44:41.76
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 18:44:41.78
  I0423 18:44:42.786534 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/23/25 18:44:42.798
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/23/25 18:44:42.82
  STEP: Creating a dummy validating-webhook-configuration object @ 04/23/25 18:44:42.846
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/23/25 18:44:42.859
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/23/25 18:44:42.867
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/23/25 18:44:42.886
  I0423 18:44:43.009010 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4196" for this suite. @ 04/23/25 18:44:43.014
  STEP: Destroying namespace "webhook-markers-1671" for this suite. @ 04/23/25 18:44:43.023
• [3.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 04/23/25 18:44:43.032
  I0423 18:44:43.032457 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 18:44:43.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:43.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:43.056
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 18:44:43.118
  STEP: create the pod with lifecycle hook @ 04/23/25 18:44:45.147
  STEP: check poststart hook @ 04/23/25 18:44:47.177
  STEP: delete the pod with lifecycle hook @ 04/23/25 18:44:47.187
  I0423 18:44:51.253224 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9600" for this suite. @ 04/23/25 18:44:51.26
• [8.239 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/23/25 18:44:51.271
  I0423 18:44:51.271311 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:44:51.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:51.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:51.304
  STEP: Creating configMap with name projected-configmap-test-volume-9185a5ef-f701-4e2d-987b-ef7dee320624 @ 04/23/25 18:44:51.311
  STEP: Creating a pod to test consume configMaps @ 04/23/25 18:44:51.321
  STEP: Saw pod success @ 04/23/25 18:44:55.36
  I0423 18:44:55.364448 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-44db0391-348d-4ef4-849d-fde710af293b container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 18:44:55.373
  I0423 18:44:55.410483 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6545" for this suite. @ 04/23/25 18:44:55.418
• [4.159 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 04/23/25 18:44:55.43
  I0423 18:44:55.431032 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 18:44:55.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:55.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:55.467
  STEP: creating a Namespace @ 04/23/25 18:44:55.474
  STEP: patching the Namespace @ 04/23/25 18:44:55.494
  STEP: get the Namespace and ensuring it has the label @ 04/23/25 18:44:55.509
  I0423 18:44:55.516555 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9288" for this suite. @ 04/23/25 18:44:55.524
  STEP: Destroying namespace "nspatchtest-3e5be6ca-eb48-48b5-9d2f-95f0a87fd8aa-4465" for this suite. @ 04/23/25 18:44:55.54
• [0.124 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/23/25 18:44:55.554
  I0423 18:44:55.554987 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 18:44:55.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:44:55.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:44:55.592
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/23/25 18:44:55.622
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/23/25 18:45:12.744
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/23/25 18:45:12.749
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/23/25 18:45:12.759
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/23/25 18:45:12.759
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/23/25 18:45:12.814
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/23/25 18:45:15.849
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/23/25 18:45:16.861
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/23/25 18:45:16.87
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/23/25 18:45:16.87
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/23/25 18:45:16.929
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/23/25 18:45:17.942
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/23/25 18:45:19.956
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/23/25 18:45:19.963
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/23/25 18:45:19.963
  I0423 18:45:20.029131 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9244" for this suite. @ 04/23/25 18:45:20.069
• [24.524 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/23/25 18:45:20.079
  I0423 18:45:20.079128 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 18:45:20.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:45:20.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:45:20.106
  I0423 18:45:20.110016 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:45:23.205626 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8219" for this suite. @ 04/23/25 18:45:23.211
• [3.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 04/23/25 18:45:23.223
  I0423 18:45:23.223270 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 18:45:23.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:45:23.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:45:23.257
  STEP: Creating service test in namespace statefulset-8779 @ 04/23/25 18:45:23.262
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/23/25 18:45:23.274
  STEP: Creating stateful set ss in namespace statefulset-8779 @ 04/23/25 18:45:23.279
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8779 @ 04/23/25 18:45:23.293
  I0423 18:45:23.306172 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0423 18:45:33.303213 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/23/25 18:45:33.303
  I0423 18:45:33.307766 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8779 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 18:45:33.535590 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 18:45:33.535744 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 18:45:33.535776 25 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 18:45:33.543169 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0423 18:45:43.541697 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 18:45:43.541786 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0423 18:45:43.644671 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999333s
  I0423 18:45:44.652146 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.928555342s
  I0423 18:45:45.663361 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.921980569s
  I0423 18:45:46.670386 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.910722582s
  I0423 18:45:47.679340 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.903297961s
  I0423 18:45:48.686479 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.89439274s
  I0423 18:45:49.693771 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.887504006s
  I0423 18:45:50.701093 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.87948795s
  I0423 18:45:51.710177 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.872890786s
  I0423 18:45:52.717969 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 863.662787ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8779 @ 04/23/25 18:45:53.718
  I0423 18:45:53.725761 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8779 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 18:45:53.885752 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 18:45:53.885915 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 18:45:53.885937 25 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 18:45:53.890552 25 wait.go:40] Found 1 stateful pods, waiting for 3
  I0423 18:46:03.894893 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 18:46:03.894946 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 18:46:03.894970 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/23/25 18:46:03.895
  STEP: Scale down will halt with unhealthy stateful pod @ 04/23/25 18:46:03.895
  I0423 18:46:03.904383 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8779 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 18:46:04.135777 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 18:46:04.135865 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 18:46:04.135966 25 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 18:46:04.136073 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8779 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 18:46:04.418876 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 18:46:04.419003 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 18:46:04.419056 25 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 18:46:04.419179 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8779 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 18:46:04.685664 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 18:46:04.686291 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 18:46:04.686328 25 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 18:46:04.687023 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0423 18:46:04.693434 25 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0423 18:46:14.698205 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 18:46:14.698278 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0423 18:46:14.698319 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0423 18:46:14.799418 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999369s
  I0423 18:46:15.807362 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.924200768s
  I0423 18:46:16.814549 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.915583949s
  I0423 18:46:17.823862 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.908111258s
  I0423 18:46:18.830789 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.898946012s
  I0423 18:46:19.838220 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.892315161s
  I0423 18:46:20.846451 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.884768562s
  I0423 18:46:21.854551 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.877222856s
  I0423 18:46:22.863136 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.868369118s
  I0423 18:46:23.871989 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 860.462797ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8779 @ 04/23/25 18:46:24.872
  I0423 18:46:24.881445 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8779 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 18:46:25.124053 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 18:46:25.124161 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 18:46:25.124198 25 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 18:46:25.124305 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8779 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 18:46:25.316423 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 18:46:25.316547 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 18:46:25.316578 25 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 18:46:25.317141 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8779 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 18:46:25.516249 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 18:46:25.516317 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 18:46:25.516350 25 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 18:46:25.516376 25 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/23/25 18:46:35.533
  I0423 18:46:35.533379 25 statefulset.go:138] Deleting all statefulset in ns statefulset-8779
  I0423 18:46:35.537487 25 rest.go:150] Scaling statefulset ss to 0
  I0423 18:46:35.548518 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 18:46:35.553173 25 rest.go:88] Deleting statefulset ss
  I0423 18:46:35.587126 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8779" for this suite. @ 04/23/25 18:46:35.598
• [72.386 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/23/25 18:46:35.612
  I0423 18:46:35.612486 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename controllerrevisions @ 04/23/25 18:46:35.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:46:35.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:46:35.652
  STEP: Creating DaemonSet "e2e-ll2bn-daemon-set" @ 04/23/25 18:46:35.707
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 18:46:35.719
  I0423 18:46:35.812202 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-ll2bn-daemon-set: 0
  I0423 18:46:35.812253 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 18:46:36.736262 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-ll2bn-daemon-set: 1
  I0423 18:46:36.736331 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 18:46:37.733321 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-ll2bn-daemon-set: 2
  I0423 18:46:37.733386 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-ll2bn-daemon-set
  STEP: Confirm DaemonSet "e2e-ll2bn-daemon-set" successfully created with "daemonset-name=e2e-ll2bn-daemon-set" label @ 04/23/25 18:46:37.752
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-ll2bn-daemon-set" @ 04/23/25 18:46:37.764
  I0423 18:46:37.769344 25 controller_revision.go:162] Located ControllerRevision: "e2e-ll2bn-daemon-set-87999c9f8"
  STEP: Patching ControllerRevision "e2e-ll2bn-daemon-set-87999c9f8" @ 04/23/25 18:46:37.775
  I0423 18:46:37.791879 25 controller_revision.go:173] e2e-ll2bn-daemon-set-87999c9f8 has been patched
  STEP: Create a new ControllerRevision @ 04/23/25 18:46:37.791
  I0423 18:46:37.806293 25 controller_revision.go:191] Created ControllerRevision: e2e-ll2bn-daemon-set-5764678db8
  STEP: Confirm that there are two ControllerRevisions @ 04/23/25 18:46:37.806
  I0423 18:46:37.806465 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 18:46:37.811775 25 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-ll2bn-daemon-set-87999c9f8" @ 04/23/25 18:46:37.811
  STEP: Confirm that there is only one ControllerRevision @ 04/23/25 18:46:37.819
  I0423 18:46:37.820258 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 18:46:37.827267 25 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-ll2bn-daemon-set-5764678db8" @ 04/23/25 18:46:37.874
  I0423 18:46:37.898821 25 controller_revision.go:220] e2e-ll2bn-daemon-set-5764678db8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/23/25 18:46:37.898
  W0423 18:46:37.912094      25 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/23/25 18:46:37.912
  I0423 18:46:37.913043 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 18:46:37.948878 25 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-ll2bn-daemon-set-5764678db8=updated" @ 04/23/25 18:46:37.948
  STEP: Confirm that there is only one ControllerRevision @ 04/23/25 18:46:37.975
  I0423 18:46:37.976063 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 18:46:37.981568 25 controller_revision.go:265] Found 1 ControllerRevisions
  I0423 18:46:37.987002 25 controller_revision.go:246] ControllerRevision "e2e-ll2bn-daemon-set-7fb7d5c549" has revision 3
  STEP: Deleting DaemonSet "e2e-ll2bn-daemon-set" @ 04/23/25 18:46:37.994
  STEP: deleting DaemonSet.extensions e2e-ll2bn-daemon-set in namespace controllerrevisions-4317, will wait for the garbage collector to delete the pods @ 04/23/25 18:46:37.994
  I0423 18:46:38.067568 25 resources.go:139] Deleting DaemonSet.extensions e2e-ll2bn-daemon-set took: 14.807874ms
  I0423 18:46:38.169072 25 resources.go:163] Terminating DaemonSet.extensions e2e-ll2bn-daemon-set pods took: 101.499589ms
  I0423 18:46:40.375069 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-ll2bn-daemon-set: 0
  I0423 18:46:40.375134 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-ll2bn-daemon-set
  I0423 18:46:40.384213 25 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18677"},"items":null}

  I0423 18:46:40.392786 25 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18677"},"items":null}

  I0423 18:46:40.408681 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4317" for this suite. @ 04/23/25 18:46:40.414
• [4.812 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/23/25 18:46:40.426
  I0423 18:46:40.426220 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename apf @ 04/23/25 18:46:40.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:46:40.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:46:40.464
  STEP: getting /apis @ 04/23/25 18:46:40.471
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/23/25 18:46:40.48
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/23/25 18:46:40.484
  STEP: creating @ 04/23/25 18:46:40.487
  STEP: getting @ 04/23/25 18:46:40.509
  STEP: listing @ 04/23/25 18:46:40.516
  STEP: watching @ 04/23/25 18:46:40.521
  I0423 18:46:40.521386 25 flowcontrol.go:620] starting watch
  STEP: patching @ 04/23/25 18:46:40.523
  STEP: updating @ 04/23/25 18:46:40.531
  I0423 18:46:40.549397 25 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 04/23/25 18:46:40.55
  STEP: patching /status @ 04/23/25 18:46:40.556
  STEP: updating /status @ 04/23/25 18:46:40.569
  STEP: deleting @ 04/23/25 18:46:40.583
  STEP: deleting a collection @ 04/23/25 18:46:40.601
  I0423 18:46:40.630083 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5702" for this suite. @ 04/23/25 18:46:40.635
• [0.219 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 04/23/25 18:46:40.646
  I0423 18:46:40.646436 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 18:46:40.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:46:40.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:46:40.667
  STEP: getting /apis @ 04/23/25 18:46:40.678
  STEP: getting /apis/admissionregistration.k8s.io @ 04/23/25 18:46:40.685
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/23/25 18:46:40.686
  STEP: creating @ 04/23/25 18:46:40.687
  STEP: getting @ 04/23/25 18:46:40.707
  STEP: listing @ 04/23/25 18:46:40.723
  STEP: watching @ 04/23/25 18:46:40.728
  I0423 18:46:40.728384 25 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 04/23/25 18:46:40.731
  STEP: updating @ 04/23/25 18:46:40.742
  I0423 18:46:40.754210 25 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I0423 18:46:40.754461 25 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/23/25 18:46:40.754
  STEP: patching /status @ 04/23/25 18:46:40.762
  STEP: updating /status @ 04/23/25 18:46:40.776
  STEP: deleting @ 04/23/25 18:46:40.806
  STEP: deleting a collection @ 04/23/25 18:46:40.817
  I0423 18:46:40.939258 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6412" for this suite. @ 04/23/25 18:46:40.946
• [0.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/23/25 18:46:40.958
  I0423 18:46:40.958585 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 18:46:40.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:46:40.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:46:40.995
  I0423 18:46:41.005117 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: creating the pod @ 04/23/25 18:46:41.006
  STEP: submitting the pod to kubernetes @ 04/23/25 18:46:41.006
  I0423 18:46:43.073986 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7186" for this suite. @ 04/23/25 18:46:43.08
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/23/25 18:46:43.096
  I0423 18:46:43.096613 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename watch @ 04/23/25 18:46:43.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:46:43.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:46:43.128
  STEP: creating a watch on configmaps with label A @ 04/23/25 18:46:43.133
  STEP: creating a watch on configmaps with label B @ 04/23/25 18:46:43.135
  STEP: creating a watch on configmaps with label A or B @ 04/23/25 18:46:43.138
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/23/25 18:46:43.141
  I0423 18:46:43.149718 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6504  eb8900ce-6c36-459d-bee5-0dc7d8e2e895 18769 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:46:43.150506 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6504  eb8900ce-6c36-459d-bee5-0dc7d8e2e895 18769 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/23/25 18:46:43.151
  I0423 18:46:43.163896 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6504  eb8900ce-6c36-459d-bee5-0dc7d8e2e895 18770 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:46:43.164103 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6504  eb8900ce-6c36-459d-bee5-0dc7d8e2e895 18770 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/23/25 18:46:43.164
  I0423 18:46:43.175613 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6504  eb8900ce-6c36-459d-bee5-0dc7d8e2e895 18771 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:46:43.175964 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6504  eb8900ce-6c36-459d-bee5-0dc7d8e2e895 18771 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/23/25 18:46:43.176
  I0423 18:46:43.185555 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6504  eb8900ce-6c36-459d-bee5-0dc7d8e2e895 18772 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:46:43.185697 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6504  eb8900ce-6c36-459d-bee5-0dc7d8e2e895 18772 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/23/25 18:46:43.185
  I0423 18:46:43.192925 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6504  f2a01b2d-c16f-4043-9aae-233dea926e08 18773 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:46:43.193393 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6504  f2a01b2d-c16f-4043-9aae-233dea926e08 18773 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/23/25 18:46:53.197
  I0423 18:46:53.217736 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6504  f2a01b2d-c16f-4043-9aae-233dea926e08 18842 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:46:53.217833 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6504  f2a01b2d-c16f-4043-9aae-233dea926e08 18842 0 2025-04-23 18:46:43 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 18:46:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:47:03.222907 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6504" for this suite. @ 04/23/25 18:47:03.229
• [20.151 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 04/23/25 18:47:03.248
  I0423 18:47:03.248419 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 18:47:03.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:47:03.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:47:03.277
  STEP: Creating pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059 @ 04/23/25 18:47:03.283
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 18:47:05.313
  I0423 18:47:05.318868 25 container_probe.go:1749] Initial restart count of pod liveness-78962b81-5331-4e81-850c-d35d6c336398 is 0
  I0423 18:47:05.323101 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:07.330296 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:09.334928 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:11.340898 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:13.350980 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:15.360785 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:17.366381 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:19.373312 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:21.380512 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:23.386209 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:25.392827 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:27.400367 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:29.406388 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:31.411140 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:33.416353 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:35.423795 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:37.431360 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:39.438002 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:41.444517 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:43.453360 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:45.460093 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:47.464634 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:49.469484 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:51.475216 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:53.481179 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:55.488972 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:57.496117 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:47:59.505414 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:01.512725 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:03.521068 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:05.529638 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:07.536628 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:09.545551 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:11.551249 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:13.558229 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:15.563786 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:17.567089 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:19.574148 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:21.580036 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:23.589077 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:25.596708 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:27.604225 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:29.608461 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:31.615618 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:33.624626 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:35.629830 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:37.638604 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:39.648042 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:41.655041 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:43.663254 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:45.673599 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:47.678246 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:49.684200 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:51.687482 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:53.692598 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:55.697780 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:57.705322 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:48:59.709640 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:01.715288 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:03.723290 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:05.730747 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:07.737626 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:09.743941 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:11.750249 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:13.756469 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:15.762543 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:17.768966 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:19.776800 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:21.782941 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:23.789156 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:25.795122 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:27.799701 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:29.805234 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:31.810930 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:33.820929 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:35.829441 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:37.837089 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:39.845643 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:41.852291 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:43.858875 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:45.864524 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:47.868871 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:49.879996 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:51.887282 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:53.893350 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:55.899965 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:57.905701 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:49:59.911949 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:01.921350 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:03.926981 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:05.936508 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:07.943379 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:09.949290 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:11.958279 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:13.968445 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:15.974567 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:17.981797 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:19.987468 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:21.996966 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:24.012204 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:26.015324 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:28.024781 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:30.031512 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:32.041263 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:34.048777 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:36.056182 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:38.064887 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:40.071339 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:42.077791 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:44.085000 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:46.091636 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:48.098235 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:50.105189 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:52.112763 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:54.120321 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:56.127657 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:50:58.135418 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:51:00.142528 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:51:02.148635 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  I0423 18:51:04.156150 25 container_probe.go:1759] Get pod liveness-78962b81-5331-4e81-850c-d35d6c336398 in namespace container-probe-9059
  STEP: deleting the pod @ 04/23/25 18:51:06.157
  I0423 18:51:06.198223 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9059" for this suite. @ 04/23/25 18:51:06.236
• [243.012 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 04/23/25 18:51:06.261
  I0423 18:51:06.261177 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 18:51:06.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:06.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:06.309
  STEP: Creating a cronjob @ 04/23/25 18:51:06.315
  STEP: creating @ 04/23/25 18:51:06.315
  STEP: getting @ 04/23/25 18:51:06.323
  STEP: listing @ 04/23/25 18:51:06.328
  STEP: watching @ 04/23/25 18:51:06.333
  I0423 18:51:06.333442 25 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 04/23/25 18:51:06.334
  STEP: cluster-wide watching @ 04/23/25 18:51:06.337
  I0423 18:51:06.337297 25 cronjob.go:382] starting watch
  STEP: patching @ 04/23/25 18:51:06.338
  STEP: updating @ 04/23/25 18:51:06.345
  I0423 18:51:06.362547 25 cronjob.go:406] waiting for watch events with expected annotations
  I0423 18:51:06.362721 25 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 04/23/25 18:51:06.362
  STEP: updating /status @ 04/23/25 18:51:06.37
  STEP: get /status @ 04/23/25 18:51:06.389
  STEP: deleting @ 04/23/25 18:51:06.395
  STEP: deleting a collection @ 04/23/25 18:51:06.412
  I0423 18:51:06.425505 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4571" for this suite. @ 04/23/25 18:51:06.433
• [0.177 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/23/25 18:51:06.438
  I0423 18:51:06.438303 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename watch @ 04/23/25 18:51:06.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:06.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:06.467
  STEP: creating a new configmap @ 04/23/25 18:51:06.47
  STEP: modifying the configmap once @ 04/23/25 18:51:06.477
  STEP: modifying the configmap a second time @ 04/23/25 18:51:06.486
  STEP: deleting the configmap @ 04/23/25 18:51:06.503
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/23/25 18:51:06.517
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/23/25 18:51:06.521
  I0423 18:51:06.522116 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6776  f3fb3847-8e55-4c26-9c4d-62ced02edccb 19774 0 2025-04-23 18:51:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-23 18:51:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:51:06.522892 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6776  f3fb3847-8e55-4c26-9c4d-62ced02edccb 19775 0 2025-04-23 18:51:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-23 18:51:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:51:06.523166 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6776" for this suite. @ 04/23/25 18:51:06.537
• [0.107 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 04/23/25 18:51:06.545
  I0423 18:51:06.545691 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename dns @ 04/23/25 18:51:06.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:06.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:06.574
  STEP: Creating a test externalName service @ 04/23/25 18:51:06.578
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9475.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local; sleep 1; done
   @ 04/23/25 18:51:06.587
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9475.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9475.svc.cluster.local; sleep 1; done
   @ 04/23/25 18:51:06.587
  STEP: creating a pod to probe DNS @ 04/23/25 18:51:06.587
  STEP: submitting the pod to kubernetes @ 04/23/25 18:51:06.587
  STEP: retrieving the pod @ 04/23/25 18:51:08.613
  STEP: looking for the results for each expected name from probers @ 04/23/25 18:51:08.621
  I0423 18:51:08.638600 25 dns_common.go:553] DNS probes using dns-test-7636a91f-6eec-4c87-85e6-112151c03729 succeeded

  STEP: changing the externalName to bar.example.com @ 04/23/25 18:51:08.638
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9475.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local; sleep 1; done
   @ 04/23/25 18:51:08.665
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9475.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9475.svc.cluster.local; sleep 1; done
   @ 04/23/25 18:51:08.665
  STEP: creating a second pod to probe DNS @ 04/23/25 18:51:08.665
  STEP: submitting the pod to kubernetes @ 04/23/25 18:51:08.665
  STEP: retrieving the pod @ 04/23/25 18:51:10.705
  STEP: looking for the results for each expected name from probers @ 04/23/25 18:51:10.722
  I0423 18:51:10.731067 25 dns_common.go:483] File wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local from pod  dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 contains '' instead of 'bar.example.com.'
  I0423 18:51:10.735999 25 dns_common.go:483] File jessie_udp@dns-test-service-3.dns-9475.svc.cluster.local from pod  dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 18:51:10.736082 25 dns_common.go:490] Lookups using dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 failed for: [wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local jessie_udp@dns-test-service-3.dns-9475.svc.cluster.local]

  I0423 18:51:10.748379 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 18:51:10.753798 25 dns_common.go:496] Pod client logs for querier: 
  I0423 18:51:10.765082 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 18:51:15.728622 25 dns_common.go:483] File wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local from pod  dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 18:51:15.746944 25 dns_common.go:490] Lookups using dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 failed for: [wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local]

  I0423 18:51:15.756738 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 18:51:15.765039 25 dns_common.go:496] Pod client logs for querier: 
  I0423 18:51:15.776917 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 18:51:20.748049 25 dns_common.go:483] File wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local from pod  dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 18:51:20.759232 25 dns_common.go:490] Lookups using dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 failed for: [wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local]

  I0423 18:51:20.778410 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 18:51:20.793949 25 dns_common.go:496] Pod client logs for querier: 
  I0423 18:51:20.807256 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 18:51:25.738957 25 dns_common.go:483] File jessie_udp@dns-test-service-3.dns-9475.svc.cluster.local from pod  dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 18:51:25.739057 25 dns_common.go:490] Lookups using dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 failed for: [jessie_udp@dns-test-service-3.dns-9475.svc.cluster.local]

  I0423 18:51:25.750181 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 18:51:25.758574 25 dns_common.go:496] Pod client logs for querier: 
  I0423 18:51:25.767581 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 18:51:30.736986 25 dns_common.go:483] File wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local from pod  dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 18:51:30.746550 25 dns_common.go:490] Lookups using dns-9475/dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 failed for: [wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local]

  I0423 18:51:30.761425 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 18:51:30.770819 25 dns_common.go:496] Pod client logs for querier: 
  I0423 18:51:30.783591 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 18:51:35.738372 25 dns_common.go:553] DNS probes using dns-test-2e9efc9b-fde8-4cd2-ab41-5d5ea8bae9e4 succeeded

  STEP: changing the service to type=ClusterIP @ 04/23/25 18:51:35.738
  W0423 18:51:35.764303      25 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9475.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9475.svc.cluster.local; sleep 1; done
   @ 04/23/25 18:51:35.764
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9475.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9475.svc.cluster.local; sleep 1; done
   @ 04/23/25 18:51:35.764
  STEP: creating a third pod to probe DNS @ 04/23/25 18:51:35.764
  STEP: submitting the pod to kubernetes @ 04/23/25 18:51:35.773
  STEP: retrieving the pod @ 04/23/25 18:51:37.802
  STEP: looking for the results for each expected name from probers @ 04/23/25 18:51:37.808
  I0423 18:51:37.822255 25 dns_common.go:553] DNS probes using dns-test-8b64954d-709d-4e7c-99d2-66b8f48af013 succeeded

  STEP: deleting the pod @ 04/23/25 18:51:37.822
  STEP: deleting the pod @ 04/23/25 18:51:37.855
  STEP: deleting the pod @ 04/23/25 18:51:37.893
  STEP: deleting the test externalName service @ 04/23/25 18:51:37.937
  I0423 18:51:37.981960 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9475" for this suite. @ 04/23/25 18:51:37.989
• [31.462 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/23/25 18:51:38.011
  I0423 18:51:38.011405 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 18:51:38.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:38.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:38.039
  STEP: Creating a pod to test downward api env vars @ 04/23/25 18:51:38.042
  STEP: Saw pod success @ 04/23/25 18:51:42.069
  I0423 18:51:42.078496 25 output.go:196] Trying to get logs from node worker00 pod downward-api-da20bb1e-b461-444c-90e1-74d85e225987 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 18:51:42.094
  I0423 18:51:42.114249 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8686" for this suite. @ 04/23/25 18:51:42.123
• [4.121 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/23/25 18:51:42.132
  I0423 18:51:42.132303 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename server-version @ 04/23/25 18:51:42.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:42.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:42.161
  STEP: Request ServerVersion @ 04/23/25 18:51:42.166
  STEP: Confirm major version @ 04/23/25 18:51:42.167
  I0423 18:51:42.167087 25 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 04/23/25 18:51:42.167
  I0423 18:51:42.167121 25 server_version.go:58] cleanMinorVersion: 31
  I0423 18:51:42.167135 25 server_version.go:62] Minor version: 31
  I0423 18:51:42.167557 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4279" for this suite. @ 04/23/25 18:51:42.225
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/23/25 18:51:42.239
  I0423 18:51:42.239478 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 18:51:42.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:42.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:42.269
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/23/25 18:51:42.275
  STEP: Saw pod success @ 04/23/25 18:51:46.311
  I0423 18:51:46.316792 25 output.go:196] Trying to get logs from node worker00 pod pod-9e9494b1-fa43-4c24-8034-dd43f7424a44 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 18:51:46.329
  I0423 18:51:46.355675 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3224" for this suite. @ 04/23/25 18:51:46.359
• [4.125 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/23/25 18:51:46.364
  I0423 18:51:46.364825 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 18:51:46.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:46.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:46.383
  STEP: Create set of pods @ 04/23/25 18:51:46.387
  I0423 18:51:46.399926 25 pods.go:871] created test-pod-1
  I0423 18:51:46.413690 25 pods.go:871] created test-pod-2
  I0423 18:51:46.434526 25 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/23/25 18:51:46.434
  STEP: waiting for all pods to be deleted @ 04/23/25 18:51:48.497
  I0423 18:51:48.505813 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0423 18:51:49.506158 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0423 18:51:50.507197 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0423 18:51:51.554010 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5624" for this suite. @ 04/23/25 18:51:51.563
• [5.207 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 04/23/25 18:51:51.573
  I0423 18:51:51.573563 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 18:51:51.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:51.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:51.609
  STEP: Setting up server cert @ 04/23/25 18:51:51.651
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 18:51:52.076
  STEP: Deploying the webhook pod @ 04/23/25 18:51:52.091
  STEP: Wait for the deployment to be ready @ 04/23/25 18:51:52.107
  I0423 18:51:52.123253 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 18:51:54.14
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 18:51:54.167
  I0423 18:51:55.169006 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/23/25 18:51:55.181
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/23/25 18:51:55.209
  I0423 18:51:55.209081 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 18:51:55.313049 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8401" for this suite. @ 04/23/25 18:51:55.327
  STEP: Destroying namespace "webhook-markers-4357" for this suite. @ 04/23/25 18:51:55.341
• [3.777 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/23/25 18:51:55.349
  I0423 18:51:55.349923 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 18:51:55.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:55.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:55.375
  I0423 18:51:55.404258 25 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0423 18:51:55.404351 25 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0423 18:51:55.419720 25 service_accounts.go:253] created pod pod-service-account-mountsa
  I0423 18:51:55.419805 25 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0423 18:51:55.437524 25 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0423 18:51:55.437591 25 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0423 18:51:55.458813 25 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0423 18:51:55.459063 25 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0423 18:51:55.490078 25 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0423 18:51:55.490148 25 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0423 18:51:55.509893 25 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0423 18:51:55.509933 25 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0423 18:51:55.521997 25 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0423 18:51:55.522135 25 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0423 18:51:55.539339 25 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0423 18:51:55.539382 25 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0423 18:51:55.548765 25 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0423 18:51:55.548929 25 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0423 18:51:55.549096 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1220" for this suite. @ 04/23/25 18:51:55.567
• [0.242 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 04/23/25 18:51:55.592
  I0423 18:51:55.592973 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 18:51:55.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:55.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:55.637
  I0423 18:51:55.642389 25 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 18:51:55.670181 25 util.go:393] Waiting for terminating namespaces to be deleted...
  I0423 18:51:55.679985 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 18:51:55.693200 25 predicates.go:957] etcd-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693243 25 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0423 18:51:55.693257 25 predicates.go:957] gobetween-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693267 25 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 18:51:55.693278 25 predicates.go:957] kube-apiserver-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693288 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0423 18:51:55.693309 25 predicates.go:957] kube-controller-manager-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693319 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0423 18:51:55.693330 25 predicates.go:957] kube-proxy-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693339 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 18:51:55.693349 25 predicates.go:957] kube-scheduler-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693358 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0423 18:51:55.693369 25 predicates.go:957] kubernetes-dashboard-api-5fdc7d7fcc-ps4fh from kube-system started at 2025-04-23 18:37:58 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693382 25 predicates.go:959] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 18:51:55.693392 25 predicates.go:957] kubernetes-dashboard-auth-85745c57f4-nb7tr from kube-system started at 2025-04-23 18:37:58 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693402 25 predicates.go:959] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 18:51:55.693412 25 predicates.go:957] kubernetes-dashboard-kong-859475c6c4-2wxg4 from kube-system started at 2025-04-23 18:37:58 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693421 25 predicates.go:959] 	Container proxy ready: true, restart count 0
  I0423 18:51:55.693431 25 predicates.go:957] kubernetes-dashboard-metrics-scraper-6996d84f57-tjk89 from kube-system started at 2025-04-23 18:37:58 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693443 25 predicates.go:959] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 18:51:55.693454 25 predicates.go:957] kubernetes-dashboard-web-684dd555d6-vwtgc from kube-system started at 2025-04-23 18:37:58 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693463 25 predicates.go:959] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 18:51:55.693584 25 predicates.go:957] calico-node-t7722 from networking started at 2025-04-23 18:08:38 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693601 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 18:51:55.693612 25 predicates.go:957] metallb-speaker-m5vll from networking started at 2025-04-23 18:37:58 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693622 25 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 18:51:55.693637 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-23 18:12:31 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693647 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 18:51:55.693658 25 predicates.go:957] sonobuoy-e2e-job-8e2e29f3e66e467f from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 18:51:55.693668 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0423 18:51:55.693677 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 18:51:55.693688 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-be276f75500849d8-mwsrb from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 18:51:55.693697 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 18:51:55.693707 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 18:51:55.693718 25 predicates.go:957] ceph-csi-cephfs-nodeplugin-fpjxc from storage started at 2025-04-23 18:37:59 +0000 UTC (3 container statuses recorded)
  I0423 18:51:55.693727 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 18:51:55.693738 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 18:51:55.693748 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.693767 25 predicates.go:957] ceph-csi-rbd-nodeplugin-w999g from storage started at 2025-04-23 18:37:59 +0000 UTC (3 container statuses recorded)
  I0423 18:51:55.693776 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 18:51:55.693786 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 18:51:55.693796 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.693807 25 predicates.go:957] ceph-mon-worker00-f69c45b64-c8vvb from storage started at 2025-04-23 18:37:58 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693816 25 predicates.go:959] 	Container ceph-mon ready: true, restart count 0
  I0423 18:51:55.693827 25 predicates.go:957] pod-service-account-defaultsa from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693889 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0423 18:51:55.693901 25 predicates.go:957] pod-service-account-defaultsa-mountspec from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693911 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0423 18:51:55.693922 25 predicates.go:957] pod-service-account-defaultsa-nomountspec from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693932 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0423 18:51:55.693942 25 predicates.go:957] pod-service-account-mountsa from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693960 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0423 18:51:55.693972 25 predicates.go:957] pod-service-account-mountsa-mountspec from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.693981 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0423 18:51:55.693992 25 predicates.go:957] pod-service-account-nomountsa from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.694014 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0423 18:51:55.694054 25 predicates.go:957] pod-service-account-nomountsa-mountspec from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.694101 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0423 18:51:55.694155 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 18:51:55.711766 25 predicates.go:957] coredns-9b4dff67b-c8475 from kube-system started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.711806 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 18:51:55.711820 25 predicates.go:957] coredns-9b4dff67b-pkcwz from kube-system started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.711837 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 18:51:55.711848 25 predicates.go:957] gobetween-worker01 from kube-system started at 2025-04-23 18:07:44 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.711858 25 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 18:51:55.711873 25 predicates.go:957] kube-proxy-worker01 from kube-system started at 2025-04-23 18:07:44 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.711909 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 18:51:55.711941 25 predicates.go:957] calico-kube-controllers-78fc9c8775-p2x92 from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.711956 25 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 18:51:55.711967 25 predicates.go:957] calico-node-7pxkw from networking started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.711977 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 18:51:55.711988 25 predicates.go:957] calico-typha-7f9677b8db-52khj from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.712030 25 predicates.go:959] 	Container calico-typha ready: true, restart count 0
  I0423 18:51:55.712046 25 predicates.go:957] metallb-controller-6b6cbb75b9-dxlx8 from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.712056 25 predicates.go:959] 	Container controller ready: true, restart count 0
  I0423 18:51:55.712066 25 predicates.go:957] metallb-speaker-w4trl from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.712075 25 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 18:51:55.712174 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-be276f75500849d8-b29nj from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 18:51:55.712184 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 18:51:55.712242 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 18:51:55.712287 25 predicates.go:957] ceph-csi-cephfs-nodeplugin-4mjql from storage started at 2025-04-23 18:08:35 +0000 UTC (3 container statuses recorded)
  I0423 18:51:55.712298 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 18:51:55.712307 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 18:51:55.712358 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.712714 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-86q8j from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 18:51:55.712758 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 18:51:55.712780 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 18:51:55.712790 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 18:51:55.712799 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 18:51:55.712813 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.712836 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-r958b from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 18:51:55.712873 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 18:51:55.712885 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 18:51:55.712895 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 18:51:55.712905 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 18:51:55.712928 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.712940 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-wppg5 from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 18:51:55.712950 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 18:51:55.712960 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 18:51:55.712970 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 18:51:55.712981 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 18:51:55.712991 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.713006 25 predicates.go:957] ceph-csi-rbd-nodeplugin-cxbdp from storage started at 2025-04-23 18:08:35 +0000 UTC (3 container statuses recorded)
  I0423 18:51:55.713021 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 18:51:55.713031 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 18:51:55.713040 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.713051 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-455gl from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 18:51:55.713065 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 18:51:55.713075 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 18:51:55.713085 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 18:51:55.713100 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 18:51:55.713111 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 18:51:55.713122 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 18:51:55.713138 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.713164 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-mztv7 from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 18:51:55.713183 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 18:51:55.713197 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 18:51:55.713212 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 18:51:55.713225 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 18:51:55.713240 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 18:51:55.713253 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 18:51:55.713272 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.713287 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-ppn52 from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 18:51:55.713298 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 18:51:55.713309 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 18:51:55.713318 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 18:51:55.713331 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 18:51:55.713348 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 18:51:55.713376 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 18:51:55.713386 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 18:51:55.713402 25 predicates.go:957] ceph-mds-worker01-b7d5fc474-hv782 from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713415 25 predicates.go:959] 	Container ceph-mds ready: true, restart count 0
  I0423 18:51:55.713429 25 predicates.go:957] ceph-mgr-worker01-559c86787f-24g2t from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713448 25 predicates.go:959] 	Container ceph-mgr ready: true, restart count 0
  I0423 18:51:55.713463 25 predicates.go:957] ceph-osd-worker01-56b55bd558-fprzw from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713473 25 predicates.go:959] 	Container ceph-osd ready: true, restart count 0
  I0423 18:51:55.713485 25 predicates.go:957] ceph-rgw-worker01-6cd4858446-n8rlr from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713495 25 predicates.go:959] 	Container ceph-rgw ready: true, restart count 0
  I0423 18:51:55.713507 25 predicates.go:957] ceph-setup-bth5g from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713517 25 predicates.go:959] 	Container ceph ready: false, restart count 0
  I0423 18:51:55.713538 25 predicates.go:957] snapshot-controller-79d4d6679-bfdwx from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713552 25 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 18:51:55.713566 25 predicates.go:957] snapshot-controller-79d4d6679-nxs6g from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713578 25 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 18:51:55.713591 25 predicates.go:957] snapshot-validation-webhook-f99b99c55-zf2x8 from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713609 25 predicates.go:959] 	Container snapshot-validation-webhook ready: true, restart count 0
  I0423 18:51:55.713620 25 predicates.go:957] pod-service-account-mountsa-nomountspec from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713630 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  I0423 18:51:55.713641 25 predicates.go:957] pod-service-account-nomountsa-nomountspec from svcaccounts-1220 started at 2025-04-23 18:51:55 +0000 UTC (1 container statuses recorded)
  I0423 18:51:55.713653 25 predicates.go:959] 	Container token-test ready: false, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/23/25 18:51:55.714
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18390743329cc7a7], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 04/23/25 18:51:55.782
  I0423 18:51:56.784950 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3209" for this suite. @ 04/23/25 18:51:56.79
• [1.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/23/25 18:51:56.809
  I0423 18:51:56.810018 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 18:51:56.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:51:56.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:51:56.831
  STEP: Creating configMap with name configmap-projected-all-test-volume-1fde5b49-091a-4d97-baa1-41b0810c0f1e @ 04/23/25 18:51:56.835
  STEP: Creating secret with name secret-projected-all-test-volume-d60e5223-2eef-4cfb-b7c4-164e05dd79b6 @ 04/23/25 18:51:56.844
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/23/25 18:51:56.852
  STEP: Saw pod success @ 04/23/25 18:52:02.891
  I0423 18:52:02.894944 25 output.go:196] Trying to get logs from node worker01 pod projected-volume-652d1e0a-01f1-4ae5-8c4e-c7d5100824ce container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 18:52:02.923
  I0423 18:52:02.944684 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1064" for this suite. @ 04/23/25 18:52:02.948
• [6.148 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/23/25 18:52:02.958
  I0423 18:52:02.958757 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename watch @ 04/23/25 18:52:02.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:52:02.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:52:02.998
  STEP: creating a watch on configmaps @ 04/23/25 18:52:03.004
  STEP: creating a new configmap @ 04/23/25 18:52:03.008
  STEP: modifying the configmap once @ 04/23/25 18:52:03.016
  STEP: closing the watch once it receives two notifications @ 04/23/25 18:52:03.027
  I0423 18:52:03.027546 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8495  756f6278-7dee-403b-b84c-65e38ef0f0a5 20492 0 2025-04-23 18:52:03 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 18:52:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:52:03.028606 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8495  756f6278-7dee-403b-b84c-65e38ef0f0a5 20494 0 2025-04-23 18:52:03 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 18:52:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/23/25 18:52:03.029
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/23/25 18:52:03.042
  STEP: deleting the configmap @ 04/23/25 18:52:03.044
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/23/25 18:52:03.054
  I0423 18:52:03.054426 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8495  756f6278-7dee-403b-b84c-65e38ef0f0a5 20496 0 2025-04-23 18:52:03 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 18:52:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:52:03.054549 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8495  756f6278-7dee-403b-b84c-65e38ef0f0a5 20498 0 2025-04-23 18:52:03 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 18:52:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 18:52:03.054660 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8495" for this suite. @ 04/23/25 18:52:03.064
• [0.122 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 04/23/25 18:52:03.082
  I0423 18:52:03.082048 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 18:52:03.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:52:03.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:52:03.122
  I0423 18:52:03.151632 25 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0423 18:53:03.167774 25 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/23/25 18:53:03.174
  I0423 18:53:03.212980 25 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0423 18:53:03.231337 25 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0423 18:53:03.293501 25 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0423 18:53:03.310319 25 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/23/25 18:53:03.31
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/23/25 18:53:05.348
  I0423 18:53:09.463186 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8307" for this suite. @ 04/23/25 18:53:09.466
• [66.390 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/23/25 18:53:09.474
  I0423 18:53:09.474128 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 18:53:09.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:53:09.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:53:09.496
  I0423 18:53:09.530142 25 service_accounts.go:618] created pod
  STEP: Saw pod success @ 04/23/25 18:53:13.555
  I0423 18:53:43.557447 25 service_accounts.go:624] polling logs
  I0423 18:53:43.567055 25 service_accounts.go:634] Pod logs: 
  I0423 18:53:10.477836       1 log.go:245] OK: Got token
  I0423 18:53:10.477993       1 log.go:245] validating with in-cluster discovery
  I0423 18:53:10.478352       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0423 18:53:10.478630       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1015:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013a20), NotBefore:(*jwt.NumericDate)(0xc000013b10), IssuedAt:(*jwt.NumericDate)(0xc000013a30), ID:"7b9b4de6-cf1c-4f6d-9a92-6c3e9b4f469f"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1015", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"54b6a4f2-c502-4ad5-b4ab-64055f9f13e6"}}}
  I0423 18:53:10.494377       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0423 18:53:10.501408       1 log.go:245] OK: Validated signature on JWT
  I0423 18:53:10.501483       1 log.go:245] OK: Got valid claims from token!
  I0423 18:53:10.501515       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1015:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012d40), NotBefore:(*jwt.NumericDate)(0xc000012d68), IssuedAt:(*jwt.NumericDate)(0xc000012d48), ID:"7b9b4de6-cf1c-4f6d-9a92-6c3e9b4f469f"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1015", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"54b6a4f2-c502-4ad5-b4ab-64055f9f13e6"}}}

  I0423 18:53:43.567211 25 service_accounts.go:638] completed pod
  I0423 18:53:43.587603 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1015" for this suite. @ 04/23/25 18:53:43.595
• [34.133 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/23/25 18:53:43.609
  I0423 18:53:43.609873 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 18:53:43.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:53:43.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:53:43.635
  STEP: creating the pod @ 04/23/25 18:53:43.641
  STEP: setting up watch @ 04/23/25 18:53:43.641
  STEP: submitting the pod to kubernetes @ 04/23/25 18:53:43.748
  STEP: verifying the pod is in kubernetes @ 04/23/25 18:53:43.771
  STEP: verifying pod creation was observed @ 04/23/25 18:53:43.79
  STEP: deleting the pod gracefully @ 04/23/25 18:53:45.814
  STEP: verifying pod deletion was observed @ 04/23/25 18:53:45.827
  I0423 18:53:48.514947 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6484" for this suite. @ 04/23/25 18:53:48.521
• [4.923 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/23/25 18:53:48.533
  I0423 18:53:48.533188 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename chunking @ 04/23/25 18:53:48.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 18:53:48.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 18:53:48.566
  STEP: creating a large number of resources @ 04/23/25 18:53:48.571
  STEP: retrieving the first page @ 04/23/25 18:54:06.242
  I0423 18:54:06.290720 25 chunking.go:163] Retrieved 40/40 results with rv 21567 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 04/23/25 18:54:06.29
  I0423 18:54:26.297047 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:54:46.297328 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:55:06.297933 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:55:26.295989 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:55:46.299678 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:56:06.297942 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:56:26.295286 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:56:46.301262 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:57:06.295669 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:57:26.298825 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:57:46.297327 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:58:06.296395 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:58:26.298331 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:58:46.297483 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:59:06.297053 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:59:26.296179 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 18:59:46.298693 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:00:06.298767 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:00:26.296452 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:00:46.300666 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:01:06.297204 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:01:26.299494 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:01:46.299488 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:02:06.299566 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:02:26.299660 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:02:46.297466 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:03:06.299684 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjE1NjcsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 19:03:26.297926 25 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0423 19:03:26.297974 25 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/23/25 19:03:26.297
  STEP: retrieving all remaining pages @ 04/23/25 19:03:26.303
  I0423 19:03:26.309126 25 chunking.go:221] Retrieved 40/40 results with rv 23522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0423 19:03:26.312645 25 chunking.go:221] Retrieved 40/40 results with rv 23522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0423 19:03:26.316554 25 chunking.go:221] Retrieved 40/40 results with rv 23522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0423 19:03:26.322682 25 chunking.go:221] Retrieved 40/40 results with rv 23522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0423 19:03:26.327268 25 chunking.go:221] Retrieved 40/40 results with rv 23522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0423 19:03:26.333155 25 chunking.go:221] Retrieved 40/40 results with rv 23522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0423 19:03:26.340684 25 chunking.go:221] Retrieved 40/40 results with rv 23522 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjM1MjIsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0423 19:03:26.345997 25 chunking.go:221] Retrieved 40/40 results with rv 23522 and continue 
  I0423 19:03:26.346146 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9723" for this suite. @ 04/23/25 19:03:26.351
• [577.831 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/23/25 19:03:26.363
  I0423 19:03:26.363801 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 19:03:26.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:03:26.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:03:26.394
  I0423 19:03:26.440434 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7342" for this suite. @ 04/23/25 19:03:26.455
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 04/23/25 19:03:26.47
  I0423 19:03:26.470889 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:03:26.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:03:26.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:03:26.501
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 19:03:26.506
  I0423 19:03:26.507180 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4337 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0423 19:03:26.626050 25 builder.go:146] stderr: ""
  I0423 19:03:26.626132 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/23/25 19:03:26.626
  I0423 19:03:26.626283 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4337 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0423 19:03:26.732520 25 builder.go:146] stderr: ""
  I0423 19:03:26.732563 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 19:03:26.732
  I0423 19:03:26.736911 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4337 delete pods e2e-test-httpd-pod'
  I0423 19:03:28.947576 25 builder.go:146] stderr: ""
  I0423 19:03:28.947670 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0423 19:03:28.947863 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4337" for this suite. @ 04/23/25 19:03:28.957
• [2.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 04/23/25 19:03:28.972
  I0423 19:03:28.972412 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 19:03:28.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:03:28.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:03:29.009
  STEP: Counting existing ResourceQuota @ 04/23/25 19:03:46.022
  STEP: Creating a ResourceQuota @ 04/23/25 19:03:51.03
  STEP: Ensuring resource quota status is calculated @ 04/23/25 19:03:51.042
  STEP: Creating a ConfigMap @ 04/23/25 19:03:53.049
  STEP: Ensuring resource quota status captures configMap creation @ 04/23/25 19:03:53.079
  STEP: Deleting a ConfigMap @ 04/23/25 19:03:55.086
  STEP: Ensuring resource quota status released usage @ 04/23/25 19:03:55.111
  I0423 19:03:57.123392 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8013" for this suite. @ 04/23/25 19:03:57.136
• [28.189 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 04/23/25 19:03:57.161
  I0423 19:03:57.162026 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename dns @ 04/23/25 19:03:57.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:03:57.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:03:57.197
  STEP: Creating a test headless service @ 04/23/25 19:03:57.204
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1439.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1439.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1439.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1439.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1439.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1439.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1439.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1439.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1439.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 117.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.117_udp@PTR;check="$$(dig +tcp +noall +answer +search 117.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.117_tcp@PTR;sleep 1; done
   @ 04/23/25 19:03:57.243
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1439.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1439.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1439.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1439.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1439.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1439.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1439.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1439.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1439.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1439.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 117.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.117_udp@PTR;check="$$(dig +tcp +noall +answer +search 117.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.117_tcp@PTR;sleep 1; done
   @ 04/23/25 19:03:57.244
  STEP: creating a pod to probe DNS @ 04/23/25 19:03:57.246
  STEP: submitting the pod to kubernetes @ 04/23/25 19:03:57.249
  STEP: retrieving the pod @ 04/23/25 19:03:59.308
  STEP: looking for the results for each expected name from probers @ 04/23/25 19:03:59.315
  I0423 19:03:59.325073 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:03:59.333731 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:03:59.339778 25 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:03:59.346351 25 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:03:59.373394 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:03:59.380153 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:03:59.384898 25 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:03:59.391534 25 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:03:59.413105 25 dns_common.go:490] Lookups using dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6 failed for: [wheezy_udp@dns-test-service.dns-1439.svc.cluster.local wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local jessie_udp@dns-test-service.dns-1439.svc.cluster.local jessie_tcp@dns-test-service.dns-1439.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local]

  I0423 19:03:59.429014 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:03:59.439643 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:03:59.450780 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:04:04.322362 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:04.330164 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:04.371619 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:04.377507 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:04.382475 25 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:04.407541 25 dns_common.go:490] Lookups using dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6 failed for: [wheezy_udp@dns-test-service.dns-1439.svc.cluster.local wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local jessie_udp@dns-test-service.dns-1439.svc.cluster.local jessie_tcp@dns-test-service.dns-1439.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-1439.svc.cluster.local]

  I0423 19:04:04.417076 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:04:04.430220 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:04:04.438867 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:04:09.317942 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:09.321498 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:09.339386 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:09.341809 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:09.355761 25 dns_common.go:490] Lookups using dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6 failed for: [wheezy_udp@dns-test-service.dns-1439.svc.cluster.local wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local jessie_udp@dns-test-service.dns-1439.svc.cluster.local jessie_tcp@dns-test-service.dns-1439.svc.cluster.local]

  I0423 19:04:09.362799 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:04:09.369668 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:04:09.374327 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:04:14.324048 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:14.332033 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:14.364278 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:14.371152 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:14.401430 25 dns_common.go:490] Lookups using dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6 failed for: [wheezy_udp@dns-test-service.dns-1439.svc.cluster.local wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local jessie_udp@dns-test-service.dns-1439.svc.cluster.local jessie_tcp@dns-test-service.dns-1439.svc.cluster.local]

  I0423 19:04:14.414753 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:04:14.424274 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:04:14.433023 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:04:19.321173 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:19.325369 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:19.361028 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:19.365234 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:19.392350 25 dns_common.go:490] Lookups using dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6 failed for: [wheezy_udp@dns-test-service.dns-1439.svc.cluster.local wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local jessie_udp@dns-test-service.dns-1439.svc.cluster.local jessie_tcp@dns-test-service.dns-1439.svc.cluster.local]

  I0423 19:04:19.400298 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:04:19.407193 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:04:19.416003 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:04:24.322047 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:24.327490 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:24.366155 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:24.373025 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-1439.svc.cluster.local from pod dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6: the server could not find the requested resource (get pods dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6)
  I0423 19:04:24.401460 25 dns_common.go:490] Lookups using dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6 failed for: [wheezy_udp@dns-test-service.dns-1439.svc.cluster.local wheezy_tcp@dns-test-service.dns-1439.svc.cluster.local jessie_udp@dns-test-service.dns-1439.svc.cluster.local jessie_tcp@dns-test-service.dns-1439.svc.cluster.local]

  I0423 19:04:24.410647 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:04:24.421668 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:04:24.431090 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:04:29.390597 25 dns_common.go:528] DNS probes using dns-1439/dns-test-52286c58-abef-4eeb-bdd4-8e1d68a4e6d6 succeeded

  STEP: deleting the pod @ 04/23/25 19:04:29.39
  STEP: deleting the test service @ 04/23/25 19:04:29.427
  STEP: deleting the test headless service @ 04/23/25 19:04:29.502
  I0423 19:04:29.525657 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1439" for this suite. @ 04/23/25 19:04:29.536
• [32.383 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/23/25 19:04:29.547
  I0423 19:04:29.547522 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:04:29.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:04:29.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:04:29.57
  STEP: Creating a pod to test downward api env vars @ 04/23/25 19:04:29.574
  STEP: Saw pod success @ 04/23/25 19:04:33.605
  I0423 19:04:33.612372 25 output.go:196] Trying to get logs from node worker00 pod downward-api-6155d7cc-c5a9-4619-a8ec-20ee786288ca container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 19:04:33.623
  I0423 19:04:33.659219 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3397" for this suite. @ 04/23/25 19:04:33.665
• [4.128 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 04/23/25 19:04:33.675
  I0423 19:04:33.675737 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:04:33.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:04:33.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:04:33.706
  STEP: Setting up server cert @ 04/23/25 19:04:33.736
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:04:34.12
  STEP: Deploying the webhook pod @ 04/23/25 19:04:34.135
  STEP: Wait for the deployment to be ready @ 04/23/25 19:04:34.145
  I0423 19:04:34.152429 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/23/25 19:04:36.171
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:04:36.187
  I0423 19:04:37.188749 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/23/25 19:04:37.2
  STEP: create a pod that should be updated by the webhook @ 04/23/25 19:04:37.23
  I0423 19:04:37.329017 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3014" for this suite. @ 04/23/25 19:04:37.336
  STEP: Destroying namespace "webhook-markers-8692" for this suite. @ 04/23/25 19:04:37.345
• [3.683 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 04/23/25 19:04:37.36
  I0423 19:04:37.360973 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename job @ 04/23/25 19:04:37.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:04:37.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:04:37.391
  STEP: Looking for a node to schedule job pod @ 04/23/25 19:04:37.394
  STEP: Creating a job @ 04/23/25 19:04:37.435
  STEP: Ensuring job fails @ 04/23/25 19:04:37.447
  I0423 19:04:43.467704 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9502" for this suite. @ 04/23/25 19:04:43.475
• [6.123 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 04/23/25 19:04:43.484
  I0423 19:04:43.484071 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-webhook @ 04/23/25 19:04:43.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:04:43.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:04:43.512
  STEP: Setting up server cert @ 04/23/25 19:04:43.519
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/23/25 19:04:43.832
  STEP: Deploying the custom resource conversion webhook pod @ 04/23/25 19:04:43.846
  STEP: Wait for the deployment to be ready @ 04/23/25 19:04:43.858
  I0423 19:04:43.875489 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:04:45.892
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:04:45.919
  I0423 19:04:46.921163 25 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0423 19:04:46.931142 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Creating a v1 custom resource @ 04/23/25 19:04:49.528
  STEP: Create a v2 custom resource @ 04/23/25 19:04:49.556
  STEP: List CRs in v1 @ 04/23/25 19:04:49.609
  STEP: List CRs in v2 @ 04/23/25 19:04:49.614
  I0423 19:04:50.200034 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4520" for this suite. @ 04/23/25 19:04:50.21
• [6.756 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/23/25 19:04:50.244
  I0423 19:04:50.244975 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:04:50.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:04:50.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:04:50.275
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:04:50.279
  STEP: Saw pod success @ 04/23/25 19:04:54.306
  I0423 19:04:54.311165 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-7f43b1f9-20bf-4c2f-aeac-4feb44cbd115 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:04:54.317
  I0423 19:04:54.339405 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3003" for this suite. @ 04/23/25 19:04:54.347
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 04/23/25 19:04:54.359
  I0423 19:04:54.359739 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename disruption @ 04/23/25 19:04:54.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:04:54.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:04:54.391
  STEP: Waiting for the pdb to be processed @ 04/23/25 19:04:54.404
  STEP: Waiting for all pods to be running @ 04/23/25 19:04:56.466
  I0423 19:04:56.473502 25 disruption.go:691] running pods: 0 < 3
  I0423 19:04:58.478485 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-404" for this suite. @ 04/23/25 19:04:58.484
• [4.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/23/25 19:04:58.501
  I0423 19:04:58.501255 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename gc @ 04/23/25 19:04:58.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:04:58.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:04:58.525
  STEP: create the rc1 @ 04/23/25 19:04:58.584
  STEP: create the rc2 @ 04/23/25 19:04:58.595
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/23/25 19:05:04.616
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/23/25 19:05:06.285
  STEP: wait for the rc to be deleted @ 04/23/25 19:05:06.422
  I0423 19:05:11.464061 25 garbage_collector.go:762] 69 pods remaining
  I0423 19:05:11.464164 25 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I0423 19:05:11.464180 25 garbage_collector.go:770] 
  STEP: Gathering metrics @ 04/23/25 19:05:16.489
  I0423 19:05:16.665212 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 19:05:16.665489 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-28sw9" in namespace "gc-9728"
  I0423 19:05:16.698650 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2dh5s" in namespace "gc-9728"
  I0423 19:05:16.770409 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2tchk" in namespace "gc-9728"
  I0423 19:05:16.833865 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4mn5v" in namespace "gc-9728"
  I0423 19:05:16.935187 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5j5wz" in namespace "gc-9728"
  I0423 19:05:17.002410 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5p4f7" in namespace "gc-9728"
  I0423 19:05:17.088362 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rprc" in namespace "gc-9728"
  I0423 19:05:17.113429 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-662zl" in namespace "gc-9728"
  I0423 19:05:17.138599 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6mm9m" in namespace "gc-9728"
  I0423 19:05:17.167633 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6sgzd" in namespace "gc-9728"
  I0423 19:05:17.219725 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6xjzp" in namespace "gc-9728"
  I0423 19:05:17.276929 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7glcn" in namespace "gc-9728"
  I0423 19:05:17.498393 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-85qn2" in namespace "gc-9728"
  I0423 19:05:17.551201 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8dvpx" in namespace "gc-9728"
  I0423 19:05:17.571519 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mzj5" in namespace "gc-9728"
  I0423 19:05:17.614653 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9bmmw" in namespace "gc-9728"
  I0423 19:05:17.648015 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9mcss" in namespace "gc-9728"
  I0423 19:05:17.730515 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pvzk" in namespace "gc-9728"
  I0423 19:05:17.798523 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9rlrh" in namespace "gc-9728"
  I0423 19:05:17.845103 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wxn5" in namespace "gc-9728"
  I0423 19:05:17.899725 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bt6sp" in namespace "gc-9728"
  I0423 19:05:18.018024 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bv5v5" in namespace "gc-9728"
  I0423 19:05:18.085618 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bznxr" in namespace "gc-9728"
  I0423 19:05:18.145694 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c6f69" in namespace "gc-9728"
  I0423 19:05:18.226701 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cc7dm" in namespace "gc-9728"
  I0423 19:05:18.304189 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cfnj7" in namespace "gc-9728"
  I0423 19:05:18.366022 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqxb2" in namespace "gc-9728"
  I0423 19:05:18.440725 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4mkw" in namespace "gc-9728"
  I0423 19:05:18.543161 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d68jk" in namespace "gc-9728"
  I0423 19:05:18.596558 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-db762" in namespace "gc-9728"
  I0423 19:05:18.624755 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dcgz7" in namespace "gc-9728"
  I0423 19:05:18.700861 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dd6bf" in namespace "gc-9728"
  I0423 19:05:18.732425 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dgl56" in namespace "gc-9728"
  I0423 19:05:18.810205 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dh497" in namespace "gc-9728"
  I0423 19:05:18.833992 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f8psm" in namespace "gc-9728"
  I0423 19:05:18.859819 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ftbq5" in namespace "gc-9728"
  I0423 19:05:18.932590 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fv4zp" in namespace "gc-9728"
  I0423 19:05:19.040331 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gm8rx" in namespace "gc-9728"
  I0423 19:05:19.096281 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h99hv" in namespace "gc-9728"
  I0423 19:05:19.161577 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hc8t6" in namespace "gc-9728"
  I0423 19:05:19.222342 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hgzkb" in namespace "gc-9728"
  I0423 19:05:19.279054 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-htch9" in namespace "gc-9728"
  I0423 19:05:19.415624 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hwfq9" in namespace "gc-9728"
  I0423 19:05:19.545993 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j55gg" in namespace "gc-9728"
  I0423 19:05:19.665146 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jcp5x" in namespace "gc-9728"
  I0423 19:05:19.727421 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jhgct" in namespace "gc-9728"
  I0423 19:05:19.807284 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kwbzt" in namespace "gc-9728"
  I0423 19:05:19.858606 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kx6pl" in namespace "gc-9728"
  I0423 19:05:19.912191 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l7nsp" in namespace "gc-9728"
  I0423 19:05:19.960756 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l87r7" in namespace "gc-9728"
  I0423 19:05:20.025111 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9728" for this suite. @ 04/23/25 19:05:20.093
• [21.629 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/23/25 19:05:20.133
  I0423 19:05:20.133564 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:05:20.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:05:20.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:05:20.195
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:05:20.204
  STEP: Saw pod success @ 04/23/25 19:05:28.283
  I0423 19:05:28.291574 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-967bb943-e259-4879-bba9-eaf38344c2a0 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:05:28.307
  I0423 19:05:28.332474 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2519" for this suite. @ 04/23/25 19:05:28.336
• [8.209 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1801
  STEP: Creating a kubernetes client @ 04/23/25 19:05:28.344
  I0423 19:05:28.344389 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:05:28.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:05:28.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:05:28.369
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 19:05:28.373
  I0423 19:05:28.373514 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2176 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0423 19:05:28.956205 25 builder.go:146] stderr: ""
  I0423 19:05:28.956252 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/23/25 19:05:28.956
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/23/25 19:05:34.009
  I0423 19:05:34.009559 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2176 get pod e2e-test-httpd-pod -o json'
  I0423 19:05:34.170525 25 builder.go:146] stderr: ""
  I0423 19:05:34.170784 25 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"8c544cf587d91d746371ed8e870c1764cc983636c76789776b991a690692fcd2\",\n            \"cni.projectcalico.org/podIP\": \"10.200.131.176/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.200.131.176/32\"\n        },\n        \"creationTimestamp\": \"2025-04-23T19:05:28Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2176\",\n        \"resourceVersion\": \"27207\",\n        \"uid\": \"2bc8823e-c333-4f86-aaf1-3f4e9d48dd6c\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-dh865\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker00\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-dh865\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T19:05:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T19:05:28Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T19:05:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T19:05:29Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T19:05:28Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://b2266123d4237504fec5abb828b263a9b9b0b5cedfd59849e175401f9097d852\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-04-23T19:05:29Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.58.100\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.58.100\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.200.131.176\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.200.131.176\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-04-23T19:05:28Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/23/25 19:05:34.17
  I0423 19:05:34.171073 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2176 replace -f -'
  I0423 19:05:34.434591 25 builder.go:146] stderr: ""
  I0423 19:05:34.434863 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/23/25 19:05:34.434
  I0423 19:05:34.440445 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2176 delete pods e2e-test-httpd-pod'
  I0423 19:05:35.996876 25 builder.go:146] stderr: ""
  I0423 19:05:35.996921 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0423 19:05:35.997099 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2176" for this suite. @ 04/23/25 19:05:36.003
• [7.667 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/23/25 19:05:36.017
  I0423 19:05:36.017649 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename limitrange @ 04/23/25 19:05:36.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:05:36.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:05:36.05
  STEP: Creating LimitRange "e2e-limitrange-92dzv" in namespace "limitrange-439" @ 04/23/25 19:05:36.057
  STEP: Creating another limitRange in another namespace @ 04/23/25 19:05:36.072
  I0423 19:05:36.116671 25 limit_range.go:299] Namespace "e2e-limitrange-92dzv-2890" created
  I0423 19:05:36.116744 25 limit_range.go:300] Creating LimitRange "e2e-limitrange-92dzv" in namespace "e2e-limitrange-92dzv-2890"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-92dzv" @ 04/23/25 19:05:36.125
  I0423 19:05:36.128149 25 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-92dzv" in "limitrange-439" namespace @ 04/23/25 19:05:36.128
  I0423 19:05:36.143474 25 limit_range.go:335] LimitRange "e2e-limitrange-92dzv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-92dzv" by Collection with labelSelector: "e2e-limitrange-92dzv=patched" @ 04/23/25 19:05:36.143
  STEP: Confirm that the limitRange "e2e-limitrange-92dzv" has been deleted @ 04/23/25 19:05:36.162
  I0423 19:05:36.162119 25 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0423 19:05:36.165632 25 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-92dzv=patched"
  I0423 19:05:36.165681 25 limit_range.go:344] LimitRange "e2e-limitrange-92dzv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-92dzv" @ 04/23/25 19:05:36.166
  I0423 19:05:36.171938 25 limit_range.go:350] Found 1 limitRange
  I0423 19:05:36.172121 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-439" for this suite. @ 04/23/25 19:05:36.177
  STEP: Destroying namespace "e2e-limitrange-92dzv-2890" for this suite. @ 04/23/25 19:05:36.185
• [0.181 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 04/23/25 19:05:36.197
  I0423 19:05:36.197410 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename dns @ 04/23/25 19:05:36.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:05:36.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:05:36.234
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/23/25 19:05:36.24
  I0423 19:05:36.260517 25 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3832  f8309699-fa48-4005-a5c4-8dc222a801b9 27273 0 2025-04-23 19:05:36 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-04-23 19:05:36 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9rmgb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9rmgb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/23/25 19:05:38.277
  I0423 19:05:38.277310 25 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3832 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:05:38.277668 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:05:38.281730 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:05:38.282642 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/dns-3832/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/23/25 19:05:38.514
  I0423 19:05:38.514351 25 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3832 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:05:38.514405 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:05:38.515634 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:05:38.516109 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/dns-3832/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0423 19:05:38.638947 25 dns.go:423] Deleting pod test-dns-nameservers...
  I0423 19:05:38.662928 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3832" for this suite. @ 04/23/25 19:05:38.673
• [2.493 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 04/23/25 19:05:38.702
  I0423 19:05:38.702850 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 19:05:38.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:05:38.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:05:38.729
  STEP: Creating service test in namespace statefulset-5626 @ 04/23/25 19:05:38.737
  I0423 19:05:38.781379 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0423 19:05:48.777078 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/23/25 19:05:48.788
  I0423 19:05:48.829957 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:05:48.830130 25 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0423 19:05:58.819969 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:05:58.820049 25 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/23/25 19:05:58.829
  STEP: Delete all of the StatefulSets @ 04/23/25 19:05:58.838
  STEP: Verify that StatefulSets have been deleted @ 04/23/25 19:05:58.858
  I0423 19:05:58.865376 25 statefulset.go:138] Deleting all statefulset in ns statefulset-5626
  I0423 19:05:58.893716 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5626" for this suite. @ 04/23/25 19:05:58.916
• [20.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 04/23/25 19:05:58.957
  I0423 19:05:58.957293 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename dns @ 04/23/25 19:05:58.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:05:58.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:05:58.977
  STEP: Creating a test headless service @ 04/23/25 19:05:58.984
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4207.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-4207.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/23/25 19:05:59
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4207.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-4207.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/23/25 19:05:59
  STEP: creating a pod to probe DNS @ 04/23/25 19:05:59
  STEP: submitting the pod to kubernetes @ 04/23/25 19:05:59
  STEP: retrieving the pod @ 04/23/25 19:06:03.054
  STEP: looking for the results for each expected name from probers @ 04/23/25 19:06:03.06
  I0423 19:06:03.083596 25 dns_common.go:528] DNS probes using dns-4207/dns-test-3485279c-4b61-42bc-9963-e2f5a2ca0dfd succeeded

  STEP: deleting the pod @ 04/23/25 19:06:03.083
  STEP: deleting the test headless service @ 04/23/25 19:06:03.166
  I0423 19:06:03.190591 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4207" for this suite. @ 04/23/25 19:06:03.205
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 04/23/25 19:06:03.212
  I0423 19:06:03.212487 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/23/25 19:06:03.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:06:03.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:06:03.234
  I0423 19:06:03.240245 25 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0423 19:07:03.241048 25 util.go:393] Waiting for terminating namespaces to be deleted...
  I0423 19:07:03.248857 25 taints.go:144] Starting informer...
  STEP: Starting pods... @ 04/23/25 19:07:03.248
  I0423 19:07:03.482683 25 taints.go:463] Pod1 is running on worker00. Tainting Node
  I0423 19:07:05.713537 25 taints.go:471] Pod2 is running on worker00. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/23/25 19:07:05.713
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 19:07:05.735
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/23/25 19:07:05.744
  I0423 19:07:11.656745 25 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0423 19:07:31.748510 25 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 19:07:31.77
  I0423 19:07:31.780183 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3084" for this suite. @ 04/23/25 19:07:31.808
• [88.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 04/23/25 19:07:31.829
  I0423 19:07:31.829960 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 19:07:31.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:07:31.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:07:31.866
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/23/25 19:07:31.871
  I0423 19:07:31.871699 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:07:33.332245 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:07:39.179239 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6113" for this suite. @ 04/23/25 19:07:39.188
• [7.367 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/23/25 19:07:39.201
  I0423 19:07:39.201444 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sysctl @ 04/23/25 19:07:39.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:07:39.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:07:39.232
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/23/25 19:07:39.244
  I0423 19:07:39.250861 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-630" for this suite. @ 04/23/25 19:07:39.29
• [0.103 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 04/23/25 19:07:39.3
  I0423 19:07:39.300664 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename volumeattachment @ 04/23/25 19:07:39.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:07:39.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:07:39.332
  STEP: Create VolumeAttachment "va-e2e-tgsnr" on node "worker01" @ 04/23/25 19:07:39.391
  STEP: Get VolumeAttachment "va-e2e-tgsnr" on node "worker01" @ 04/23/25 19:07:39.401
  STEP: Patch VolumeAttachment "va-e2e-tgsnr" on node "worker01" @ 04/23/25 19:07:39.405
  STEP: List VolumeAttachments with "va-e2e-tgsnr=patched" label @ 04/23/25 19:07:39.414
  STEP: Delete VolumeAttachment "va-e2e-tgsnr" on node "worker01" @ 04/23/25 19:07:39.419
  STEP: Confirm deletion of VolumeAttachment "va-e2e-tgsnr" on node "worker01" @ 04/23/25 19:07:39.434
  STEP: Create VolumeAttachment "va-e2e-b2p7b" on node "worker01" @ 04/23/25 19:07:39.491
  STEP: Update the VolumeAttachment "va-e2e-b2p7b" on node "worker01" with label "va-e2e=updated" @ 04/23/25 19:07:39.502
  STEP: Create VolumeAttachment "va-e2e-kdxbz" on node "worker00" @ 04/23/25 19:07:39.592
  STEP: Update the VolumeAttachment "va-e2e-kdxbz" on node "worker00" with label "va-e2e=updated" @ 04/23/25 19:07:39.602
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/23/25 19:07:39.613
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/23/25 19:07:39.627
  I0423 19:07:39.635618 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9251" for this suite. @ 04/23/25 19:07:39.692
• [0.401 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 04/23/25 19:07:39.702
  I0423 19:07:39.702140 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 19:07:39.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:07:39.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:07:39.737
  STEP: creating service multi-endpoint-test in namespace services-4597 @ 04/23/25 19:07:39.744
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4597 to expose endpoints map[] @ 04/23/25 19:07:39.766
  I0423 19:07:39.787885 25 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4597 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4597 @ 04/23/25 19:07:39.788
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4597 to expose endpoints map[pod1:[100]] @ 04/23/25 19:07:41.822
  I0423 19:07:41.835254 25 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4597 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4597 @ 04/23/25 19:07:41.835
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4597 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/23/25 19:07:43.862
  I0423 19:07:43.875712 25 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4597 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/23/25 19:07:43.875
  I0423 19:07:43.875801 25 resource.go:361] Creating new exec pod
  I0423 19:07:46.891760 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4597 exec execpodvprrf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0423 19:07:47.068582 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0423 19:07:47.068649 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:07:47.068748 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4597 exec execpodvprrf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.86 80'
  I0423 19:07:47.213131 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.86 80\nConnection to 10.32.0.86 80 port [tcp/http] succeeded!\n"
  I0423 19:07:47.213179 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:07:47.213258 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4597 exec execpodvprrf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0423 19:07:47.376847 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0423 19:07:47.376897 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:07:47.376975 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4597 exec execpodvprrf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.86 81'
  I0423 19:07:47.560112 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.86 81\nConnection to 10.32.0.86 81 port [tcp/*] succeeded!\n"
  I0423 19:07:47.560159 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4597 @ 04/23/25 19:07:47.56
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4597 to expose endpoints map[pod2:[101]] @ 04/23/25 19:07:47.577
  I0423 19:07:48.629032 25 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4597 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4597 @ 04/23/25 19:07:48.629
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4597 to expose endpoints map[] @ 04/23/25 19:07:48.662
  I0423 19:07:48.682229 25 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-4597 exposes endpoints map[]
  I0423 19:07:48.722096 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4597" for this suite. @ 04/23/25 19:07:48.743
• [9.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/23/25 19:07:48.762
  I0423 19:07:48.762457 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 19:07:48.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:07:48.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:07:48.802
  I0423 19:07:52.850738 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4929" for this suite. @ 04/23/25 19:07:52.857
• [4.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 04/23/25 19:07:52.875
  I0423 19:07:52.875642 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:07:52.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:07:52.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:07:52.921
  STEP: Creating projection with secret that has name secret-emptykey-test-c69f9bc3-e4f7-40f6-b3f7-74b1dc8fc798 @ 04/23/25 19:07:52.925
  I0423 19:07:52.927893 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4161" for this suite. @ 04/23/25 19:07:52.959
• [0.097 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 04/23/25 19:07:52.971
  I0423 19:07:52.971556 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:07:52.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:07:52.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:07:53.002
  STEP: Setting up server cert @ 04/23/25 19:07:53.03
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:07:53.349
  STEP: Deploying the webhook pod @ 04/23/25 19:07:53.354
  STEP: Wait for the deployment to be ready @ 04/23/25 19:07:53.362
  I0423 19:07:53.370526 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:07:55.386
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:07:55.403
  I0423 19:07:56.404074 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/23/25 19:07:56.417
  I0423 19:07:56.516591 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4438" for this suite. @ 04/23/25 19:07:56.522
  STEP: Destroying namespace "webhook-markers-8262" for this suite. @ 04/23/25 19:07:56.532
• [3.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/23/25 19:07:56.546
  I0423 19:07:56.546559 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 19:07:56.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:07:56.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:07:56.568
  STEP: Creating configMap with name configmap-test-upd-396ac191-3f96-4ec4-a965-c2432e953cf6 @ 04/23/25 19:07:56.623
  STEP: Creating the pod @ 04/23/25 19:07:56.629
  STEP: Updating configmap configmap-test-upd-396ac191-3f96-4ec4-a965-c2432e953cf6 @ 04/23/25 19:07:58.663
  STEP: waiting to observe update in volume @ 04/23/25 19:07:58.675
  I0423 19:08:00.704225 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-344" for this suite. @ 04/23/25 19:08:00.709
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 04/23/25 19:08:00.731
  I0423 19:08:00.731583 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 19:08:00.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:00.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:00.766
  I0423 19:08:04.838178 25 security_context.go:538] Got logs for pod "busybox-privileged-false-c9997c7d-0d9a-4584-8f43-6583c337a484": "ip: RTNETLINK answers: Operation not permitted\n"
  I0423 19:08:04.838475 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6764" for this suite. @ 04/23/25 19:08:04.844
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/23/25 19:08:04.863
  I0423 19:08:04.863482 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:08:04.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:04.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:04.894
  STEP: Creating the pod @ 04/23/25 19:08:04.9
  I0423 19:08:09.477687 25 pod_client.go:173] Successfully updated pod "annotationupdate674b18d5-81cc-4567-b528-1bfb6a68bb25"
  I0423 19:08:11.499551 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2440" for this suite. @ 04/23/25 19:08:11.504
• [6.649 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1733
  STEP: Creating a kubernetes client @ 04/23/25 19:08:11.512
  I0423 19:08:11.512530 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:08:11.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:11.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:11.541
  I0423 19:08:11.548398 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-6302 version'
  I0423 19:08:11.630338 25 builder.go:146] stderr: ""
  I0423 19:08:11.630408 25 builder.go:147] stdout: "Client Version: v1.31.8\nKustomize Version: v5.4.2\nServer Version: v1.31.8\n"
  I0423 19:08:11.630601 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6302" for this suite. @ 04/23/25 19:08:11.634
• [0.129 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 04/23/25 19:08:11.641
  I0423 19:08:11.641711 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 19:08:11.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:11.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:11.66
  I0423 19:08:11.663394 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  W0423 19:08:11.664428      25 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0046ef6a0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0423 19:08:14.230670      25 warnings.go:70] unknown field "alpha"
  W0423 19:08:14.230712      25 warnings.go:70] unknown field "beta"
  W0423 19:08:14.230732      25 warnings.go:70] unknown field "delta"
  W0423 19:08:14.230746      25 warnings.go:70] unknown field "epsilon"
  W0423 19:08:14.230759      25 warnings.go:70] unknown field "gamma"
  I0423 19:08:14.771276 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8803" for this suite. @ 04/23/25 19:08:14.775
• [3.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 04/23/25 19:08:14.782
  I0423 19:08:14.782706 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 19:08:14.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:14.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:14.801
  I0423 19:08:14.807358 25 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 19:08:14.880611 25 util.go:393] Waiting for terminating namespaces to be deleted...
  I0423 19:08:14.884511 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 19:08:14.896392 25 predicates.go:957] annotationupdate674b18d5-81cc-4567-b528-1bfb6a68bb25 from downward-api-2440 started at 2025-04-23 19:08:04 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.896458 25 predicates.go:959] 	Container client-container ready: true, restart count 0
  I0423 19:08:14.896482 25 predicates.go:957] etcd-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.896499 25 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0423 19:08:14.896706 25 predicates.go:957] gobetween-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.896723 25 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 19:08:14.896842 25 predicates.go:957] kube-apiserver-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.896859 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0423 19:08:14.896991 25 predicates.go:957] kube-controller-manager-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.897007 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0423 19:08:14.897124 25 predicates.go:957] kube-proxy-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.897142 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 19:08:14.897162 25 predicates.go:957] kube-scheduler-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.897223 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0423 19:08:14.897244 25 predicates.go:957] calico-node-t7722 from networking started at 2025-04-23 18:08:38 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.897264 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 19:08:14.897283 25 predicates.go:957] metallb-speaker-8h5gw from networking started at 2025-04-23 19:07:31 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.897298 25 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 19:08:14.897369 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-23 18:12:31 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.897385 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 19:08:14.897404 25 predicates.go:957] sonobuoy-e2e-job-8e2e29f3e66e467f from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:08:14.897420 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0423 19:08:14.897450 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:08:14.897495 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-be276f75500849d8-mwsrb from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:08:14.897512 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:08:14.897529 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 19:08:14.897547 25 predicates.go:957] ceph-csi-cephfs-nodeplugin-db7xs from storage started at 2025-04-23 19:07:31 +0000 UTC (3 container statuses recorded)
  I0423 19:08:14.897564 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:08:14.897581 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:08:14.897652 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.897671 25 predicates.go:957] ceph-csi-rbd-nodeplugin-9vr2q from storage started at 2025-04-23 19:07:31 +0000 UTC (3 container statuses recorded)
  I0423 19:08:14.897686 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:08:14.897703 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:08:14.897720 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.897739 25 predicates.go:957] ceph-mon-worker00-f69c45b64-gztsp from storage started at 2025-04-23 19:07:31 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.897755 25 predicates.go:959] 	Container ceph-mon ready: true, restart count 0
  I0423 19:08:14.897774 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 19:08:14.915229 25 predicates.go:957] coredns-9b4dff67b-c8475 from kube-system started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915280 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 19:08:14.915303 25 predicates.go:957] coredns-9b4dff67b-pkcwz from kube-system started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915320 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 19:08:14.915338 25 predicates.go:957] gobetween-worker01 from kube-system started at 2025-04-23 18:07:44 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915355 25 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 19:08:14.915508 25 predicates.go:957] kube-proxy-worker01 from kube-system started at 2025-04-23 18:07:44 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915526 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 19:08:14.915599 25 predicates.go:957] kubernetes-dashboard-api-5fdc7d7fcc-hr9hb from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915616 25 predicates.go:959] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 19:08:14.915635 25 predicates.go:957] kubernetes-dashboard-auth-85745c57f4-ck2dl from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915651 25 predicates.go:959] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 19:08:14.915673 25 predicates.go:957] kubernetes-dashboard-kong-859475c6c4-n9bsh from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915689 25 predicates.go:959] 	Container proxy ready: true, restart count 0
  I0423 19:08:14.915714 25 predicates.go:957] kubernetes-dashboard-metrics-scraper-6996d84f57-fjmgz from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915788 25 predicates.go:959] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 19:08:14.915833 25 predicates.go:957] kubernetes-dashboard-web-684dd555d6-hnrf5 from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915888 25 predicates.go:959] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 19:08:14.915919 25 predicates.go:957] calico-kube-controllers-78fc9c8775-p2x92 from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.915935 25 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 19:08:14.916000 25 predicates.go:957] calico-node-7pxkw from networking started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.916016 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 19:08:14.916081 25 predicates.go:957] calico-typha-7f9677b8db-52khj from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.916134 25 predicates.go:959] 	Container calico-typha ready: true, restart count 0
  I0423 19:08:14.916164 25 predicates.go:957] metallb-controller-6b6cbb75b9-dxlx8 from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.916182 25 predicates.go:959] 	Container controller ready: true, restart count 0
  I0423 19:08:14.916281 25 predicates.go:957] metallb-speaker-w4trl from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.916299 25 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 19:08:14.916316 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-be276f75500849d8-b29nj from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:08:14.916332 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:08:14.916348 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 19:08:14.916365 25 predicates.go:957] ceph-csi-cephfs-nodeplugin-4mjql from storage started at 2025-04-23 18:08:35 +0000 UTC (3 container statuses recorded)
  I0423 19:08:14.916380 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:08:14.916396 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:08:14.916412 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.916429 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-86q8j from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:08:14.916503 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:08:14.916522 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:08:14.916538 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:08:14.916554 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:08:14.916619 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.916637 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-r958b from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:08:14.916652 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:08:14.916670 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:08:14.916687 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:08:14.916719 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:08:14.916737 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.916808 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-wppg5 from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:08:14.916845 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:08:14.916861 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:08:14.916876 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:08:14.916953 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:08:14.916969 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.917082 25 predicates.go:957] ceph-csi-rbd-nodeplugin-cxbdp from storage started at 2025-04-23 18:08:35 +0000 UTC (3 container statuses recorded)
  I0423 19:08:14.917101 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:08:14.917117 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:08:14.917425 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.918240 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-455gl from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:08:14.918272 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:08:14.918288 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:08:14.918303 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:08:14.918319 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:08:14.918335 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:08:14.918351 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:08:14.918369 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.918387 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-mztv7 from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:08:14.918402 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:08:14.918419 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:08:14.918452 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:08:14.918468 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:08:14.918484 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:08:14.918499 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:08:14.918514 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.918556 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-ppn52 from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:08:14.918573 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:08:14.918588 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:08:14.918603 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:08:14.918619 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:08:14.918635 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:08:14.918650 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:08:14.918666 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:08:14.918683 25 predicates.go:957] ceph-mds-worker01-b7d5fc474-hv782 from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.918697 25 predicates.go:959] 	Container ceph-mds ready: true, restart count 0
  I0423 19:08:14.918893 25 predicates.go:957] ceph-mgr-worker01-559c86787f-24g2t from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.918909 25 predicates.go:959] 	Container ceph-mgr ready: true, restart count 0
  I0423 19:08:14.918926 25 predicates.go:957] ceph-osd-worker01-56b55bd558-fprzw from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.918941 25 predicates.go:959] 	Container ceph-osd ready: true, restart count 0
  I0423 19:08:14.918960 25 predicates.go:957] ceph-rgw-worker01-6cd4858446-n8rlr from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.918992 25 predicates.go:959] 	Container ceph-rgw ready: true, restart count 0
  I0423 19:08:14.919010 25 predicates.go:957] ceph-setup-bth5g from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.919026 25 predicates.go:959] 	Container ceph ready: false, restart count 0
  I0423 19:08:14.919046 25 predicates.go:957] snapshot-controller-79d4d6679-bfdwx from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.919063 25 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 19:08:14.919083 25 predicates.go:957] snapshot-controller-79d4d6679-nxs6g from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.919099 25 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 19:08:14.919117 25 predicates.go:957] snapshot-validation-webhook-f99b99c55-zf2x8 from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:08:14.919133 25 predicates.go:959] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 19:08:14.919
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 19:08:16.954
  STEP: Trying to apply a random label on the found node. @ 04/23/25 19:08:16.975
  STEP: verifying the node has the label kubernetes.io/e2e-7e700882-6e00-4c2a-a3b7-3f82192cd593 42 @ 04/23/25 19:08:16.997
  STEP: Trying to relaunch the pod, now with labels. @ 04/23/25 19:08:17.024
  STEP: removing the label kubernetes.io/e2e-7e700882-6e00-4c2a-a3b7-3f82192cd593 off the node worker00 @ 04/23/25 19:08:21.087
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-7e700882-6e00-4c2a-a3b7-3f82192cd593 @ 04/23/25 19:08:21.121
  I0423 19:08:21.129194 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-137" for this suite. @ 04/23/25 19:08:21.134
• [6.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/23/25 19:08:21.147
  I0423 19:08:21.147379 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/23/25 19:08:21.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:21.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:21.184
  STEP: mirroring a new custom Endpoint @ 04/23/25 19:08:21.202
  I0423 19:08:21.218249 25 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 04/23/25 19:08:23.222
  STEP: mirroring deletion of a custom Endpoint @ 04/23/25 19:08:23.248
  I0423 19:08:23.274142 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5788" for this suite. @ 04/23/25 19:08:23.283
• [2.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1700
  STEP: Creating a kubernetes client @ 04/23/25 19:08:23.302
  I0423 19:08:23.302074 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:08:23.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:23.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:23.333
  STEP: creating Agnhost RC @ 04/23/25 19:08:23.337
  I0423 19:08:23.337449 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9533 create -f -'
  I0423 19:08:23.488924 25 builder.go:146] stderr: ""
  I0423 19:08:23.489000 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 19:08:23.489
  I0423 19:08:24.493219 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 19:08:24.493278 25 framework.go:733] Found 0 / 1
  I0423 19:08:25.496113 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 19:08:25.496214 25 framework.go:733] Found 1 / 1
  I0423 19:08:25.496261 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/23/25 19:08:25.496
  I0423 19:08:25.501517 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 19:08:25.501574 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 19:08:25.501664 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9533 patch pod agnhost-primary-8mfk2 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0423 19:08:25.625021 25 builder.go:146] stderr: ""
  I0423 19:08:25.625077 25 builder.go:147] stdout: "pod/agnhost-primary-8mfk2 patched\n"
  STEP: checking annotations @ 04/23/25 19:08:25.625
  I0423 19:08:25.628813 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 19:08:25.628892 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 19:08:25.629044 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9533" for this suite. @ 04/23/25 19:08:25.633
• [2.344 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 04/23/25 19:08:25.646
  I0423 19:08:25.646214 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:08:25.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:25.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:25.68
  STEP: Setting up server cert @ 04/23/25 19:08:25.713
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:08:25.917
  STEP: Deploying the webhook pod @ 04/23/25 19:08:25.921
  STEP: Wait for the deployment to be ready @ 04/23/25 19:08:25.931
  I0423 19:08:25.940771 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:08:27.958
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:08:27.974
  I0423 19:08:28.975331 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/23/25 19:08:28.984
  STEP: create a namespace for the webhook @ 04/23/25 19:08:29
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/23/25 19:08:29.02
  I0423 19:08:29.093046 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8973" for this suite. @ 04/23/25 19:08:29.098
  STEP: Destroying namespace "webhook-markers-6084" for this suite. @ 04/23/25 19:08:29.111
  STEP: Destroying namespace "fail-closed-namespace-7775" for this suite. @ 04/23/25 19:08:29.131
• [3.510 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/23/25 19:08:29.155
  I0423 19:08:29.155341 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/23/25 19:08:29.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:29.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:29.185
  STEP: creating a target pod @ 04/23/25 19:08:29.19
  STEP: adding an ephemeral container @ 04/23/25 19:08:31.218
  STEP: checking pod container endpoints @ 04/23/25 19:08:35.276
  I0423 19:08:35.276789 25 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8438 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:08:35.276887 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:08:35.279699 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:08:35.279940 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-8438/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0423 19:08:35.352764 25 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/23/25 19:08:35.358
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/23/25 19:08:35.363
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/23/25 19:08:35.376
  I0423 19:08:35.388001 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8438" for this suite. @ 04/23/25 19:08:35.395
• [6.251 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 04/23/25 19:08:35.406
  I0423 19:08:35.406160 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 19:08:35.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:35.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:35.434
  STEP: creating service nodeport-test with type=NodePort in namespace services-6622 @ 04/23/25 19:08:35.439
  STEP: creating replication controller nodeport-test in namespace services-6622 @ 04/23/25 19:08:35.463
  I0423 19:08:35.479216      25 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-6622, replica count: 2
  I0423 19:08:38.530802      25 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 19:08:38.530929 25 resource.go:361] Creating new exec pod
  I0423 19:08:41.570970 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-6622 exec execpod9pxcp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0423 19:08:41.784514 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0423 19:08:41.784586 25 builder.go:147] stdout: ""
  I0423 19:08:42.571436 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-6622 exec execpod9pxcp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0423 19:08:42.777082 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0423 19:08:42.777168 25 builder.go:147] stdout: ""
  I0423 19:08:43.572001 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-6622 exec execpod9pxcp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0423 19:08:43.770158 25 builder.go:146] stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0423 19:08:43.770248 25 builder.go:147] stdout: "nodeport-test-9z6gf"
  I0423 19:08:43.770406 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-6622 exec execpod9pxcp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.32 80'
  I0423 19:08:43.925176 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.32 80\nConnection to 10.32.0.32 80 port [tcp/http] succeeded!\n"
  I0423 19:08:43.925246 25 builder.go:147] stdout: ""
  I0423 19:08:44.771011 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-6622 exec execpod9pxcp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.32 80'
  I0423 19:08:44.939925 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.32 80\nConnection to 10.32.0.32 80 port [tcp/http] succeeded!\n"
  I0423 19:08:44.939969 25 builder.go:147] stdout: "nodeport-test-9z6gf"
  I0423 19:08:44.940061 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-6622 exec execpod9pxcp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30428'
  I0423 19:08:45.149110 25 builder.go:146] stderr: "+ + nc -v -t -w 2 192.168.58.100 30428\necho hostName\nConnection to 192.168.58.100 30428 port [tcp/*] succeeded!\n"
  I0423 19:08:45.149184 25 builder.go:147] stdout: ""
  I0423 19:08:45.940308 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-6622 exec execpod9pxcp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30428'
  I0423 19:08:46.116316 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 30428\nConnection to 192.168.58.100 30428 port [tcp/*] succeeded!\n"
  I0423 19:08:46.116377 25 builder.go:147] stdout: "nodeport-test-ptssj"
  I0423 19:08:46.116485 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-6622 exec execpod9pxcp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30428'
  I0423 19:08:46.284148 25 builder.go:146] stderr: "+ + echonc hostName\n -v -t -w 2 192.168.58.101 30428\nConnection to 192.168.58.101 30428 port [tcp/*] succeeded!\n"
  I0423 19:08:46.284192 25 builder.go:147] stdout: "nodeport-test-ptssj"
  I0423 19:08:46.284306 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6622" for this suite. @ 04/23/25 19:08:46.288
• [10.889 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/23/25 19:08:46.295
  I0423 19:08:46.295715 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename watch @ 04/23/25 19:08:46.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:46.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:46.314
  STEP: creating a watch on configmaps with a certain label @ 04/23/25 19:08:46.32
  STEP: creating a new configmap @ 04/23/25 19:08:46.321
  STEP: modifying the configmap once @ 04/23/25 19:08:46.326
  STEP: changing the label value of the configmap @ 04/23/25 19:08:46.338
  STEP: Expecting to observe a delete notification for the watched object @ 04/23/25 19:08:46.345
  I0423 19:08:46.345468 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4564  11745167-9f81-42bb-9466-d6584edb74cb 29222 0 2025-04-23 19:08:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 19:08:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 19:08:46.345647 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4564  11745167-9f81-42bb-9466-d6584edb74cb 29223 0 2025-04-23 19:08:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 19:08:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 19:08:46.345723 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4564  11745167-9f81-42bb-9466-d6584edb74cb 29224 0 2025-04-23 19:08:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 19:08:46 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/23/25 19:08:46.345
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/23/25 19:08:46.359
  STEP: changing the label value of the configmap back @ 04/23/25 19:08:56.359
  STEP: modifying the configmap a third time @ 04/23/25 19:08:56.381
  STEP: deleting the configmap @ 04/23/25 19:08:56.394
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/23/25 19:08:56.4
  I0423 19:08:56.401032 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4564  11745167-9f81-42bb-9466-d6584edb74cb 29312 0 2025-04-23 19:08:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 19:08:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 19:08:56.401418 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4564  11745167-9f81-42bb-9466-d6584edb74cb 29313 0 2025-04-23 19:08:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 19:08:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 19:08:56.401641 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4564  11745167-9f81-42bb-9466-d6584edb74cb 29314 0 2025-04-23 19:08:46 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 19:08:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 19:08:56.402017 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4564" for this suite. @ 04/23/25 19:08:56.41
• [10.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/23/25 19:08:56.419
  I0423 19:08:56.419929 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename subjectreview @ 04/23/25 19:08:56.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:56.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:56.45
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-300" @ 04/23/25 19:08:56.456
  I0423 19:08:56.465145 25 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-300:e2e"
  I0423 19:08:56.465223 25 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-300"}
  I0423 19:08:56.465247 25 subjectreviews.go:71] saUID: "2eb519c0-d190-4d49-b5b0-2a686d1a11a0"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-300:e2e" @ 04/23/25 19:08:56.465
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-300:e2e" @ 04/23/25 19:08:56.465
  I0423 19:08:56.471554 25 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-300:e2e" api 'list' configmaps in "subjectreview-300" namespace @ 04/23/25 19:08:56.472
  I0423 19:08:56.475403 25 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-300:e2e" @ 04/23/25 19:08:56.475
  I0423 19:08:56.480504 25 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0423 19:08:56.480563 25 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0423 19:08:56.481276 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-300" for this suite. @ 04/23/25 19:08:56.513
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 04/23/25 19:08:56.524
  I0423 19:08:56.524259 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 19:08:56.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:56.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:56.557
  STEP: Creating namespace "e2e-ns-78wst" @ 04/23/25 19:08:56.56
  I0423 19:08:56.582549 25 namespace.go:412] Namespace "e2e-ns-78wst-5756" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-78wst-5756" @ 04/23/25 19:08:56.582
  I0423 19:08:56.598595 25 namespace.go:435] Namespace "e2e-ns-78wst-5756" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-78wst-5756" @ 04/23/25 19:08:56.598
  I0423 19:08:56.610391 25 namespace.go:464] Namespace "e2e-ns-78wst-5756" has []v1.FinalizerName{"kubernetes"}
  I0423 19:08:56.610592 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9896" for this suite. @ 04/23/25 19:08:56.619
  STEP: Destroying namespace "e2e-ns-78wst-5756" for this suite. @ 04/23/25 19:08:56.63
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 04/23/25 19:08:56.639
  I0423 19:08:56.639358 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:08:56.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:08:56.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:08:56.663
  STEP: Setting up server cert @ 04/23/25 19:08:56.684
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:08:57.296
  STEP: Deploying the webhook pod @ 04/23/25 19:08:57.304
  STEP: Wait for the deployment to be ready @ 04/23/25 19:08:57.341
  I0423 19:08:57.355758 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/23/25 19:08:59.37
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:08:59.38
  I0423 19:09:00.381354 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/23/25 19:09:00.391
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/23/25 19:09:00.422
  STEP: Creating a configMap that should not be mutated @ 04/23/25 19:09:00.432
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/23/25 19:09:00.445
  STEP: Creating a configMap that should be mutated @ 04/23/25 19:09:00.456
  I0423 19:09:00.543544 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6335" for this suite. @ 04/23/25 19:09:00.553
  STEP: Destroying namespace "webhook-markers-3125" for this suite. @ 04/23/25 19:09:00.569
• [3.951 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/23/25 19:09:00.591
  I0423 19:09:00.591377 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 19:09:00.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:09:00.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:09:00.628
  STEP: Creating configMap with name configmap-test-volume-map-29967a07-d98c-4cb1-aa9d-8bbc8381a9d2 @ 04/23/25 19:09:00.633
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:09:00.642
  STEP: Saw pod success @ 04/23/25 19:09:04.669
  I0423 19:09:04.674139 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-020afa8d-8928-4513-b75e-d79f65258e7a container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:09:04.688
  I0423 19:09:04.715614 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3860" for this suite. @ 04/23/25 19:09:04.72
• [4.141 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 04/23/25 19:09:04.732
  I0423 19:09:04.732527 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 19:09:04.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:09:04.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:09:04.764
  STEP: Creating a pod to test substitution in volume subpath @ 04/23/25 19:09:04.77
  STEP: Saw pod success @ 04/23/25 19:09:08.805
  I0423 19:09:08.812399 25 output.go:196] Trying to get logs from node worker00 pod var-expansion-a6ace35f-355d-40b2-950d-622b0ac34ba4 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 19:09:08.823
  I0423 19:09:08.854880 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-995" for this suite. @ 04/23/25 19:09:08.862
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/23/25 19:09:08.87
  I0423 19:09:08.870987 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 19:09:08.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:09:08.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:09:08.89
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/23/25 19:09:08.976
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 19:09:08.983
  I0423 19:09:09.065207 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:09:09.065250 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:09:09.991398 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:09:09.991461 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:09:10.992473 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 19:09:10.992524 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/23/25 19:09:10.996
  I0423 19:09:11.095801 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:09:11.095854 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:09:12.024376 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:09:12.024430 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:09:13.027198 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 19:09:13.027279 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/23/25 19:09:13.027
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 19:09:13.04
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7210, will wait for the garbage collector to delete the pods @ 04/23/25 19:09:13.04
  I0423 19:09:13.112885 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.830479ms
  I0423 19:09:13.214089 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.195227ms
  I0423 19:09:15.526598 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:09:15.526661 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 19:09:15.531023 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29636"},"items":null}

  I0423 19:09:15.534792 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29636"},"items":null}

  I0423 19:09:15.547359 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7210" for this suite. @ 04/23/25 19:09:15.551
• [6.690 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/23/25 19:09:15.561
  I0423 19:09:15.561073 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 19:09:15.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:09:15.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:09:15.586
  STEP: Creating configMap with name configmap-test-volume-ca1dd732-10d1-46a3-8ed8-10a544241b21 @ 04/23/25 19:09:15.591
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:09:15.599
  STEP: Saw pod success @ 04/23/25 19:09:19.627
  I0423 19:09:19.631199 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-8d21ce07-6d07-41e0-a24d-afed8fd9d2d8 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:09:19.638
  I0423 19:09:19.660819 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8651" for this suite. @ 04/23/25 19:09:19.667
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 04/23/25 19:09:19.675
  I0423 19:09:19.675248 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 19:09:19.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:09:19.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:09:19.703
  I0423 19:09:19.709068 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  W0423 19:09:22.265143      25 warnings.go:70] unknown field "alpha"
  W0423 19:09:22.265204      25 warnings.go:70] unknown field "beta"
  W0423 19:09:22.265218      25 warnings.go:70] unknown field "delta"
  W0423 19:09:22.265232      25 warnings.go:70] unknown field "epsilon"
  W0423 19:09:22.265245      25 warnings.go:70] unknown field "gamma"
  I0423 19:09:22.816081 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8310" for this suite. @ 04/23/25 19:09:22.821
• [3.155 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 04/23/25 19:09:22.837
  I0423 19:09:22.837639 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 19:09:22.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:09:22.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:09:22.864
  STEP: Creating pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510 @ 04/23/25 19:09:22.869
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 19:09:24.899
  I0423 19:09:24.905380 25 container_probe.go:1749] Initial restart count of pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 is 0
  I0423 19:09:24.910463 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:26.922406 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:28.930182 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:30.938522 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:32.946286 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:34.951808 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:36.959160 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:38.966223 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:40.973416 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:42.981949 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:44.990363 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:46.998102 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:49.004463 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:51.009586 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:53.017694 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:55.022708 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:57.028741 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:09:59.035214 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:01.043093 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:03.047772 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:05.054349 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:07.063245 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:09.075346 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:11.081359 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:13.088227 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:15.095783 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:17.102757 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:19.107477 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:21.113811 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:23.119500 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:25.125692 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:27.135068 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:29.140752 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:31.148361 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:33.154689 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:35.159923 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:37.164779 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:39.176088 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:41.182218 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:43.186989 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:45.191151 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:47.199412 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:49.208093 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:51.214878 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:53.222615 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:55.227963 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:57.238029 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:10:59.245699 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:01.255271 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:03.262017 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:05.267301 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:07.272747 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:09.276877 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:11.282922 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:13.287942 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:15.294429 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:17.302445 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:19.310279 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:21.316251 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:23.326201 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:25.333170 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:27.339148 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:29.342993 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:31.346322 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:33.352088 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:35.359522 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:37.365752 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:39.371767 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:41.379960 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:43.389790 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:45.397806 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:47.404991 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:49.410840 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:51.419539 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:53.425668 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:55.435057 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:57.441531 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:11:59.447616 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:01.452597 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:03.465233 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:05.472956 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:07.479894 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:09.485387 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:11.491373 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:13.500298 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:15.507750 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:17.516407 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:19.521795 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:21.524797 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:23.532396 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:25.537133 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:27.543764 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:29.549037 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:31.553189 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:33.560523 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:35.570544 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:37.576064 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:39.582999 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:41.592020 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:43.598058 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:45.607526 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:47.615629 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:49.622912 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:51.632852 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:53.640224 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:55.646265 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:57.654014 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:12:59.661635 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:01.666775 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:03.672487 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:05.677609 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:07.683898 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:09.695073 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:11.700314 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:13.706080 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:15.713068 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:17.719240 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:19.725707 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:21.732013 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  I0423 19:13:23.741055 25 container_probe.go:1759] Get pod busybox-c6b48adc-aa82-4f74-a6b3-3498bef25c79 in namespace container-probe-6510
  STEP: deleting the pod @ 04/23/25 19:13:25.741
  I0423 19:13:25.772193 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6510" for this suite. @ 04/23/25 19:13:25.785
• [242.957 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 04/23/25 19:13:25.797
  I0423 19:13:25.797626 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 19:13:25.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:25.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:25.819
  I0423 19:13:29.858032 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9044" for this suite. @ 04/23/25 19:13:29.865
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/23/25 19:13:29.878
  I0423 19:13:29.878831 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename deployment @ 04/23/25 19:13:29.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:29.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:29.925
  I0423 19:13:29.932806 25 deployment.go:1196] Creating deployment "webserver-deployment"
  I0423 19:13:29.947624 25 deployment.go:1200] Waiting for observed generation 1
  I0423 19:13:31.962263 25 deployment.go:1205] Waiting for all required pods to come up
  I0423 19:13:31.969336 25 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/23/25 19:13:31.969
  I0423 19:13:33.992720 25 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0423 19:13:34.006828 25 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0423 19:13:34.039713 25 deployment.go:314] Updating deployment webserver-deployment
  I0423 19:13:34.039902 25 deployment.go:1224] Waiting for observed generation 2
  I0423 19:13:36.056787 25 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0423 19:13:36.061222 25 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0423 19:13:36.065759 25 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0423 19:13:36.078981 25 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0423 19:13:36.079087 25 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0423 19:13:36.085165 25 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0423 19:13:36.094688 25 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0423 19:13:36.094763 25 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0423 19:13:36.118402 25 deployment.go:314] Updating deployment webserver-deployment
  I0423 19:13:36.118477 25 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0423 19:13:36.132648 25 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0423 19:13:36.140977 25 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0423 19:13:38.163760 25 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9676255-565b-4df1-b12d-5801bffd54e4",
      ResourceVersion: (string) (len=5) "30989",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 19:13:38.234537 25 deployment.go:40] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
      ResourceVersion: (string) (len=5) "30984",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "c9676255-565b-4df1-b12d-5801bffd54e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 39 36 37 36 32  35 35 2d 35 36 35 62 2d  |\"c9676255-565b-|
              00000120  34 64 66 31 2d 62 31 32  64 2d 35 38 30 31 62 66  |4df1-b12d-5801bf|
              00000130  66 64 35 34 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fd54e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 19:13:38.263098 25 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0423 19:13:38.264742 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
      ResourceVersion: (string) (len=5) "31118",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "c9676255-565b-4df1-b12d-5801bffd54e4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 39 36 37 36 32  35 35 2d 35 36 35 62 2d  |\"c9676255-565b-|
              00000120  34 64 66 31 2d 62 31 32  64 2d 35 38 30 31 62 66  |4df1-b12d-5801bf|
              00000130  66 64 35 34 65 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fd54e4\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 10,
      AvailableReplicas: (int32) 10,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 19:13:38.356271 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-26xmr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-26xmr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7789d4b-fd7a-432f-8d51-9b6cd1d00a33",
      ResourceVersion: (string) (len=5) "30816",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "203df09cbecf0e751a9579a9771468eb414788953c64672d3d4c80fa48eb6421",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.157/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.157/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 37 5c 22 7d 22  |.200.131.157\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v2bwk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v2bwk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032411,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3f798eddadcef727354669635a362be69372ed3bc70d9cd09b3ebaf491b4a65a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.365202 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-28gvl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-28gvl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b16334f-8dc7-4b28-a9fc-676fac5d7d11",
      ResourceVersion: (string) (len=5) "30741",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.17/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.17/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "02c76aedd4b7675fc7ebc5d5b8d2596ce717e3d3629b52c6da340d8d97b3c56c"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 31  37 5c 22 7d 22 3a 7b 22  |.200.5.17\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b8vl7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b8vl7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.17",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.17"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032410,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e3e63ccedb3c13c3315d4e60ef1dde02571e7b82e3c866bc0a472c1954257e5b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.373262 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-4gtnl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4gtnl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3bab2bf1-cd24-4e89-802a-29e586140359",
      ResourceVersion: (string) (len=5) "30782",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "20e1e29a4a66b8b6141bb1a04f0f24a548d398fa16d7add57aebf989cac6c067",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.188/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.188/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 38 38 5c 22 7d 22  |.200.131.188\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mnmqr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mnmqr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.188",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.188"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032411,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c71afe2b4e847de2886ee937c7aad201c1ecad418bf2c86af5154641acc31048",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.383468 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-5srcg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5srcg",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7d67932-efb5-4a42-a26b-0f76bc34c489",
      ResourceVersion: (string) (len=5) "31117",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "861d6cbcd1dce8072c916a052c700564f59e84e333f096ecee6a23fad9413b2e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.53/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.53/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 35  33 5c 22 7d 22 3a 7b 22  |.200.5.53\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-crzg6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-crzg6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032417,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://60504c8e49d256ea72fde4af6aa9f0a42bbc9c84d952b5365a3fddff91894a22",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.399492 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-6jhdq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6jhdq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2511211b-3019-4183-a453-5bd1f2c53166",
      ResourceVersion: (string) (len=5) "30778",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4655e5f8bae14e06681fbbee2a9907ee849006ec27e5a36f0e338bb2ac617e0d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.137/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.137/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 33 37 5c 22 7d 22  |.200.131.137\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78jtq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78jtq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032411,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a1d5bb3a884a3527a4cde182875c408536d4c3e91a4ba2436f78dad8b4b9f6bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.433925 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-7vc82" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7vc82",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "174c7ebb-0f54-4b51-994e-b2da6fee9c17",
      ResourceVersion: (string) (len=5) "30786",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e7d86e887f5837695bed507c951c64050b5497894f1b11040d9659455598d3e5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.170/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.170/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 37 30 5c 22 7d 22  |.200.131.170\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9cmkv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9cmkv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032411,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://49884a431425f53a86f200814fc194a9c4d7d6faf6612a69721048ea07488627",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.449868 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-dcgc8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dcgc8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71590f27-9da8-4d62-a79e-bf9768d2f4f9",
      ResourceVersion: (string) (len=5) "31099",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.38/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "111ef4000d4e1efae1b2ca2be21ea60e14fa2ffa50ee2a66c0ea6a76a7a5f994",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.38/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqz5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqz5b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.492669 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-dr2bj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-dr2bj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f58f47a-66cb-4ad1-8fc1-311b51969253",
      ResourceVersion: (string) (len=5) "31105",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d8eedee99cb605850286f2612b19676a88b8a918af5803dd96b5e122a3c44287",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.129/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.129/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-66rf6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-66rf6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.557814 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-f7qql" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-f7qql",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91fb2f14-0912-4a42-80a1-96edae8546c8",
      ResourceVersion: (string) (len=5) "31020",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zmmfl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zmmfl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.572571 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-h2z9c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-h2z9c",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8be14dab-5faa-45ec-85e1-f0714ba57c9c",
      ResourceVersion: (string) (len=5) "31109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.16/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.16/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "14cf0fd607afbe9f064715fdff78f8344b5b6f4bfd964838309512b732b70584"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nbljp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nbljp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.586406 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-hcs25" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hcs25",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c44918f5-4e10-448d-8253-d077c790e887",
      ResourceVersion: (string) (len=5) "30818",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8aa37f3cbccf883aa838b5760ff21db54c5e3c62e0dff1a5d0a12076b47c3880",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.159/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.159/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 39 5c 22 7d 22  |.200.131.159\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9snwb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9snwb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032411,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://11060a4ca9699f0328bf3181a2b4176630ca2d50cd4122065bf516e9cf600d36",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.609379 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-hmrkk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-hmrkk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e31cbcbe-74f2-4813-b21e-15d09869caa2",
      ResourceVersion: (string) (len=5) "31081",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.184/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.184/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "be7d73e6dce8784bf0da15d6a62416250ad59474a8d8695f1335a46fdea758dc"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p6prj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p6prj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.637390 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-jp4tn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jp4tn",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7e5fc8f-eb2d-4f45-9601-22e45f9184f7",
      ResourceVersion: (string) (len=5) "30811",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "38827d9520d16d9a6c4f545e61e63ef7b0261c1d55d9624ead3c98f23dbd94db",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.31/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.31/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 33  31 5c 22 7d 22 3a 7b 22  |.200.5.31\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mlf97",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mlf97",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032411,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a6743d36139bd872b315cc49ad204e618330187ee3cc1069cd483637cad7e548",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.658843 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-ngzgd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ngzgd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f965646-0fcb-4b02-9562-dc44445d236d",
      ResourceVersion: (string) (len=5) "31028",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4fwk6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4fwk6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.680675 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-vd8dl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-vd8dl",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32891816-f25c-4fac-bebd-2a2cd6ab009a",
      ResourceVersion: (string) (len=5) "30802",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032410,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e1c86abbc0b0a005f35874c738cac838875cb66da918f7859df93ab47f6eec79",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.56/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.56/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032412,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 35  36 5c 22 7d 22 3a 7b 22  |.200.5.56\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qqcdd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qqcdd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032411,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032410,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032411,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a91d2c01ffe1bd901770feec31fed8bc35f1d24d62433a60c3b18d9fad41672e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.751625 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-w5fzn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w5fzn",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "67cae64b-52f4-48fd-a612-70f3fb4c78c1",
      ResourceVersion: (string) (len=5) "31096",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "818f524feb6df3a794bf5d042f52c431fc3a06f0b344e15d74e888f2e8a4abdc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.189/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.189/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f87km",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f87km",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.800356 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-ws6j6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ws6j6",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66eb16c3-123a-4990-bd4e-663f498a42bf",
      ResourceVersion: (string) (len=5) "31060",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "63ad2f7a3114b82b8ed592215913c219eada169f1f842dd66d0543f60c10d266",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.152/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.152/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8cwwk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8cwwk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.836150 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-xcfg7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xcfg7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e53d269-0cef-4c0f-b06f-d4bee6ca52d0",
      ResourceVersion: (string) (len=5) "31111",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.34/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4ced2cbc00e360245771c8b2dac00d98666e41a2d492582a571aa32a0644e6b7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 33  34 5c 22 7d 22 3a 7b 22  |.200.5.34\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tf2sh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tf2sh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032417,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ecc6722036c51259f08baf1b85b2f153e454851712ce65b648bdcd3242358e33",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.852143 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-xkdlz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xkdlz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3de81ea-c1d6-4bca-b780-7be7839b9de0",
      ResourceVersion: (string) (len=5) "31127",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9bbd3ef4b96a2c28b7ed5fae9fdcf9ebfc49967dcbeb5aceecb74d37edf494f3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.25/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  35 5c 22 7d 22 3a 7b 22  |.200.5.25\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8pb5q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8pb5q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032417,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f623350f20698338a191404dba5711b17c734c6875058f447868159f01094b80",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.909901 25 deployment.go:68] Pod "webserver-deployment-64bcfc6446-zfn9h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zfn9h",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1d54917-b34e-4a05-bab5-bdc3a36e401e",
      ResourceVersion: (string) (len=5) "31128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1a8fcddc768e3a9947e2ae715295a1981bd94fe9172a166981cd405b33bd26a7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.59/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.59/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "115b8a03-139d-47b5-ba25-b2fd51f7d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  35 62 38 61 30 33 2d 31  |d\":\"115b8a03-1|
              00000090  33 39 64 2d 34 37 62 35  2d 62 61 32 35 2d 62 32  |39d-47b5-ba25-b2|
              000000a0  66 64 35 31 66 37 64 39  63 34 5c 22 7d 22 3a 7b  |fd51f7d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mfmls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mfmls",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.961435 25 deployment.go:68] Pod "webserver-deployment-786f49d774-22lr6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-22lr6",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08b45487-efb0-4460-9171-eb63b3082896",
      ResourceVersion: (string) (len=5) "31069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "50bd658a4ef791c85eb407fc253c6ec65e07bcc975ce48a0be31bd4e5a5cb0a6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.131/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.131/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n4mlv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n4mlv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:38.991793 25 deployment.go:68] Pod "webserver-deployment-786f49d774-2b6pm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2b6pm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32c8a1d0-b1fe-4fd9-9d27-cc26f1965cab",
      ResourceVersion: (string) (len=5) "31070",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3d1e8f5fc40f67faccd7becc8dd99adc71269edef0de591bf06dad42268098d7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.19/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.19/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8v684",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8v684",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.012859 25 deployment.go:68] Pod "webserver-deployment-786f49d774-bx9kp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-bx9kp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73c7fe65-cfcb-4054-964d-8a3d2fcdeaa4",
      ResourceVersion: (string) (len=5) "30915",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "938ad49f672d8e5602add47f1dde4091c129982623373c0cfb05876b236bf603",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.26/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zvjbs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zvjbs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.029733 25 deployment.go:68] Pod "webserver-deployment-786f49d774-dsl4n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-dsl4n",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a3436c1-a8f1-4e6b-a20b-31e787038212",
      ResourceVersion: (string) (len=5) "31041",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7b4156ff0c90eb319ff58107b53d5399a612436fe46f81285d2727c618f13d7a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.173/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.173/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bkbml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bkbml",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.046745 25 deployment.go:68] Pod "webserver-deployment-786f49d774-l5vtz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-l5vtz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52554857-43d2-4405-bc91-3d23ff811f48",
      ResourceVersion: (string) (len=5) "31016",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qnhpd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qnhpd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.056397 25 deployment.go:68] Pod "webserver-deployment-786f49d774-mkmxw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-mkmxw",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d64f5d45-ee79-425f-bf52-04c1428d789c",
      ResourceVersion: (string) (len=5) "31123",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "91560e9d4b36df0c0b8ff0dff9aef7668bf9d13b5f40958fba11ea3f24cff1bb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.40/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.40/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032418,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 30  |:{\"ip\":\"10.20|
              00000290  30 2e 35 2e 34 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |0.5.40\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f6hvn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f6hvn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.066612 25 deployment.go:68] Pod "webserver-deployment-786f49d774-mxql2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-mxql2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "815cdaee-68f7-49da-abeb-dfe5e0210ac9",
      ResourceVersion: (string) (len=5) "30991",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ctvmp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ctvmp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.093643 25 deployment.go:68] Pod "webserver-deployment-786f49d774-nqwpg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-nqwpg",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b655c0ea-d673-41e4-899e-7b6d11bfc912",
      ResourceVersion: (string) (len=5) "30893",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c9e3695b06cb22defb162f9fe7ff1a5f0c64524a6854c058dde5330ded9f59fd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.18/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.18/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lkrkc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lkrkc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.109490 25 deployment.go:68] Pod "webserver-deployment-786f49d774-pcfv5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-pcfv5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39a0d789-e337-49a0-9f83-f8c902c25aa7",
      ResourceVersion: (string) (len=5) "31087",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "60969b5a80488f8533d92c4d334d5dc2a3ce8ed496e6ee5815087ef6967bd8f4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.51/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.51/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ktlz5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ktlz5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.127036 25 deployment.go:68] Pod "webserver-deployment-786f49d774-r7ksn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-r7ksn",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4df91b08-92f8-45a3-9fce-8f9bd7287934",
      ResourceVersion: (string) (len=5) "30911",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b98ca64c4cdd771d6bb0accf68641e1e6aae7e79037c66981cb8e59c7da86a24",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.147/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.147/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ngx48",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ngx48",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.150594 25 deployment.go:68] Pod "webserver-deployment-786f49d774-tsl4h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-tsl4h",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8aeac96d-43db-4ad9-8466-193fe33da68f",
      ResourceVersion: (string) (len=5) "31051",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "148e7454f81e6d02fefd607b5fd0a9788d73f0ebb1c2776342c76aa30376722e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.190/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.190/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dsn26",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dsn26",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.170546 25 deployment.go:68] Pod "webserver-deployment-786f49d774-xrmlm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-xrmlm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d9b1546-1d5c-4498-96cd-4d6cb5c31dbc",
      ResourceVersion: (string) (len=5) "31072",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "314609a70199fb476023cb04177cc62e478ada198bf2a2c19f2f49d0a27810ab",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.191/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.191/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 30  |:{\"ip\":\"10.20|
              00000290  30 2e 31 33 31 2e 31 39  31 5c 22 7d 22 3a 7b 22  |0.131.191\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vdj6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vdj6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032414,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.191",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.191"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032414,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.186438 25 deployment.go:68] Pod "webserver-deployment-786f49d774-zr85z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-zr85z",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-8379",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6c8e70a-d57f-482b-9aae-2cead1463bbc",
      ResourceVersion: (string) (len=5) "31026",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "237ba492-2bde-41bf-b1c1-8335d428e45d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  37 62 61 34 39 32 2d 32  |d\":\"237ba492-2|
              00000090  62 64 65 2d 34 31 62 66  2d 62 31 63 31 2d 38 33  |bde-41bf-b1c1-83|
              000000a0  33 35 64 34 32 38 65 34  35 64 5c 22 7d 22 3a 7b  |35d428e45d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tcdfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tcdfs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032416,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032416,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:13:39.256253 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8379" for this suite. @ 04/23/25 19:13:39.317
• [9.522 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/23/25 19:13:39.409
  I0423 19:13:39.409340 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 19:13:39.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:39.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:39.501
  STEP: creating the pod @ 04/23/25 19:13:39.519
  STEP: submitting the pod to kubernetes @ 04/23/25 19:13:39.519
  STEP: verifying the pod is in kubernetes @ 04/23/25 19:13:41.566
  STEP: updating the pod @ 04/23/25 19:13:41.573
  I0423 19:13:42.099645 25 pod_client.go:173] Successfully updated pod "pod-update-720fb33f-2fcb-4b92-9956-f4b89455de88"
  STEP: verifying the updated pod is in kubernetes @ 04/23/25 19:13:42.109
  I0423 19:13:42.118070 25 pods.go:391] Pod update OK
  I0423 19:13:42.119617 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6846" for this suite. @ 04/23/25 19:13:42.126
• [2.728 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/23/25 19:13:42.137
  I0423 19:13:42.137535 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:13:42.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:42.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:42.169
  STEP: Creating secret with name secret-test-4b05decb-56f5-494e-b8e3-b882ecad5f92 @ 04/23/25 19:13:42.174
  STEP: Creating a pod to test consume secrets @ 04/23/25 19:13:42.182
  STEP: Saw pod success @ 04/23/25 19:13:46.222
  I0423 19:13:46.235176 25 output.go:196] Trying to get logs from node worker01 pod pod-secrets-955698a7-ecbc-4247-b1fd-9dcb55cf3b00 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:13:46.319
  I0423 19:13:46.382874 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2530" for this suite. @ 04/23/25 19:13:46.4
• [4.292 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 04/23/25 19:13:46.429
  I0423 19:13:46.429918 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 19:13:46.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:46.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:46.497
  STEP: getting /apis @ 04/23/25 19:13:46.531
  STEP: getting /apis/admissionregistration.k8s.io @ 04/23/25 19:13:46.545
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/23/25 19:13:46.547
  STEP: creating @ 04/23/25 19:13:46.551
  STEP: getting @ 04/23/25 19:13:46.597
  STEP: listing @ 04/23/25 19:13:46.609
  STEP: watching @ 04/23/25 19:13:46.622
  I0423 19:13:46.622464 25 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 04/23/25 19:13:46.625
  STEP: updating @ 04/23/25 19:13:46.643
  I0423 19:13:46.675173 25 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 04/23/25 19:13:46.675
  STEP: deleting a collection @ 04/23/25 19:13:46.721
  I0423 19:13:46.973305 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5973" for this suite. @ 04/23/25 19:13:46.993
• [0.586 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/23/25 19:13:47.018
  I0423 19:13:47.018484 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:13:47.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:47.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:47.061
  STEP: Creating the pod @ 04/23/25 19:13:47.068
  I0423 19:13:51.626197 25 pod_client.go:173] Successfully updated pod "annotationupdate7fdd2017-59ff-4ad5-9370-93f54f9a1e50"
  I0423 19:13:53.648310 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-220" for this suite. @ 04/23/25 19:13:53.654
• [6.660 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/23/25 19:13:53.675
  I0423 19:13:53.675382 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename tables @ 04/23/25 19:13:53.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:53.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:53.708
  I0423 19:13:53.716534 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8401" for this suite. @ 04/23/25 19:13:53.758
• [0.095 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/23/25 19:13:53.771
  I0423 19:13:53.772103 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sysctl @ 04/23/25 19:13:53.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:53.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:53.808
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/23/25 19:13:53.813
  STEP: Watching for error events or started pod @ 04/23/25 19:13:53.869
  STEP: Waiting for pod completion @ 04/23/25 19:13:55.876
  STEP: Checking that the pod succeeded @ 04/23/25 19:13:57.894
  STEP: Getting logs from the pod @ 04/23/25 19:13:57.894
  STEP: Checking that the sysctl is actually updated @ 04/23/25 19:13:57.908
  I0423 19:13:57.908483 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9808" for this suite. @ 04/23/25 19:13:57.919
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/23/25 19:13:57.929
  I0423 19:13:57.929183 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:13:57.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:13:57.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:13:57.946
  STEP: Creating projection with secret that has name projected-secret-test-f1505084-ffae-4952-a351-dae8e2ed01cd @ 04/23/25 19:13:57.955
  STEP: Creating a pod to test consume secrets @ 04/23/25 19:13:57.961
  STEP: Saw pod success @ 04/23/25 19:14:01.991
  I0423 19:14:01.997161 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-e16469f1-37f4-489a-a0f1-834bee285d18 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:14:02.016
  I0423 19:14:02.053085 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8971" for this suite. @ 04/23/25 19:14:02.057
• [4.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/23/25 19:14:02.068
  I0423 19:14:02.069227 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 19:14:02.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:02.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:02.108
  STEP: Waiting for pod completion @ 04/23/25 19:14:02.136
  I0423 19:14:06.178639 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1932" for this suite. @ 04/23/25 19:14:06.187
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 04/23/25 19:14:06.212
  I0423 19:14:06.212523 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 19:14:06.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:06.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:06.261
  I0423 19:14:06.279136 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/23/25 19:14:07.818
  I0423 19:14:07.818714 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 create -f -'
  I0423 19:14:08.054512 25 builder.go:146] stderr: ""
  I0423 19:14:08.054658 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9890-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0423 19:14:08.054757 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 delete e2e-test-crd-publish-openapi-9890-crds test-foo'
  I0423 19:14:08.179928 25 builder.go:146] stderr: ""
  I0423 19:14:08.180029 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9890-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0423 19:14:08.180168 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 apply -f -'
  I0423 19:14:08.303074 25 builder.go:146] stderr: ""
  I0423 19:14:08.303168 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9890-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0423 19:14:08.303283 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 delete e2e-test-crd-publish-openapi-9890-crds test-foo'
  I0423 19:14:08.436359 25 builder.go:146] stderr: ""
  I0423 19:14:08.436496 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9890-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/23/25 19:14:08.436
  I0423 19:14:08.437194 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 create -f -'
  I0423 19:14:08.566917 25 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/23/25 19:14:08.567
  I0423 19:14:08.567644 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 create -f -'
  I0423 19:14:08.706448 25 builder.go:135] rc: 1
  I0423 19:14:08.706662 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 apply -f -'
  I0423 19:14:08.829115 25 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/23/25 19:14:08.829
  I0423 19:14:08.830454 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 create -f -'
  I0423 19:14:08.975130 25 builder.go:135] rc: 1
  I0423 19:14:08.975307 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 --namespace=crd-publish-openapi-570 apply -f -'
  I0423 19:14:09.167384 25 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/23/25 19:14:09.168
  I0423 19:14:09.168470 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 explain e2e-test-crd-publish-openapi-9890-crds'
  I0423 19:14:09.322144 25 builder.go:146] stderr: ""
  I0423 19:14:09.322208 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9890-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/23/25 19:14:09.322
  I0423 19:14:09.322492 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 explain e2e-test-crd-publish-openapi-9890-crds.metadata'
  I0423 19:14:09.413169 25 builder.go:146] stderr: ""
  I0423 19:14:09.413361 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9890-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0423 19:14:09.414085 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 explain e2e-test-crd-publish-openapi-9890-crds.spec'
  I0423 19:14:09.526409 25 builder.go:146] stderr: ""
  I0423 19:14:09.526484 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9890-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0423 19:14:09.526734 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 explain e2e-test-crd-publish-openapi-9890-crds.spec.bars'
  I0423 19:14:09.659548 25 builder.go:146] stderr: ""
  I0423 19:14:09.659655 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9890-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/23/25 19:14:09.659
  I0423 19:14:09.660366 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-570 explain e2e-test-crd-publish-openapi-9890-crds.spec.bars2'
  I0423 19:14:09.810248 25 builder.go:135] rc: 1
  I0423 19:14:11.382248 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-570" for this suite. @ 04/23/25 19:14:11.403
• [5.206 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/23/25 19:14:11.418
  I0423 19:14:11.421705 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 19:14:11.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:11.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:11.475
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/23/25 19:14:11.482
  STEP: Saw pod success @ 04/23/25 19:14:15.53
  I0423 19:14:15.540039 25 output.go:196] Trying to get logs from node worker00 pod pod-b3f00068-d635-4e97-b2d4-317e3191b21c container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:14:15.552
  I0423 19:14:15.595056 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9296" for this suite. @ 04/23/25 19:14:15.604
• [4.201 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/23/25 19:14:15.62
  I0423 19:14:15.620361 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 19:14:15.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:15.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:15.666
  STEP: Given a ReplicationController is created @ 04/23/25 19:14:15.671
  STEP: When the matched label of one of its pods change @ 04/23/25 19:14:15.68
  I0423 19:14:15.689220 25 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0423 19:14:20.703239 25 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/23/25 19:14:20.734
  I0423 19:14:21.766374 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3441" for this suite. @ 04/23/25 19:14:21.781
• [6.189 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/23/25 19:14:21.808
  I0423 19:14:21.808718 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename deployment @ 04/23/25 19:14:21.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:21.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:21.839
  I0423 19:14:21.856675 25 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0423 19:14:26.863525 25 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 19:14:26.863
  I0423 19:14:26.863654 25 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/23/25 19:14:26.88
  I0423 19:14:28.931737 25 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5468",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85527d35-688c-44fa-a840-ab8aebd3d230",
      ResourceVersion: (string) (len=5) "32082",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=75) "ReplicaSet \"test-cleanup-deployment-898f8f847\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 19:14:28.962810 25 deployment.go:40] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5468",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "909b8878-67cb-4010-8bb3-854dd812543b",
      ResourceVersion: (string) (len=5) "32071",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "85527d35-688c-44fa-a840-ab8aebd3d230",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 35 35 32 37 64  33 35 2d 36 38 38 63 2d  |\"85527d35-688c-|
              00000120  34 34 66 61 2d 61 38 34  30 2d 61 62 38 61 65 62  |44fa-a840-ab8aeb|
              00000130  64 33 64 32 33 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d3d230\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 19:14:28.987661 25 deployment.go:68] Pod "test-cleanup-deployment-898f8f847-5gf7b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-5gf7b",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-5468",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1dc39406-bf68-41cc-a5ac-19e0ba2e76e3",
      ResourceVersion: (string) (len=5) "32069",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "158eea46b8a39591755f27a0a682a6cc7f5572a91e405fd6971ab07e8befbb5d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.174/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.174/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "909b8878-67cb-4010-8bb3-854dd812543b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 30  39 62 38 38 37 38 2d 36  |d\":\"909b8878-6|
              00000090  37 63 62 2d 34 30 31 30  2d 38 62 62 33 2d 38 35  |7cb-4010-8bb3-85|
              000000a0  34 64 64 38 31 32 35 34  33 62 5c 22 7d 22 3a 7b  |4dd812543b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032467,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 37 34 5c 22 7d 22  |.200.131.174\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sg9kv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sg9kv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032466,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032466,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881032468,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://f44e7705b33df2dfa671688833af16a3b8f7e6ab853e2d6f8d42d9270c8a67db",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:14:29.001580 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5468" for this suite. @ 04/23/25 19:14:29.014
• [7.235 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/23/25 19:14:29.049
  I0423 19:14:29.052767 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename discovery @ 04/23/25 19:14:29.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:29.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:29.097
  STEP: Setting up server cert @ 04/23/25 19:14:29.103
  STEP: Requesting APIResourceList from "/api/v1" @ 04/23/25 19:14:29.604
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/23/25 19:14:29.609
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/23/25 19:14:29.612
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/23/25 19:14:29.613
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/23/25 19:14:29.616
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/23/25 19:14:29.621
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/23/25 19:14:29.623
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/23/25 19:14:29.625
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/23/25 19:14:29.627
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/23/25 19:14:29.63
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/23/25 19:14:29.632
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/23/25 19:14:29.636
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/23/25 19:14:29.638
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/23/25 19:14:29.639
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/23/25 19:14:29.641
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/23/25 19:14:29.643
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/23/25 19:14:29.645
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/23/25 19:14:29.646
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/23/25 19:14:29.648
  I0423 19:14:29.649560 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9310" for this suite. @ 04/23/25 19:14:29.655
• [0.624 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/23/25 19:14:29.673
  I0423 19:14:29.673464 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 19:14:29.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:29.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:29.708
  STEP: Deleting RuntimeClass runtimeclass-3382-delete-me @ 04/23/25 19:14:29.72
  STEP: Waiting for the RuntimeClass to disappear @ 04/23/25 19:14:29.73
  I0423 19:14:29.746334 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3382" for this suite. @ 04/23/25 19:14:29.757
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/23/25 19:14:29.769
  I0423 19:14:29.769606 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 19:14:29.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:29.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:29.807
  STEP: Performing setup for networking test in namespace pod-network-test-1518 @ 04/23/25 19:14:29.812
  STEP: creating a selector @ 04/23/25 19:14:29.812
  STEP: Creating the service pods in kubernetes @ 04/23/25 19:14:29.812
  I0423 19:14:29.812646 25 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/23/25 19:14:41.97
  I0423 19:14:44.022044 25 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 19:14:44.022117 25 utils.go:496] Going to poll 10.200.131.172 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0423 19:14:44.025618 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.131.172 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1518 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:14:44.025703 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:14:44.026929 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:14:44.027082 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-1518/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.131.172+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0423 19:14:45.114116 25 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0423 19:14:45.114185 25 utils.go:496] Going to poll 10.200.5.41 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0423 19:14:45.118497 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.5.41 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1518 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:14:45.118549 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:14:45.119286 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:14:45.119370 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-1518/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.5.41+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0423 19:14:46.211433 25 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0423 19:14:46.212131 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1518" for this suite. @ 04/23/25 19:14:46.223
• [16.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/23/25 19:14:46.241
  I0423 19:14:46.241915 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:14:46.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:46.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:46.27
  I0423 19:14:46.312006 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2376" for this suite. @ 04/23/25 19:14:46.32
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/23/25 19:14:46.329
  I0423 19:14:46.332042 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename svc-latency @ 04/23/25 19:14:46.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:46.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:46.352
  I0423 19:14:46.354909 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1623 @ 04/23/25 19:14:46.357
  I0423 19:14:46.364849      25 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1623, replica count: 1
  I0423 19:14:47.416259      25 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 19:14:48.417480      25 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 19:14:48.539785 25 service_latency.go:356] Created: latency-svc-4bhs2
  I0423 19:14:48.557142 25 service_latency.go:363] Got endpoints: latency-svc-4bhs2 [38.441898ms]
  I0423 19:14:48.584804 25 service_latency.go:356] Created: latency-svc-cm6wx
  I0423 19:14:48.606493 25 service_latency.go:363] Got endpoints: latency-svc-cm6wx [48.821328ms]
  I0423 19:14:48.609155 25 service_latency.go:356] Created: latency-svc-c9x9v
  I0423 19:14:48.615954 25 service_latency.go:356] Created: latency-svc-v8cgf
  I0423 19:14:48.626175 25 service_latency.go:363] Got endpoints: latency-svc-c9x9v [68.331273ms]
  I0423 19:14:48.630486 25 service_latency.go:363] Got endpoints: latency-svc-v8cgf [71.581455ms]
  I0423 19:14:48.638021 25 service_latency.go:356] Created: latency-svc-th6d4
  I0423 19:14:48.648126 25 service_latency.go:363] Got endpoints: latency-svc-th6d4 [89.825418ms]
  I0423 19:14:48.651677 25 service_latency.go:356] Created: latency-svc-tvgjp
  I0423 19:14:48.655306 25 service_latency.go:363] Got endpoints: latency-svc-tvgjp [96.629407ms]
  I0423 19:14:48.664011 25 service_latency.go:356] Created: latency-svc-9xxls
  I0423 19:14:48.670087 25 service_latency.go:363] Got endpoints: latency-svc-9xxls [110.930842ms]
  I0423 19:14:48.681168 25 service_latency.go:356] Created: latency-svc-scskc
  I0423 19:14:48.691678 25 service_latency.go:356] Created: latency-svc-hcq9c
  I0423 19:14:48.691879 25 service_latency.go:363] Got endpoints: latency-svc-scskc [126.63848ms]
  I0423 19:14:48.702056 25 service_latency.go:363] Got endpoints: latency-svc-hcq9c [142.451959ms]
  I0423 19:14:48.702060 25 service_latency.go:356] Created: latency-svc-crjdv
  I0423 19:14:48.708767 25 service_latency.go:363] Got endpoints: latency-svc-crjdv [149.510938ms]
  I0423 19:14:48.717784 25 service_latency.go:356] Created: latency-svc-xww87
  I0423 19:14:48.727599 25 service_latency.go:363] Got endpoints: latency-svc-xww87 [168.006685ms]
  I0423 19:14:48.735811 25 service_latency.go:356] Created: latency-svc-c2q76
  I0423 19:14:48.737435 25 service_latency.go:363] Got endpoints: latency-svc-c2q76 [177.976541ms]
  I0423 19:14:48.743540 25 service_latency.go:356] Created: latency-svc-q4kkc
  I0423 19:14:48.751270 25 service_latency.go:356] Created: latency-svc-dpvqw
  I0423 19:14:48.754228 25 service_latency.go:363] Got endpoints: latency-svc-q4kkc [188.292744ms]
  I0423 19:14:48.759521 25 service_latency.go:363] Got endpoints: latency-svc-dpvqw [193.562866ms]
  I0423 19:14:48.774111 25 service_latency.go:356] Created: latency-svc-9h6xq
  I0423 19:14:48.782455 25 service_latency.go:356] Created: latency-svc-8gqw9
  I0423 19:14:48.796735 25 service_latency.go:363] Got endpoints: latency-svc-8gqw9 [237.193701ms]
  I0423 19:14:48.799516 25 service_latency.go:363] Got endpoints: latency-svc-9h6xq [234.091219ms]
  I0423 19:14:48.801596 25 service_latency.go:356] Created: latency-svc-66bz6
  I0423 19:14:48.805281 25 service_latency.go:356] Created: latency-svc-hvp8z
  I0423 19:14:48.809927 25 service_latency.go:363] Got endpoints: latency-svc-66bz6 [203.158077ms]
  I0423 19:14:48.816992 25 service_latency.go:363] Got endpoints: latency-svc-hvp8z [190.763024ms]
  I0423 19:14:48.823271 25 service_latency.go:356] Created: latency-svc-p6jqq
  I0423 19:14:48.829833 25 service_latency.go:363] Got endpoints: latency-svc-p6jqq [198.707731ms]
  I0423 19:14:48.834987 25 service_latency.go:356] Created: latency-svc-8jbgj
  I0423 19:14:48.841664 25 service_latency.go:363] Got endpoints: latency-svc-8jbgj [193.484863ms]
  I0423 19:14:48.851097 25 service_latency.go:356] Created: latency-svc-vlnmr
  I0423 19:14:48.858359 25 service_latency.go:363] Got endpoints: latency-svc-vlnmr [202.978665ms]
  I0423 19:14:48.868602 25 service_latency.go:356] Created: latency-svc-x5gtm
  I0423 19:14:48.879032 25 service_latency.go:363] Got endpoints: latency-svc-x5gtm [208.779816ms]
  I0423 19:14:48.879168 25 service_latency.go:356] Created: latency-svc-x4454
  I0423 19:14:48.887878 25 service_latency.go:363] Got endpoints: latency-svc-x4454 [195.967098ms]
  I0423 19:14:48.893810 25 service_latency.go:356] Created: latency-svc-94zhs
  I0423 19:14:48.901327 25 service_latency.go:363] Got endpoints: latency-svc-94zhs [199.161998ms]
  I0423 19:14:48.907199 25 service_latency.go:356] Created: latency-svc-6wn5l
  I0423 19:14:48.917099 25 service_latency.go:363] Got endpoints: latency-svc-6wn5l [207.516092ms]
  I0423 19:14:48.930582 25 service_latency.go:356] Created: latency-svc-zhlbc
  I0423 19:14:48.942511 25 service_latency.go:356] Created: latency-svc-vnwt9
  I0423 19:14:48.947015 25 service_latency.go:363] Got endpoints: latency-svc-vnwt9 [209.212188ms]
  I0423 19:14:48.947092 25 service_latency.go:363] Got endpoints: latency-svc-zhlbc [219.372772ms]
  I0423 19:14:48.955580 25 service_latency.go:356] Created: latency-svc-txmr9
  I0423 19:14:48.962162 25 service_latency.go:356] Created: latency-svc-tcrt6
  I0423 19:14:48.971769 25 service_latency.go:363] Got endpoints: latency-svc-txmr9 [217.394533ms]
  I0423 19:14:48.976183 25 service_latency.go:363] Got endpoints: latency-svc-tcrt6 [214.998848ms]
  I0423 19:14:48.981917 25 service_latency.go:356] Created: latency-svc-7ts4j
  I0423 19:14:48.991597 25 service_latency.go:356] Created: latency-svc-slxxj
  I0423 19:14:48.993018 25 service_latency.go:363] Got endpoints: latency-svc-7ts4j [196.212905ms]
  I0423 19:14:48.997113 25 service_latency.go:356] Created: latency-svc-5kdbn
  I0423 19:14:49.004445 25 service_latency.go:363] Got endpoints: latency-svc-slxxj [204.870801ms]
  I0423 19:14:49.014172 25 service_latency.go:356] Created: latency-svc-jwqkw
  I0423 19:14:49.014838 25 service_latency.go:363] Got endpoints: latency-svc-5kdbn [204.864103ms]
  I0423 19:14:49.021386 25 service_latency.go:363] Got endpoints: latency-svc-jwqkw [204.294748ms]
  I0423 19:14:49.025804 25 service_latency.go:356] Created: latency-svc-2jljt
  I0423 19:14:49.044629 25 service_latency.go:363] Got endpoints: latency-svc-2jljt [214.680209ms]
  I0423 19:14:49.044996 25 service_latency.go:356] Created: latency-svc-hzh4v
  I0423 19:14:49.061001 25 service_latency.go:356] Created: latency-svc-cgk8j
  I0423 19:14:49.061001 25 service_latency.go:356] Created: latency-svc-m254r
  I0423 19:14:49.062256 25 service_latency.go:363] Got endpoints: latency-svc-cgk8j [203.119137ms]
  I0423 19:14:49.062995 25 service_latency.go:363] Got endpoints: latency-svc-hzh4v [220.73575ms]
  I0423 19:14:49.072546 25 service_latency.go:363] Got endpoints: latency-svc-m254r [193.463589ms]
  I0423 19:14:49.079667 25 service_latency.go:356] Created: latency-svc-qsg7t
  I0423 19:14:49.087867 25 service_latency.go:363] Got endpoints: latency-svc-qsg7t [199.814248ms]
  I0423 19:14:49.094576 25 service_latency.go:356] Created: latency-svc-tvsvc
  I0423 19:14:49.104364 25 service_latency.go:363] Got endpoints: latency-svc-tvsvc [202.957925ms]
  I0423 19:14:49.176119 25 service_latency.go:356] Created: latency-svc-pwznn
  I0423 19:14:49.205037 25 service_latency.go:356] Created: latency-svc-t5n8h
  I0423 19:14:49.208204 25 service_latency.go:363] Got endpoints: latency-svc-pwznn [261.063497ms]
  I0423 19:14:49.210413 25 service_latency.go:356] Created: latency-svc-k8xnl
  I0423 19:14:49.211537 25 service_latency.go:356] Created: latency-svc-9p7qt
  I0423 19:14:49.212177 25 service_latency.go:356] Created: latency-svc-7kpkm
  I0423 19:14:49.212747 25 service_latency.go:356] Created: latency-svc-rmrg5
  I0423 19:14:49.213242 25 service_latency.go:356] Created: latency-svc-h6z8x
  I0423 19:14:49.214645 25 service_latency.go:356] Created: latency-svc-lpkt8
  I0423 19:14:49.221006 25 service_latency.go:356] Created: latency-svc-57n2b
  I0423 19:14:49.221862 25 service_latency.go:356] Created: latency-svc-jdj72
  I0423 19:14:49.222567 25 service_latency.go:356] Created: latency-svc-gfwld
  I0423 19:14:49.224123 25 service_latency.go:356] Created: latency-svc-6gh8b
  I0423 19:14:49.225063 25 service_latency.go:356] Created: latency-svc-qnc9f
  I0423 19:14:49.226748 25 service_latency.go:356] Created: latency-svc-lmt88
  I0423 19:14:49.226888 25 service_latency.go:356] Created: latency-svc-8hhms
  I0423 19:14:49.228462 25 service_latency.go:363] Got endpoints: latency-svc-8hhms [256.085255ms]
  I0423 19:14:49.238107 25 service_latency.go:363] Got endpoints: latency-svc-t5n8h [165.451699ms]
  I0423 19:14:49.238615 25 service_latency.go:356] Created: latency-svc-5nnlk
  I0423 19:14:49.251446 25 service_latency.go:363] Got endpoints: latency-svc-7kpkm [258.372429ms]
  I0423 19:14:49.251744 25 service_latency.go:363] Got endpoints: latency-svc-rmrg5 [247.246237ms]
  I0423 19:14:49.258670 25 service_latency.go:356] Created: latency-svc-4pcv8
  I0423 19:14:49.270429 25 service_latency.go:356] Created: latency-svc-25q5l
  I0423 19:14:49.277761 25 service_latency.go:356] Created: latency-svc-4q6lx
  I0423 19:14:49.291940 25 service_latency.go:356] Created: latency-svc-zdkm4
  I0423 19:14:49.297215 25 service_latency.go:363] Got endpoints: latency-svc-lpkt8 [320.966813ms]
  I0423 19:14:49.307814 25 service_latency.go:356] Created: latency-svc-vtj7d
  I0423 19:14:49.346978 25 service_latency.go:363] Got endpoints: latency-svc-k8xnl [242.545225ms]
  I0423 19:14:49.363322 25 service_latency.go:356] Created: latency-svc-wh97g
  I0423 19:14:49.396160 25 service_latency.go:363] Got endpoints: latency-svc-h6z8x [380.487322ms]
  I0423 19:14:49.413910 25 service_latency.go:356] Created: latency-svc-xzhs5
  I0423 19:14:49.449321 25 service_latency.go:363] Got endpoints: latency-svc-9p7qt [427.87172ms]
  I0423 19:14:49.465625 25 service_latency.go:356] Created: latency-svc-96n7g
  I0423 19:14:49.501055 25 service_latency.go:363] Got endpoints: latency-svc-jdj72 [456.30498ms]
  I0423 19:14:49.520572 25 service_latency.go:356] Created: latency-svc-lc6n5
  I0423 19:14:49.551371 25 service_latency.go:363] Got endpoints: latency-svc-57n2b [463.354654ms]
  I0423 19:14:49.570181 25 service_latency.go:356] Created: latency-svc-xhdpw
  I0423 19:14:49.603364 25 service_latency.go:363] Got endpoints: latency-svc-lmt88 [656.257732ms]
  I0423 19:14:49.618116 25 service_latency.go:356] Created: latency-svc-v9w2z
  I0423 19:14:49.651007 25 service_latency.go:363] Got endpoints: latency-svc-gfwld [588.710208ms]
  I0423 19:14:49.668257 25 service_latency.go:356] Created: latency-svc-k5ktd
  I0423 19:14:49.696999 25 service_latency.go:363] Got endpoints: latency-svc-6gh8b [633.957031ms]
  I0423 19:14:49.723115 25 service_latency.go:356] Created: latency-svc-x7zs5
  I0423 19:14:49.750853 25 service_latency.go:363] Got endpoints: latency-svc-qnc9f [833.663048ms]
  I0423 19:14:49.772481 25 service_latency.go:356] Created: latency-svc-tpsx9
  I0423 19:14:49.802852 25 service_latency.go:363] Got endpoints: latency-svc-5nnlk [593.778629ms]
  I0423 19:14:49.818486 25 service_latency.go:356] Created: latency-svc-l2hqw
  I0423 19:14:49.846133 25 service_latency.go:363] Got endpoints: latency-svc-4pcv8 [617.121961ms]
  I0423 19:14:49.865105 25 service_latency.go:356] Created: latency-svc-q2ltt
  I0423 19:14:49.900205 25 service_latency.go:363] Got endpoints: latency-svc-25q5l [661.781354ms]
  I0423 19:14:49.918407 25 service_latency.go:356] Created: latency-svc-fl4lq
  I0423 19:14:49.950273 25 service_latency.go:363] Got endpoints: latency-svc-4q6lx [698.771996ms]
  I0423 19:14:49.970261 25 service_latency.go:356] Created: latency-svc-vsg2t
  I0423 19:14:49.996818 25 service_latency.go:363] Got endpoints: latency-svc-zdkm4 [745.009839ms]
  I0423 19:14:50.020257 25 service_latency.go:356] Created: latency-svc-xh484
  I0423 19:14:50.052748 25 service_latency.go:363] Got endpoints: latency-svc-vtj7d [755.47829ms]
  I0423 19:14:50.067464 25 service_latency.go:356] Created: latency-svc-bmmsr
  I0423 19:14:50.097119 25 service_latency.go:363] Got endpoints: latency-svc-wh97g [750.054262ms]
  I0423 19:14:50.114238 25 service_latency.go:356] Created: latency-svc-crrh2
  I0423 19:14:50.149502 25 service_latency.go:363] Got endpoints: latency-svc-xzhs5 [752.473629ms]
  I0423 19:14:50.169709 25 service_latency.go:356] Created: latency-svc-x5qj8
  I0423 19:14:50.196296 25 service_latency.go:363] Got endpoints: latency-svc-96n7g [746.906649ms]
  I0423 19:14:50.212353 25 service_latency.go:356] Created: latency-svc-gxktf
  I0423 19:14:50.250463 25 service_latency.go:363] Got endpoints: latency-svc-lc6n5 [749.33405ms]
  I0423 19:14:50.266155 25 service_latency.go:356] Created: latency-svc-z79rg
  I0423 19:14:50.304347 25 service_latency.go:363] Got endpoints: latency-svc-xhdpw [752.899245ms]
  I0423 19:14:50.319137 25 service_latency.go:356] Created: latency-svc-zwhnk
  I0423 19:14:50.346468 25 service_latency.go:363] Got endpoints: latency-svc-v9w2z [742.812889ms]
  I0423 19:14:50.365996 25 service_latency.go:356] Created: latency-svc-v22n7
  I0423 19:14:50.405305 25 service_latency.go:363] Got endpoints: latency-svc-k5ktd [754.212622ms]
  I0423 19:14:50.420255 25 service_latency.go:356] Created: latency-svc-gjhcv
  I0423 19:14:50.446702 25 service_latency.go:363] Got endpoints: latency-svc-x7zs5 [749.623821ms]
  I0423 19:14:50.470202 25 service_latency.go:356] Created: latency-svc-77wdp
  I0423 19:14:50.499558 25 service_latency.go:363] Got endpoints: latency-svc-tpsx9 [748.591087ms]
  I0423 19:14:50.520248 25 service_latency.go:356] Created: latency-svc-j2lnn
  I0423 19:14:50.550535 25 service_latency.go:363] Got endpoints: latency-svc-l2hqw [746.347336ms]
  I0423 19:14:50.567010 25 service_latency.go:356] Created: latency-svc-jkknk
  I0423 19:14:50.607370 25 service_latency.go:363] Got endpoints: latency-svc-q2ltt [761.122507ms]
  I0423 19:14:50.625036 25 service_latency.go:356] Created: latency-svc-gnz57
  I0423 19:14:50.646812 25 service_latency.go:363] Got endpoints: latency-svc-fl4lq [746.531301ms]
  I0423 19:14:50.660037 25 service_latency.go:356] Created: latency-svc-bvtrx
  I0423 19:14:50.699813 25 service_latency.go:363] Got endpoints: latency-svc-vsg2t [749.259287ms]
  I0423 19:14:50.718346 25 service_latency.go:356] Created: latency-svc-kwghw
  I0423 19:14:50.748547 25 service_latency.go:363] Got endpoints: latency-svc-xh484 [751.502689ms]
  I0423 19:14:50.767419 25 service_latency.go:356] Created: latency-svc-x4x2h
  I0423 19:14:50.800449 25 service_latency.go:363] Got endpoints: latency-svc-bmmsr [747.405083ms]
  I0423 19:14:50.816447 25 service_latency.go:356] Created: latency-svc-9xv4r
  I0423 19:14:50.851279 25 service_latency.go:363] Got endpoints: latency-svc-crrh2 [754.078508ms]
  I0423 19:14:50.865226 25 service_latency.go:356] Created: latency-svc-s9tnf
  I0423 19:14:50.901341 25 service_latency.go:363] Got endpoints: latency-svc-x5qj8 [751.37296ms]
  I0423 19:14:50.917303 25 service_latency.go:356] Created: latency-svc-5m2tp
  I0423 19:14:50.948123 25 service_latency.go:363] Got endpoints: latency-svc-gxktf [751.634657ms]
  I0423 19:14:50.966302 25 service_latency.go:356] Created: latency-svc-frl5t
  I0423 19:14:50.996341 25 service_latency.go:363] Got endpoints: latency-svc-z79rg [745.801337ms]
  I0423 19:14:51.014402 25 service_latency.go:356] Created: latency-svc-5stck
  I0423 19:14:51.056024 25 service_latency.go:363] Got endpoints: latency-svc-zwhnk [751.599106ms]
  I0423 19:14:51.074106 25 service_latency.go:356] Created: latency-svc-nrx4t
  I0423 19:14:51.100094 25 service_latency.go:363] Got endpoints: latency-svc-v22n7 [753.535152ms]
  I0423 19:14:51.120560 25 service_latency.go:356] Created: latency-svc-zgk6v
  I0423 19:14:51.147632 25 service_latency.go:363] Got endpoints: latency-svc-gjhcv [742.25158ms]
  I0423 19:14:51.167645 25 service_latency.go:356] Created: latency-svc-ctfms
  I0423 19:14:51.200019 25 service_latency.go:363] Got endpoints: latency-svc-77wdp [753.204128ms]
  I0423 19:14:51.218902 25 service_latency.go:356] Created: latency-svc-5fpts
  I0423 19:14:51.252512 25 service_latency.go:363] Got endpoints: latency-svc-j2lnn [752.890505ms]
  I0423 19:14:51.271266 25 service_latency.go:356] Created: latency-svc-47sg9
  I0423 19:14:51.299479 25 service_latency.go:363] Got endpoints: latency-svc-jkknk [748.848712ms]
  I0423 19:14:51.316380 25 service_latency.go:356] Created: latency-svc-jgzr4
  I0423 19:14:51.347293 25 service_latency.go:363] Got endpoints: latency-svc-gnz57 [739.749353ms]
  I0423 19:14:51.367544 25 service_latency.go:356] Created: latency-svc-5rszb
  I0423 19:14:51.397042 25 service_latency.go:363] Got endpoints: latency-svc-bvtrx [750.158826ms]
  I0423 19:14:51.418919 25 service_latency.go:356] Created: latency-svc-f2jlc
  I0423 19:14:51.448452 25 service_latency.go:363] Got endpoints: latency-svc-kwghw [747.255073ms]
  I0423 19:14:51.468205 25 service_latency.go:356] Created: latency-svc-8pg4p
  I0423 19:14:51.499279 25 service_latency.go:363] Got endpoints: latency-svc-x4x2h [749.856756ms]
  I0423 19:14:51.519484 25 service_latency.go:356] Created: latency-svc-65tgf
  I0423 19:14:51.553337 25 service_latency.go:363] Got endpoints: latency-svc-9xv4r [752.234345ms]
  I0423 19:14:51.576271 25 service_latency.go:356] Created: latency-svc-6l9qz
  I0423 19:14:51.599580 25 service_latency.go:363] Got endpoints: latency-svc-s9tnf [748.216209ms]
  I0423 19:14:51.620208 25 service_latency.go:356] Created: latency-svc-2vdcc
  I0423 19:14:51.654095 25 service_latency.go:363] Got endpoints: latency-svc-5m2tp [752.668026ms]
  I0423 19:14:51.669324 25 service_latency.go:356] Created: latency-svc-9vqqf
  I0423 19:14:51.697738 25 service_latency.go:363] Got endpoints: latency-svc-frl5t [749.315068ms]
  I0423 19:14:51.720390 25 service_latency.go:356] Created: latency-svc-jjflt
  I0423 19:14:51.746966 25 service_latency.go:363] Got endpoints: latency-svc-5stck [750.167803ms]
  I0423 19:14:51.772061 25 service_latency.go:356] Created: latency-svc-t62rh
  I0423 19:14:51.803375 25 service_latency.go:363] Got endpoints: latency-svc-nrx4t [746.999139ms]
  I0423 19:14:51.822603 25 service_latency.go:356] Created: latency-svc-nklgv
  I0423 19:14:51.851067 25 service_latency.go:363] Got endpoints: latency-svc-zgk6v [750.842096ms]
  I0423 19:14:51.874867 25 service_latency.go:356] Created: latency-svc-n7sp4
  I0423 19:14:51.900282 25 service_latency.go:363] Got endpoints: latency-svc-ctfms [752.451347ms]
  I0423 19:14:51.914753 25 service_latency.go:356] Created: latency-svc-nwdz9
  I0423 19:14:51.955491 25 service_latency.go:363] Got endpoints: latency-svc-5fpts [755.390662ms]
  I0423 19:14:51.973892 25 service_latency.go:356] Created: latency-svc-s56hd
  I0423 19:14:51.997267 25 service_latency.go:363] Got endpoints: latency-svc-47sg9 [744.376178ms]
  I0423 19:14:52.011537 25 service_latency.go:356] Created: latency-svc-s449j
  I0423 19:14:52.050358 25 service_latency.go:363] Got endpoints: latency-svc-jgzr4 [750.797422ms]
  I0423 19:14:52.066396 25 service_latency.go:356] Created: latency-svc-m5wdj
  I0423 19:14:52.104639 25 service_latency.go:363] Got endpoints: latency-svc-5rszb [757.26875ms]
  I0423 19:14:52.123144 25 service_latency.go:356] Created: latency-svc-6rtss
  I0423 19:14:52.149579 25 service_latency.go:363] Got endpoints: latency-svc-f2jlc [752.455704ms]
  I0423 19:14:52.164885 25 service_latency.go:356] Created: latency-svc-ksjld
  I0423 19:14:52.200105 25 service_latency.go:363] Got endpoints: latency-svc-8pg4p [751.299462ms]
  I0423 19:14:52.217507 25 service_latency.go:356] Created: latency-svc-8scqj
  I0423 19:14:52.245940 25 service_latency.go:363] Got endpoints: latency-svc-65tgf [746.477278ms]
  I0423 19:14:52.264264 25 service_latency.go:356] Created: latency-svc-djzhz
  I0423 19:14:52.300885 25 service_latency.go:363] Got endpoints: latency-svc-6l9qz [747.476022ms]
  I0423 19:14:52.314537 25 service_latency.go:356] Created: latency-svc-gt8r5
  I0423 19:14:52.346122 25 service_latency.go:363] Got endpoints: latency-svc-2vdcc [746.468744ms]
  I0423 19:14:52.362248 25 service_latency.go:356] Created: latency-svc-274jq
  I0423 19:14:52.393910 25 service_latency.go:363] Got endpoints: latency-svc-9vqqf [739.712282ms]
  I0423 19:14:52.408029 25 service_latency.go:356] Created: latency-svc-crfn7
  I0423 19:14:52.452344 25 service_latency.go:363] Got endpoints: latency-svc-jjflt [754.525903ms]
  I0423 19:14:52.466700 25 service_latency.go:356] Created: latency-svc-l9rr7
  I0423 19:14:52.502962 25 service_latency.go:363] Got endpoints: latency-svc-t62rh [755.915188ms]
  I0423 19:14:52.521992 25 service_latency.go:356] Created: latency-svc-bgqxx
  I0423 19:14:52.547935 25 service_latency.go:363] Got endpoints: latency-svc-nklgv [744.336325ms]
  I0423 19:14:52.567117 25 service_latency.go:356] Created: latency-svc-47bnk
  I0423 19:14:52.603558 25 service_latency.go:363] Got endpoints: latency-svc-n7sp4 [752.415085ms]
  I0423 19:14:52.614300 25 service_latency.go:356] Created: latency-svc-czgcg
  I0423 19:14:52.658010 25 service_latency.go:363] Got endpoints: latency-svc-nwdz9 [757.648834ms]
  I0423 19:14:52.679943 25 service_latency.go:356] Created: latency-svc-smxv9
  I0423 19:14:52.699825 25 service_latency.go:363] Got endpoints: latency-svc-s56hd [744.24901ms]
  I0423 19:14:52.732404 25 service_latency.go:356] Created: latency-svc-l9llt
  I0423 19:14:52.776696 25 service_latency.go:363] Got endpoints: latency-svc-s449j [779.320147ms]
  I0423 19:14:52.813738 25 service_latency.go:363] Got endpoints: latency-svc-m5wdj [763.298838ms]
  I0423 19:14:52.827515 25 service_latency.go:356] Created: latency-svc-5pkq5
  I0423 19:14:52.848773 25 service_latency.go:363] Got endpoints: latency-svc-6rtss [744.046522ms]
  I0423 19:14:52.856482 25 service_latency.go:356] Created: latency-svc-4d75c
  I0423 19:14:52.879074 25 service_latency.go:356] Created: latency-svc-9kdk5
  I0423 19:14:52.899420 25 service_latency.go:363] Got endpoints: latency-svc-ksjld [749.632916ms]
  I0423 19:14:52.923282 25 service_latency.go:356] Created: latency-svc-h2kbr
  I0423 19:14:52.955424 25 service_latency.go:363] Got endpoints: latency-svc-8scqj [755.244007ms]
  I0423 19:14:52.970836 25 service_latency.go:356] Created: latency-svc-chz87
  I0423 19:14:53.006297 25 service_latency.go:363] Got endpoints: latency-svc-djzhz [760.255988ms]
  I0423 19:14:53.033097 25 service_latency.go:356] Created: latency-svc-jxtm9
  I0423 19:14:53.059804 25 service_latency.go:363] Got endpoints: latency-svc-gt8r5 [758.724302ms]
  I0423 19:14:53.099691 25 service_latency.go:356] Created: latency-svc-xw7dt
  I0423 19:14:53.114188 25 service_latency.go:363] Got endpoints: latency-svc-274jq [767.522156ms]
  I0423 19:14:53.167152 25 service_latency.go:363] Got endpoints: latency-svc-crfn7 [772.961053ms]
  I0423 19:14:53.173723 25 service_latency.go:356] Created: latency-svc-qsmwf
  I0423 19:14:53.203030 25 service_latency.go:363] Got endpoints: latency-svc-l9rr7 [750.389912ms]
  I0423 19:14:53.204227 25 service_latency.go:356] Created: latency-svc-sn7cz
  I0423 19:14:53.225438 25 service_latency.go:356] Created: latency-svc-rs842
  I0423 19:14:53.269809 25 service_latency.go:363] Got endpoints: latency-svc-bgqxx [766.321589ms]
  I0423 19:14:53.300621 25 service_latency.go:363] Got endpoints: latency-svc-47bnk [751.791859ms]
  I0423 19:14:53.313301 25 service_latency.go:356] Created: latency-svc-cpf8p
  I0423 19:14:53.334769 25 service_latency.go:356] Created: latency-svc-z4kwf
  I0423 19:14:53.359841 25 service_latency.go:363] Got endpoints: latency-svc-czgcg [756.217664ms]
  I0423 19:14:53.395190 25 service_latency.go:356] Created: latency-svc-flx4b
  I0423 19:14:53.402131 25 service_latency.go:363] Got endpoints: latency-svc-smxv9 [742.419227ms]
  I0423 19:14:53.438537 25 service_latency.go:356] Created: latency-svc-vq2h6
  I0423 19:14:53.449654 25 service_latency.go:363] Got endpoints: latency-svc-l9llt [745.241688ms]
  I0423 19:14:53.469238 25 service_latency.go:356] Created: latency-svc-5n5l6
  I0423 19:14:53.502017 25 service_latency.go:363] Got endpoints: latency-svc-5pkq5 [724.928495ms]
  I0423 19:14:53.525670 25 service_latency.go:356] Created: latency-svc-82p4l
  I0423 19:14:53.550047 25 service_latency.go:363] Got endpoints: latency-svc-4d75c [736.193574ms]
  I0423 19:14:53.587783 25 service_latency.go:356] Created: latency-svc-l7g8r
  I0423 19:14:53.606973 25 service_latency.go:363] Got endpoints: latency-svc-9kdk5 [758.072247ms]
  I0423 19:14:53.663816 25 service_latency.go:356] Created: latency-svc-k56kz
  I0423 19:14:53.670335 25 service_latency.go:363] Got endpoints: latency-svc-h2kbr [770.865403ms]
  I0423 19:14:53.705471 25 service_latency.go:356] Created: latency-svc-5565g
  I0423 19:14:53.717754 25 service_latency.go:363] Got endpoints: latency-svc-chz87 [762.226806ms]
  I0423 19:14:53.742238 25 service_latency.go:356] Created: latency-svc-zfrk9
  I0423 19:14:53.756026 25 service_latency.go:363] Got endpoints: latency-svc-jxtm9 [749.567269ms]
  I0423 19:14:53.788366 25 service_latency.go:356] Created: latency-svc-bwsnn
  I0423 19:14:53.805043 25 service_latency.go:363] Got endpoints: latency-svc-xw7dt [744.836163ms]
  I0423 19:14:53.826206 25 service_latency.go:356] Created: latency-svc-9ztls
  I0423 19:14:53.851799 25 service_latency.go:363] Got endpoints: latency-svc-qsmwf [737.490144ms]
  I0423 19:14:53.878846 25 service_latency.go:356] Created: latency-svc-2smtc
  I0423 19:14:53.898149 25 service_latency.go:363] Got endpoints: latency-svc-sn7cz [730.899158ms]
  I0423 19:14:53.914311 25 service_latency.go:356] Created: latency-svc-w2685
  I0423 19:14:53.955231 25 service_latency.go:363] Got endpoints: latency-svc-rs842 [751.484494ms]
  I0423 19:14:53.981622 25 service_latency.go:356] Created: latency-svc-6jwsj
  I0423 19:14:53.997433 25 service_latency.go:363] Got endpoints: latency-svc-cpf8p [727.365135ms]
  I0423 19:14:54.030287 25 service_latency.go:356] Created: latency-svc-w5cgc
  I0423 19:14:54.054511 25 service_latency.go:363] Got endpoints: latency-svc-z4kwf [753.841243ms]
  I0423 19:14:54.064120 25 service_latency.go:356] Created: latency-svc-2d4jd
  I0423 19:14:54.098996 25 service_latency.go:363] Got endpoints: latency-svc-flx4b [739.065836ms]
  I0423 19:14:54.110024 25 service_latency.go:356] Created: latency-svc-f2nph
  I0423 19:14:54.145636 25 service_latency.go:363] Got endpoints: latency-svc-vq2h6 [743.44958ms]
  I0423 19:14:54.167069 25 service_latency.go:356] Created: latency-svc-vf778
  I0423 19:14:54.200003 25 service_latency.go:363] Got endpoints: latency-svc-5n5l6 [750.216758ms]
  I0423 19:14:54.209125 25 service_latency.go:356] Created: latency-svc-q6ppp
  I0423 19:14:54.254201 25 service_latency.go:363] Got endpoints: latency-svc-82p4l [752.098918ms]
  I0423 19:14:54.273106 25 service_latency.go:356] Created: latency-svc-r4brm
  I0423 19:14:54.301236 25 service_latency.go:363] Got endpoints: latency-svc-l7g8r [751.124923ms]
  I0423 19:14:54.318066 25 service_latency.go:356] Created: latency-svc-9ssgs
  I0423 19:14:54.355329 25 service_latency.go:363] Got endpoints: latency-svc-k56kz [748.290438ms]
  I0423 19:14:54.373376 25 service_latency.go:356] Created: latency-svc-9jdss
  I0423 19:14:54.397277 25 service_latency.go:363] Got endpoints: latency-svc-5565g [726.888082ms]
  I0423 19:14:54.429369 25 service_latency.go:356] Created: latency-svc-9xb4b
  I0423 19:14:54.446210 25 service_latency.go:363] Got endpoints: latency-svc-zfrk9 [727.492431ms]
  I0423 19:14:54.461319 25 service_latency.go:356] Created: latency-svc-49wfz
  I0423 19:14:54.498689 25 service_latency.go:363] Got endpoints: latency-svc-bwsnn [742.38655ms]
  I0423 19:14:54.514778 25 service_latency.go:356] Created: latency-svc-k446j
  I0423 19:14:54.550794 25 service_latency.go:363] Got endpoints: latency-svc-9ztls [745.687826ms]
  I0423 19:14:54.577550 25 service_latency.go:356] Created: latency-svc-7c82s
  I0423 19:14:54.598705 25 service_latency.go:363] Got endpoints: latency-svc-2smtc [746.784932ms]
  I0423 19:14:54.606981 25 service_latency.go:356] Created: latency-svc-65hc9
  I0423 19:14:54.648729 25 service_latency.go:363] Got endpoints: latency-svc-w2685 [750.455784ms]
  I0423 19:14:54.666151 25 service_latency.go:356] Created: latency-svc-xj97r
  I0423 19:14:54.702621 25 service_latency.go:363] Got endpoints: latency-svc-6jwsj [747.279995ms]
  I0423 19:14:54.732421 25 service_latency.go:356] Created: latency-svc-stvvm
  I0423 19:14:54.747824 25 service_latency.go:363] Got endpoints: latency-svc-w5cgc [749.94212ms]
  I0423 19:14:54.770691 25 service_latency.go:356] Created: latency-svc-vzt5j
  I0423 19:14:54.798715 25 service_latency.go:363] Got endpoints: latency-svc-2d4jd [744.154417ms]
  I0423 19:14:54.810785 25 service_latency.go:356] Created: latency-svc-b225f
  I0423 19:14:54.852970 25 service_latency.go:363] Got endpoints: latency-svc-f2nph [753.748902ms]
  I0423 19:14:54.869003 25 service_latency.go:356] Created: latency-svc-t9v8n
  I0423 19:14:54.901654 25 service_latency.go:363] Got endpoints: latency-svc-vf778 [755.952225ms]
  I0423 19:14:54.923671 25 service_latency.go:356] Created: latency-svc-2gjw9
  I0423 19:14:54.954516 25 service_latency.go:363] Got endpoints: latency-svc-q6ppp [754.400024ms]
  I0423 19:14:54.982318 25 service_latency.go:356] Created: latency-svc-nc8r9
  I0423 19:14:54.997608 25 service_latency.go:363] Got endpoints: latency-svc-r4brm [743.283514ms]
  I0423 19:14:55.013010 25 service_latency.go:356] Created: latency-svc-7dkbh
  I0423 19:14:55.053778 25 service_latency.go:363] Got endpoints: latency-svc-9ssgs [752.04532ms]
  I0423 19:14:55.067734 25 service_latency.go:356] Created: latency-svc-86s8p
  I0423 19:14:55.096119 25 service_latency.go:363] Got endpoints: latency-svc-9jdss [740.71311ms]
  I0423 19:14:55.116861 25 service_latency.go:356] Created: latency-svc-tzmcb
  I0423 19:14:55.148249 25 service_latency.go:363] Got endpoints: latency-svc-9xb4b [750.89759ms]
  I0423 19:14:55.171434 25 service_latency.go:356] Created: latency-svc-tz5l6
  I0423 19:14:55.199921 25 service_latency.go:363] Got endpoints: latency-svc-49wfz [753.630382ms]
  I0423 19:14:55.216178 25 service_latency.go:356] Created: latency-svc-pdph4
  I0423 19:14:55.252783 25 service_latency.go:363] Got endpoints: latency-svc-k446j [754.018264ms]
  I0423 19:14:55.268678 25 service_latency.go:356] Created: latency-svc-6pdqp
  I0423 19:14:55.301700 25 service_latency.go:363] Got endpoints: latency-svc-7c82s [750.789151ms]
  I0423 19:14:55.319878 25 service_latency.go:356] Created: latency-svc-hwg2n
  I0423 19:14:55.347229 25 service_latency.go:363] Got endpoints: latency-svc-65hc9 [748.468723ms]
  I0423 19:14:55.365557 25 service_latency.go:356] Created: latency-svc-9gw8b
  I0423 19:14:55.402051 25 service_latency.go:363] Got endpoints: latency-svc-xj97r [752.997456ms]
  I0423 19:14:55.425284 25 service_latency.go:356] Created: latency-svc-z2vsn
  I0423 19:14:55.450498 25 service_latency.go:363] Got endpoints: latency-svc-stvvm [747.774169ms]
  I0423 19:14:55.465226 25 service_latency.go:356] Created: latency-svc-8jn8t
  I0423 19:14:55.504862 25 service_latency.go:363] Got endpoints: latency-svc-vzt5j [756.728603ms]
  I0423 19:14:55.519880 25 service_latency.go:356] Created: latency-svc-mbrqq
  I0423 19:14:55.550453 25 service_latency.go:363] Got endpoints: latency-svc-b225f [751.678788ms]
  I0423 19:14:55.576504 25 service_latency.go:356] Created: latency-svc-qzrvp
  I0423 19:14:55.605766 25 service_latency.go:363] Got endpoints: latency-svc-t9v8n [752.688301ms]
  I0423 19:14:55.625278 25 service_latency.go:356] Created: latency-svc-szsql
  I0423 19:14:55.646668 25 service_latency.go:363] Got endpoints: latency-svc-2gjw9 [744.922424ms]
  I0423 19:14:55.659480 25 service_latency.go:356] Created: latency-svc-c979v
  I0423 19:14:55.696362 25 service_latency.go:363] Got endpoints: latency-svc-nc8r9 [741.51219ms]
  I0423 19:14:55.706141 25 service_latency.go:356] Created: latency-svc-js8x9
  I0423 19:14:55.745184 25 service_latency.go:363] Got endpoints: latency-svc-7dkbh [747.483192ms]
  I0423 19:14:55.755928 25 service_latency.go:356] Created: latency-svc-nht4g
  I0423 19:14:55.800284 25 service_latency.go:363] Got endpoints: latency-svc-86s8p [745.816345ms]
  I0423 19:14:55.809905 25 service_latency.go:356] Created: latency-svc-dpptf
  I0423 19:14:55.844348 25 service_latency.go:363] Got endpoints: latency-svc-tzmcb [748.069995ms]
  I0423 19:14:55.855587 25 service_latency.go:356] Created: latency-svc-2htc9
  I0423 19:14:55.895192 25 service_latency.go:363] Got endpoints: latency-svc-tz5l6 [746.870325ms]
  I0423 19:14:55.909142 25 service_latency.go:356] Created: latency-svc-g79j5
  I0423 19:14:55.948357 25 service_latency.go:363] Got endpoints: latency-svc-pdph4 [747.880813ms]
  I0423 19:14:55.957930 25 service_latency.go:356] Created: latency-svc-tcl4t
  I0423 19:14:55.996863 25 service_latency.go:363] Got endpoints: latency-svc-6pdqp [743.953999ms]
  I0423 19:14:56.006346 25 service_latency.go:356] Created: latency-svc-2hgsd
  I0423 19:14:56.046028 25 service_latency.go:363] Got endpoints: latency-svc-hwg2n [744.231014ms]
  I0423 19:14:56.054205 25 service_latency.go:356] Created: latency-svc-dctfq
  I0423 19:14:56.113899 25 service_latency.go:363] Got endpoints: latency-svc-9gw8b [766.301278ms]
  I0423 19:14:56.155662 25 service_latency.go:363] Got endpoints: latency-svc-z2vsn [753.516389ms]
  I0423 19:14:56.165486 25 service_latency.go:356] Created: latency-svc-gmcwp
  I0423 19:14:56.180825 25 service_latency.go:356] Created: latency-svc-xwwcn
  I0423 19:14:56.195644 25 service_latency.go:363] Got endpoints: latency-svc-8jn8t [745.075102ms]
  I0423 19:14:56.208159 25 service_latency.go:356] Created: latency-svc-8j6cd
  I0423 19:14:56.246367 25 service_latency.go:363] Got endpoints: latency-svc-mbrqq [741.420135ms]
  I0423 19:14:56.260007 25 service_latency.go:356] Created: latency-svc-l4x7n
  I0423 19:14:56.302177 25 service_latency.go:363] Got endpoints: latency-svc-qzrvp [750.093578ms]
  I0423 19:14:56.313176 25 service_latency.go:356] Created: latency-svc-nfxrh
  I0423 19:14:56.346909 25 service_latency.go:363] Got endpoints: latency-svc-szsql [740.909661ms]
  I0423 19:14:56.359595 25 service_latency.go:356] Created: latency-svc-cvv27
  I0423 19:14:56.400290 25 service_latency.go:363] Got endpoints: latency-svc-c979v [753.493799ms]
  I0423 19:14:56.446929 25 service_latency.go:363] Got endpoints: latency-svc-js8x9 [750.395773ms]
  I0423 19:14:56.494206 25 service_latency.go:363] Got endpoints: latency-svc-nht4g [748.967188ms]
  I0423 19:14:56.549486 25 service_latency.go:363] Got endpoints: latency-svc-dpptf [749.151885ms]
  I0423 19:14:56.600642 25 service_latency.go:363] Got endpoints: latency-svc-2htc9 [756.175272ms]
  I0423 19:14:56.649627 25 service_latency.go:363] Got endpoints: latency-svc-g79j5 [754.379795ms]
  I0423 19:14:56.701379 25 service_latency.go:363] Got endpoints: latency-svc-tcl4t [752.972379ms]
  I0423 19:14:56.743843 25 service_latency.go:363] Got endpoints: latency-svc-2hgsd [746.914229ms]
  I0423 19:14:56.804000 25 service_latency.go:363] Got endpoints: latency-svc-dctfq [757.78378ms]
  I0423 19:14:56.849502 25 service_latency.go:363] Got endpoints: latency-svc-gmcwp [735.556948ms]
  I0423 19:14:56.901675 25 service_latency.go:363] Got endpoints: latency-svc-xwwcn [745.863506ms]
  I0423 19:14:56.946478 25 service_latency.go:363] Got endpoints: latency-svc-8j6cd [750.767431ms]
  I0423 19:14:57.006867 25 service_latency.go:363] Got endpoints: latency-svc-l4x7n [760.41779ms]
  I0423 19:14:57.052717 25 service_latency.go:363] Got endpoints: latency-svc-nfxrh [750.482027ms]
  I0423 19:14:57.105164 25 service_latency.go:363] Got endpoints: latency-svc-cvv27 [758.036317ms]
  I0423 19:14:57.106033 25 service_latency.go:114] Latencies: [48.821328ms 68.331273ms 71.581455ms 89.825418ms 96.629407ms 110.930842ms 126.63848ms 142.451959ms 149.510938ms 165.451699ms 168.006685ms 177.976541ms 188.292744ms 190.763024ms 193.463589ms 193.484863ms 193.562866ms 195.967098ms 196.212905ms 198.707731ms 199.161998ms 199.814248ms 202.957925ms 202.978665ms 203.119137ms 203.158077ms 204.294748ms 204.864103ms 204.870801ms 207.516092ms 208.779816ms 209.212188ms 214.680209ms 214.998848ms 217.394533ms 219.372772ms 220.73575ms 234.091219ms 237.193701ms 242.545225ms 247.246237ms 256.085255ms 258.372429ms 261.063497ms 320.966813ms 380.487322ms 427.87172ms 456.30498ms 463.354654ms 588.710208ms 593.778629ms 617.121961ms 633.957031ms 656.257732ms 661.781354ms 698.771996ms 724.928495ms 726.888082ms 727.365135ms 727.492431ms 730.899158ms 735.556948ms 736.193574ms 737.490144ms 739.065836ms 739.712282ms 739.749353ms 740.71311ms 740.909661ms 741.420135ms 741.51219ms 742.25158ms 742.38655ms 742.419227ms 742.812889ms 743.283514ms 743.44958ms 743.953999ms 744.046522ms 744.154417ms 744.231014ms 744.24901ms 744.336325ms 744.376178ms 744.836163ms 744.922424ms 745.009839ms 745.075102ms 745.241688ms 745.687826ms 745.801337ms 745.816345ms 745.863506ms 746.347336ms 746.468744ms 746.477278ms 746.531301ms 746.784932ms 746.870325ms 746.906649ms 746.914229ms 746.999139ms 747.255073ms 747.279995ms 747.405083ms 747.476022ms 747.483192ms 747.774169ms 747.880813ms 748.069995ms 748.216209ms 748.290438ms 748.468723ms 748.591087ms 748.848712ms 748.967188ms 749.151885ms 749.259287ms 749.315068ms 749.33405ms 749.567269ms 749.623821ms 749.632916ms 749.856756ms 749.94212ms 750.054262ms 750.093578ms 750.158826ms 750.167803ms 750.216758ms 750.389912ms 750.395773ms 750.455784ms 750.482027ms 750.767431ms 750.789151ms 750.797422ms 750.842096ms 750.89759ms 751.124923ms 751.299462ms 751.37296ms 751.484494ms 751.502689ms 751.599106ms 751.634657ms 751.678788ms 751.791859ms 752.04532ms 752.098918ms 752.234345ms 752.415085ms 752.451347ms 752.455704ms 752.473629ms 752.668026ms 752.688301ms 752.890505ms 752.899245ms 752.972379ms 752.997456ms 753.204128ms 753.493799ms 753.516389ms 753.535152ms 753.630382ms 753.748902ms 753.841243ms 754.018264ms 754.078508ms 754.212622ms 754.379795ms 754.400024ms 754.525903ms 755.244007ms 755.390662ms 755.47829ms 755.915188ms 755.952225ms 756.175272ms 756.217664ms 756.728603ms 757.26875ms 757.648834ms 757.78378ms 758.036317ms 758.072247ms 758.724302ms 760.255988ms 760.41779ms 761.122507ms 762.226806ms 763.298838ms 766.301278ms 766.321589ms 767.522156ms 770.865403ms 772.961053ms 779.320147ms 833.663048ms]
  I0423 19:14:57.106095 25 service_latency.go:118] 50 %ile: 746.914229ms
  I0423 19:14:57.106117 25 service_latency.go:119] 90 %ile: 756.217664ms
  I0423 19:14:57.106137 25 service_latency.go:120] 99 %ile: 779.320147ms
  I0423 19:14:57.106155 25 service_latency.go:121] Total sample count: 200
  I0423 19:14:57.106337 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1623" for this suite. @ 04/23/25 19:14:57.116
• [10.797 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 04/23/25 19:14:57.127
  I0423 19:14:57.127756 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 19:14:57.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:57.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:57.16
  STEP: Read namespace status @ 04/23/25 19:14:57.166
  I0423 19:14:57.172636 25 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/23/25 19:14:57.172
  I0423 19:14:57.182607 25 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/23/25 19:14:57.182
  I0423 19:14:57.199663 25 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0423 19:14:57.199884 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6778" for this suite. @ 04/23/25 19:14:57.215
• [0.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 04/23/25 19:14:57.225
  I0423 19:14:57.225522 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 19:14:57.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:14:57.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:14:57.262
  STEP: Creating a ResourceQuota with best effort scope @ 04/23/25 19:14:57.269
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 19:14:57.28
  STEP: Creating a ResourceQuota with not best effort scope @ 04/23/25 19:14:59.286
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 19:14:59.304
  STEP: Creating a best-effort pod @ 04/23/25 19:15:01.31
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/23/25 19:15:01.332
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/23/25 19:15:03.357
  STEP: Deleting the pod @ 04/23/25 19:15:05.36
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 19:15:05.388
  STEP: Creating a not best-effort pod @ 04/23/25 19:15:07.392
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/23/25 19:15:07.408
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/23/25 19:15:09.416
  STEP: Deleting the pod @ 04/23/25 19:15:11.421
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 19:15:11.456
  I0423 19:15:13.461844 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7351" for this suite. @ 04/23/25 19:15:13.468
• [16.253 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 04/23/25 19:15:13.478
  I0423 19:15:13.478518 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 19:15:13.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:15:13.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:15:13.528
  I0423 19:15:13.539135 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  W0423 19:15:16.125576      25 warnings.go:70] unknown field "alpha"
  W0423 19:15:16.125635      25 warnings.go:70] unknown field "beta"
  W0423 19:15:16.125657      25 warnings.go:70] unknown field "delta"
  W0423 19:15:16.125673      25 warnings.go:70] unknown field "epsilon"
  W0423 19:15:16.125688      25 warnings.go:70] unknown field "gamma"
  I0423 19:15:16.701740 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6158" for this suite. @ 04/23/25 19:15:16.708
• [3.239 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/23/25 19:15:16.72
  I0423 19:15:16.721118 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:15:16.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:15:16.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:15:16.75
  STEP: Creating secret with name secret-test-map-3f8c041f-41cd-49db-bc97-164dd3f96cdb @ 04/23/25 19:15:16.754
  STEP: Creating a pod to test consume secrets @ 04/23/25 19:15:16.759
  STEP: Saw pod success @ 04/23/25 19:15:20.799
  I0423 19:15:20.806233 25 output.go:196] Trying to get logs from node worker00 pod pod-secrets-8c34dd88-02b4-4096-a789-446221119439 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:15:20.818
  I0423 19:15:20.849346 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7448" for this suite. @ 04/23/25 19:15:20.858
• [4.151 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 04/23/25 19:15:20.871
  I0423 19:15:20.871610 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename disruption @ 04/23/25 19:15:20.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:15:20.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:15:20.898
  STEP: Waiting for the pdb to be processed @ 04/23/25 19:15:20.916
  STEP: Updating PodDisruptionBudget status @ 04/23/25 19:15:22.922
  STEP: Waiting for all pods to be running @ 04/23/25 19:15:22.946
  I0423 19:15:22.965540 25 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 04/23/25 19:15:24.96
  STEP: Waiting for the pdb to be processed @ 04/23/25 19:15:25.012
  STEP: Patching PodDisruptionBudget status @ 04/23/25 19:15:25.04
  STEP: Waiting for the pdb to be processed @ 04/23/25 19:15:25.059
  I0423 19:15:25.072964 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7561" for this suite. @ 04/23/25 19:15:25.084
• [4.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/23/25 19:15:25.107
  I0423 19:15:25.107296 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 19:15:25.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:15:25.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:15:25.152
  I0423 19:15:27.211749 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5845" for this suite. @ 04/23/25 19:15:27.219
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 04/23/25 19:15:27.237
  I0423 19:15:27.237169 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 19:15:27.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:15:27.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:15:27.271
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3049 @ 04/23/25 19:15:27.278
  STEP: changing the ExternalName service to type=ClusterIP @ 04/23/25 19:15:27.289
  STEP: creating replication controller externalname-service in namespace services-3049 @ 04/23/25 19:15:27.305
  I0423 19:15:27.339616      25 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3049, replica count: 2
  I0423 19:15:30.390660      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 19:15:30.390715 25 resource.go:361] Creating new exec pod
  I0423 19:15:33.412947 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-3049 exec execpod9ndgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 19:15:33.660988 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0423 19:15:33.661103 25 builder.go:147] stdout: "externalname-service-kb2vc"
  I0423 19:15:33.661229 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-3049 exec execpod9ndgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.143 80'
  I0423 19:15:33.823469 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.143 80\nConnection to 10.32.0.143 80 port [tcp/http] succeeded!\n"
  I0423 19:15:33.823573 25 builder.go:147] stdout: ""
  I0423 19:15:34.662395 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-3049 exec execpod9ndgq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.143 80'
  I0423 19:15:34.928587 25 builder.go:146] stderr: "+ nc -v -t -w 2 10.32.0.143 80\n+ echo hostName\nConnection to 10.32.0.143 80 port [tcp/http] succeeded!\n"
  I0423 19:15:34.928729 25 builder.go:147] stdout: "externalname-service-nk4xz"
  I0423 19:15:34.929399 25 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0423 19:15:34.966206 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3049" for this suite. @ 04/23/25 19:15:34.974
• [7.749 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/23/25 19:15:34.99
  I0423 19:15:34.990213 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 19:15:34.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:15:35.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:15:35.03
  STEP: getting /apis @ 04/23/25 19:15:35.034
  STEP: getting /apis/discovery.k8s.io @ 04/23/25 19:15:35.039
  STEP: getting /apis/discovery.k8s.iov1 @ 04/23/25 19:15:35.041
  STEP: creating @ 04/23/25 19:15:35.044
  STEP: getting @ 04/23/25 19:15:35.069
  STEP: listing @ 04/23/25 19:15:35.074
  STEP: watching @ 04/23/25 19:15:35.079
  I0423 19:15:35.079749 25 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 04/23/25 19:15:35.082
  STEP: cluster-wide watching @ 04/23/25 19:15:35.087
  I0423 19:15:35.087056 25 endpointslice.go:459] starting watch
  STEP: patching @ 04/23/25 19:15:35.089
  STEP: updating @ 04/23/25 19:15:35.098
  I0423 19:15:35.110690 25 endpointslice.go:482] waiting for watch events with expected annotations
  I0423 19:15:35.110793 25 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 04/23/25 19:15:35.111
  STEP: deleting a collection @ 04/23/25 19:15:35.125
  I0423 19:15:35.146335 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6734" for this suite. @ 04/23/25 19:15:35.152
• [0.170 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 04/23/25 19:15:35.16
  I0423 19:15:35.160348 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:15:35.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:15:35.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:15:35.191
  STEP: Setting up server cert @ 04/23/25 19:15:35.213
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:15:35.96
  STEP: Deploying the webhook pod @ 04/23/25 19:15:35.965
  STEP: Wait for the deployment to be ready @ 04/23/25 19:15:35.974
  I0423 19:15:35.979450 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:15:37.997
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:15:38.008
  I0423 19:15:39.008657 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/23/25 19:15:39.021
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 19:15:39.021
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/23/25 19:15:39.045
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/23/25 19:15:40.057
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 19:15:40.057
  STEP: Having no error when timeout is longer than webhook latency @ 04/23/25 19:15:41.102
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 19:15:41.102
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/23/25 19:15:46.177
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 19:15:46.177
  I0423 19:15:51.331782 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7358" for this suite. @ 04/23/25 19:15:51.338
  STEP: Destroying namespace "webhook-markers-1915" for this suite. @ 04/23/25 19:15:51.349
• [16.196 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 04/23/25 19:15:51.357
  I0423 19:15:51.357498 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 19:15:51.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:15:51.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:15:51.382
  STEP: creating service in namespace services-4132 @ 04/23/25 19:15:51.387
  STEP: creating service affinity-clusterip-transition in namespace services-4132 @ 04/23/25 19:15:51.387
  STEP: creating replication controller affinity-clusterip-transition in namespace services-4132 @ 04/23/25 19:15:51.406
  I0423 19:15:51.416206      25 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-4132, replica count: 3
  I0423 19:15:54.466642      25 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 19:15:54.474692 25 resource.go:361] Creating new exec pod
  I0423 19:15:57.508030 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4132 exec execpod-affinityp6djn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0423 19:15:57.761622 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0423 19:15:57.761704 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:15:57.761877 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4132 exec execpod-affinityp6djn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.145 80'
  I0423 19:15:58.010284 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.145 80\nConnection to 10.32.0.145 80 port [tcp/http] succeeded!\n"
  I0423 19:15:58.010382 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:15:58.032398 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4132 exec execpod-affinityp6djn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.145:80/ ; done'
  I0423 19:15:58.452701 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n"
  I0423 19:15:58.452774 25 builder.go:147] stdout: "\naffinity-clusterip-transition-lg4fz\naffinity-clusterip-transition-b66wp\naffinity-clusterip-transition-b66wp\naffinity-clusterip-transition-b66wp\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-b66wp\naffinity-clusterip-transition-lg4fz\naffinity-clusterip-transition-b66wp\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-lg4fz\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-lg4fz\naffinity-clusterip-transition-lg4fz\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-b66wp\naffinity-clusterip-transition-lg4fz"
  I0423 19:15:58.452825 25 service.go:242] Received response from host: affinity-clusterip-transition-lg4fz
  I0423 19:15:58.453171 25 service.go:242] Received response from host: affinity-clusterip-transition-b66wp
  I0423 19:15:58.453194 25 service.go:242] Received response from host: affinity-clusterip-transition-b66wp
  I0423 19:15:58.453460 25 service.go:242] Received response from host: affinity-clusterip-transition-b66wp
  I0423 19:15:58.455491 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.456413 25 service.go:242] Received response from host: affinity-clusterip-transition-b66wp
  I0423 19:15:58.456442 25 service.go:242] Received response from host: affinity-clusterip-transition-lg4fz
  I0423 19:15:58.456707 25 service.go:242] Received response from host: affinity-clusterip-transition-b66wp
  I0423 19:15:58.456730 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.456750 25 service.go:242] Received response from host: affinity-clusterip-transition-lg4fz
  I0423 19:15:58.456768 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.456874 25 service.go:242] Received response from host: affinity-clusterip-transition-lg4fz
  I0423 19:15:58.456895 25 service.go:242] Received response from host: affinity-clusterip-transition-lg4fz
  I0423 19:15:58.456914 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.457008 25 service.go:242] Received response from host: affinity-clusterip-transition-b66wp
  I0423 19:15:58.457027 25 service.go:242] Received response from host: affinity-clusterip-transition-lg4fz
  I0423 19:15:58.483674 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-4132 exec execpod-affinityp6djn -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.145:80/ ; done'
  I0423 19:15:58.864989 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.145:80/\n"
  I0423 19:15:58.865132 25 builder.go:147] stdout: "\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4\naffinity-clusterip-transition-wxpw4"
  I0423 19:15:58.865170 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865241 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865262 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865284 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865345 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865364 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865383 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865406 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865467 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865486 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865503 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865525 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865583 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865601 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865618 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865640 25 service.go:242] Received response from host: affinity-clusterip-transition-wxpw4
  I0423 19:15:58.865832 25 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4132, will wait for the garbage collector to delete the pods @ 04/23/25 19:15:58.893
  I0423 19:15:58.966812 25 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 13.447003ms
  I0423 19:15:59.068038 25 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.225651ms
  I0423 19:16:02.417961 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4132" for this suite. @ 04/23/25 19:16:02.423
• [11.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/23/25 19:16:02.436
  I0423 19:16:02.436631 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename aggregator @ 04/23/25 19:16:02.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:02.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:02.464
  I0423 19:16:02.469154 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Registering the sample API server. @ 04/23/25 19:16:02.469
  I0423 19:16:02.984099 25 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0423 19:16:03.006535 25 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0423 19:16:05.081128 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:07.088365 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:09.084448 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:11.086544 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:13.088034 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:15.088284 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:17.089922 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:19.091340 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:21.088960 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:23.088461 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:25.085787 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:27.086684 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 19:16:29.218757 25 aggregator.go:755] Waited 122.199874ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/23/25 19:16:29.271
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/23/25 19:16:29.275
  STEP: List APIServices @ 04/23/25 19:16:29.281
  I0423 19:16:29.286094 25 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/23/25 19:16:29.286
  I0423 19:16:29.301398 25 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/23/25 19:16:29.301
  I0423 19:16:29.311231 25 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.April, 23, 19, 16, 29, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/23/25 19:16:29.311
  I0423 19:16:29.316877 25 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-04-23 19:16:29 +0000 UTC Passed all checks passed}
  I0423 19:16:29.316923 25 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 19:16:29.316941 25 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/23/25 19:16:29.316
  I0423 19:16:29.327445 25 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1090830446" @ 04/23/25 19:16:29.327
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/23/25 19:16:29.347
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/23/25 19:16:29.36
  STEP: Patch APIService Status @ 04/23/25 19:16:29.365
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/23/25 19:16:29.375
  I0423 19:16:29.382276 25 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-04-23 19:16:29 +0000 UTC Passed all checks passed}
  I0423 19:16:29.382349 25 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 19:16:29.382385 25 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0423 19:16:29.382418 25 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/23/25 19:16:29.382
  STEP: Confirm that the generated APIService has been deleted @ 04/23/25 19:16:29.398
  I0423 19:16:29.398563 25 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0423 19:16:29.402033 25 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0423 19:16:29.402077 25 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0423 19:16:29.525250 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4824" for this suite. @ 04/23/25 19:16:29.529
• [27.127 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/23/25 19:16:29.563
  I0423 19:16:29.563674 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename events @ 04/23/25 19:16:29.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:29.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:29.592
  STEP: creating a test event @ 04/23/25 19:16:29.595
  STEP: listing all events in all namespaces @ 04/23/25 19:16:29.599
  STEP: patching the test event @ 04/23/25 19:16:29.605
  STEP: fetching the test event @ 04/23/25 19:16:29.61
  STEP: updating the test event @ 04/23/25 19:16:29.613
  STEP: getting the test event @ 04/23/25 19:16:29.621
  STEP: deleting the test event @ 04/23/25 19:16:29.624
  STEP: listing all events in all namespaces @ 04/23/25 19:16:29.629
  I0423 19:16:29.635779 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9545" for this suite. @ 04/23/25 19:16:29.641
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/23/25 19:16:29.665
  I0423 19:16:29.666367 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 19:16:29.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:29.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:29.693
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/23/25 19:16:29.697
  STEP: Saw pod success @ 04/23/25 19:16:33.731
  I0423 19:16:33.735282 25 output.go:196] Trying to get logs from node worker00 pod pod-8bb6d7c0-5b46-427f-963c-ada1691718d6 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:16:33.742
  I0423 19:16:33.765332 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2588" for this suite. @ 04/23/25 19:16:33.77
• [4.112 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/23/25 19:16:33.783
  I0423 19:16:33.783868 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename events @ 04/23/25 19:16:33.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:33.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:33.806
  STEP: Create set of events @ 04/23/25 19:16:33.811
  STEP: get a list of Events with a label in the current namespace @ 04/23/25 19:16:33.835
  STEP: delete a list of events @ 04/23/25 19:16:33.84
  I0423 19:16:33.840681 25 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/23/25 19:16:33.861
  I0423 19:16:33.865924 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3963" for this suite. @ 04/23/25 19:16:33.872
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/23/25 19:16:33.88
  I0423 19:16:33.880668 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 19:16:33.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:33.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:33.897
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/23/25 19:16:33.903
  STEP: Saw pod success @ 04/23/25 19:16:37.931
  I0423 19:16:37.935430 25 output.go:196] Trying to get logs from node worker00 pod pod-36458245-e7e2-477d-b7a0-3572de9b5401 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:16:37.943
  I0423 19:16:37.965914 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5982" for this suite. @ 04/23/25 19:16:37.973
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/23/25 19:16:37.987
  I0423 19:16:37.987135 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 19:16:37.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:38.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:38.024
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/23/25 19:16:38.029
  STEP: Saw pod success @ 04/23/25 19:16:42.071
  I0423 19:16:42.075455 25 output.go:196] Trying to get logs from node worker00 pod pod-f47dd7b6-5254-4c99-8cd4-a2c8cdb8baa5 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:16:42.082
  I0423 19:16:42.116832 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3808" for this suite. @ 04/23/25 19:16:42.123
• [4.147 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/23/25 19:16:42.137
  I0423 19:16:42.137485 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 19:16:42.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:42.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:42.177
  I0423 19:16:42.190447 25 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-918"
  I0423 19:16:42.205967 25 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-918"
  STEP: waiting for a new root ca configmap created @ 04/23/25 19:16:42.706
  I0423 19:16:42.712352 25 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-918"
  I0423 19:16:42.732822 25 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-918"
  STEP: waiting for the root ca configmap reconciled @ 04/23/25 19:16:43.235
  I0423 19:16:43.241939 25 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-918"
  I0423 19:16:43.242427 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-918" for this suite. @ 04/23/25 19:16:43.256
• [1.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/23/25 19:16:43.28
  I0423 19:16:43.280758 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 19:16:43.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:43.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:43.317
  STEP: Saw pod success @ 04/23/25 19:16:49.421
  I0423 19:16:49.430443 25 output.go:196] Trying to get logs from node worker00 pod client-envvars-f922ceca-7f1c-4fd2-b98e-63d1f9e2628b container env3cont: <nil>
  STEP: delete the pod @ 04/23/25 19:16:49.442
  I0423 19:16:49.473422 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-547" for this suite. @ 04/23/25 19:16:49.481
• [6.211 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/23/25 19:16:49.494
  I0423 19:16:49.494875 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename deployment @ 04/23/25 19:16:49.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:49.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:49.516
  I0423 19:16:49.520548 25 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0423 19:16:49.529277 25 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0423 19:16:49.545386 25 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0423 19:16:51.556361 25 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0423 19:16:51.560614 25 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0423 19:16:51.576468 25 deployment.go:314] Updating deployment test-recreate-deployment
  I0423 19:16:51.576542 25 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0423 19:16:51.764606 25 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f6391635-a881-449a-8a61-f403f622253f",
      ResourceVersion: (string) (len=5) "35288",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032609,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032609,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 19:16:51.775437 25 deployment.go:40] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99a05ac8-feaa-4006-b52f-c8f1f8c1cab9",
      ResourceVersion: (string) (len=5) "35285",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f6391635-a881-449a-8a61-f403f622253f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 36 33 39 31 36  33 35 2d 61 38 38 31 2d  |\"f6391635-a881-|
              00000120  34 34 39 61 2d 38 61 36  31 2d 66 34 30 33 66 36  |449a-8a61-f403f6|
              00000130  32 32 32 35 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |22253f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 19:16:51.788913 25 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0423 19:16:51.790729 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9bdb2bb-3712-4aa1-971b-986af8c4d7d2",
      ResourceVersion: (string) (len=5) "35276",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032609,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "f6391635-a881-449a-8a61-f403f622253f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 36 33 39 31 36  33 35 2d 61 38 38 31 2d  |\"f6391635-a881-|
              00000120  34 34 39 61 2d 38 61 36  31 2d 66 34 30 33 66 36  |449a-8a61-f403f6|
              00000130  32 32 32 35 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |22253f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 19:16:51.825758 25 deployment.go:68] Pod "test-recreate-deployment-88d47c55d-pg6jn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-pg6jn",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-5851",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4af5e149-5224-4dc0-9065-a5e215de9e50",
      ResourceVersion: (string) (len=5) "35287",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "99a05ac8-feaa-4006-b52f-c8f1f8c1cab9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  61 30 35 61 63 38 2d 66  |d\":\"99a05ac8-f|
              00000090  65 61 61 2d 34 30 30 36  2d 62 35 32 66 2d 63 38  |eaa-4006-b52f-c8|
              000000a0  66 31 66 38 63 31 63 61  62 39 5c 22 7d 22 3a 7b  |f1f8c1cab9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2cwzt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2cwzt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881032611,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881032611,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:16:51.836773 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5851" for this suite. @ 04/23/25 19:16:51.85
• [2.387 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 04/23/25 19:16:51.884
  I0423 19:16:51.884315 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 19:16:51.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:51.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:51.946
  STEP: Creating a ResourceQuota @ 04/23/25 19:16:51.954
  STEP: Getting a ResourceQuota @ 04/23/25 19:16:51.972
  STEP: Updating a ResourceQuota @ 04/23/25 19:16:51.982
  STEP: Verifying a ResourceQuota was modified @ 04/23/25 19:16:51.994
  STEP: Deleting a ResourceQuota @ 04/23/25 19:16:52.004
  STEP: Verifying the deleted ResourceQuota @ 04/23/25 19:16:52.021
  I0423 19:16:52.030153 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1783" for this suite. @ 04/23/25 19:16:52.041
• [0.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 04/23/25 19:16:52.067
  I0423 19:16:52.067893 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 19:16:52.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:52.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:52.1
  STEP: Creating configMap that has name configmap-test-emptyKey-4b309cc6-520d-4eef-8f5e-ca431c87edcb @ 04/23/25 19:16:52.106
  I0423 19:16:52.111109 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4941" for this suite. @ 04/23/25 19:16:52.14
• [0.083 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 04/23/25 19:16:52.151
  I0423 19:16:52.151677 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 19:16:52.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:16:52.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:16:52.188
  I0423 19:16:52.211621 25 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0423 19:17:52.219121 25 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 04/23/25 19:17:52.225
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 04/23/25 19:17:52.245
  I0423 19:17:52.261386 25 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 04/23/25 19:17:52.261
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 04/23/25 19:17:54.272
  I0423 19:17:54.294559 25 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 04/23/25 19:17:54.294
  STEP: Verifying the pod has the pod disruption condition @ 04/23/25 19:17:56.307
  I0423 19:17:56.310836 25 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0423 19:17:56.823757 25 pod_client.go:173] Successfully updated pod "victim-pod"
  I0423 19:17:56.873794 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2043" for this suite. @ 04/23/25 19:17:56.878
• [64.737 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/23/25 19:17:56.888
  I0423 19:17:56.888151 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 19:17:56.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:17:56.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:17:56.919
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/23/25 19:17:56.922
  STEP: Saw pod success @ 04/23/25 19:18:00.954
  I0423 19:18:00.959365 25 output.go:196] Trying to get logs from node worker00 pod pod-793307f8-881d-487f-a964-d0514bc82d59 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:18:00.97
  I0423 19:18:00.995020 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3821" for this suite. @ 04/23/25 19:18:01.001
• [4.123 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/23/25 19:18:01.014
  I0423 19:18:01.014425 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-watch @ 04/23/25 19:18:01.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:18:01.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:18:01.047
  I0423 19:18:01.053612 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Creating first CR  @ 04/23/25 19:18:03.622
  I0423 19:18:03.630342 25 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T19:18:03Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T19:18:03Z]] name:name1 resourceVersion:35712 uid:c51fc646-767e-4364-9c06-082cce39ad99] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 04/23/25 19:18:13.631
  I0423 19:18:13.651774 25 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T19:18:13Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T19:18:13Z]] name:name2 resourceVersion:35756 uid:4165899e-158a-45e6-ae50-2d35692eb574] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 04/23/25 19:18:23.653
  I0423 19:18:23.663874 25 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T19:18:03Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T19:18:23Z]] name:name1 resourceVersion:35793 uid:c51fc646-767e-4364-9c06-082cce39ad99] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 04/23/25 19:18:33.664
  I0423 19:18:33.688821 25 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T19:18:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T19:18:33Z]] name:name2 resourceVersion:35829 uid:4165899e-158a-45e6-ae50-2d35692eb574] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 04/23/25 19:18:43.689
  I0423 19:18:43.710376 25 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T19:18:03Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T19:18:23Z]] name:name1 resourceVersion:35866 uid:c51fc646-767e-4364-9c06-082cce39ad99] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 04/23/25 19:18:53.71
  I0423 19:18:53.731392 25 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T19:18:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T19:18:33Z]] name:name2 resourceVersion:35902 uid:4165899e-158a-45e6-ae50-2d35692eb574] num:map[num1:9223372036854775807 num2:1000000]]}
  I0423 19:19:04.260699 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2094" for this suite. @ 04/23/25 19:19:04.269
• [63.278 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 04/23/25 19:19:04.293
  I0423 19:19:04.293140 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 19:19:04.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:04.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:04.329
  STEP: apply creating a deployment @ 04/23/25 19:19:04.335
  I0423 19:19:04.356248 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4386" for this suite. @ 04/23/25 19:19:04.37
• [0.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/23/25 19:19:04.381
  I0423 19:19:04.381141 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 19:19:04.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:04.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:04.46
  I0423 19:19:04.498897 25 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0423 19:19:04.510118 25 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0423 19:19:04.592535 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:19:04.595219 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:19:05.523043 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:19:05.523147 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:19:06.519337 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 19:19:06.519375 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0423 19:19:06.519393 25 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0423 19:19:06.530448 25 daemon_set.go:102] Updating DaemonSet daemon-set
  I0423 19:19:09.563753 25 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0423 19:19:09.588287 25 daemon_set.go:102] Updating DaemonSet daemon-set
  I0423 19:19:09.588367 25 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0423 19:19:13.593980 25 daemon_set.go:1198] Pod daemon-set-ll6fc is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 19:19:13.608
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3641, will wait for the garbage collector to delete the pods @ 04/23/25 19:19:13.608
  I0423 19:19:13.671342 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.662992ms
  I0423 19:19:13.772685 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.342098ms
  I0423 19:19:16.178670 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:19:16.178771 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 19:19:16.183787 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36110"},"items":null}

  I0423 19:19:16.187991 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36110"},"items":null}

  I0423 19:19:16.202448 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3641" for this suite. @ 04/23/25 19:19:16.208
• [11.841 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 04/23/25 19:19:16.221
  I0423 19:19:16.221320 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:19:16.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:16.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:16.244
  STEP: Setting up server cert @ 04/23/25 19:19:16.27
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:19:16.566
  STEP: Deploying the webhook pod @ 04/23/25 19:19:16.573
  STEP: Wait for the deployment to be ready @ 04/23/25 19:19:16.586
  I0423 19:19:16.590741 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/23/25 19:19:18.6
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:19:18.616
  I0423 19:19:19.617026 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/23/25 19:19:19.625
  STEP: create the configmap with a random name @ 04/23/25 19:19:19.662
  STEP: verify the configmap is mutated @ 04/23/25 19:19:19.681
  STEP: create the configmap with 'skip-me' name @ 04/23/25 19:19:19.682
  I0423 19:19:19.766606 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8790" for this suite. @ 04/23/25 19:19:19.773
  STEP: Destroying namespace "webhook-markers-3407" for this suite. @ 04/23/25 19:19:19.783
• [3.577 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/23/25 19:19:19.798
  I0423 19:19:19.798719 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 19:19:19.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:19.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:19.813
  STEP: create the container @ 04/23/25 19:19:19.817
  W0423 19:19:19.828423      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/23/25 19:19:19.828
  STEP: get the container status @ 04/23/25 19:19:22.848
  STEP: the container should be terminated @ 04/23/25 19:19:22.851
  STEP: the termination message should be set @ 04/23/25 19:19:22.851
  I0423 19:19:22.851728 25 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/23/25 19:19:22.851
  I0423 19:19:22.880285 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3153" for this suite. @ 04/23/25 19:19:22.886
• [3.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/23/25 19:19:22.895
  I0423 19:19:22.896002 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:19:22.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:22.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:22.939
  STEP: Creating configMap with name projected-configmap-test-volume-map-3b2fd058-df39-486c-b5e2-8d0787b1b3ee @ 04/23/25 19:19:22.946
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:19:22.953
  STEP: Saw pod success @ 04/23/25 19:19:26.989
  I0423 19:19:26.994089 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-fc673362-0169-430b-95d8-2269342b7326 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:19:27.013
  I0423 19:19:27.043409 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7099" for this suite. @ 04/23/25 19:19:27.052
• [4.174 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 04/23/25 19:19:27.069
  I0423 19:19:27.070040 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename ingress @ 04/23/25 19:19:27.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:27.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:27.106
  STEP: getting /apis @ 04/23/25 19:19:27.113
  STEP: getting /apis/networking.k8s.io @ 04/23/25 19:19:27.123
  STEP: getting /apis/networking.k8s.iov1 @ 04/23/25 19:19:27.128
  STEP: creating @ 04/23/25 19:19:27.131
  STEP: getting @ 04/23/25 19:19:27.159
  STEP: listing @ 04/23/25 19:19:27.164
  STEP: watching @ 04/23/25 19:19:27.168
  I0423 19:19:27.168708 25 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 04/23/25 19:19:27.171
  STEP: cluster-wide watching @ 04/23/25 19:19:27.175
  I0423 19:19:27.175605 25 ingress.go:198] starting watch
  STEP: patching @ 04/23/25 19:19:27.177
  STEP: updating @ 04/23/25 19:19:27.186
  I0423 19:19:27.198435 25 ingress.go:221] waiting for watch events with expected annotations
  I0423 19:19:27.198634 25 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 04/23/25 19:19:27.198
  STEP: updating /status @ 04/23/25 19:19:27.218
  STEP: get /status @ 04/23/25 19:19:27.23
  STEP: deleting @ 04/23/25 19:19:27.234
  STEP: deleting a collection @ 04/23/25 19:19:27.245
  I0423 19:19:27.261427 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9473" for this suite. @ 04/23/25 19:19:27.271
• [0.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/23/25 19:19:27.279
  I0423 19:19:27.279850 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename containers @ 04/23/25 19:19:27.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:27.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:27.316
  STEP: Creating a pod to test override arguments @ 04/23/25 19:19:27.321
  STEP: Saw pod success @ 04/23/25 19:19:31.354
  I0423 19:19:31.358720 25 output.go:196] Trying to get logs from node worker00 pod client-containers-91627bd8-8fb9-4151-abd9-e07b64b55ee5 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:19:31.369
  I0423 19:19:31.406119 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3673" for this suite. @ 04/23/25 19:19:31.414
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 04/23/25 19:19:31.423
  I0423 19:19:31.423345 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 19:19:31.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:31.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:31.453
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 19:19:31.517
  STEP: create the pod with lifecycle hook @ 04/23/25 19:19:33.547
  STEP: delete the pod with lifecycle hook @ 04/23/25 19:19:35.568
  STEP: check prestop hook @ 04/23/25 19:19:39.591
  I0423 19:19:39.618180 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7267" for this suite. @ 04/23/25 19:19:39.625
• [8.226 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/23/25 19:19:39.651
  I0423 19:19:39.651570 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename proxy @ 04/23/25 19:19:39.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:39.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:39.686
  I0423 19:19:39.699407 25 proxy.go:387] Creating pod...
  I0423 19:19:41.733300 25 proxy.go:411] Creating service...
  I0423 19:19:41.758755 25 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/pods/agnhost/proxy?method=DELETE
  I0423 19:19:41.769365 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 19:19:41.769440 25 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/pods/agnhost/proxy?method=OPTIONS
  I0423 19:19:41.787363 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 19:19:41.787454 25 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/pods/agnhost/proxy?method=PATCH
  I0423 19:19:41.798152 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 19:19:41.798227 25 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/pods/agnhost/proxy?method=POST
  I0423 19:19:41.804662 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 19:19:41.804974 25 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/pods/agnhost/proxy?method=PUT
  I0423 19:19:41.811099 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 19:19:41.811173 25 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/services/e2e-proxy-test-service/proxy?method=DELETE
  I0423 19:19:41.824342 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 19:19:41.824425 25 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0423 19:19:41.830265 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 19:19:41.830391 25 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/services/e2e-proxy-test-service/proxy?method=PATCH
  I0423 19:19:41.840381 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 19:19:41.840483 25 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/services/e2e-proxy-test-service/proxy?method=POST
  I0423 19:19:41.851028 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 19:19:41.851147 25 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/services/e2e-proxy-test-service/proxy?method=PUT
  I0423 19:19:41.861583 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 19:19:41.861663 25 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/pods/agnhost/proxy?method=GET
  I0423 19:19:41.868368 25 proxy.go:487] http.Client request:GET StatusCode:301
  I0423 19:19:41.868436 25 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/services/e2e-proxy-test-service/proxy?method=GET
  I0423 19:19:41.877232 25 proxy.go:487] http.Client request:GET StatusCode:301
  I0423 19:19:41.877303 25 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/pods/agnhost/proxy?method=HEAD
  I0423 19:19:41.882401 25 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0423 19:19:41.882457 25 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-4793/services/e2e-proxy-test-service/proxy?method=HEAD
  I0423 19:19:41.888742 25 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0423 19:19:41.889086 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4793" for this suite. @ 04/23/25 19:19:41.894
• [2.254 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 04/23/25 19:19:41.904
  I0423 19:19:41.904674 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 19:19:41.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:41.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:41.937
  STEP: creating a policy with variables @ 04/23/25 19:19:41.957
  STEP: waiting until the marker is denied @ 04/23/25 19:19:41.996
  STEP: testing a replicated Deployment to be allowed @ 04/23/25 19:19:42.308
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/23/25 19:19:42.338
  I0423 19:19:42.442239 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2613" for this suite. @ 04/23/25 19:19:42.455
• [0.560 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/23/25 19:19:42.464
  I0423 19:19:42.464844 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 19:19:42.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:42.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:42.492
  STEP: creating pod @ 04/23/25 19:19:42.498
  I0423 19:19:44.542725 25 pods.go:83] Pod pod-hostip-7e2b62ae-c260-41c2-b422-70b8e46575d5 has hostIP: 192.168.58.101
  I0423 19:19:44.542982 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9807" for this suite. @ 04/23/25 19:19:44.549
• [2.104 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/23/25 19:19:44.569
  I0423 19:19:44.570290 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:19:44.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:44.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:44.605
  STEP: Creating the pod @ 04/23/25 19:19:44.612
  I0423 19:19:47.166612 25 pod_client.go:173] Successfully updated pod "labelsupdatea8f83c9e-d161-4507-8acf-03281f973b44"
  I0423 19:19:49.215526 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8027" for this suite. @ 04/23/25 19:19:49.231
• [4.673 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/23/25 19:19:49.243
  I0423 19:19:49.243528 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename limitrange @ 04/23/25 19:19:49.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:49.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:49.288
  STEP: Creating a LimitRange @ 04/23/25 19:19:49.293
  STEP: Setting up watch @ 04/23/25 19:19:49.293
  STEP: Submitting a LimitRange @ 04/23/25 19:19:49.399
  STEP: Verifying LimitRange creation was observed @ 04/23/25 19:19:49.406
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/23/25 19:19:49.406
  I0423 19:19:49.410460 25 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0423 19:19:49.410542 25 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/23/25 19:19:49.41
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/23/25 19:19:49.419
  I0423 19:19:49.427176 25 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0423 19:19:49.427349 25 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/23/25 19:19:49.427
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/23/25 19:19:49.445
  I0423 19:19:49.454253 25 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0423 19:19:49.454316 25 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/23/25 19:19:49.454
  STEP: Failing to create a Pod with more than max resources @ 04/23/25 19:19:49.46
  STEP: Updating a LimitRange @ 04/23/25 19:19:49.466
  STEP: Verifying LimitRange updating is effective @ 04/23/25 19:19:49.477
  STEP: Creating a Pod with less than former min resources @ 04/23/25 19:19:51.484
  STEP: Failing to create a Pod with more than max resources @ 04/23/25 19:19:51.506
  STEP: Deleting a LimitRange @ 04/23/25 19:19:51.51
  STEP: Verifying the LimitRange was deleted @ 04/23/25 19:19:51.524
  I0423 19:19:56.528772 25 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/23/25 19:19:56.529
  I0423 19:19:56.545114 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2388" for this suite. @ 04/23/25 19:19:56.552
• [7.315 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 04/23/25 19:19:56.559
  I0423 19:19:56.559051 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 19:19:56.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:19:56.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:19:56.583
  I0423 19:19:56.589024 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 19:19:58.081
  I0423 19:19:58.082083 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-7830 --namespace=crd-publish-openapi-7830 create -f -'
  I0423 19:19:58.266021 25 builder.go:146] stderr: ""
  I0423 19:19:58.266102 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4659-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0423 19:19:58.266198 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-7830 --namespace=crd-publish-openapi-7830 delete e2e-test-crd-publish-openapi-4659-crds test-cr'
  I0423 19:19:58.419118 25 builder.go:146] stderr: ""
  I0423 19:19:58.419197 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4659-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0423 19:19:58.419296 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-7830 --namespace=crd-publish-openapi-7830 apply -f -'
  I0423 19:19:58.577596 25 builder.go:146] stderr: ""
  I0423 19:19:58.577694 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4659-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0423 19:19:58.577905 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-7830 --namespace=crd-publish-openapi-7830 delete e2e-test-crd-publish-openapi-4659-crds test-cr'
  I0423 19:19:58.714162 25 builder.go:146] stderr: ""
  I0423 19:19:58.714255 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4659-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/23/25 19:19:58.714
  I0423 19:19:58.714436 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-7830 explain e2e-test-crd-publish-openapi-4659-crds'
  I0423 19:19:58.862180 25 builder.go:146] stderr: ""
  I0423 19:19:58.862322 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4659-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0423 19:20:00.384600 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7830" for this suite. @ 04/23/25 19:20:00.414
• [3.874 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/23/25 19:20:00.436
  I0423 19:20:00.437234 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 19:20:00.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:20:00.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:20:00.484
  STEP: getting /apis @ 04/23/25 19:20:00.491
  STEP: getting /apis/node.k8s.io @ 04/23/25 19:20:00.504
  STEP: getting /apis/node.k8s.io/v1 @ 04/23/25 19:20:00.505
  STEP: creating @ 04/23/25 19:20:00.508
  STEP: watching @ 04/23/25 19:20:00.53
  I0423 19:20:00.530812 25 runtimeclass.go:275] starting watch
  STEP: getting @ 04/23/25 19:20:00.541
  STEP: listing @ 04/23/25 19:20:00.546
  STEP: patching @ 04/23/25 19:20:00.552
  STEP: updating @ 04/23/25 19:20:00.563
  I0423 19:20:00.570383 25 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 04/23/25 19:20:00.57
  STEP: deleting a collection @ 04/23/25 19:20:00.595
  I0423 19:20:00.613468 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5702" for this suite. @ 04/23/25 19:20:00.618
• [0.198 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 04/23/25 19:20:00.632
  I0423 19:20:00.632534 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 19:20:00.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:20:00.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:20:00.661
  STEP: creating a collection of services @ 04/23/25 19:20:00.667
  I0423 19:20:00.668102 25 service.go:3655] Creating e2e-svc-a-dx4cd
  I0423 19:20:00.682427 25 service.go:3655] Creating e2e-svc-b-xnqlc
  I0423 19:20:00.698569 25 service.go:3655] Creating e2e-svc-c-8jnhf
  STEP: deleting service collection @ 04/23/25 19:20:00.719
  I0423 19:20:00.763017 25 service.go:3690] Collection of services has been deleted
  I0423 19:20:00.763207 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4754" for this suite. @ 04/23/25 19:20:00.768
• [0.144 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 04/23/25 19:20:00.777
  I0423 19:20:00.777888 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 19:20:00.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:20:00.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:20:00.797
  STEP: Creating a pod to test substitution in container's command @ 04/23/25 19:20:00.8
  STEP: Saw pod success @ 04/23/25 19:20:04.823
  I0423 19:20:04.827353 25 output.go:196] Trying to get logs from node worker00 pod var-expansion-4ab6d552-93c4-43da-8627-e14f762aaf73 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 19:20:04.834
  I0423 19:20:04.869368 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2464" for this suite. @ 04/23/25 19:20:04.877
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 04/23/25 19:20:04.893
  I0423 19:20:04.893668 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:20:04.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:20:04.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:20:04.932
  STEP: Setting up server cert @ 04/23/25 19:20:04.962
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:20:05.286
  STEP: Deploying the webhook pod @ 04/23/25 19:20:05.293
  STEP: Wait for the deployment to be ready @ 04/23/25 19:20:05.305
  I0423 19:20:05.309848 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/23/25 19:20:07.324
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:20:07.349
  I0423 19:20:08.351737 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/23/25 19:20:08.358
  I0423 19:20:08.408367 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1782" for this suite. @ 04/23/25 19:20:08.417
  STEP: Destroying namespace "webhook-markers-9189" for this suite. @ 04/23/25 19:20:08.44
• [3.571 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 04/23/25 19:20:08.464
  I0423 19:20:08.464024 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 19:20:08.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:20:08.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:20:08.513
  STEP: Creating resourceQuota "e2e-rq-status-wsxr5" @ 04/23/25 19:20:08.524
  I0423 19:20:08.536221 25 resource_quota.go:1102] Resource quota "e2e-rq-status-wsxr5" reports spec: hard cpu limit of 500m
  I0423 19:20:08.536279 25 resource_quota.go:1104] Resource quota "e2e-rq-status-wsxr5" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-wsxr5" /status @ 04/23/25 19:20:08.536
  STEP: Confirm /status for "e2e-rq-status-wsxr5" resourceQuota via watch @ 04/23/25 19:20:08.546
  I0423 19:20:08.548990 25 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-wsxr5" in namespace "resourcequota-517" with hard status: v1.ResourceList(nil)
  I0423 19:20:08.549233 25 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-wsxr5" in namespace "resourcequota-517" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0423 19:20:08.549509 25 resource_quota.go:1141] ResourceQuota "e2e-rq-status-wsxr5" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/23/25 19:20:08.554
  I0423 19:20:08.561638 25 resource_quota.go:1152] Resource quota "e2e-rq-status-wsxr5" reports spec: hard cpu limit of 1
  I0423 19:20:08.561693 25 resource_quota.go:1153] Resource quota "e2e-rq-status-wsxr5" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-wsxr5" /status @ 04/23/25 19:20:08.561
  STEP: Confirm /status for "e2e-rq-status-wsxr5" resourceQuota via watch @ 04/23/25 19:20:08.567
  I0423 19:20:08.574091 25 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-wsxr5" in namespace "resourcequota-517" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0423 19:20:08.574375 25 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-wsxr5" in namespace "resourcequota-517" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0423 19:20:08.574475 25 resource_quota.go:1185] ResourceQuota "e2e-rq-status-wsxr5" /status was patched
  STEP: Get "e2e-rq-status-wsxr5" /status @ 04/23/25 19:20:08.574
  I0423 19:20:08.581680 25 resource_quota.go:1196] Resourcequota "e2e-rq-status-wsxr5" reports status: hard cpu of 1
  I0423 19:20:08.581742 25 resource_quota.go:1198] Resourcequota "e2e-rq-status-wsxr5" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-wsxr5" /status before checking Spec is unchanged @ 04/23/25 19:20:08.589
  I0423 19:20:08.600784 25 resource_quota.go:1218] Resourcequota "e2e-rq-status-wsxr5" reports status: hard cpu of 2
  I0423 19:20:08.601034 25 resource_quota.go:1220] Resourcequota "e2e-rq-status-wsxr5" reports status: hard memory of 2Gi
  I0423 19:20:08.602365 25 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-wsxr5" in namespace "resourcequota-517" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0423 19:20:08.607591 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002c97908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002c97980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002c979c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:13.608031 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f28b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:18.610278 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a305e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a306f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:23.607390 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2a20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2ab0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2af8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:28.608328 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a309c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30a38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:33.611080 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002c97bd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002c97c38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002c97c80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:38.610490 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30cf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30d20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:43.614592 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30f30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30f60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30ff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:48.613418 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2c00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2c48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:53.612220 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2d68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2d98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2de0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:20:58.611873 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc002c97ea8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef4000), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef4048), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:03.609487 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef41b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef41e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef4210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:08.613743 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef4348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef43d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef4408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:13.609489 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2ee8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:18.613665 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f3080), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f30b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f30e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:23.614996 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f31a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f31d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f3218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:28.611977 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f32f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f3320), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f3350), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:33.610655 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f3428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f3458), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f3488), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:38.608754 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31230), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31260), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a312c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:43.607972 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a314a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31530), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a315f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:48.610679 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31728), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a317a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a317e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:53.616091 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef45a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef4648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003ef46d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:21:58.607924 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31a40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31a88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:03.608492 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31ce0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31d10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31e00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:08.606487 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a300c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a300f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:13.608142 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f20a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f20d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:18.611052 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f22a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:23.610927 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a305a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:28.608676 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f23c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f23f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:33.608683 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004322030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004322108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043221c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:38.611432 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f24f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2528), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2570), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:43.608922 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2678), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f26a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:48.605931 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f27c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:53.609468 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f28b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2930), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:22:58.608657 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a309c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30a38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:23:03.614642 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30c30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30c78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30cf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:23:08.611081 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2ab0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:23:13.609391 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30e70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30f30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a30f60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:23:18.613041 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2c18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2c60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049f2c90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:23:23.610723 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-wsxr5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-wsxr5", GenerateName:"", Namespace:"resourcequota-517", SelfLink:"", UID:"b995f3ea-bcb5-46bb-b801-2a0d01ed8f22", ResourceVersion:"36969", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-wsxr5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31170), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a311a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 19, 20, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a31200), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 19:23:28.612891 25 resource_quota.go:1260] ResourceQuota "e2e-rq-status-wsxr5" Spec was unchanged and /status reset
  I0423 19:23:28.613059 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-517" for this suite. @ 04/23/25 19:23:28.616
• [200.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/23/25 19:23:28.63
  I0423 19:23:28.630979 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename containers @ 04/23/25 19:23:28.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:23:28.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:23:28.643
  STEP: Creating a pod to test override all @ 04/23/25 19:23:28.644
  STEP: Saw pod success @ 04/23/25 19:23:32.66
  I0423 19:23:32.663115 25 output.go:196] Trying to get logs from node worker00 pod client-containers-f048f05b-bafb-4886-9a2e-66e729059382 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:23:32.667
  I0423 19:23:32.686841 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3615" for this suite. @ 04/23/25 19:23:32.688
• [4.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/23/25 19:23:32.691
  I0423 19:23:32.691034 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 19:23:32.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:23:32.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:23:32.7
  STEP: Creating configMap with name configmap-test-volume-128a47dd-cc21-4102-954b-d223654ab4c5 @ 04/23/25 19:23:32.701
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:23:32.703
  STEP: Saw pod success @ 04/23/25 19:23:36.718
  I0423 19:23:36.722446 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-9ac94308-0c36-47a6-b900-7450f9dea4bb container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:23:36.727
  I0423 19:23:36.752956 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2218" for this suite. @ 04/23/25 19:23:36.755
• [4.067 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1401
  STEP: Creating a kubernetes client @ 04/23/25 19:23:36.758
  I0423 19:23:36.758075 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:23:36.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:23:36.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:23:36.768
  I0423 19:23:36.769562 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9733 create -f -'
  I0423 19:23:36.842306 25 builder.go:146] stderr: ""
  I0423 19:23:36.842547 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0423 19:23:36.842582 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9733 create -f -'
  I0423 19:23:36.932987 25 builder.go:146] stderr: ""
  I0423 19:23:36.933030 25 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 19:23:36.933
  I0423 19:23:37.935768 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 19:23:37.935791 25 framework.go:733] Found 0 / 1
  I0423 19:23:38.936133 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 19:23:38.936172 25 framework.go:733] Found 1 / 1
  I0423 19:23:38.936187 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0423 19:23:38.937690 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 19:23:38.937714 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 19:23:38.937752 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9733 describe pod agnhost-primary-z57s4'
  I0423 19:23:39.004702 25 builder.go:146] stderr: ""
  I0423 19:23:39.004768 25 builder.go:147] stdout: "Name:             agnhost-primary-z57s4\nNamespace:        kubectl-9733\nPriority:         0\nService Account:  default\nNode:             worker00/192.168.58.100\nStart Time:       Wed, 23 Apr 2025 19:23:36 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: f9e6e3a66fdf558e30e4676f12d021d01d4e3179cb4f824830f7eeb1fb339604\n                  cni.projectcalico.org/podIP: 10.200.131.133/32\n                  cni.projectcalico.org/podIPs: 10.200.131.133/32\nStatus:           Running\nIP:               10.200.131.133\nIPs:\n  IP:           10.200.131.133\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://beda1794975dd430cb9f9cae52d5c3c71704ec58ab0150d398dfa9fa208da359\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 23 Apr 2025 19:23:37 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-w48vd (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-w48vd:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-9733/agnhost-primary-z57s4 to worker00\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0423 19:23:39.004848 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9733 describe rc agnhost-primary'
  I0423 19:23:39.071070 25 builder.go:146] stderr: ""
  I0423 19:23:39.071125 25 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9733\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-z57s4\n"
  I0423 19:23:39.071189 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9733 describe service agnhost-primary'
  I0423 19:23:39.158431 25 builder.go:146] stderr: ""
  I0423 19:23:39.158473 25 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-9733\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.32.0.87\nIPs:                      10.32.0.87\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.200.131.133:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0423 19:23:39.172020 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9733 describe node worker00'
  I0423 19:23:39.299171 25 builder.go:146] stderr: ""
  I0423 19:23:39.299328 25 builder.go:147] stdout: "Name:               worker00\nRoles:              controller,worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker00\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/controller=true\n                    node-role.kubernetes.io/worker=true\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"cephfs.csi.ceph.com\":\"worker00\",\"rbd.csi.ceph.com\":\"worker00\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.58.100/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.200.131.128\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 23 Apr 2025 18:08:21 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker00\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 23 Apr 2025 19:23:35 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 23 Apr 2025 18:10:54 +0000   Wed, 23 Apr 2025 18:10:54 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Wed, 23 Apr 2025 19:21:44 +0000   Wed, 23 Apr 2025 18:08:21 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 23 Apr 2025 19:21:44 +0000   Wed, 23 Apr 2025 18:08:21 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 23 Apr 2025 19:21:44 +0000   Wed, 23 Apr 2025 18:08:21 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 23 Apr 2025 19:21:44 +0000   Wed, 23 Apr 2025 18:10:03 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.58.100\n  Hostname:    worker00\nCapacity:\n  cpu:                4\n  ephemeral-storage:  31811408Ki\n  hugepages-2Mi:      0\n  memory:             4007324Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  29317393565\n  hugepages-2Mi:      0\n  memory:             3904924Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 503de6d836014bf6a694cb07813c712d\n  System UUID:                e0e03d06-4626-c640-a4c1-bfd13d1413f3\n  Boot ID:                    16c1a713-f314-47ee-81e9-b08e449f29ac\n  Kernel Version:             6.8.0-53-generic\n  OS Image:                   Ubuntu 24.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.16\n  Kubelet Version:            v1.30.0\n  Kube-Proxy Version:         v1.30.0\nPodCIDR:                      10.200.0.0/24\nPodCIDRs:                     10.200.0.0/24\nNon-terminated Pods:          (15 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 etcd-worker00                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         74m\n  kube-system                 gobetween-worker00                                         100m (2%)     0 (0%)      0 (0%)           0 (0%)         74m\n  kube-system                 kube-apiserver-worker00                                    250m (6%)     0 (0%)      0 (0%)           0 (0%)         74m\n  kube-system                 kube-controller-manager-worker00                           200m (5%)     0 (0%)      0 (0%)           0 (0%)         74m\n  kube-system                 kube-proxy-worker00                                        200m (5%)     0 (0%)      0 (0%)           0 (0%)         74m\n  kube-system                 kube-scheduler-worker00                                    100m (2%)     0 (0%)      0 (0%)           0 (0%)         74m\n  kubectl-9733                agnhost-primary-z57s4                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         3s\n  networking                  calico-node-t7722                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         75m\n  networking                  metallb-speaker-8h5gw                                      100m (2%)     100m (2%)   100Mi (2%)       100Mi (2%)     16m\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         71m\n  sonobuoy                    sonobuoy-e2e-job-8e2e29f3e66e467f                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         71m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-be276f75500849d8-mwsrb    0 (0%)        0 (0%)      0 (0%)           0 (0%)         71m\n  storage                     ceph-csi-cephfs-nodeplugin-db7xs                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         16m\n  storage                     ceph-csi-rbd-nodeplugin-9vr2q                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         16m\n  storage                     ceph-mon-worker00-f69c45b64-gztsp                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         16m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1200m (30%)  100m (2%)\n  memory             100Mi (2%)   100Mi (2%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:              <none>\n"
  I0423 19:23:39.299598 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-9733 describe namespace kubectl-9733'
  I0423 19:23:39.396961 25 builder.go:146] stderr: ""
  I0423 19:23:39.397014 25 builder.go:147] stdout: "Name:         kubectl-9733\nLabels:       e2e-framework=kubectl\n              e2e-run=22d30a80-7c43-4746-bf1f-5b29f78dd3fc\n              kubernetes.io/metadata.name=kubectl-9733\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0423 19:23:39.397332 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9733" for this suite. @ 04/23/25 19:23:39.403
• [2.654 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/23/25 19:23:39.412
  I0423 19:23:39.412188 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:23:39.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:23:39.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:23:39.431
  STEP: Creating secret with name secret-test-map-990e4a03-c72f-4aac-b737-5af84fd6498c @ 04/23/25 19:23:39.436
  STEP: Creating a pod to test consume secrets @ 04/23/25 19:23:39.44
  STEP: Saw pod success @ 04/23/25 19:23:43.51
  I0423 19:23:43.512415 25 output.go:196] Trying to get logs from node worker00 pod pod-secrets-b2afaa4e-8927-47b7-8360-08f932da8ffe container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:23:43.518
  I0423 19:23:43.529314 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9879" for this suite. @ 04/23/25 19:23:43.532
• [4.123 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/23/25 19:23:43.535
  I0423 19:23:43.535806 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:23:43.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:23:43.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:23:43.548
  STEP: Creating the pod @ 04/23/25 19:23:43.55
  I0423 19:23:46.075521 25 pod_client.go:173] Successfully updated pod "labelsupdate9324db7c-a7d4-4c36-b362-a5f21b470684"
  I0423 19:23:50.091638 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7841" for this suite. @ 04/23/25 19:23:50.093
• [6.561 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 04/23/25 19:23:50.097
  I0423 19:23:50.097355 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename job @ 04/23/25 19:23:50.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:23:50.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:23:50.109
  STEP: Creating a job @ 04/23/25 19:23:50.11
  STEP: Ensuring job reaches completions @ 04/23/25 19:23:50.115
  I0423 19:24:02.121465 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1596" for this suite. @ 04/23/25 19:24:02.125
• [12.034 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 04/23/25 19:24:02.132
  I0423 19:24:02.132224 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 19:24:02.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:24:02.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:24:02.154
  STEP: Creating pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102 @ 04/23/25 19:24:02.157
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 19:24:04.172
  I0423 19:24:04.175201 25 container_probe.go:1749] Initial restart count of pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 is 0
  I0423 19:24:04.177256 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:06.180182 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:08.188778 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:10.194675 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:12.197993 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:14.201585 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:16.205310 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:18.208441 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:20.212507 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:22.223970 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:24.230943 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:26.233668 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:28.239731 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:30.242272 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:32.249086 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:34.251007 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:36.255875 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:38.262231 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:40.270028 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:42.273616 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:44.280995 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:46.284559 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:48.291910 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:50.298454 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:52.304561 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:54.310868 25 container_probe.go:1759] Get pod busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 in namespace container-probe-2102
  I0423 19:24:54.310928 25 container_probe.go:1763] Restart count of pod container-probe-2102/busybox-f410be16-11ed-4e3a-8de1-a02c6db09342 is now 1 (50.135689906s elapsed)
  STEP: deleting the pod @ 04/23/25 19:24:54.311
  I0423 19:24:54.332004 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2102" for this suite. @ 04/23/25 19:24:54.336
• [52.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/23/25 19:24:54.342
  I0423 19:24:54.342920 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:24:54.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:24:54.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:24:54.354
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:24:54.356
  STEP: Saw pod success @ 04/23/25 19:24:58.371
  I0423 19:24:58.373567 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-081c12fd-24a0-4d6e-97c3-308017c52853 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:24:58.378
  I0423 19:24:58.385205 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6134" for this suite. @ 04/23/25 19:24:58.387
• [4.047 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 04/23/25 19:24:58.39
  I0423 19:24:58.390291 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:24:58.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:24:58.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:24:58.401
  STEP: Setting up server cert @ 04/23/25 19:24:58.415
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:24:58.589
  STEP: Deploying the webhook pod @ 04/23/25 19:24:58.592
  STEP: Wait for the deployment to be ready @ 04/23/25 19:24:58.604
  I0423 19:24:58.612748 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:25:00.619
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:25:00.629
  I0423 19:25:01.631056 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/23/25 19:25:01.673
  STEP: Creating a configMap that should be mutated @ 04/23/25 19:25:01.681
  STEP: Deleting the collection of validation webhooks @ 04/23/25 19:25:01.7
  STEP: Creating a configMap that should not be mutated @ 04/23/25 19:25:01.726
  I0423 19:25:01.764713 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4063" for this suite. @ 04/23/25 19:25:01.767
  STEP: Destroying namespace "webhook-markers-952" for this suite. @ 04/23/25 19:25:01.771
• [3.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 04/23/25 19:25:01.79
  I0423 19:25:01.790800 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 19:25:01.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:01.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:01.807
  I0423 19:25:23.888678 25 container_probe.go:92] Container started at 2025-04-23 19:25:02 +0000 UTC, pod became ready at 2025-04-23 19:25:22 +0000 UTC
  I0423 19:25:23.888890 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3797" for this suite. @ 04/23/25 19:25:23.893
• [22.119 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 04/23/25 19:25:23.909
  I0423 19:25:23.909619 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pv @ 04/23/25 19:25:23.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:23.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:23.939
  STEP: Creating initial PV and PVC @ 04/23/25 19:25:23.942
  I0423 19:25:23.942764 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1382" @ 04/23/25 19:25:23.956
  STEP: Listing PVCs in namespace "pv-1382" @ 04/23/25 19:25:23.961
  STEP: Patching the PV "pv-1382-zcdhz" @ 04/23/25 19:25:23.965
  STEP: Patching the PVC "pvc-lc4z8" @ 04/23/25 19:25:23.985
  STEP: Getting PV "pv-1382-zcdhz" @ 04/23/25 19:25:23.993
  STEP: Getting PVC "pvc-lc4z8" @ 04/23/25 19:25:23.996
  STEP: Deleting PVC "pvc-lc4z8" @ 04/23/25 19:25:23.999
  STEP: Confirm deletion of PVC "pvc-lc4z8" @ 04/23/25 19:25:24.006
  STEP: Deleting PV "pv-1382-zcdhz" @ 04/23/25 19:25:26.014
  STEP: Confirm deletion of PV "pv-1382-zcdhz" @ 04/23/25 19:25:26.028
  STEP: Recreating another PV & PVC @ 04/23/25 19:25:28.038
  I0423 19:25:28.038587 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1382-85dc9" @ 04/23/25 19:25:28.059
  STEP: Updating the PVC "pvc-nv9sh" @ 04/23/25 19:25:28.066
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-nv9sh=updated" @ 04/23/25 19:25:28.072
  STEP: Deleting PVC "pvc-nv9sh" via DeleteCollection @ 04/23/25 19:25:28.078
  STEP: Confirm deletion of PVC "pvc-nv9sh" @ 04/23/25 19:25:28.088
  STEP: Deleting PV "pv-1382-85dc9" via DeleteCollection @ 04/23/25 19:25:28.095
  STEP: Confirm deletion of PV "pv-1382-85dc9" @ 04/23/25 19:25:28.144
  I0423 19:25:30.158092 25 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0423 19:25:30.158153 25 pv.go:205] Deleting PersistentVolumeClaim "pvc-nv9sh"
  I0423 19:25:30.161219 25 pv.go:193] Deleting PersistentVolume "pv-1382-85dc9"
  I0423 19:25:30.163401 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1382" for this suite. @ 04/23/25 19:25:30.165
• [6.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/23/25 19:25:30.168
  I0423 19:25:30.168712 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:25:30.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:30.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:30.179
  STEP: Creating a pod to test downward api env vars @ 04/23/25 19:25:30.181
  STEP: Saw pod success @ 04/23/25 19:25:34.199
  I0423 19:25:34.202287 25 output.go:196] Trying to get logs from node worker00 pod downward-api-3dff601b-0368-4339-8030-11bfcfc37665 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 19:25:34.207
  I0423 19:25:34.219555 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1240" for this suite. @ 04/23/25 19:25:34.222
• [4.057 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/23/25 19:25:34.225
  I0423 19:25:34.225443 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/23/25 19:25:34.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:34.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:34.233
  STEP: creating @ 04/23/25 19:25:34.234
  STEP: getting @ 04/23/25 19:25:34.241
  STEP: listing in namespace @ 04/23/25 19:25:34.244
  STEP: patching @ 04/23/25 19:25:34.247
  STEP: deleting @ 04/23/25 19:25:34.254
  I0423 19:25:34.263046 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3567" for this suite. @ 04/23/25 19:25:34.324
• [0.104 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 04/23/25 19:25:34.33
  I0423 19:25:34.330147 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename job @ 04/23/25 19:25:34.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:34.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:34.341
  STEP: Creating a suspended job @ 04/23/25 19:25:34.345
  STEP: Patching the Job @ 04/23/25 19:25:34.348
  STEP: Watching for Job to be patched @ 04/23/25 19:25:34.351
  I0423 19:25:34.352485 25 job.go:1330] Event ADDED observed for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-job-label:e2e-g7zth] and annotations: map[]
  I0423 19:25:34.352522 25 job.go:1333] Event MODIFIED found for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth] and annotations: map[]
  STEP: Updating the job @ 04/23/25 19:25:34.352
  STEP: Watching for Job to be updated @ 04/23/25 19:25:34.357
  I0423 19:25:34.358634 25 job.go:1333] Event MODIFIED found for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth] and annotations: map[updated:true]
  I0423 19:25:34.358661 25 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/23/25 19:25:34.358
  I0423 19:25:34.360228 25 job.go:1233] Job: e2e-g7zth as labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth]
  STEP: Waiting for job to complete @ 04/23/25 19:25:34.36
  STEP: Delete a job collection with a labelselector @ 04/23/25 19:25:44.37
  STEP: Watching for Job to be deleted @ 04/23/25 19:25:44.389
  I0423 19:25:44.390717 25 job.go:1330] Event MODIFIED observed for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth] and annotations: map[updated:true]
  I0423 19:25:44.390746 25 job.go:1330] Event MODIFIED observed for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth] and annotations: map[updated:true]
  I0423 19:25:44.391106 25 job.go:1330] Event MODIFIED observed for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth] and annotations: map[updated:true]
  I0423 19:25:44.391297 25 job.go:1330] Event MODIFIED observed for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth] and annotations: map[updated:true]
  I0423 19:25:44.391311 25 job.go:1330] Event MODIFIED observed for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth] and annotations: map[updated:true]
  I0423 19:25:44.391322 25 job.go:1333] Event DELETED found for Job e2e-g7zth in namespace job-7737 with labels: map[e2e-g7zth:patched e2e-job-label:e2e-g7zth] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/23/25 19:25:44.391
  I0423 19:25:44.393109 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7737" for this suite. @ 04/23/25 19:25:44.395
• [10.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/23/25 19:25:44.4
  I0423 19:25:44.400730 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:25:44.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:44.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:44.417
  STEP: Creating secret with name secret-test-37e02541-f53a-4f6d-bb1f-3079bb66be6b @ 04/23/25 19:25:44.418
  STEP: Creating a pod to test consume secrets @ 04/23/25 19:25:44.42
  STEP: Saw pod success @ 04/23/25 19:25:48.438
  I0423 19:25:48.442398 25 output.go:196] Trying to get logs from node worker00 pod pod-secrets-921bb14f-3066-4528-9b82-ad3f54d88f49 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:25:48.457
  I0423 19:25:48.467318 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8216" for this suite. @ 04/23/25 19:25:48.469
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/23/25 19:25:48.474
  I0423 19:25:48.474740 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:25:48.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:48.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:48.484
  STEP: Creating projection with secret that has name projected-secret-test-map-e0ad8241-ea83-4717-bac4-19cbc5e60f77 @ 04/23/25 19:25:48.486
  STEP: Creating a pod to test consume secrets @ 04/23/25 19:25:48.488
  STEP: Saw pod success @ 04/23/25 19:25:52.505
  I0423 19:25:52.506452 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-87074497-616e-4daa-a4a0-0923d583adbd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:25:52.51
  I0423 19:25:52.518599 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4175" for this suite. @ 04/23/25 19:25:52.52
• [4.049 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/23/25 19:25:52.523
  I0423 19:25:52.523228 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:25:52.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:52.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:52.534
  STEP: Creating projection with secret that has name projected-secret-test-f40dd730-5b8b-4ba6-a756-e2b512a44f1d @ 04/23/25 19:25:52.535
  STEP: Creating a pod to test consume secrets @ 04/23/25 19:25:52.538
  STEP: Saw pod success @ 04/23/25 19:25:56.555
  I0423 19:25:56.559013 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-secrets-40628d21-2a8c-4624-b5ff-0ef7165c06cf container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:25:56.563
  I0423 19:25:56.582193 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5001" for this suite. @ 04/23/25 19:25:56.584
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/23/25 19:25:56.587
  I0423 19:25:56.587431 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename deployment @ 04/23/25 19:25:56.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:56.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:56.597
  STEP: creating a Deployment @ 04/23/25 19:25:56.6
  I0423 19:25:56.600331 25 deployment.go:507] Creating simple deployment test-deployment-jt2zd
  I0423 19:25:56.609386 25 deployment.go:223] deployment "test-deployment-jt2zd" doesn't have the required revision set
  STEP: Getting /status @ 04/23/25 19:25:58.625
  I0423 19:25:58.627323 25 deployment.go:532] Deployment test-deployment-jt2zd has Conditions: [{Available True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jt2zd-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/23/25 19:25:58.627
  I0423 19:25:58.632836 25 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 25, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 25, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 19, 25, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 19, 25, 56, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-jt2zd-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/23/25 19:25:58.632
  I0423 19:25:58.634169 25 deployment.go:579] Observed &Deployment event: ADDED
  I0423 19:25:58.634195 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jt2zd-f4dbbbf74"}
  I0423 19:25:58.634250 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0423 19:25:58.634262 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jt2zd-f4dbbbf74"}
  I0423 19:25:58.634270 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 19:25:58.634323 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0423 19:25:58.634398 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 19:25:58.634408 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jt2zd-f4dbbbf74" is progressing.}
  I0423 19:25:58.634455 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0423 19:25:58.634465 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 19:25:58.634474 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jt2zd-f4dbbbf74" has successfully progressed.}
  I0423 19:25:58.634519 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0423 19:25:58.634530 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 19:25:58.634539 25 deployment.go:575] Observed Deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jt2zd-f4dbbbf74" has successfully progressed.}
  I0423 19:25:58.634548 25 deployment.go:572] Found Deployment test-deployment-jt2zd in namespace deployment-7313 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 19:25:58.634557 25 deployment.go:583] Deployment test-deployment-jt2zd has an updated status
  STEP: patching the Statefulset Status @ 04/23/25 19:25:58.634
  I0423 19:25:58.634580 25 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0423 19:25:58.639089 25 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/23/25 19:25:58.639
  I0423 19:25:58.640714 25 deployment.go:616] Observed &Deployment event: ADDED
  I0423 19:25:58.640755 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jt2zd-f4dbbbf74"}
  I0423 19:25:58.640859 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 19:25:58.640877 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-jt2zd-f4dbbbf74"}
  I0423 19:25:58.640886 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 19:25:58.640953 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 19:25:58.641063 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 19:25:58.641080 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:56 +0000 UTC 2025-04-23 19:25:56 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-jt2zd-f4dbbbf74" is progressing.}
  I0423 19:25:58.641193 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 19:25:58.641241 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 19:25:58.641254 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jt2zd-f4dbbbf74" has successfully progressed.}
  I0423 19:25:58.641310 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 19:25:58.641331 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:57 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 19:25:58.641341 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 19:25:57 +0000 UTC 2025-04-23 19:25:56 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-jt2zd-f4dbbbf74" has successfully progressed.}
  I0423 19:25:58.641350 25 deployment.go:612] Observed deployment test-deployment-jt2zd in namespace deployment-7313 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 19:25:58.641420 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 19:25:58.641473 25 deployment.go:609] Found deployment test-deployment-jt2zd in namespace deployment-7313 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0423 19:25:58.641482 25 deployment.go:620] Deployment test-deployment-jt2zd has a patched status
  I0423 19:25:58.643596 25 deployment.go:633] Deployment "test-deployment-jt2zd":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-jt2zd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad995984-e5cc-496b-92ab-7f210b7c0e5f",
      ResourceVersion: (string) (len=5) "39074",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 19:25:58.722723 25 deployment.go:40] New ReplicaSet "test-deployment-jt2zd-f4dbbbf74" of Deployment "test-deployment-jt2zd":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-jt2zd-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1d61f07-f2e3-4dd6-a8d5-686905d5dc2e",
      ResourceVersion: (string) (len=5) "39068",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-jt2zd",
          UID: (types.UID) (len=36) "ad995984-e5cc-496b-92ab-7f210b7c0e5f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 61 64 39  |k:{\"uid\":\"ad9|
              00000120  39 35 39 38 34 2d 65 35  63 63 2d 34 39 36 62 2d  |95984-e5cc-496b-|
              00000130  39 32 61 62 2d 37 66 32  31 30 62 37 63 30 65 35  |92ab-7f210b7c0e5|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 19:25:58.732403 25 deployment.go:68] Pod "test-deployment-jt2zd-f4dbbbf74-gc4b2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-jt2zd-f4dbbbf74-gc4b2",
      GenerateName: (string) (len=32) "test-deployment-jt2zd-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-7313",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46504c81-996c-4a33-9c0a-0a993663b262",
      ResourceVersion: (string) (len=5) "39067",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "51c12ef20ced40614e71ce6be14dbd1711e217fca26f1ed2c42f34e443b16da3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.156/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.156/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-jt2zd-f4dbbbf74",
          UID: (types.UID) (len=36) "f1d61f07-f2e3-4dd6-a8d5-686905d5dc2e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 66 31 64 36 31 66 30  37 2d 66 32 65 33 2d 34  |"f1d61f07-f2e3-4|
              000000a0  64 64 36 2d 61 38 64 35  2d 36 38 36 39 30 35 64  |dd6-a8d5-686905d|
              000000b0  35 64 63 32 65 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |5dc2e\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 36 5c 22 7d 22  |.200.131.156\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5h5nd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5h5nd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033156,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033156,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881033157,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e762ecd9f8321f4fdda71c1942a65f11c7fcad56ef5100e38833c95d5ac9db9d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:25:58.743079 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7313" for this suite. @ 04/23/25 19:25:58.746
• [2.163 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/23/25 19:25:58.751
  I0423 19:25:58.752009 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename init-container @ 04/23/25 19:25:58.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:25:58.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:25:58.763
  STEP: creating the pod @ 04/23/25 19:25:58.765
  I0423 19:25:58.765444 25 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0423 19:26:01.902972 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2563" for this suite. @ 04/23/25 19:26:01.906
• [3.161 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 04/23/25 19:26:01.912
  I0423 19:26:01.912698 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 19:26:01.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:26:01.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:26:01.923
  STEP: Creating service test in namespace statefulset-8143 @ 04/23/25 19:26:01.925
  STEP: Creating a new StatefulSet @ 04/23/25 19:26:01.927
  I0423 19:26:01.935461 25 wait.go:40] Found 0 stateful pods, waiting for 3
  I0423 19:26:11.937693 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:26:11.937772 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:26:11.937795 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:26:11.948619 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8143 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 19:26:12.030799 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 19:26:12.030897 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 19:26:12.030927 25 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/23/25 19:26:22.04
  I0423 19:26:22.062033 25 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 04/23/25 19:26:22.062
  STEP: Updating Pods in reverse ordinal order @ 04/23/25 19:26:32.069
  I0423 19:26:32.072640 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8143 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 19:26:32.209227 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 19:26:32.209271 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 19:26:32.209289 25 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 04/23/25 19:26:52.228
  I0423 19:26:52.228937 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8143 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 19:26:52.307115 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 19:26:52.307145 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 19:26:52.307154 25 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 19:27:02.333934 25 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 04/23/25 19:27:12.346
  I0423 19:27:12.349604 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-8143 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 19:27:12.433582 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 19:27:12.433735 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 19:27:12.433747 25 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 19:27:22.449188 25 statefulset.go:138] Deleting all statefulset in ns statefulset-8143
  I0423 19:27:22.451103 25 rest.go:150] Scaling statefulset ss2 to 0
  I0423 19:27:32.468487 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 19:27:32.470270 25 rest.go:88] Deleting statefulset ss2
  I0423 19:27:32.487868 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8143" for this suite. @ 04/23/25 19:27:32.49
• [90.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/23/25 19:27:32.495
  I0423 19:27:32.495563 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:27:32.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:27:32.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:27:32.504
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-5c5c204e-32df-4442-bdba-0a49aeddd6bf @ 04/23/25 19:27:32.594
  STEP: Creating the pod @ 04/23/25 19:27:32.6
  STEP: Updating configmap projected-configmap-test-upd-5c5c204e-32df-4442-bdba-0a49aeddd6bf @ 04/23/25 19:27:34.635
  STEP: waiting to observe update in volume @ 04/23/25 19:27:34.637
  I0423 19:28:48.984239 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9025" for this suite. @ 04/23/25 19:28:48.987
• [76.505 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/23/25 19:28:49
  I0423 19:28:49.000865 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename containers @ 04/23/25 19:28:49.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:28:49.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:28:49.016
  STEP: Creating a pod to test override command @ 04/23/25 19:28:49.018
  STEP: Saw pod success @ 04/23/25 19:28:53.038
  I0423 19:28:53.043683 25 output.go:196] Trying to get logs from node worker00 pod client-containers-f68c8be3-266b-46b5-bc44-22923efd4601 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:28:53.049
  I0423 19:28:53.078607 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4798" for this suite. @ 04/23/25 19:28:53.085
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 04/23/25 19:28:53.089
  I0423 19:28:53.089384 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename job @ 04/23/25 19:28:53.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:28:53.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:28:53.101
  STEP: Creating a job @ 04/23/25 19:28:53.102
  STEP: Ensuring active pods == parallelism @ 04/23/25 19:28:53.105
  STEP: Orphaning one of the Job's Pods @ 04/23/25 19:28:55.112
  I0423 19:28:55.635525 25 pod_client.go:173] Successfully updated pod "adopt-release-8gktr"
  STEP: Checking that the Job readopts the Pod @ 04/23/25 19:28:55.636
  STEP: Removing the labels from the Job's Pod @ 04/23/25 19:28:57.649
  I0423 19:28:58.165455 25 pod_client.go:173] Successfully updated pod "adopt-release-8gktr"
  STEP: Checking that the Job releases the Pod @ 04/23/25 19:28:58.167
  I0423 19:29:00.172816 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9323" for this suite. @ 04/23/25 19:29:00.175
• [7.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 04/23/25 19:29:00.194
  I0423 19:29:00.194785 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:29:00.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:29:00.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:29:00.208
  STEP: creating all guestbook components @ 04/23/25 19:29:00.209
  I0423 19:29:00.209698 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0423 19:29:00.209764 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 create -f -'
  I0423 19:29:00.283995 25 builder.go:146] stderr: ""
  I0423 19:29:00.284478 25 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0423 19:29:00.284538 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0423 19:29:00.284611 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 create -f -'
  I0423 19:29:00.366067 25 builder.go:146] stderr: ""
  I0423 19:29:00.366288 25 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0423 19:29:00.366363 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0423 19:29:00.366520 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 create -f -'
  I0423 19:29:00.460539 25 builder.go:146] stderr: ""
  I0423 19:29:00.460719 25 builder.go:147] stdout: "service/frontend created\n"
  I0423 19:29:00.461489 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0423 19:29:00.462953 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 create -f -'
  I0423 19:29:00.525893 25 builder.go:146] stderr: ""
  I0423 19:29:00.525932 25 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0423 19:29:00.525978 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0423 19:29:00.526103 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 create -f -'
  I0423 19:29:00.618357 25 builder.go:146] stderr: ""
  I0423 19:29:00.618389 25 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0423 19:29:00.618430 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0423 19:29:00.618597 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 create -f -'
  I0423 19:29:00.702326 25 builder.go:146] stderr: ""
  I0423 19:29:00.702356 25 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/23/25 19:29:00.702
  I0423 19:29:00.702406 25 kubectl.go:2282] Waiting for all frontend pods to be Running.
  I0423 19:29:05.754027 25 kubectl.go:2286] Waiting for frontend to serve content.
  I0423 19:29:05.760910 25 kubectl.go:2291] Trying to add a new entry to the guestbook.
  I0423 19:29:05.774213 25 kubectl.go:2296] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/23/25 19:29:05.78
  I0423 19:29:05.780436 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 delete --grace-period=0 --force -f -'
  I0423 19:29:05.835663 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 19:29:05.835694 25 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 19:29:05.835
  I0423 19:29:05.835783 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 delete --grace-period=0 --force -f -'
  I0423 19:29:05.893443 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 19:29:05.893473 25 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 19:29:05.893
  I0423 19:29:05.893555 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 delete --grace-period=0 --force -f -'
  I0423 19:29:05.950776 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 19:29:05.950818 25 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 19:29:05.95
  I0423 19:29:05.950948 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 delete --grace-period=0 --force -f -'
  I0423 19:29:06.015469 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 19:29:06.015552 25 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 19:29:06.016
  I0423 19:29:06.016718 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 delete --grace-period=0 --force -f -'
  I0423 19:29:06.111911 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 19:29:06.111953 25 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 19:29:06.112
  I0423 19:29:06.112083 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-4009 delete --grace-period=0 --force -f -'
  I0423 19:29:06.222950 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 19:29:06.222989 25 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0423 19:29:06.223086 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4009" for this suite. @ 04/23/25 19:29:06.232
• [6.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/23/25 19:29:06.246
  I0423 19:29:06.246994 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename conformance-tests @ 04/23/25 19:29:06.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:29:06.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:29:06.292
  STEP: Getting node addresses @ 04/23/25 19:29:06.301
  I0423 19:29:06.301286 25 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0423 19:29:06.330736 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-1562" for this suite. @ 04/23/25 19:29:06.338
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/23/25 19:29:06.347
  I0423 19:29:06.347674 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 19:29:06.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:29:06.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:29:06.399
  STEP: Creating replication controller my-hostname-basic-fca02a33-de5b-4b9a-861e-f7a0206f3e22 @ 04/23/25 19:29:06.404
  I0423 19:29:06.451560 25 resource.go:87] Pod name my-hostname-basic-fca02a33-de5b-4b9a-861e-f7a0206f3e22: Found 0 pods out of 1
  I0423 19:29:11.461373 25 resource.go:87] Pod name my-hostname-basic-fca02a33-de5b-4b9a-861e-f7a0206f3e22: Found 1 pods out of 1
  I0423 19:29:11.461429 25 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-fca02a33-de5b-4b9a-861e-f7a0206f3e22" are running
  I0423 19:29:11.465244 25 rc.go:523] Pod "my-hostname-basic-fca02a33-de5b-4b9a-861e-f7a0206f3e22-gkhlk" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 19:29:07 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 19:29:06 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 19:29:07 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 19:29:07 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 19:29:06 +0000 UTC Reason: Message:}])
  I0423 19:29:11.465272 25 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/23/25 19:29:11.465
  I0423 19:29:11.471485 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5790" for this suite. @ 04/23/25 19:29:11.474
• [5.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/23/25 19:29:11.479
  I0423 19:29:11.479420 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 19:29:11.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:29:11.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:29:11.491
  I0423 19:29:11.578072 25 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/23/25 19:29:11.581
  I0423 19:29:11.583746 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:29:11.584019 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/23/25 19:29:11.584
  I0423 19:29:11.700925 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:29:11.700962 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:29:12.692514 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:29:12.692593 25 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/23/25 19:29:12.696
  I0423 19:29:12.725797 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:29:12.725830 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/23/25 19:29:12.725
  I0423 19:29:12.792981 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:29:12.793018 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:29:13.739181 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:29:13.739257 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:29:14.734501 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:29:14.734524 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:29:15.738171 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:29:15.738240 25 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 19:29:15.744
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3337, will wait for the garbage collector to delete the pods @ 04/23/25 19:29:15.744
  I0423 19:29:15.814668 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.483537ms
  I0423 19:29:15.914906 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.239703ms
  I0423 19:29:18.620312 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:29:18.620352 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 19:29:18.623680 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40824"},"items":null}

  I0423 19:29:18.625657 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40824"},"items":null}

  I0423 19:29:18.641073 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3337" for this suite. @ 04/23/25 19:29:18.647
• [7.178 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/23/25 19:29:18.658
  I0423 19:29:18.658819 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename watch @ 04/23/25 19:29:18.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:29:18.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:29:18.678
  STEP: getting a starting resourceVersion @ 04/23/25 19:29:18.684
  STEP: starting a background goroutine to produce watch events @ 04/23/25 19:29:18.686
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/23/25 19:29:18.686
  I0423 19:29:21.469278 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4566" for this suite. @ 04/23/25 19:29:21.517
• [2.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 04/23/25 19:29:21.566
  I0423 19:29:21.566806 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 19:29:21.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:29:21.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:29:21.575
  STEP: Creating service test in namespace statefulset-7289 @ 04/23/25 19:29:21.576
  STEP: Creating a new StatefulSet @ 04/23/25 19:29:21.579
  I0423 19:29:21.588578 25 wait.go:40] Found 0 stateful pods, waiting for 3
  I0423 19:29:31.590341 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:29:31.590380 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:29:31.590393 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/23/25 19:29:31.597
  I0423 19:29:31.611878 25 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 04/23/25 19:29:31.611
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/23/25 19:29:41.623
  STEP: Performing a canary update @ 04/23/25 19:29:41.623
  I0423 19:29:41.630416 25 statefulset.go:2507] Updating stateful set ss2
  I0423 19:29:41.637709 25 wait.go:74] Waiting for Pod statefulset-7289/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/23/25 19:29:51.64
  I0423 19:29:51.740388 25 wait.go:40] Found 2 stateful pods, waiting for 3
  I0423 19:30:01.683465 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:30:01.683544 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:30:01.683558 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/23/25 19:30:01.688
  I0423 19:30:01.703058 25 statefulset.go:2507] Updating stateful set ss2
  I0423 19:30:01.712922 25 wait.go:74] Waiting for Pod statefulset-7289/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0423 19:30:11.719393 25 statefulset.go:2507] Updating stateful set ss2
  I0423 19:30:11.728313 25 wait.go:56] Waiting for StatefulSet statefulset-7289/ss2 to complete update
  I0423 19:30:11.728345 25 wait.go:63] Waiting for Pod statefulset-7289/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0423 19:30:21.735664 25 statefulset.go:138] Deleting all statefulset in ns statefulset-7289
  I0423 19:30:21.739975 25 rest.go:150] Scaling statefulset ss2 to 0
  I0423 19:30:31.758281 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 19:30:31.761788 25 rest.go:88] Deleting statefulset ss2
  I0423 19:30:31.782354 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7289" for this suite. @ 04/23/25 19:30:31.785
• [70.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/23/25 19:30:31.792
  I0423 19:30:31.792898 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 19:30:31.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:30:31.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:30:31.806
  I0423 19:30:31.807465 25 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/23/25 19:30:32.814
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/23/25 19:30:32.827
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/23/25 19:30:33.832
  I0423 19:30:33.838000 25 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/23/25 19:30:33.838
  I0423 19:30:34.843818 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8242" for this suite. @ 04/23/25 19:30:34.846
• [3.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/23/25 19:30:34.862
  I0423 19:30:34.862354 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 19:30:34.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:30:34.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:30:34.874
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/23/25 19:30:34.876
  STEP: Saw pod success @ 04/23/25 19:30:38.892
  I0423 19:30:38.900017 25 output.go:196] Trying to get logs from node worker00 pod pod-bbf7867f-24d5-4337-8139-33c9a0c41340 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:30:38.912
  I0423 19:30:38.936800 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3200" for this suite. @ 04/23/25 19:30:38.938
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/23/25 19:30:38.942
  I0423 19:30:38.942982 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 19:30:38.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:30:38.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:30:38.955
  STEP: Create a Replicaset @ 04/23/25 19:30:38.959
  STEP: Verify that the required pods have come up. @ 04/23/25 19:30:38.964
  I0423 19:30:38.966791 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0423 19:30:43.977168 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 19:30:43.977
  STEP: Getting /status @ 04/23/25 19:30:43.977
  I0423 19:30:43.980433 25 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/23/25 19:30:43.98
  I0423 19:30:43.985939 25 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/23/25 19:30:43.985
  I0423 19:30:43.987577 25 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0423 19:30:43.988877 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0423 19:30:43.989253 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0423 19:30:43.989530 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0423 19:30:43.989733 25 replica_set.go:682] Found replicaset test-rs in namespace replicaset-7928 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 19:30:43.989754 25 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/23/25 19:30:43.989
  I0423 19:30:43.989777 25 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0423 19:30:43.996385 25 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/23/25 19:30:43.996
  I0423 19:30:43.999399 25 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0423 19:30:43.999461 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0423 19:30:44.000031 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0423 19:30:44.000339 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0423 19:30:44.000382 25 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-7928 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 19:30:44.000552 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0423 19:30:44.001751 25 replica_set.go:718] Found replicaset test-rs in namespace replicaset-7928 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0423 19:30:44.002761 25 replica_set.go:729] Replicaset test-rs has a patched status
  I0423 19:30:44.003861 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7928" for this suite. @ 04/23/25 19:30:44.005
• [5.066 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/23/25 19:30:44.009
  I0423 19:30:44.009307 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename deployment @ 04/23/25 19:30:44.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:30:44.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:30:44.022
  I0423 19:30:44.024530 25 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0423 19:30:44.033302 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 19:30:44.033
  I0423 19:30:46.044103 25 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0423 19:30:46.046447 25 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0423 19:30:46.049596 25 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0423 19:30:48.055050 25 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0423 19:30:48.057085 25 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0423 19:30:48.060924 25 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bd80561-711a-4017-a80c-b47629f042e0",
      ResourceVersion: (string) (len=5) "41824",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 19:30:48.064465 25 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a91f9922-7052-47c2-8fb7-aa05027341d3",
      ResourceVersion: (string) (len=5) "41814",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2bd80561-711a-4017-a80c-b47629f042e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 62 64 38 30 35  36 31 2d 37 31 31 61 2d  |\"2bd80561-711a-|
              00000120  34 30 31 37 2d 61 38 30  63 2d 62 34 37 36 32 39  |4017-a80c-b47629|
              00000130  66 30 34 32 65 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f042e0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 19:30:48.066409 25 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0423 19:30:48.066547 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "608bcc60-c09c-497d-b3d3-6b93493ddb47",
      ResourceVersion: (string) (len=5) "41823",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "2bd80561-711a-4017-a80c-b47629f042e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 32 62 64 38 30 35 36  |"uid\":\"2bd8056|
              000000b0  31 2d 37 31 31 61 2d 34  30 31 37 2d 61 38 30 63  |1-711a-4017-a80c|
              000000c0  2d 62 34 37 36 32 39 66  30 34 32 65 30 5c 22 7d  |-b47629f042e0\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 19:30:48.071450 25 deployment.go:68] Pod "test-rolling-update-deployment-56bb5bb765-jnq77" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-jnq77",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-8404",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "869165ef-2784-40ed-a9e9-f64c6c21e886",
      ResourceVersion: (string) (len=5) "41813",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dcf1f9c001486da6e4fce6cef22e6801395a21027f82eb8d8ac3db1f63715da1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.136/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.136/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "a91f9922-7052-47c2-8fb7-aa05027341d3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  31 66 39 39 32 32 2d 37  |d\":\"a91f9922-7|
              00000090  30 35 32 2d 34 37 63 32  2d 38 66 62 37 2d 61 61  |052-47c2-8fb7-aa|
              000000a0  30 35 30 32 37 33 34 31  64 33 5c 22 7d 22 3a 7b  |05027341d3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 33 36 5c 22 7d 22  |.200.131.136\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hrdzn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hrdzn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881033446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881033446,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881033446,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://b48975706d86329436ff028d1c367c9f959fd958e01b5af1ec3b535e8f647331",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 19:30:48.074962 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8404" for this suite. @ 04/23/25 19:30:48.078
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 04/23/25 19:30:48.088
  I0423 19:30:48.088617 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename dns @ 04/23/25 19:30:48.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:30:48.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:30:48.111
  STEP: Creating a test headless service @ 04/23/25 19:30:48.113
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5450 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5450;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5450 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5450;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5450.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5450.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5450.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5450.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5450.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5450.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5450.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5450.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5450.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5450.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5450.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5450.svc;check="$$(dig +notcp +noall +answer +search 118.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.118_udp@PTR;check="$$(dig +tcp +noall +answer +search 118.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.118_tcp@PTR;sleep 1; done
   @ 04/23/25 19:30:48.121
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5450 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5450;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5450 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5450;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5450.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5450.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5450.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5450.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5450.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5450.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5450.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5450.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5450.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5450.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5450.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5450.svc;check="$$(dig +notcp +noall +answer +search 118.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.118_udp@PTR;check="$$(dig +tcp +noall +answer +search 118.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.118_tcp@PTR;sleep 1; done
   @ 04/23/25 19:30:48.121
  STEP: creating a pod to probe DNS @ 04/23/25 19:30:48.121
  STEP: submitting the pod to kubernetes @ 04/23/25 19:30:48.121
  STEP: retrieving the pod @ 04/23/25 19:30:50.144
  STEP: looking for the results for each expected name from probers @ 04/23/25 19:30:50.148
  I0423 19:30:50.151907 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.154163 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.155836 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.157225 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.159167 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.160609 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.163631 25 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.173952 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.175862 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.177339 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.178663 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.180163 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.181894 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:50.189215 25 dns_common.go:490] Lookups using dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5450 wheezy_tcp@dns-test-service.dns-5450 wheezy_udp@dns-test-service.dns-5450.svc wheezy_tcp@dns-test-service.dns-5450.svc wheezy_tcp@_http._tcp.dns-test-service.dns-5450.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5450 jessie_tcp@dns-test-service.dns-5450 jessie_udp@dns-test-service.dns-5450.svc jessie_tcp@dns-test-service.dns-5450.svc]

  I0423 19:30:50.191532 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:30:50.194273 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:30:50.196553 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:30:55.151352 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.153404 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.154909 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.156168 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.157509 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.159256 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.171179 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.173531 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.175152 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.176518 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.178147 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.180152 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:30:55.188484 25 dns_common.go:490] Lookups using dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5450 wheezy_tcp@dns-test-service.dns-5450 wheezy_udp@dns-test-service.dns-5450.svc wheezy_tcp@dns-test-service.dns-5450.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5450 jessie_tcp@dns-test-service.dns-5450 jessie_udp@dns-test-service.dns-5450.svc jessie_tcp@dns-test-service.dns-5450.svc]

  I0423 19:30:55.191793 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:30:55.194762 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:30:55.197755 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:31:00.151509 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.153648 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.155496 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.158752 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.160893 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.163059 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.175619 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.176689 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.178322 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.181958 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.183998 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.187653 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:00.199240 25 dns_common.go:490] Lookups using dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5450 wheezy_tcp@dns-test-service.dns-5450 wheezy_udp@dns-test-service.dns-5450.svc wheezy_tcp@dns-test-service.dns-5450.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5450 jessie_tcp@dns-test-service.dns-5450 jessie_udp@dns-test-service.dns-5450.svc jessie_tcp@dns-test-service.dns-5450.svc]

  I0423 19:31:00.201742 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:31:00.203620 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:31:00.205857 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:31:05.153522 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.156145 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.157938 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.159526 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.161599 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.163579 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.173661 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.175360 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.177329 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.179177 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.181067 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.182419 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:05.193951 25 dns_common.go:490] Lookups using dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5450 wheezy_tcp@dns-test-service.dns-5450 wheezy_udp@dns-test-service.dns-5450.svc wheezy_tcp@dns-test-service.dns-5450.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5450 jessie_tcp@dns-test-service.dns-5450 jessie_udp@dns-test-service.dns-5450.svc jessie_tcp@dns-test-service.dns-5450.svc]

  I0423 19:31:05.196426 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:31:05.199115 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:31:05.201841 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:31:10.150773 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.153341 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.157189 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.160900 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.163243 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.166366 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.176409 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.177602 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.178954 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.180352 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.181524 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.182895 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:10.190368 25 dns_common.go:490] Lookups using dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5450 wheezy_tcp@dns-test-service.dns-5450 wheezy_udp@dns-test-service.dns-5450.svc wheezy_tcp@dns-test-service.dns-5450.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5450 jessie_tcp@dns-test-service.dns-5450 jessie_udp@dns-test-service.dns-5450.svc jessie_tcp@dns-test-service.dns-5450.svc]

  I0423 19:31:10.203394 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:31:10.205940 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:31:10.209287 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:31:15.151512 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.155410 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.157761 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.159718 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.162080 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.164160 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.174958 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.176592 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.178116 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.179327 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450 from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.181002 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.182664 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-5450.svc from pod dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c: the server could not find the requested resource (get pods dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c)
  I0423 19:31:15.189236 25 dns_common.go:490] Lookups using dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-5450 wheezy_tcp@dns-test-service.dns-5450 wheezy_udp@dns-test-service.dns-5450.svc wheezy_tcp@dns-test-service.dns-5450.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5450 jessie_tcp@dns-test-service.dns-5450 jessie_udp@dns-test-service.dns-5450.svc jessie_tcp@dns-test-service.dns-5450.svc]

  I0423 19:31:15.191355 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:31:15.194059 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:31:15.197409 25 dns_common.go:496] Pod client logs for jessie-querier: 
  I0423 19:31:20.180283 25 dns_common.go:528] DNS probes using dns-5450/dns-test-9779f505-ca9d-451e-b7a1-32540b5b2d5c succeeded

  STEP: deleting the pod @ 04/23/25 19:31:20.18
  STEP: deleting the test service @ 04/23/25 19:31:20.192
  STEP: deleting the test headless service @ 04/23/25 19:31:20.23
  I0423 19:31:20.242348 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5450" for this suite. @ 04/23/25 19:31:20.246
• [32.164 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/23/25 19:31:20.252
  I0423 19:31:20.253006 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 19:31:20.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:31:20.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:31:20.272
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/23/25 19:31:20.274
  STEP: Saw pod success @ 04/23/25 19:31:22.29
  I0423 19:31:22.293101 25 output.go:196] Trying to get logs from node worker00 pod pod-5605143c-4f89-4843-ad3f-0253dd2d07b4 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:31:22.299
  I0423 19:31:22.306936 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9407" for this suite. @ 04/23/25 19:31:22.309
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/23/25 19:31:22.316
  I0423 19:31:22.316218 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 19:31:22.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:31:22.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:31:22.334
  STEP: Creating simple DaemonSet "daemon-set" @ 04/23/25 19:31:22.416
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 19:31:22.421
  I0423 19:31:22.511755 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:31:22.511783 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:31:23.427531 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 19:31:23.427586 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/23/25 19:31:23.431
  I0423 19:31:23.532502 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:31:23.532552 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:31:24.445660 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:31:24.445718 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:31:25.442180 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:31:25.442205 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  I0423 19:31:26.441582 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 19:31:26.441620 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 19:31:26.443
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3769, will wait for the garbage collector to delete the pods @ 04/23/25 19:31:26.443
  I0423 19:31:26.513080 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.915445ms
  I0423 19:31:26.614085 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.006757ms
  I0423 19:31:29.119351 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:31:29.119409 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 19:31:29.123490 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42198"},"items":null}

  I0423 19:31:29.129462 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42198"},"items":null}

  I0423 19:31:29.136396 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3769" for this suite. @ 04/23/25 19:31:29.14
• [6.830 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/23/25 19:31:29.146
  I0423 19:31:29.146397 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/23/25 19:31:29.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:31:29.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:31:29.159
  STEP: Creating 50 configmaps @ 04/23/25 19:31:29.162
  STEP: Creating RC which spawns configmap-volume pods @ 04/23/25 19:31:29.404
  I0423 19:31:29.526897 25 resource.go:87] Pod name wrapped-volume-race-b757b7a6-0cc9-4a9d-9360-61e5290e1914: Found 3 pods out of 5
  I0423 19:31:34.535962 25 resource.go:87] Pod name wrapped-volume-race-b757b7a6-0cc9-4a9d-9360-61e5290e1914: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/23/25 19:31:34.536
  STEP: Creating RC which spawns configmap-volume pods @ 04/23/25 19:31:34.546
  I0423 19:31:34.569805 25 resource.go:87] Pod name wrapped-volume-race-88ac7707-7fbb-4bbd-a573-6a4e44949aa9: Found 1 pods out of 5
  I0423 19:31:39.576456 25 resource.go:87] Pod name wrapped-volume-race-88ac7707-7fbb-4bbd-a573-6a4e44949aa9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/23/25 19:31:39.576
  STEP: Creating RC which spawns configmap-volume pods @ 04/23/25 19:31:39.584
  I0423 19:31:39.600329 25 resource.go:87] Pod name wrapped-volume-race-88bf72a1-3e1c-494e-a356-6b398026e65b: Found 1 pods out of 5
  I0423 19:31:44.606170 25 resource.go:87] Pod name wrapped-volume-race-88bf72a1-3e1c-494e-a356-6b398026e65b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/23/25 19:31:44.606
  STEP: deleting ReplicationController wrapped-volume-race-88bf72a1-3e1c-494e-a356-6b398026e65b in namespace emptydir-wrapper-228, will wait for the garbage collector to delete the pods @ 04/23/25 19:31:44.615
  I0423 19:31:44.674034 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-88bf72a1-3e1c-494e-a356-6b398026e65b took: 6.937761ms
  I0423 19:31:44.775133 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-88bf72a1-3e1c-494e-a356-6b398026e65b pods took: 101.096773ms
  STEP: deleting ReplicationController wrapped-volume-race-88ac7707-7fbb-4bbd-a573-6a4e44949aa9 in namespace emptydir-wrapper-228, will wait for the garbage collector to delete the pods @ 04/23/25 19:31:45.875
  I0423 19:31:45.934658 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-88ac7707-7fbb-4bbd-a573-6a4e44949aa9 took: 6.883208ms
  I0423 19:31:46.036110 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-88ac7707-7fbb-4bbd-a573-6a4e44949aa9 pods took: 101.451095ms
  STEP: deleting ReplicationController wrapped-volume-race-b757b7a6-0cc9-4a9d-9360-61e5290e1914 in namespace emptydir-wrapper-228, will wait for the garbage collector to delete the pods @ 04/23/25 19:31:47.637
  I0423 19:31:47.693181 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-b757b7a6-0cc9-4a9d-9360-61e5290e1914 took: 3.844555ms
  I0423 19:31:47.794429 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-b757b7a6-0cc9-4a9d-9360-61e5290e1914 pods took: 101.224533ms
  STEP: Cleaning up the configMaps @ 04/23/25 19:31:49.295
  I0423 19:31:49.401111 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-228" for this suite. @ 04/23/25 19:31:49.403
• [20.260 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 04/23/25 19:31:49.406
  I0423 19:31:49.406833 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:31:49.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:31:49.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:31:49.415
  STEP: Setting up server cert @ 04/23/25 19:31:49.425
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:31:49.583
  STEP: Deploying the webhook pod @ 04/23/25 19:31:49.586
  STEP: Wait for the deployment to be ready @ 04/23/25 19:31:49.593
  I0423 19:31:49.601323 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:31:51.607
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:31:51.631
  I0423 19:31:52.632860 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/23/25 19:31:52.637
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 19:31:52.644
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/23/25 19:31:52.647
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 19:31:52.652
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/23/25 19:31:52.658
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 19:31:52.662
  I0423 19:31:52.688696 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9706" for this suite. @ 04/23/25 19:31:52.69
  STEP: Destroying namespace "webhook-markers-8979" for this suite. @ 04/23/25 19:31:52.695
• [3.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 04/23/25 19:31:52.701
  I0423 19:31:52.701674 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 19:31:52.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:31:52.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:31:52.716
  I0423 19:31:52.719222 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:31:55.766023 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3753" for this suite. @ 04/23/25 19:31:55.77
• [3.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 04/23/25 19:31:55.777
  I0423 19:31:55.777520 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 19:31:55.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:31:55.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:31:55.799
  STEP: creating the pod with failed condition @ 04/23/25 19:31:55.8
  STEP: updating the pod @ 04/23/25 19:33:55.806
  I0423 19:33:56.326053 25 pod_client.go:173] Successfully updated pod "var-expansion-d3d97808-a915-4c5b-98d5-74f55e1f58ce"
  STEP: waiting for pod running @ 04/23/25 19:33:56.326
  STEP: deleting the pod gracefully @ 04/23/25 19:33:58.338
  I0423 19:33:58.338892 25 delete.go:62] Deleting pod "var-expansion-d3d97808-a915-4c5b-98d5-74f55e1f58ce" in namespace "var-expansion-7898"
  I0423 19:33:58.344724 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-d3d97808-a915-4c5b-98d5-74f55e1f58ce" to be fully deleted
  I0423 19:34:30.425717 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7898" for this suite. @ 04/23/25 19:34:30.428
• [154.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 04/23/25 19:34:30.432
  I0423 19:34:30.432222 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 19:34:30.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:34:30.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:34:30.442
  I0423 19:34:30.443531 25 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 19:34:30.536051 25 util.go:393] Waiting for terminating namespaces to be deleted...
  I0423 19:34:30.539973 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 19:34:30.544032 25 predicates.go:957] etcd-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544135 25 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0423 19:34:30.544146 25 predicates.go:957] gobetween-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544154 25 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 19:34:30.544167 25 predicates.go:957] kube-apiserver-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544174 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0423 19:34:30.544182 25 predicates.go:957] kube-controller-manager-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544189 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0423 19:34:30.544196 25 predicates.go:957] kube-proxy-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544251 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 19:34:30.544260 25 predicates.go:957] kube-scheduler-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544267 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0423 19:34:30.544274 25 predicates.go:957] calico-node-t7722 from networking started at 2025-04-23 18:08:38 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544280 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 19:34:30.544287 25 predicates.go:957] metallb-speaker-8h5gw from networking started at 2025-04-23 19:07:31 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544294 25 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 19:34:30.544301 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-23 18:12:31 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544307 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 19:34:30.544315 25 predicates.go:957] sonobuoy-e2e-job-8e2e29f3e66e467f from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:34:30.544321 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0423 19:34:30.544365 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:34:30.544382 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-be276f75500849d8-mwsrb from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:34:30.544390 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:34:30.544396 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 19:34:30.544403 25 predicates.go:957] ceph-csi-cephfs-nodeplugin-db7xs from storage started at 2025-04-23 19:07:31 +0000 UTC (3 container statuses recorded)
  I0423 19:34:30.544410 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:34:30.544416 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:34:30.544425 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.544432 25 predicates.go:957] ceph-csi-rbd-nodeplugin-9vr2q from storage started at 2025-04-23 19:07:31 +0000 UTC (3 container statuses recorded)
  I0423 19:34:30.544437 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:34:30.544480 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:34:30.544507 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.544514 25 predicates.go:957] ceph-mon-worker00-f69c45b64-gztsp from storage started at 2025-04-23 19:07:31 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.544519 25 predicates.go:959] 	Container ceph-mon ready: true, restart count 0
  I0423 19:34:30.544526 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 19:34:30.551942 25 predicates.go:957] coredns-9b4dff67b-c8475 from kube-system started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552004 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 19:34:30.552011 25 predicates.go:957] coredns-9b4dff67b-pkcwz from kube-system started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552017 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 19:34:30.552022 25 predicates.go:957] gobetween-worker01 from kube-system started at 2025-04-23 18:07:44 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552027 25 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 19:34:30.552032 25 predicates.go:957] kube-proxy-worker01 from kube-system started at 2025-04-23 18:07:44 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552037 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 19:34:30.552043 25 predicates.go:957] kubernetes-dashboard-api-5fdc7d7fcc-hr9hb from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552120 25 predicates.go:959] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 19:34:30.552126 25 predicates.go:957] kubernetes-dashboard-auth-85745c57f4-ck2dl from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552131 25 predicates.go:959] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 19:34:30.552136 25 predicates.go:957] kubernetes-dashboard-kong-859475c6c4-n9bsh from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552141 25 predicates.go:959] 	Container proxy ready: true, restart count 0
  I0423 19:34:30.552149 25 predicates.go:957] kubernetes-dashboard-metrics-scraper-6996d84f57-fjmgz from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552153 25 predicates.go:959] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 19:34:30.552159 25 predicates.go:957] kubernetes-dashboard-web-684dd555d6-hnrf5 from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552421 25 predicates.go:959] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 19:34:30.552532 25 predicates.go:957] calico-kube-controllers-78fc9c8775-p2x92 from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552539 25 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 19:34:30.552546 25 predicates.go:957] calico-node-7pxkw from networking started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552603 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 19:34:30.552610 25 predicates.go:957] calico-typha-7f9677b8db-52khj from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552615 25 predicates.go:959] 	Container calico-typha ready: true, restart count 0
  I0423 19:34:30.552621 25 predicates.go:957] metallb-controller-6b6cbb75b9-dxlx8 from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552625 25 predicates.go:959] 	Container controller ready: true, restart count 0
  I0423 19:34:30.552631 25 predicates.go:957] metallb-speaker-w4trl from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.552635 25 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 19:34:30.552641 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-be276f75500849d8-b29nj from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:34:30.552646 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:34:30.552651 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 19:34:30.552656 25 predicates.go:957] ceph-csi-cephfs-nodeplugin-4mjql from storage started at 2025-04-23 18:08:35 +0000 UTC (3 container statuses recorded)
  I0423 19:34:30.552661 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:34:30.552666 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:34:30.552677 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.552683 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-86q8j from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:34:30.552688 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:34:30.552692 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:34:30.552697 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:34:30.552702 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:34:30.552707 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.552713 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-r958b from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:34:30.552718 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:34:30.552723 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:34:30.552729 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:34:30.552803 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:34:30.553041 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.553097 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-wppg5 from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:34:30.553103 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:34:30.553139 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:34:30.553144 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:34:30.553149 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:34:30.553154 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.553271 25 predicates.go:957] ceph-csi-rbd-nodeplugin-cxbdp from storage started at 2025-04-23 18:08:35 +0000 UTC (3 container statuses recorded)
  I0423 19:34:30.553302 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:34:30.553639 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:34:30.553646 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.553653 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-455gl from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:34:30.553658 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:34:30.553663 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:34:30.553668 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:34:30.553673 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:34:30.553678 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:34:30.553683 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:34:30.553688 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.553695 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-mztv7 from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:34:30.553700 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:34:30.553705 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:34:30.553710 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:34:30.553715 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:34:30.553720 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:34:30.553725 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:34:30.553730 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.553736 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-ppn52 from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:34:30.553741 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:34:30.553746 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:34:30.553751 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:34:30.553760 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:34:30.553764 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:34:30.553769 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:34:30.553774 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:34:30.553780 25 predicates.go:957] ceph-mds-worker01-b7d5fc474-hv782 from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.553785 25 predicates.go:959] 	Container ceph-mds ready: true, restart count 0
  I0423 19:34:30.553790 25 predicates.go:957] ceph-mgr-worker01-559c86787f-24g2t from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.553795 25 predicates.go:959] 	Container ceph-mgr ready: true, restart count 0
  I0423 19:34:30.553800 25 predicates.go:957] ceph-osd-worker01-56b55bd558-fprzw from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.553805 25 predicates.go:959] 	Container ceph-osd ready: true, restart count 0
  I0423 19:34:30.553811 25 predicates.go:957] ceph-rgw-worker01-6cd4858446-n8rlr from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.553910 25 predicates.go:959] 	Container ceph-rgw ready: true, restart count 0
  I0423 19:34:30.553940 25 predicates.go:957] ceph-setup-bth5g from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.553970 25 predicates.go:959] 	Container ceph ready: false, restart count 0
  I0423 19:34:30.554264 25 predicates.go:957] snapshot-controller-79d4d6679-bfdwx from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.554272 25 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 19:34:30.554326 25 predicates.go:957] snapshot-controller-79d4d6679-nxs6g from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.554340 25 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 19:34:30.554346 25 predicates.go:957] snapshot-validation-webhook-f99b99c55-zf2x8 from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:34:30.554351 25 predicates.go:959] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: verifying the node has the label node worker00 @ 04/23/25 19:34:30.567
  STEP: verifying the node has the label node worker01 @ 04/23/25 19:34:30.581
  I0423 19:34:30.647633 25 predicates.go:372] Pod coredns-9b4dff67b-c8475 requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647658 25 predicates.go:372] Pod coredns-9b4dff67b-pkcwz requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647665 25 predicates.go:372] Pod etcd-worker00 requesting resource cpu=0m on Node worker00
  I0423 19:34:30.647671 25 predicates.go:372] Pod gobetween-worker00 requesting resource cpu=100m on Node worker00
  I0423 19:34:30.647676 25 predicates.go:372] Pod gobetween-worker01 requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647682 25 predicates.go:372] Pod kube-apiserver-worker00 requesting resource cpu=250m on Node worker00
  I0423 19:34:30.647689 25 predicates.go:372] Pod kube-controller-manager-worker00 requesting resource cpu=200m on Node worker00
  I0423 19:34:30.647695 25 predicates.go:372] Pod kube-proxy-worker00 requesting resource cpu=200m on Node worker00
  I0423 19:34:30.647701 25 predicates.go:372] Pod kube-proxy-worker01 requesting resource cpu=200m on Node worker01
  I0423 19:34:30.647707 25 predicates.go:372] Pod kube-scheduler-worker00 requesting resource cpu=100m on Node worker00
  I0423 19:34:30.647713 25 predicates.go:372] Pod kubernetes-dashboard-api-5fdc7d7fcc-hr9hb requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647719 25 predicates.go:372] Pod kubernetes-dashboard-auth-85745c57f4-ck2dl requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647725 25 predicates.go:372] Pod kubernetes-dashboard-kong-859475c6c4-n9bsh requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647730 25 predicates.go:372] Pod kubernetes-dashboard-metrics-scraper-6996d84f57-fjmgz requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647736 25 predicates.go:372] Pod kubernetes-dashboard-web-684dd555d6-hnrf5 requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647742 25 predicates.go:372] Pod calico-kube-controllers-78fc9c8775-p2x92 requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647748 25 predicates.go:372] Pod calico-node-7pxkw requesting resource cpu=250m on Node worker01
  I0423 19:34:30.647754 25 predicates.go:372] Pod calico-node-t7722 requesting resource cpu=250m on Node worker00
  I0423 19:34:30.647761 25 predicates.go:372] Pod calico-typha-7f9677b8db-52khj requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647766 25 predicates.go:372] Pod metallb-controller-6b6cbb75b9-dxlx8 requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647778 25 predicates.go:372] Pod metallb-speaker-8h5gw requesting resource cpu=100m on Node worker00
  I0423 19:34:30.647784 25 predicates.go:372] Pod metallb-speaker-w4trl requesting resource cpu=100m on Node worker01
  I0423 19:34:30.647789 25 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node worker00
  I0423 19:34:30.647795 25 predicates.go:372] Pod sonobuoy-e2e-job-8e2e29f3e66e467f requesting resource cpu=0m on Node worker00
  I0423 19:34:30.647806 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-be276f75500849d8-b29nj requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647825 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-be276f75500849d8-mwsrb requesting resource cpu=0m on Node worker00
  I0423 19:34:30.647831 25 predicates.go:372] Pod ceph-csi-cephfs-nodeplugin-4mjql requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647837 25 predicates.go:372] Pod ceph-csi-cephfs-nodeplugin-db7xs requesting resource cpu=0m on Node worker00
  I0423 19:34:30.647844 25 predicates.go:372] Pod ceph-csi-cephfs-provisioner-795b87747-86q8j requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647850 25 predicates.go:372] Pod ceph-csi-cephfs-provisioner-795b87747-r958b requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647856 25 predicates.go:372] Pod ceph-csi-cephfs-provisioner-795b87747-wppg5 requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647862 25 predicates.go:372] Pod ceph-csi-rbd-nodeplugin-9vr2q requesting resource cpu=0m on Node worker00
  I0423 19:34:30.647868 25 predicates.go:372] Pod ceph-csi-rbd-nodeplugin-cxbdp requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647874 25 predicates.go:372] Pod ceph-csi-rbd-provisioner-554bbbb95d-455gl requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647880 25 predicates.go:372] Pod ceph-csi-rbd-provisioner-554bbbb95d-mztv7 requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647886 25 predicates.go:372] Pod ceph-csi-rbd-provisioner-554bbbb95d-ppn52 requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647892 25 predicates.go:372] Pod ceph-mds-worker01-b7d5fc474-hv782 requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647897 25 predicates.go:372] Pod ceph-mgr-worker01-559c86787f-24g2t requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647902 25 predicates.go:372] Pod ceph-mon-worker00-f69c45b64-gztsp requesting resource cpu=0m on Node worker00
  I0423 19:34:30.647908 25 predicates.go:372] Pod ceph-osd-worker01-56b55bd558-fprzw requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647914 25 predicates.go:372] Pod ceph-rgw-worker01-6cd4858446-n8rlr requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647919 25 predicates.go:372] Pod snapshot-controller-79d4d6679-bfdwx requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647925 25 predicates.go:372] Pod snapshot-controller-79d4d6679-nxs6g requesting resource cpu=0m on Node worker01
  I0423 19:34:30.647931 25 predicates.go:372] Pod snapshot-validation-webhook-f99b99c55-zf2x8 requesting resource cpu=0m on Node worker01
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/23/25 19:34:30.647
  I0423 19:34:30.647957 25 predicates.go:382] Creating a pod which consumes cpu=1960m on Node worker00
  I0423 19:34:30.654429 25 predicates.go:382] Creating a pod which consumes cpu=1855m on Node worker01
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/23/25 19:34:32.674
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f1d7ebd-aa65-4096-a21e-25ded16cf307.183909960e3979e2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6864/filler-pod-1f1d7ebd-aa65-4096-a21e-25ded16cf307 to worker01] @ 04/23/25 19:34:32.676
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f1d7ebd-aa65-4096-a21e-25ded16cf307.183909963b4c1a24], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/23/25 19:34:32.677
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f1d7ebd-aa65-4096-a21e-25ded16cf307.183909963bdddeed], Reason = [Created], Message = [Created container filler-pod-1f1d7ebd-aa65-4096-a21e-25ded16cf307] @ 04/23/25 19:34:32.677
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-1f1d7ebd-aa65-4096-a21e-25ded16cf307.183909963ebd3c15], Reason = [Started], Message = [Started container filler-pod-1f1d7ebd-aa65-4096-a21e-25ded16cf307] @ 04/23/25 19:34:32.677
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3507b97a-a1ac-4d0d-9344-c450447ff463.183909960d7c23f4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6864/filler-pod-3507b97a-a1ac-4d0d-9344-c450447ff463 to worker00] @ 04/23/25 19:34:32.677
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3507b97a-a1ac-4d0d-9344-c450447ff463.18390996286c422c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/23/25 19:34:32.677
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3507b97a-a1ac-4d0d-9344-c450447ff463.1839099628f971fb], Reason = [Created], Message = [Created container filler-pod-3507b97a-a1ac-4d0d-9344-c450447ff463] @ 04/23/25 19:34:32.677
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-3507b97a-a1ac-4d0d-9344-c450447ff463.183909962b8f01d6], Reason = [Started], Message = [Started container filler-pod-3507b97a-a1ac-4d0d-9344-c450447ff463] @ 04/23/25 19:34:32.677
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183909968609f016], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 04/23/25 19:34:32.685
  STEP: removing the label node off the node worker00 @ 04/23/25 19:34:33.692
  STEP: verifying the node doesn't have the label node @ 04/23/25 19:34:33.714
  STEP: removing the label node off the node worker01 @ 04/23/25 19:34:33.721
  STEP: verifying the node doesn't have the label node @ 04/23/25 19:34:33.738
  I0423 19:34:33.743807 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6864" for this suite. @ 04/23/25 19:34:33.747
• [3.324 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/23/25 19:34:33.756
  I0423 19:34:33.756634 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 19:34:33.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:34:33.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:34:33.775
  STEP: Creating configMap with name configmap-test-volume-map-177e46fa-cd03-47bb-94f9-359c3b18368e @ 04/23/25 19:34:33.782
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:34:33.79
  STEP: Saw pod success @ 04/23/25 19:34:37.815
  I0423 19:34:37.819754 25 output.go:196] Trying to get logs from node worker01 pod pod-configmaps-bddd6b61-8567-4a37-9f63-0436c88e9a6b container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:34:37.831
  I0423 19:34:37.849754 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2857" for this suite. @ 04/23/25 19:34:37.851
• [4.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/23/25 19:34:37.854
  I0423 19:34:37.854504 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename hostport @ 04/23/25 19:34:37.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:34:37.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:34:37.863
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/23/25 19:34:37.953
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.58.101 on the node which pod1 resides and expect scheduled @ 04/23/25 19:34:39.969
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.58.101 but use UDP protocol on the node which pod2 resides @ 04/23/25 19:34:43.995
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/23/25 19:34:48.035
  I0423 19:34:48.035163 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.58.101 http://127.0.0.1:54323/hostname] Namespace:hostport-1147 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:34:48.035180 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:34:48.035563 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:34:48.035950 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-1147/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.58.101+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.101, port: 54323 @ 04/23/25 19:34:48.095
  I0423 19:34:48.095793 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.58.101:54323/hostname] Namespace:hostport-1147 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:34:48.095840 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:34:48.096760 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:34:48.097116 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-1147/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.58.101%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.101, port: 54323 UDP @ 04/23/25 19:34:48.135
  I0423 19:34:48.135568 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.58.101 54323] Namespace:hostport-1147 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:34:48.135589 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:34:48.136413 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:34:48.136472 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-1147/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.58.101+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0423 19:34:53.185813 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1147" for this suite. @ 04/23/25 19:34:53.189
• [15.338 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/23/25 19:34:53.193
  I0423 19:34:53.193234 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename gc @ 04/23/25 19:34:53.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:34:53.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:34:53.202
  STEP: create the rc @ 04/23/25 19:34:53.204
  W0423 19:34:53.207554      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/23/25 19:34:58.212
  STEP: wait for all pods to be garbage collected @ 04/23/25 19:34:58.218
  STEP: Gathering metrics @ 04/23/25 19:35:03.222
  I0423 19:35:03.258469 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 19:35:03.258625 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9224" for this suite. @ 04/23/25 19:35:03.261
• [10.074 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/23/25 19:35:03.267
  I0423 19:35:03.267386 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename podtemplate @ 04/23/25 19:35:03.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:35:03.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:35:03.276
  I0423 19:35:03.294264 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7417" for this suite. @ 04/23/25 19:35:03.364
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 04/23/25 19:35:03.374
  I0423 19:35:03.374045 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:35:03.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:35:03.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:35:03.385
  STEP: Setting up server cert @ 04/23/25 19:35:03.398
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:35:03.669
  STEP: Deploying the webhook pod @ 04/23/25 19:35:03.672
  STEP: Wait for the deployment to be ready @ 04/23/25 19:35:03.681
  I0423 19:35:03.687883 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:35:05.695
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:35:05.712
  I0423 19:35:06.712327 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 19:35:06.719502 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4005-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 19:35:07.239
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/23/25 19:35:07.255
  I0423 19:35:09.827042 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3148" for this suite. @ 04/23/25 19:35:09.831
  STEP: Destroying namespace "webhook-markers-2673" for this suite. @ 04/23/25 19:35:09.837
• [6.469 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/23/25 19:35:09.843
  I0423 19:35:09.843850 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename subpath @ 04/23/25 19:35:09.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:35:09.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:35:09.854
  STEP: Setting up data @ 04/23/25 19:35:09.855
  STEP: Creating pod pod-subpath-test-configmap-bbnd @ 04/23/25 19:35:09.86
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 19:35:09.86
  STEP: Saw pod success @ 04/23/25 19:35:33.919
  I0423 19:35:33.921231 25 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-configmap-bbnd container test-container-subpath-configmap-bbnd: <nil>
  STEP: delete the pod @ 04/23/25 19:35:33.926
  STEP: Deleting pod pod-subpath-test-configmap-bbnd @ 04/23/25 19:35:33.939
  I0423 19:35:33.939515 25 delete.go:62] Deleting pod "pod-subpath-test-configmap-bbnd" in namespace "subpath-3542"
  I0423 19:35:33.940682 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3542" for this suite. @ 04/23/25 19:35:33.942
• [24.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 04/23/25 19:35:33.947
  I0423 19:35:33.947249 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 19:35:33.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:35:33.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:35:33.973
  STEP: Counting existing ResourceQuota @ 04/23/25 19:35:33.99
  STEP: Creating a ResourceQuota @ 04/23/25 19:35:38.992
  STEP: Ensuring resource quota status is calculated @ 04/23/25 19:35:38.995
  STEP: Creating a ReplicationController @ 04/23/25 19:35:40.999
  STEP: Ensuring resource quota status captures replication controller creation @ 04/23/25 19:35:41.007
  STEP: Deleting a ReplicationController @ 04/23/25 19:35:43.012
  STEP: Ensuring resource quota status released usage @ 04/23/25 19:35:43.027
  I0423 19:35:45.032202 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6589" for this suite. @ 04/23/25 19:35:45.035
• [11.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/23/25 19:35:45.048
  I0423 19:35:45.048875 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename podtemplate @ 04/23/25 19:35:45.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:35:45.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:35:45.058
  STEP: Create a pod template @ 04/23/25 19:35:45.06
  STEP: Replace a pod template @ 04/23/25 19:35:45.063
  I0423 19:35:45.068487 25 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0423 19:35:45.068626 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4141" for this suite. @ 04/23/25 19:35:45.137
• [0.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1375
  STEP: Creating a kubernetes client @ 04/23/25 19:35:45.144
  I0423 19:35:45.144807 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:35:45.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:35:45.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:35:45.156
  STEP: validating cluster-info @ 04/23/25 19:35:45.158
  I0423 19:35:45.158859 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-6527 cluster-info'
  I0423 19:35:45.200321 25 builder.go:146] stderr: ""
  I0423 19:35:45.200354 25 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.32.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0423 19:35:45.200423 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6527" for this suite. @ 04/23/25 19:35:45.238
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 04/23/25 19:35:45.245
  I0423 19:35:45.246342 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 19:35:45.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:35:45.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:35:45.258
  STEP: Creating pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910 @ 04/23/25 19:35:45.259
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 19:35:47.271
  I0423 19:35:47.275310 25 container_probe.go:1749] Initial restart count of pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 is 0
  I0423 19:35:47.281629 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:35:49.287059 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:35:51.292283 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:35:53.298941 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:35:55.304428 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:35:57.307212 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:35:59.309800 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:01.315326 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:03.323811 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:05.329392 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:07.335203 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:07.335245 25 container_probe.go:1763] Restart count of pod container-probe-1910/liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 is now 1 (20.059886025s elapsed)
  I0423 19:36:09.341950 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:11.345548 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:13.351708 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:15.357523 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:17.360329 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:19.363365 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:21.369607 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:23.373577 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:25.379016 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:27.382244 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:27.382284 25 container_probe.go:1763] Restart count of pod container-probe-1910/liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 is now 2 (40.106926083s elapsed)
  I0423 19:36:29.384165 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:31.388461 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:33.392665 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:35.398117 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:37.400893 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:39.405436 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:41.412850 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:43.418077 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:45.425363 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:47.428851 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:47.428878 25 container_probe.go:1763] Restart count of pod container-probe-1910/liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 is now 3 (1m0.153520248s elapsed)
  I0423 19:36:49.432084 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:51.437674 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:53.442094 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:55.449540 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:57.454408 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:36:59.457526 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:01.462603 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:03.467744 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:05.471987 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:07.477483 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:07.477554 25 container_probe.go:1763] Restart count of pod container-probe-1910/liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 is now 4 (1m20.202193402s elapsed)
  I0423 19:37:09.481014 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:11.483028 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:13.489324 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:15.500154 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:17.504478 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:19.513243 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:21.519033 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:23.526478 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:25.533030 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:27.538921 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:29.541598 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:31.543452 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:33.550578 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:35.553516 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:37.560247 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:39.568142 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:41.578310 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:43.583077 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:45.587230 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:47.592911 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:49.596503 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:51.600332 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:53.605112 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:55.613922 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:57.617664 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:37:59.619897 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:38:01.622998 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:38:03.630498 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:38:05.636666 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:38:07.643225 25 container_probe.go:1759] Get pod liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 in namespace container-probe-1910
  I0423 19:38:07.643318 25 container_probe.go:1763] Restart count of pod container-probe-1910/liveness-02c4dc82-dd0a-4697-ad28-41956bc61a02 is now 5 (2m20.367957854s elapsed)
  STEP: deleting the pod @ 04/23/25 19:38:07.643
  I0423 19:38:07.667144 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1910" for this suite. @ 04/23/25 19:38:07.674
• [142.437 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/23/25 19:38:07.683
  I0423 19:38:07.683325 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:38:07.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:38:07.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:38:07.695
  STEP: Creating a pod to test downward api env vars @ 04/23/25 19:38:07.697
  STEP: Saw pod success @ 04/23/25 19:38:11.715
  I0423 19:38:11.717750 25 output.go:196] Trying to get logs from node worker00 pod downward-api-6839de17-85a2-47ac-a4d6-d69c617a7f8a container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 19:38:11.726
  I0423 19:38:11.736519 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3103" for this suite. @ 04/23/25 19:38:11.738
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/23/25 19:38:11.74
  I0423 19:38:11.740701 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:38:11.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:38:11.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:38:11.749
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:38:11.75
  STEP: Saw pod success @ 04/23/25 19:38:15.769
  I0423 19:38:15.772731 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-39b6cffe-717d-4828-af80-bf5f4f324842 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:38:15.777
  I0423 19:38:15.786182 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6532" for this suite. @ 04/23/25 19:38:15.787
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 04/23/25 19:38:15.79
  I0423 19:38:15.790437 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 19:38:15.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:38:15.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:38:15.801
  STEP: Creating a ResourceQuota with terminating scope @ 04/23/25 19:38:15.805
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 19:38:15.807
  STEP: Creating a ResourceQuota with not terminating scope @ 04/23/25 19:38:17.813
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 19:38:17.826
  STEP: Creating a long running pod @ 04/23/25 19:38:19.83
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/23/25 19:38:19.841
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/23/25 19:38:21.847
  STEP: Deleting the pod @ 04/23/25 19:38:23.85
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 19:38:23.86
  STEP: Creating a terminating pod @ 04/23/25 19:38:25.866
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/23/25 19:38:25.874
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/23/25 19:38:27.879
  STEP: Deleting the pod @ 04/23/25 19:38:29.882
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 19:38:29.893
  I0423 19:38:31.899826 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-648" for this suite. @ 04/23/25 19:38:31.902
• [16.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 04/23/25 19:38:31.917
  I0423 19:38:31.917170 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 19:38:31.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:38:31.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:38:31.93
  I0423 19:38:35.952384 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6340" for this suite. @ 04/23/25 19:38:35.955
• [4.044 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/23/25 19:38:35.961
  I0423 19:38:35.961639 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename proxy @ 04/23/25 19:38:35.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:38:35.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:38:35.978
  STEP: starting an echo server on multiple ports @ 04/23/25 19:38:35.987
  STEP: creating replication controller proxy-service-6vd6w in namespace proxy-8867 @ 04/23/25 19:38:35.987
  I0423 19:38:35.997758      25 runners.go:193] Created replication controller with name: proxy-service-6vd6w, namespace: proxy-8867, replica count: 1
  I0423 19:38:37.048872      25 runners.go:193] proxy-service-6vd6w Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 19:38:38.050253      25 runners.go:193] proxy-service-6vd6w Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 19:38:38.055158 25 proxy.go:230] setup took 2.075351981s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/23/25 19:38:38.055
  I0423 19:38:38.063986 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 8.472067ms)
  I0423 19:38:38.064004 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 8.425309ms)
  I0423 19:38:38.064013 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 8.464183ms)
  I0423 19:38:38.064022 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 8.266224ms)
  I0423 19:38:38.064336 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 8.685643ms)
  I0423 19:38:38.064352 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 8.597754ms)
  I0423 19:38:38.064352 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 8.698429ms)
  I0423 19:38:38.065808 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 10.192056ms)
  I0423 19:38:38.066718 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 11.114551ms)
  I0423 19:38:38.067622 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 11.96306ms)
  I0423 19:38:38.067799 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 12.119158ms)
  I0423 19:38:38.067818 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 12.319596ms)
  I0423 19:38:38.067824 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 12.544226ms)
  I0423 19:38:38.067834 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 12.204578ms)
  I0423 19:38:38.069764 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 14.368064ms)
  I0423 19:38:38.070139 25 proxy.go:558] (0) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 14.453866ms)
  I0423 19:38:38.077013 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 6.397674ms)
  I0423 19:38:38.077105 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 6.717394ms)
  I0423 19:38:38.077125 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 6.8044ms)
  I0423 19:38:38.078647 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 7.98752ms)
  I0423 19:38:38.078676 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 8.013021ms)
  I0423 19:38:38.078690 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 8.042514ms)
  I0423 19:38:38.078708 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 8.091174ms)
  I0423 19:38:38.082648 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 11.948912ms)
  I0423 19:38:38.082778 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 12.033593ms)
  I0423 19:38:38.083072 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 12.361649ms)
  I0423 19:38:38.083461 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 12.780226ms)
  I0423 19:38:38.083941 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 13.187797ms)
  I0423 19:38:38.084150 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 13.4227ms)
  I0423 19:38:38.084200 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 13.524171ms)
  I0423 19:38:38.084289 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 13.547256ms)
  I0423 19:38:38.084451 25 proxy.go:558] (1) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 13.651363ms)
  I0423 19:38:38.087943 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 2.717354ms)
  I0423 19:38:38.087857 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 2.85048ms)
  I0423 19:38:38.087988 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 3.294994ms)
  I0423 19:38:38.090602 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 5.580783ms)
  I0423 19:38:38.091112 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 5.63422ms)
  I0423 19:38:38.092788 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 7.302413ms)
  I0423 19:38:38.092861 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 7.233366ms)
  I0423 19:38:38.092867 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 7.223401ms)
  I0423 19:38:38.092872 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 7.347436ms)
  I0423 19:38:38.092939 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 8.247397ms)
  I0423 19:38:38.092950 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 7.295156ms)
  I0423 19:38:38.092957 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 7.412363ms)
  I0423 19:38:38.092968 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 7.715976ms)
  I0423 19:38:38.093089 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 7.579001ms)
  I0423 19:38:38.093522 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 7.973015ms)
  I0423 19:38:38.093946 25 proxy.go:558] (2) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 8.422064ms)
  I0423 19:38:38.098827 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 4.854946ms)
  I0423 19:38:38.098847 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 4.479594ms)
  I0423 19:38:38.098862 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 4.483035ms)
  I0423 19:38:38.098881 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 4.579873ms)
  I0423 19:38:38.098891 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 4.482434ms)
  I0423 19:38:38.098906 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 4.552645ms)
  I0423 19:38:38.098906 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.508981ms)
  I0423 19:38:38.098924 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.608572ms)
  I0423 19:38:38.098919 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 3.489698ms)
  I0423 19:38:38.098937 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 4.710163ms)
  I0423 19:38:38.098945 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.677995ms)
  I0423 19:38:38.098952 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 4.609375ms)
  I0423 19:38:38.098960 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 4.725707ms)
  I0423 19:38:38.099067 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 4.645637ms)
  I0423 19:38:38.099231 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.841364ms)
  I0423 19:38:38.100328 25 proxy.go:558] (3) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 5.996449ms)
  I0423 19:38:38.103801 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 3.355062ms)
  I0423 19:38:38.103966 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 3.56288ms)
  I0423 19:38:38.103978 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 3.626374ms)
  I0423 19:38:38.103983 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 3.624034ms)
  I0423 19:38:38.104331 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 3.896498ms)
  I0423 19:38:38.104364 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 3.996647ms)
  I0423 19:38:38.104618 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.147299ms)
  I0423 19:38:38.105340 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 4.872467ms)
  I0423 19:38:38.105376 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.214383ms)
  I0423 19:38:38.105392 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.931874ms)
  I0423 19:38:38.106195 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 5.789199ms)
  I0423 19:38:38.106219 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 5.79688ms)
  I0423 19:38:38.106249 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 5.795687ms)
  I0423 19:38:38.106264 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 5.838583ms)
  I0423 19:38:38.106308 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 5.888559ms)
  I0423 19:38:38.106225 25 proxy.go:558] (4) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 5.78949ms)
  I0423 19:38:38.110933 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 4.12022ms)
  I0423 19:38:38.110959 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.079731ms)
  I0423 19:38:38.110969 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 4.169539ms)
  I0423 19:38:38.111042 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 4.219428ms)
  I0423 19:38:38.111068 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 4.539021ms)
  I0423 19:38:38.111080 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 4.156972ms)
  I0423 19:38:38.111096 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 4.752181ms)
  I0423 19:38:38.111117 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 4.210841ms)
  I0423 19:38:38.111133 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 4.238185ms)
  I0423 19:38:38.111144 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.374034ms)
  I0423 19:38:38.111163 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.650818ms)
  I0423 19:38:38.111181 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 4.308442ms)
  I0423 19:38:38.111191 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 4.404288ms)
  I0423 19:38:38.111202 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 4.281988ms)
  I0423 19:38:38.111264 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.37677ms)
  I0423 19:38:38.111378 25 proxy.go:558] (5) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 4.928206ms)
  I0423 19:38:38.116342 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 4.53364ms)
  I0423 19:38:38.116401 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.617242ms)
  I0423 19:38:38.117064 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 5.532348ms)
  I0423 19:38:38.117421 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 5.593384ms)
  I0423 19:38:38.117457 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 5.700477ms)
  I0423 19:38:38.117724 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 5.910747ms)
  I0423 19:38:38.117801 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 5.94902ms)
  I0423 19:38:38.117839 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 6.120493ms)
  I0423 19:38:38.117855 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 6.049794ms)
  I0423 19:38:38.121156 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 9.255162ms)
  I0423 19:38:38.121201 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 9.337507ms)
  I0423 19:38:38.121336 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 9.450563ms)
  I0423 19:38:38.121353 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 9.450883ms)
  I0423 19:38:38.121294 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 9.417339ms)
  I0423 19:38:38.121416 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 9.503215ms)
  I0423 19:38:38.121423 25 proxy.go:558] (6) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 9.459132ms)
  I0423 19:38:38.126441 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 4.398712ms)
  I0423 19:38:38.126476 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 4.550405ms)
  I0423 19:38:38.126488 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 4.87958ms)
  I0423 19:38:38.126499 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 4.598113ms)
  I0423 19:38:38.126509 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.724177ms)
  I0423 19:38:38.126520 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.446885ms)
  I0423 19:38:38.126521 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 4.456711ms)
  I0423 19:38:38.127200 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 5.069274ms)
  I0423 19:38:38.129563 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 7.453452ms)
  I0423 19:38:38.129572 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 7.553631ms)
  I0423 19:38:38.129875 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 7.873678ms)
  I0423 19:38:38.129894 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 8.23127ms)
  I0423 19:38:38.129907 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 7.788738ms)
  I0423 19:38:38.129918 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 7.950585ms)
  I0423 19:38:38.129931 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 7.834851ms)
  I0423 19:38:38.130083 25 proxy.go:558] (7) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 7.995459ms)
  I0423 19:38:38.134924 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 3.911974ms)
  I0423 19:38:38.134921 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 4.154411ms)
  I0423 19:38:38.135044 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.139499ms)
  I0423 19:38:38.134944 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 4.064718ms)
  I0423 19:38:38.135059 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 4.226341ms)
  I0423 19:38:38.135009 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 4.201456ms)
  I0423 19:38:38.135016 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.090087ms)
  I0423 19:38:38.135022 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 4.062275ms)
  I0423 19:38:38.135031 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 3.290976ms)
  I0423 19:38:38.135071 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 3.965679ms)
  I0423 19:38:38.135081 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 4.905671ms)
  I0423 19:38:38.135077 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 4.30604ms)
  I0423 19:38:38.135091 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 4.104037ms)
  I0423 19:38:38.135104 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.050497ms)
  I0423 19:38:38.135103 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 4.072842ms)
  I0423 19:38:38.135112 25 proxy.go:558] (8) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 4.840061ms)
  I0423 19:38:38.137591 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 2.416157ms)
  I0423 19:38:38.140492 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 5.302188ms)
  I0423 19:38:38.140492 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 5.140008ms)
  I0423 19:38:38.140517 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 5.116751ms)
  I0423 19:38:38.140527 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 5.399598ms)
  I0423 19:38:38.140519 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 5.107049ms)
  I0423 19:38:38.140535 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 5.336976ms)
  I0423 19:38:38.140543 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 5.249127ms)
  I0423 19:38:38.140545 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 5.14594ms)
  I0423 19:38:38.140552 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 5.183906ms)
  I0423 19:38:38.140555 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 5.411414ms)
  I0423 19:38:38.140561 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 5.189619ms)
  I0423 19:38:38.140563 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 5.231528ms)
  I0423 19:38:38.141059 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 5.64447ms)
  I0423 19:38:38.141083 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 5.699291ms)
  I0423 19:38:38.141096 25 proxy.go:558] (9) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 5.732049ms)
  I0423 19:38:38.145255 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 3.968636ms)
  I0423 19:38:38.145300 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 4.094441ms)
  I0423 19:38:38.145316 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 3.582085ms)
  I0423 19:38:38.145327 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 3.55241ms)
  I0423 19:38:38.145333 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 3.536305ms)
  I0423 19:38:38.145269 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 3.601923ms)
  I0423 19:38:38.147607 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 5.823857ms)
  I0423 19:38:38.148301 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 6.494448ms)
  I0423 19:38:38.150022 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 8.203315ms)
  I0423 19:38:38.150066 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 8.273611ms)
  I0423 19:38:38.150078 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 8.38658ms)
  I0423 19:38:38.150093 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 8.264193ms)
  I0423 19:38:38.150127 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 8.319076ms)
  I0423 19:38:38.150145 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 8.314742ms)
  I0423 19:38:38.150265 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 8.44583ms)
  I0423 19:38:38.150284 25 proxy.go:558] (10) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 8.243686ms)
  I0423 19:38:38.155717 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 5.251097ms)
  I0423 19:38:38.155739 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 5.184525ms)
  I0423 19:38:38.155773 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 5.254728ms)
  I0423 19:38:38.155832 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 5.362088ms)
  I0423 19:38:38.155881 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 5.338632ms)
  I0423 19:38:38.155905 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 5.460911ms)
  I0423 19:38:38.155924 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 5.392262ms)
  I0423 19:38:38.156051 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 5.59123ms)
  I0423 19:38:38.156095 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 5.5609ms)
  I0423 19:38:38.156107 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 5.802964ms)
  I0423 19:38:38.156267 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 5.724987ms)
  I0423 19:38:38.156714 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 6.21118ms)
  I0423 19:38:38.157607 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 7.172145ms)
  I0423 19:38:38.157632 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 7.145073ms)
  I0423 19:38:38.157768 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 7.284072ms)
  I0423 19:38:38.157862 25 proxy.go:558] (11) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 7.356546ms)
  I0423 19:38:38.162066 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.158034ms)
  I0423 19:38:38.162106 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 4.124627ms)
  I0423 19:38:38.162121 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.155459ms)
  I0423 19:38:38.165062 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 7.048974ms)
  I0423 19:38:38.165460 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 7.464458ms)
  I0423 19:38:38.165578 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 7.299033ms)
  I0423 19:38:38.166163 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 8.08673ms)
  I0423 19:38:38.166297 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 8.355899ms)
  I0423 19:38:38.167681 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 9.515158ms)
  I0423 19:38:38.168019 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 10.121794ms)
  I0423 19:38:38.168217 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 10.117581ms)
  I0423 19:38:38.169235 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 11.131076ms)
  I0423 19:38:38.169749 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 11.684115ms)
  I0423 19:38:38.170561 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 12.440481ms)
  I0423 19:38:38.171252 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 13.364105ms)
  I0423 19:38:38.171552 25 proxy.go:558] (12) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 13.462306ms)
  I0423 19:38:38.175637 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 3.687749ms)
  I0423 19:38:38.175741 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 3.994716ms)
  I0423 19:38:38.178306 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 6.373481ms)
  I0423 19:38:38.178319 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 6.359278ms)
  I0423 19:38:38.178336 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 6.493488ms)
  I0423 19:38:38.178350 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 6.373683ms)
  I0423 19:38:38.178368 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 6.379882ms)
  I0423 19:38:38.178371 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 6.428854ms)
  I0423 19:38:38.178381 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 6.593879ms)
  I0423 19:38:38.178395 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 6.544699ms)
  I0423 19:38:38.178402 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 6.428386ms)
  I0423 19:38:38.178413 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 6.484132ms)
  I0423 19:38:38.178416 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 6.504946ms)
  I0423 19:38:38.178426 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 6.534627ms)
  I0423 19:38:38.178421 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 6.533269ms)
  I0423 19:38:38.178432 25 proxy.go:558] (13) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 6.474973ms)
  I0423 19:38:38.180435 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 1.980333ms)
  I0423 19:38:38.184125 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 5.564454ms)
  I0423 19:38:38.184158 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 5.584226ms)
  I0423 19:38:38.184172 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 5.700047ms)
  I0423 19:38:38.184177 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 5.652136ms)
  I0423 19:38:38.184410 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 5.854024ms)
  I0423 19:38:38.184435 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 5.899509ms)
  I0423 19:38:38.184455 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 5.930577ms)
  I0423 19:38:38.186925 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 8.325888ms)
  I0423 19:38:38.187027 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 8.395614ms)
  I0423 19:38:38.187379 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 8.79525ms)
  I0423 19:38:38.188209 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 9.570311ms)
  I0423 19:38:38.188651 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 10.006948ms)
  I0423 19:38:38.188692 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 10.10616ms)
  I0423 19:38:38.188718 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 10.210513ms)
  I0423 19:38:38.188732 25 proxy.go:558] (14) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 10.164885ms)
  I0423 19:38:38.191948 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 3.19005ms)
  I0423 19:38:38.192460 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 3.353152ms)
  I0423 19:38:38.192483 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 3.535989ms)
  I0423 19:38:38.193336 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 4.169611ms)
  I0423 19:38:38.194528 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 5.407644ms)
  I0423 19:38:38.194556 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 5.374301ms)
  I0423 19:38:38.194716 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 5.625629ms)
  I0423 19:38:38.194727 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 5.666533ms)
  I0423 19:38:38.196704 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 7.672558ms)
  I0423 19:38:38.196739 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 7.51903ms)
  I0423 19:38:38.196772 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 7.489614ms)
  I0423 19:38:38.196784 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 7.574551ms)
  I0423 19:38:38.196845 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 7.65037ms)
  I0423 19:38:38.196853 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 7.889321ms)
  I0423 19:38:38.196857 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 7.77826ms)
  I0423 19:38:38.196884 25 proxy.go:558] (15) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 7.384052ms)
  I0423 19:38:38.200534 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 3.506032ms)
  I0423 19:38:38.200657 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 3.533079ms)
  I0423 19:38:38.200903 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 3.989444ms)
  I0423 19:38:38.203240 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 6.104915ms)
  I0423 19:38:38.203876 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 6.770732ms)
  I0423 19:38:38.203902 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 6.782215ms)
  I0423 19:38:38.203937 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 6.085874ms)
  I0423 19:38:38.204310 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 7.171419ms)
  I0423 19:38:38.204791 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 7.128979ms)
  I0423 19:38:38.205290 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 8.203279ms)
  I0423 19:38:38.205316 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 8.199592ms)
  I0423 19:38:38.205623 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 8.470063ms)
  I0423 19:38:38.206629 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 9.659467ms)
  I0423 19:38:38.206660 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 9.59574ms)
  I0423 19:38:38.206662 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 9.6039ms)
  I0423 19:38:38.206665 25 proxy.go:558] (16) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 9.581235ms)
  I0423 19:38:38.211539 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.569539ms)
  I0423 19:38:38.211563 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 4.817116ms)
  I0423 19:38:38.211543 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.807857ms)
  I0423 19:38:38.211573 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 4.715705ms)
  I0423 19:38:38.211591 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 4.494147ms)
  I0423 19:38:38.211593 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 4.665637ms)
  I0423 19:38:38.211604 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 4.455049ms)
  I0423 19:38:38.211613 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 4.897842ms)
  I0423 19:38:38.211617 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 4.718872ms)
  I0423 19:38:38.213718 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 6.69828ms)
  I0423 19:38:38.213741 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 6.948138ms)
  I0423 19:38:38.213781 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 6.658192ms)
  I0423 19:38:38.214099 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 7.026405ms)
  I0423 19:38:38.214104 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 7.058819ms)
  I0423 19:38:38.215320 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 8.325097ms)
  I0423 19:38:38.215371 25 proxy.go:558] (17) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 8.572612ms)
  I0423 19:38:38.218779 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 3.356047ms)
  I0423 19:38:38.219726 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 4.320845ms)
  I0423 19:38:38.222684 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 7.098935ms)
  I0423 19:38:38.222727 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 7.138697ms)
  I0423 19:38:38.222729 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 7.222545ms)
  I0423 19:38:38.222751 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 7.128465ms)
  I0423 19:38:38.222787 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 7.327399ms)
  I0423 19:38:38.222795 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 7.244431ms)
  I0423 19:38:38.222804 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 7.260546ms)
  I0423 19:38:38.222810 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 7.286892ms)
  I0423 19:38:38.223418 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 7.907352ms)
  I0423 19:38:38.224752 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 9.055458ms)
  I0423 19:38:38.225261 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 9.585139ms)
  I0423 19:38:38.225668 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 10.025981ms)
  I0423 19:38:38.225670 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 10.014758ms)
  I0423 19:38:38.225747 25 proxy.go:558] (18) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 10.146712ms)
  I0423 19:38:38.232118 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:1080/proxy/rewriteme">test<... (200; 6.012079ms)
  I0423 19:38:38.232208 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:162/proxy/: bar (200; 6.050495ms)
  I0423 19:38:38.232250 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname1/proxy/: foo (200; 6.361555ms)
  I0423 19:38:38.232267 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:460/proxy/: tls baz (200; 6.123931ms)
  I0423 19:38:38.232293 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:160/proxy/: foo (200; 6.159812ms)
  I0423 19:38:38.232308 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:1080/proxy/rewriteme">... (200; 6.189814ms)
  I0423 19:38:38.232335 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:443/proxy/tlsrewritem... (200; 6.208958ms)
  I0423 19:38:38.232354 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/https:proxy-service-6vd6w-5t776:462/proxy/: tls qux (200; 6.243328ms)
  I0423 19:38:38.232358 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname1/proxy/: tls baz (200; 6.565391ms)
  I0423 19:38:38.232370 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776:160/proxy/: foo (200; 6.314235ms)
  I0423 19:38:38.232380 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname1/proxy/: foo (200; 6.404559ms)
  I0423 19:38:38.232383 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/services/https:proxy-service-6vd6w:tlsportname2/proxy/: tls qux (200; 6.575855ms)
  I0423 19:38:38.232391 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/http:proxy-service-6vd6w-5t776:162/proxy/: bar (200; 6.396705ms)
  I0423 19:38:38.232400 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/services/proxy-service-6vd6w:portname2/proxy/: bar (200; 6.309401ms)
  I0423 19:38:38.232407 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/services/http:proxy-service-6vd6w:portname2/proxy/: bar (200; 6.260071ms)
  I0423 19:38:38.232439 25 proxy.go:558] (19) /api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/: <a href="/api/v1/namespaces/proxy-8867/pods/proxy-service-6vd6w-5t776/proxy/rewriteme">test</a> (200; 6.366557ms)
  STEP: deleting ReplicationController proxy-service-6vd6w in namespace proxy-8867, will wait for the garbage collector to delete the pods @ 04/23/25 19:38:38.232
  I0423 19:38:38.299241 25 resources.go:139] Deleting ReplicationController proxy-service-6vd6w took: 13.897655ms
  I0423 19:38:38.399357 25 resources.go:163] Terminating ReplicationController proxy-service-6vd6w pods took: 100.113249ms
  I0423 19:38:40.400290 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8867" for this suite. @ 04/23/25 19:38:40.402
• [4.444 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/23/25 19:38:40.406
  I0423 19:38:40.406015 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/23/25 19:38:40.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:38:40.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:38:40.416
  STEP: Creating two CSIDrivers @ 04/23/25 19:38:40.418
  STEP: Getting "inline-driver-71224f3e-df86-4f64-8668-01966494cba6" & "inline-driver-cfe4dd93-f35e-4027-a4c1-4c89f22aec06" @ 04/23/25 19:38:40.426
  STEP: Patching the CSIDriver "inline-driver-cfe4dd93-f35e-4027-a4c1-4c89f22aec06" @ 04/23/25 19:38:40.428
  STEP: Updating the CSIDriver "inline-driver-cfe4dd93-f35e-4027-a4c1-4c89f22aec06" @ 04/23/25 19:38:40.43
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6488" @ 04/23/25 19:38:40.433
  STEP: Deleting CSIDriver "inline-driver-71224f3e-df86-4f64-8668-01966494cba6" @ 04/23/25 19:38:40.435
  STEP: Confirm deletion of CSIDriver "inline-driver-71224f3e-df86-4f64-8668-01966494cba6" @ 04/23/25 19:38:40.437
  STEP: Deleting CSIDriver "inline-driver-cfe4dd93-f35e-4027-a4c1-4c89f22aec06" via DeleteCollection @ 04/23/25 19:38:40.439
  STEP: Confirm deletion of CSIDriver "inline-driver-cfe4dd93-f35e-4027-a4c1-4c89f22aec06" @ 04/23/25 19:38:40.442
  I0423 19:38:40.444403 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6488" for this suite. @ 04/23/25 19:38:40.504
• [0.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/23/25 19:38:40.509
  I0423 19:38:40.509092 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:38:40.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:38:40.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:38:40.52
  STEP: Creating secret with name s-test-opt-del-39a174ee-d26e-44b7-b018-bd8f1fcc5aad @ 04/23/25 19:38:40.604
  STEP: Creating secret with name s-test-opt-upd-440ba981-59b4-45fe-bd50-c543f506bb2e @ 04/23/25 19:38:40.608
  STEP: Creating the pod @ 04/23/25 19:38:40.611
  STEP: Deleting secret s-test-opt-del-39a174ee-d26e-44b7-b018-bd8f1fcc5aad @ 04/23/25 19:38:42.639
  STEP: Updating secret s-test-opt-upd-440ba981-59b4-45fe-bd50-c543f506bb2e @ 04/23/25 19:38:42.651
  STEP: Creating secret with name s-test-opt-create-26672be5-335a-4b1e-8519-a73925a93f3e @ 04/23/25 19:38:42.654
  STEP: waiting to observe update in volume @ 04/23/25 19:38:42.659
  I0423 19:40:07.019344 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8836" for this suite. @ 04/23/25 19:40:07.021
• [86.525 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 04/23/25 19:40:07.034
  I0423 19:40:07.034775 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:40:07.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:07.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:07.048
  STEP: Setting up server cert @ 04/23/25 19:40:07.06
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:40:07.367
  STEP: Deploying the webhook pod @ 04/23/25 19:40:07.369
  STEP: Wait for the deployment to be ready @ 04/23/25 19:40:07.378
  I0423 19:40:07.382229 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:40:09.397
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:40:09.401
  I0423 19:40:10.401695 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/23/25 19:40:10.41
  STEP: create a configmap that should be updated by the webhook @ 04/23/25 19:40:10.434
  I0423 19:40:10.467016 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2647" for this suite. @ 04/23/25 19:40:10.471
  STEP: Destroying namespace "webhook-markers-9821" for this suite. @ 04/23/25 19:40:10.477
• [3.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 04/23/25 19:40:10.483
  I0423 19:40:10.483569 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 19:40:10.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:10.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:10.495
  I0423 19:40:12.514226 25 delete.go:62] Deleting pod "var-expansion-3619ea76-ef0f-4904-88ad-e28673f2a0b4" in namespace "var-expansion-4912"
  I0423 19:40:12.521086 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-3619ea76-ef0f-4904-88ad-e28673f2a0b4" to be fully deleted
  I0423 19:40:14.526381 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4912" for this suite. @ 04/23/25 19:40:14.528
• [4.050 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 04/23/25 19:40:14.536
  I0423 19:40:14.536117 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-webhook @ 04/23/25 19:40:14.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:14.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:14.547
  STEP: Setting up server cert @ 04/23/25 19:40:14.548
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/23/25 19:40:14.738
  STEP: Deploying the custom resource conversion webhook pod @ 04/23/25 19:40:14.75
  STEP: Wait for the deployment to be ready @ 04/23/25 19:40:14.757
  I0423 19:40:14.761657 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:40:16.775
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:40:16.796
  I0423 19:40:17.797510 25 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0423 19:40:17.801632 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Creating a v1 custom resource @ 04/23/25 19:40:20.36
  STEP: v2 custom resource should be converted @ 04/23/25 19:40:20.363
  I0423 19:40:20.935401 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5113" for this suite. @ 04/23/25 19:40:20.939
• [6.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/23/25 19:40:20.945
  I0423 19:40:20.945697 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 19:40:20.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:20.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:20.977
  STEP: Create a pod @ 04/23/25 19:40:20.982
  STEP: patching /status @ 04/23/25 19:40:23.003
  I0423 19:40:23.024132 25 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0423 19:40:23.024724 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8067" for this suite. @ 04/23/25 19:40:23.029
• [2.088 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/23/25 19:40:23.033
  I0423 19:40:23.033604 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 19:40:23.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:23.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:23.043
  STEP: create the container @ 04/23/25 19:40:23.044
  W0423 19:40:23.048974      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/23/25 19:40:23.049
  STEP: get the container status @ 04/23/25 19:40:25.061
  STEP: the container should be terminated @ 04/23/25 19:40:25.064
  STEP: the termination message should be set @ 04/23/25 19:40:25.064
  I0423 19:40:25.064366 25 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/23/25 19:40:25.064
  I0423 19:40:25.085196 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2960" for this suite. @ 04/23/25 19:40:25.087
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 04/23/25 19:40:25.092
  I0423 19:40:25.092980 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 19:40:25.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:25.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:25.105
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1919 @ 04/23/25 19:40:25.107
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/23/25 19:40:25.121
  STEP: creating service externalsvc in namespace services-1919 @ 04/23/25 19:40:25.121
  STEP: creating replication controller externalsvc in namespace services-1919 @ 04/23/25 19:40:25.137
  I0423 19:40:25.140938      25 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1919, replica count: 2
  I0423 19:40:28.191995      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/23/25 19:40:28.193
  I0423 19:40:28.207364 25 resource.go:361] Creating new exec pod
  I0423 19:40:30.221589 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-1919 exec execpodhlkzz -- /bin/sh -x -c nslookup nodeport-service.services-1919.svc.cluster.local'
  I0423 19:40:30.325972 25 builder.go:146] stderr: "+ nslookup nodeport-service.services-1919.svc.cluster.local\n"
  I0423 19:40:30.326003 25 builder.go:147] stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nnodeport-service.services-1919.svc.cluster.local\tcanonical name = externalsvc.services-1919.svc.cluster.local.\nName:\texternalsvc.services-1919.svc.cluster.local\nAddress: 10.32.0.213\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1919, will wait for the garbage collector to delete the pods @ 04/23/25 19:40:30.326
  I0423 19:40:30.388368 25 resources.go:139] Deleting ReplicationController externalsvc took: 6.370202ms
  I0423 19:40:30.489954 25 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.583989ms
  I0423 19:40:33.505488 25 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0423 19:40:33.514210 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1919" for this suite. @ 04/23/25 19:40:33.516
• [8.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 04/23/25 19:40:33.52
  I0423 19:40:33.520695 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pv @ 04/23/25 19:40:33.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:33.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:33.532
  STEP: Creating initial PV and PVC @ 04/23/25 19:40:33.534
  I0423 19:40:33.534616 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8609" @ 04/23/25 19:40:33.544
  STEP: Listing PVCs in namespace "pv-8609" @ 04/23/25 19:40:33.546
  STEP: Reading "pvc-pvks4" Status @ 04/23/25 19:40:33.548
  STEP: Reading "pv-8609-ffbt4" Status @ 04/23/25 19:40:33.552
  STEP: Patching "pvc-pvks4" Status @ 04/23/25 19:40:33.559
  STEP: Patching "pv-8609-ffbt4" Status @ 04/23/25 19:40:33.563
  STEP: Updating "pvc-pvks4" Status @ 04/23/25 19:40:33.57
  STEP: Updating "pv-8609-ffbt4" Status @ 04/23/25 19:40:33.576
  I0423 19:40:33.582975 25 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0423 19:40:33.583003 25 pv.go:205] Deleting PersistentVolumeClaim "pvc-pvks4"
  I0423 19:40:33.586650 25 pv.go:193] Deleting PersistentVolume "pv-8609-ffbt4"
  I0423 19:40:33.590701 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8609" for this suite. @ 04/23/25 19:40:33.618
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/23/25 19:40:33.625
  I0423 19:40:33.625633 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename gc @ 04/23/25 19:40:33.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:33.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:33.634
  I0423 19:40:33.672863 25 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"1e43d171-3781-419b-8b17-b40c9eb18093", Controller:(*bool)(0xc0034d5a06), BlockOwnerDeletion:(*bool)(0xc0034d5a07)}}
  I0423 19:40:33.680653 25 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"dbec04c8-b945-4107-90ad-d8ae292fe516", Controller:(*bool)(0xc00599475a), BlockOwnerDeletion:(*bool)(0xc00599475b)}}
  I0423 19:40:33.685745 25 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"cd6e9eac-a6d8-4740-b8bb-a9dd6fa820a4", Controller:(*bool)(0xc0059949ee), BlockOwnerDeletion:(*bool)(0xc0059949ef)}}
  I0423 19:40:38.719155 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3159" for this suite. @ 04/23/25 19:40:38.723
• [5.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/23/25 19:40:38.728
  I0423 19:40:38.728563 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:40:38.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:38.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:38.742
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:40:38.745
  STEP: Saw pod success @ 04/23/25 19:40:42.762
  I0423 19:40:42.764607 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-1b2cef78-ffcd-4281-986a-e8552294d49a container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:40:42.771
  I0423 19:40:42.800655 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4114" for this suite. @ 04/23/25 19:40:42.805
• [4.083 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 04/23/25 19:40:42.811
  I0423 19:40:42.811992 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 19:40:42.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:40:42.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:40:42.837
  I0423 19:40:42.839584 25 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 19:40:42.909473 25 util.go:393] Waiting for terminating namespaces to be deleted...
  I0423 19:40:42.912700 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 19:40:42.920037 25 predicates.go:957] etcd-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920091 25 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0423 19:40:42.920117 25 predicates.go:957] gobetween-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920142 25 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 19:40:42.920162 25 predicates.go:957] kube-apiserver-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920182 25 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0423 19:40:42.920199 25 predicates.go:957] kube-controller-manager-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920220 25 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0423 19:40:42.920237 25 predicates.go:957] kube-proxy-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920256 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 19:40:42.920272 25 predicates.go:957] kube-scheduler-worker00 from kube-system started at 2025-04-23 18:07:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920292 25 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0423 19:40:42.920317 25 predicates.go:957] calico-node-t7722 from networking started at 2025-04-23 18:08:38 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920335 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 19:40:42.920352 25 predicates.go:957] metallb-speaker-8h5gw from networking started at 2025-04-23 19:07:31 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920436 25 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 19:40:42.920455 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-23 18:12:31 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920463 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 19:40:42.920471 25 predicates.go:957] sonobuoy-e2e-job-8e2e29f3e66e467f from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:40:42.920481 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0423 19:40:42.920488 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:40:42.920496 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-be276f75500849d8-mwsrb from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:40:42.920503 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:40:42.920509 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 19:40:42.920528 25 predicates.go:957] ceph-csi-cephfs-nodeplugin-db7xs from storage started at 2025-04-23 19:07:31 +0000 UTC (3 container statuses recorded)
  I0423 19:40:42.920538 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:40:42.920545 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:40:42.920552 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.920559 25 predicates.go:957] ceph-csi-rbd-nodeplugin-9vr2q from storage started at 2025-04-23 19:07:31 +0000 UTC (3 container statuses recorded)
  I0423 19:40:42.920566 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:40:42.920572 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:40:42.920579 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.920586 25 predicates.go:957] ceph-mon-worker00-f69c45b64-gztsp from storage started at 2025-04-23 19:07:31 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.920594 25 predicates.go:959] 	Container ceph-mon ready: true, restart count 0
  I0423 19:40:42.920602 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 19:40:42.930946 25 predicates.go:957] coredns-9b4dff67b-c8475 from kube-system started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.931130 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 19:40:42.932013 25 predicates.go:957] coredns-9b4dff67b-pkcwz from kube-system started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932042 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 19:40:42.932088 25 predicates.go:957] gobetween-worker01 from kube-system started at 2025-04-23 18:07:44 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932107 25 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 19:40:42.932126 25 predicates.go:957] kube-proxy-worker01 from kube-system started at 2025-04-23 18:07:44 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932142 25 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 19:40:42.932161 25 predicates.go:957] kubernetes-dashboard-api-5fdc7d7fcc-hr9hb from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932178 25 predicates.go:959] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 19:40:42.932384 25 predicates.go:957] kubernetes-dashboard-auth-85745c57f4-ck2dl from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932405 25 predicates.go:959] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 19:40:42.932424 25 predicates.go:957] kubernetes-dashboard-kong-859475c6c4-n9bsh from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932441 25 predicates.go:959] 	Container proxy ready: true, restart count 0
  I0423 19:40:42.932458 25 predicates.go:957] kubernetes-dashboard-metrics-scraper-6996d84f57-fjmgz from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932494 25 predicates.go:959] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 19:40:42.932512 25 predicates.go:957] kubernetes-dashboard-web-684dd555d6-hnrf5 from kube-system started at 2025-04-23 19:07:05 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932528 25 predicates.go:959] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 19:40:42.932546 25 predicates.go:957] calico-kube-controllers-78fc9c8775-p2x92 from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932561 25 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 19:40:42.932578 25 predicates.go:957] calico-node-7pxkw from networking started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932593 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 19:40:42.932631 25 predicates.go:957] calico-typha-7f9677b8db-52khj from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.932648 25 predicates.go:959] 	Container calico-typha ready: true, restart count 0
  I0423 19:40:42.932702 25 predicates.go:957] metallb-controller-6b6cbb75b9-dxlx8 from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.933393 25 predicates.go:959] 	Container controller ready: true, restart count 0
  I0423 19:40:42.933653 25 predicates.go:957] metallb-speaker-w4trl from networking started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.933685 25 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 19:40:42.933752 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-be276f75500849d8-b29nj from sonobuoy started at 2025-04-23 18:12:37 +0000 UTC (2 container statuses recorded)
  I0423 19:40:42.933768 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 19:40:42.933787 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 19:40:42.933805 25 predicates.go:957] ceph-csi-cephfs-nodeplugin-4mjql from storage started at 2025-04-23 18:08:35 +0000 UTC (3 container statuses recorded)
  I0423 19:40:42.933875 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:40:42.933893 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:40:42.936422 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.936458 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-86q8j from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:40:42.936469 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:40:42.936477 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:40:42.936483 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:40:42.936491 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:40:42.936512 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.936521 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-r958b from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:40:42.936608 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:40:42.936660 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:40:42.936668 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:40:42.936675 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:40:42.936682 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.936690 25 predicates.go:957] ceph-csi-cephfs-provisioner-795b87747-wppg5 from storage started at 2025-04-23 18:08:35 +0000 UTC (5 container statuses recorded)
  I0423 19:40:42.936697 25 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 19:40:42.936704 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:40:42.936710 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:40:42.936717 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:40:42.936728 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.936736 25 predicates.go:957] ceph-csi-rbd-nodeplugin-cxbdp from storage started at 2025-04-23 18:08:35 +0000 UTC (3 container statuses recorded)
  I0423 19:40:42.936743 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:40:42.936756 25 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 19:40:42.936763 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.936771 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-455gl from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:40:42.936778 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:40:42.936803 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:40:42.936810 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:40:42.936817 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:40:42.936842 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:40:42.936851 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:40:42.936857 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.936869 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-mztv7 from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:40:42.936876 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:40:42.936883 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:40:42.936889 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:40:42.936896 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:40:42.936903 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:40:42.936909 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:40:42.936916 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.936923 25 predicates.go:957] ceph-csi-rbd-provisioner-554bbbb95d-ppn52 from storage started at 2025-04-23 18:08:35 +0000 UTC (7 container statuses recorded)
  I0423 19:40:42.936930 25 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 19:40:42.936937 25 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 19:40:42.937007 25 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 19:40:42.937052 25 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 19:40:42.937061 25 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 19:40:42.937068 25 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 19:40:42.937074 25 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 19:40:42.937082 25 predicates.go:957] ceph-mds-worker01-b7d5fc474-hv782 from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.937089 25 predicates.go:959] 	Container ceph-mds ready: true, restart count 0
  I0423 19:40:42.937097 25 predicates.go:957] ceph-mgr-worker01-559c86787f-24g2t from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.937104 25 predicates.go:959] 	Container ceph-mgr ready: true, restart count 0
  I0423 19:40:42.937111 25 predicates.go:957] ceph-osd-worker01-56b55bd558-fprzw from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.937118 25 predicates.go:959] 	Container ceph-osd ready: true, restart count 0
  I0423 19:40:42.937125 25 predicates.go:957] ceph-rgw-worker01-6cd4858446-n8rlr from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.937137 25 predicates.go:959] 	Container ceph-rgw ready: true, restart count 0
  I0423 19:40:42.937145 25 predicates.go:957] ceph-setup-bth5g from storage started at 2025-04-23 18:08:35 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.937155 25 predicates.go:959] 	Container ceph ready: false, restart count 0
  I0423 19:40:42.937163 25 predicates.go:957] snapshot-controller-79d4d6679-bfdwx from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.937170 25 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 19:40:42.937177 25 predicates.go:957] snapshot-controller-79d4d6679-nxs6g from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.937184 25 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 19:40:42.937192 25 predicates.go:957] snapshot-validation-webhook-f99b99c55-zf2x8 from storage started at 2025-04-23 18:09:37 +0000 UTC (1 container statuses recorded)
  I0423 19:40:42.937199 25 predicates.go:959] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 19:40:42.937
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 19:40:44.965
  STEP: Trying to apply a random label on the found node. @ 04/23/25 19:40:44.995
  STEP: verifying the node has the label kubernetes.io/e2e-c225e247-4be7-4f6c-8276-5033442a3156 95 @ 04/23/25 19:40:45.009
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/23/25 19:40:45.018
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.58.100 on the node which pod4 resides and expect not scheduled @ 04/23/25 19:40:47.032
  STEP: removing the label kubernetes.io/e2e-c225e247-4be7-4f6c-8276-5033442a3156 off the node worker00 @ 04/23/25 19:45:47.049
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c225e247-4be7-4f6c-8276-5033442a3156 @ 04/23/25 19:45:47.087
  I0423 19:45:47.093620 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8438" for this suite. @ 04/23/25 19:45:47.096
• [304.292 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 04/23/25 19:45:47.104
  I0423 19:45:47.104561 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 19:45:47.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:45:47.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:45:47.13
  STEP: set up a multi version CRD @ 04/23/25 19:45:47.135
  I0423 19:45:47.136970 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: rename a version @ 04/23/25 19:45:50.236
  STEP: check the new version name is served @ 04/23/25 19:45:50.252
  STEP: check the old version name is removed @ 04/23/25 19:45:50.985
  STEP: check the other version is not changed @ 04/23/25 19:45:51.588
  I0423 19:45:54.069540 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-260" for this suite. @ 04/23/25 19:45:54.073
• [6.981 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 04/23/25 19:45:54.086
  I0423 19:45:54.086043 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 19:45:54.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:45:54.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:45:54.097
  I0423 19:45:54.098576 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 19:45:55.312
  I0423 19:45:55.312535 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-2729 --namespace=crd-publish-openapi-2729 create -f -'
  I0423 19:45:57.379288 25 builder.go:146] stderr: ""
  I0423 19:45:57.379342 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7121-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0423 19:45:57.379513 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-2729 --namespace=crd-publish-openapi-2729 delete e2e-test-crd-publish-openapi-7121-crds test-cr'
  I0423 19:45:57.429518 25 builder.go:146] stderr: ""
  I0423 19:45:57.429556 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7121-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0423 19:45:57.429605 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-2729 --namespace=crd-publish-openapi-2729 apply -f -'
  I0423 19:45:57.485354 25 builder.go:146] stderr: ""
  I0423 19:45:57.485390 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7121-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0423 19:45:57.485435 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-2729 --namespace=crd-publish-openapi-2729 delete e2e-test-crd-publish-openapi-7121-crds test-cr'
  I0423 19:45:57.533593 25 builder.go:146] stderr: ""
  I0423 19:45:57.533626 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7121-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/23/25 19:45:57.533
  I0423 19:45:57.533682 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-2729 explain e2e-test-crd-publish-openapi-7121-crds'
  I0423 19:45:57.581250 25 builder.go:146] stderr: ""
  I0423 19:45:57.581295 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7121-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0423 19:45:58.758695 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2729" for this suite. @ 04/23/25 19:45:58.765
• [4.693 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 04/23/25 19:45:58.779
  I0423 19:45:58.779400 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:45:58.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:45:58.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:45:58.791
  STEP: Setting up server cert @ 04/23/25 19:45:58.805
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:45:59.077
  STEP: Deploying the webhook pod @ 04/23/25 19:45:59.091
  STEP: Wait for the deployment to be ready @ 04/23/25 19:45:59.1
  I0423 19:45:59.108024 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:46:01.122
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:46:01.128
  I0423 19:46:02.129741 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 19:46:02.133976 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5851-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 19:46:02.646
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/23/25 19:46:02.659
  I0423 19:46:05.217772 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2064" for this suite. @ 04/23/25 19:46:05.22
  STEP: Destroying namespace "webhook-markers-5923" for this suite. @ 04/23/25 19:46:05.236
• [6.461 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 04/23/25 19:46:05.241
  I0423 19:46:05.242154 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 19:46:05.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:05.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:05.255
  STEP: Discovering how many secrets are in namespace by default @ 04/23/25 19:46:05.257
  STEP: Counting existing ResourceQuota @ 04/23/25 19:46:10.26
  STEP: Creating a ResourceQuota @ 04/23/25 19:46:15.263
  STEP: Ensuring resource quota status is calculated @ 04/23/25 19:46:15.276
  STEP: Creating a Secret @ 04/23/25 19:46:17.285
  STEP: Ensuring resource quota status captures secret creation @ 04/23/25 19:46:17.308
  STEP: Deleting a secret @ 04/23/25 19:46:19.311
  STEP: Ensuring resource quota status released usage @ 04/23/25 19:46:19.324
  I0423 19:46:21.334544 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5693" for this suite. @ 04/23/25 19:46:21.34
• [16.113 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 04/23/25 19:46:21.355
  I0423 19:46:21.355542 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 19:46:21.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:21.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:21.367
  I0423 19:46:21.370464 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:46:24.406475 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4861" for this suite. @ 04/23/25 19:46:24.409
• [3.069 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/23/25 19:46:24.423
  I0423 19:46:24.423852 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 19:46:24.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:24.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:24.437
  I0423 19:46:26.463566 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9370" for this suite. @ 04/23/25 19:46:26.469
• [2.049 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1868
  STEP: Creating a kubernetes client @ 04/23/25 19:46:26.473
  I0423 19:46:26.473787 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:46:26.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:26.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:26.486
  STEP: Starting the proxy @ 04/23/25 19:46:26.488
  I0423 19:46:26.488860 25 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-8167 proxy --unix-socket=/tmp/kubectl-proxy-unix3672864312/test'
  STEP: retrieving proxy /api/ output @ 04/23/25 19:46:26.546
  I0423 19:46:26.547608 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8167" for this suite. @ 04/23/25 19:46:26.569
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/23/25 19:46:26.573
  I0423 19:46:26.573853 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:46:26.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:26.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:26.587
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:46:26.588
  STEP: Saw pod success @ 04/23/25 19:46:30.61
  I0423 19:46:30.614802 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-e344eb5e-8c9b-4a22-871d-1ad2e4ab94a9 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:46:30.619
  I0423 19:46:30.628752 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2036" for this suite. @ 04/23/25 19:46:30.63
• [4.061 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 04/23/25 19:46:30.635
  I0423 19:46:30.635096 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:46:30.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:30.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:30.645
  STEP: Setting up server cert @ 04/23/25 19:46:30.656
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:46:30.937
  STEP: Deploying the webhook pod @ 04/23/25 19:46:30.949
  STEP: Wait for the deployment to be ready @ 04/23/25 19:46:30.959
  I0423 19:46:30.969653 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 19:46:32.98
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:46:32.997
  I0423 19:46:33.997653 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 19:46:34.006577 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/23/25 19:46:34.518
  STEP: Creating a custom resource that should be denied by the webhook @ 04/23/25 19:46:34.544
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/23/25 19:46:36.559
  STEP: Updating the custom resource with disallowed data should be denied @ 04/23/25 19:46:36.573
  STEP: Deleting the custom resource should be denied @ 04/23/25 19:46:36.578
  STEP: Remove the offending key and value from the custom resource data @ 04/23/25 19:46:36.581
  STEP: Deleting the updated custom resource should be successful @ 04/23/25 19:46:36.586
  I0423 19:46:37.142289 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-432" for this suite. @ 04/23/25 19:46:37.149
  STEP: Destroying namespace "webhook-markers-736" for this suite. @ 04/23/25 19:46:37.165
• [6.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 04/23/25 19:46:37.17
  I0423 19:46:37.170126 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:46:37.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:37.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:37.181
  STEP: Setting up server cert @ 04/23/25 19:46:37.192
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:46:37.411
  STEP: Deploying the webhook pod @ 04/23/25 19:46:37.423
  STEP: Wait for the deployment to be ready @ 04/23/25 19:46:37.428
  I0423 19:46:37.431879 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/23/25 19:46:39.441
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:46:39.447
  I0423 19:46:40.447808 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 19:46:40.453622 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9599-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 19:46:40.972
  STEP: Creating a custom resource while v1 is storage version @ 04/23/25 19:46:40.983
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/23/25 19:46:43.021
  STEP: Patching the custom resource while v2 is storage version @ 04/23/25 19:46:43.027
  I0423 19:46:43.590616 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2508" for this suite. @ 04/23/25 19:46:43.595
  STEP: Destroying namespace "webhook-markers-4957" for this suite. @ 04/23/25 19:46:43.61
• [6.445 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/23/25 19:46:43.615
  I0423 19:46:43.615493 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 19:46:43.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:43.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:43.626
  STEP: creating the pod @ 04/23/25 19:46:43.628
  STEP: submitting the pod to kubernetes @ 04/23/25 19:46:43.628
  W0423 19:46:43.632977      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 04/23/25 19:46:45.642
  STEP: updating the pod @ 04/23/25 19:46:45.644
  I0423 19:46:46.154171 25 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-71c96678-fdb5-4da9-b10f-c7d1ebdbccdb"
  I0423 19:46:50.166011 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-409" for this suite. @ 04/23/25 19:46:50.17
• [6.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/23/25 19:46:50.177
  I0423 19:46:50.177026 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 19:46:50.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:46:50.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:46:50.191
  STEP: Creating a suspended cronjob @ 04/23/25 19:46:50.194
  STEP: Ensuring no jobs are scheduled @ 04/23/25 19:46:50.199
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/23/25 19:51:50.2
  STEP: Removing cronjob @ 04/23/25 19:51:50.205
  I0423 19:51:50.222094 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9415" for this suite. @ 04/23/25 19:51:50.225
• [300.051 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 04/23/25 19:51:50.228
  I0423 19:51:50.229051 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 19:51:50.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:51:50.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:51:50.252
  STEP: creating service in namespace services-1011 @ 04/23/25 19:51:50.253
  STEP: creating service affinity-nodeport in namespace services-1011 @ 04/23/25 19:51:50.253
  STEP: creating replication controller affinity-nodeport in namespace services-1011 @ 04/23/25 19:51:50.26
  I0423 19:51:50.266600      25 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1011, replica count: 3
  I0423 19:51:53.318375      25 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 19:51:53.330329 25 resource.go:361] Creating new exec pod
  I0423 19:51:56.357258 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-1011 exec execpod-affinitysvn52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0423 19:51:56.445548 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0423 19:51:56.445578 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:51:56.445653 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-1011 exec execpod-affinitysvn52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.96 80'
  I0423 19:51:56.513401 25 builder.go:146] stderr: "+ nc -v -t -w 2 10.32.0.96 80\n+ echo hostName\nConnection to 10.32.0.96 80 port [tcp/http] succeeded!\n"
  I0423 19:51:56.513480 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:51:56.513558 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-1011 exec execpod-affinitysvn52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31681'
  I0423 19:51:56.584212 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31681\nConnection to 192.168.58.100 31681 port [tcp/*] succeeded!\n"
  I0423 19:51:56.584246 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:51:56.584297 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-1011 exec execpod-affinitysvn52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31681'
  I0423 19:51:56.661989 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31681\nConnection to 192.168.58.101 31681 port [tcp/*] succeeded!\n"
  I0423 19:51:56.662024 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:51:56.662075 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-1011 exec execpod-affinitysvn52 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:31681/ ; done'
  I0423 19:51:56.824071 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:31681/\n"
  I0423 19:51:56.824102 25 builder.go:147] stdout: "\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs\naffinity-nodeport-tfrhs"
  I0423 19:51:56.824114 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824123 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824130 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824137 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824145 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824152 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824159 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824165 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824172 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824178 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824186 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824193 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824200 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824207 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824213 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824219 25 service.go:242] Received response from host: affinity-nodeport-tfrhs
  I0423 19:51:56.824267 25 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1011, will wait for the garbage collector to delete the pods @ 04/23/25 19:51:56.841
  I0423 19:51:56.898859 25 resources.go:139] Deleting ReplicationController affinity-nodeport took: 3.825152ms
  I0423 19:51:56.999855 25 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.994597ms
  I0423 19:52:00.015765 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1011" for this suite. @ 04/23/25 19:52:00.017
• [9.792 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/23/25 19:52:00.021
  I0423 19:52:00.021440 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/23/25 19:52:00.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:52:00.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:52:00.031
  STEP: creating a target pod @ 04/23/25 19:52:00.033
  STEP: adding an ephemeral container @ 04/23/25 19:52:02.048
  STEP: checking pod container endpoints @ 04/23/25 19:52:04.063
  I0423 19:52:04.063059 25 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-542 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:52:04.063072 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:52:04.063435 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:52:04.063485 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-542/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0423 19:52:04.106452 25 exec_util.go:111] Exec stderr: ""
  I0423 19:52:04.112029 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-542" for this suite. @ 04/23/25 19:52:04.114
• [4.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/23/25 19:52:04.118
  I0423 19:52:04.118476 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 19:52:04.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:52:04.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:52:04.133
  STEP: creating a ReplicationController @ 04/23/25 19:52:04.137
  STEP: waiting for RC to be added @ 04/23/25 19:52:04.141
  STEP: waiting for available Replicas @ 04/23/25 19:52:04.141
  STEP: patching ReplicationController @ 04/23/25 19:52:04.881
  STEP: waiting for RC to be modified @ 04/23/25 19:52:04.888
  STEP: patching ReplicationController status @ 04/23/25 19:52:04.888
  STEP: waiting for RC to be modified @ 04/23/25 19:52:04.894
  STEP: waiting for available Replicas @ 04/23/25 19:52:04.894
  STEP: fetching ReplicationController status @ 04/23/25 19:52:04.9
  STEP: patching ReplicationController scale @ 04/23/25 19:52:04.903
  STEP: waiting for RC to be modified @ 04/23/25 19:52:04.909
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/23/25 19:52:04.911
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/23/25 19:52:06.196
  STEP: updating ReplicationController status @ 04/23/25 19:52:06.199
  STEP: waiting for RC to be modified @ 04/23/25 19:52:06.206
  STEP: listing all ReplicationControllers @ 04/23/25 19:52:06.206
  STEP: checking that ReplicationController has expected values @ 04/23/25 19:52:06.211
  STEP: deleting ReplicationControllers by collection @ 04/23/25 19:52:06.211
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/23/25 19:52:06.224
  I0423 19:52:06.263671 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0423 19:52:06.264065      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-923" for this suite. @ 04/23/25 19:52:06.269
• [2.157 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/23/25 19:52:06.275
  I0423 19:52:06.275753 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename containers @ 04/23/25 19:52:06.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:52:06.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:52:06.292
  E0423 19:52:07.264553      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:08.265649      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:08.320199 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3211" for this suite. @ 04/23/25 19:52:08.322
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 04/23/25 19:52:08.326
  I0423 19:52:08.326138 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename dns @ 04/23/25 19:52:08.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:52:08.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:52:08.336
  STEP: Creating a test headless service @ 04/23/25 19:52:08.338
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4424.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4424.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local;sleep 1; done
   @ 04/23/25 19:52:08.342
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4424.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4424.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local;sleep 1; done
   @ 04/23/25 19:52:08.342
  STEP: creating a pod to probe DNS @ 04/23/25 19:52:08.342
  STEP: submitting the pod to kubernetes @ 04/23/25 19:52:08.343
  E0423 19:52:09.266096      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:10.267433      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/23/25 19:52:10.359
  STEP: looking for the results for each expected name from probers @ 04/23/25 19:52:10.363
  I0423 19:52:10.366787 25 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:10.369484 25 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:10.371447 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:10.373970 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:10.375891 25 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:10.377786 25 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:10.379302 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:10.381811 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:10.381879 25 dns_common.go:490] Lookups using dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local]

  I0423 19:52:10.386088 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:52:10.390037 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:52:10.394157 25 dns_common.go:496] Pod client logs for jessie-querier: 
  E0423 19:52:11.268508      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:12.268993      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:13.269210      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:14.269654      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:15.270140      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:15.367639 25 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:15.369598 25 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:15.371166 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:15.372428 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:15.373955 25 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:15.375381 25 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:15.377075 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:15.378443 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:15.378463 25 dns_common.go:490] Lookups using dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local]

  I0423 19:52:15.381309 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:52:15.384125 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:52:15.386555 25 dns_common.go:496] Pod client logs for jessie-querier: 
  E0423 19:52:16.270462      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:17.271109      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:18.271642      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:19.272725      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:20.272995      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:20.366521 25 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:20.368205 25 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:20.369700 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:20.370976 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:20.372246 25 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:20.373881 25 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:20.375511 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:20.377643 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:20.377673 25 dns_common.go:490] Lookups using dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local]

  I0423 19:52:20.379992 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:52:20.382545 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:52:20.385253 25 dns_common.go:496] Pod client logs for jessie-querier: 
  E0423 19:52:21.274793      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:22.275604      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:23.275904      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:24.276212      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:25.277068      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:25.371981 25 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:25.375790 25 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:25.378372 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:25.380060 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:25.381895 25 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:25.382981 25 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:25.384166 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:25.385413 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:25.385432 25 dns_common.go:490] Lookups using dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local]

  I0423 19:52:25.388153 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:52:25.390751 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:52:25.393190 25 dns_common.go:496] Pod client logs for jessie-querier: 
  E0423 19:52:26.277576      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:27.277739      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:28.278523      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:29.279567      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:30.280205      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:30.367698 25 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:30.370264 25 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:30.372467 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:30.373711 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:30.374766 25 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:30.375871 25 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:30.376999 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:30.378245 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:30.378260 25 dns_common.go:490] Lookups using dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local]

  I0423 19:52:30.380239 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:52:30.382196 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:52:30.384011 25 dns_common.go:496] Pod client logs for jessie-querier: 
  E0423 19:52:31.281780      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:32.282190      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:33.282879      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:34.283272      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:35.283672      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:35.369344 25 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:35.373678 25 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:35.376790 25 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:35.378979 25 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:35.381436 25 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:35.383207 25 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:35.384630 25 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:35.385744 25 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local from pod dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868: the server could not find the requested resource (get pods dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868)
  I0423 19:52:35.385761 25 dns_common.go:490] Lookups using dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4424.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4424.svc.cluster.local jessie_udp@dns-test-service-2.dns-4424.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4424.svc.cluster.local]

  I0423 19:52:35.389835 25 dns_common.go:496] Pod client logs for webserver: 
  I0423 19:52:35.392980 25 dns_common.go:496] Pod client logs for querier: 
  I0423 19:52:35.395408 25 dns_common.go:496] Pod client logs for jessie-querier: 
  E0423 19:52:36.285140      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:37.285784      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:38.286015      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:39.286156      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:40.286831      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:40.376100 25 dns_common.go:528] DNS probes using dns-4424/dns-test-18469381-07fe-46b3-8374-7e0d3a7cc868 succeeded

  STEP: deleting the pod @ 04/23/25 19:52:40.376
  STEP: deleting the test headless service @ 04/23/25 19:52:40.392
  I0423 19:52:40.409056 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4424" for this suite. @ 04/23/25 19:52:40.41
• [32.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 04/23/25 19:52:40.413
  I0423 19:52:40.413988 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 19:52:40.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:52:40.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:52:40.427
  STEP: apply creating a deployment @ 04/23/25 19:52:40.434
  I0423 19:52:40.441880 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-604" for this suite. @ 04/23/25 19:52:40.513
• [0.110 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 04/23/25 19:52:40.523
  I0423 19:52:40.523885 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:52:40.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:52:40.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:52:40.534
  STEP: creating a replication controller @ 04/23/25 19:52:40.536
  I0423 19:52:40.536380 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 create -f -'
  I0423 19:52:40.607759 25 builder.go:146] stderr: ""
  I0423 19:52:40.607796 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 19:52:40.607
  I0423 19:52:40.607871 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 19:52:40.704312 25 builder.go:146] stderr: ""
  I0423 19:52:40.704340 25 builder.go:147] stdout: "update-demo-nautilus-s4vrp update-demo-nautilus-xtxpg "
  I0423 19:52:40.704384 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:40.746026 25 builder.go:146] stderr: ""
  I0423 19:52:40.746053 25 builder.go:147] stdout: ""
  I0423 19:52:40.746061 25 kubectl.go:2512] update-demo-nautilus-s4vrp is created but not running
  E0423 19:52:41.286846      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:42.287454      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:43.288520      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:44.290232      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:45.290416      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:45.747179 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 19:52:45.791481 25 builder.go:146] stderr: ""
  I0423 19:52:45.791515 25 builder.go:147] stdout: "update-demo-nautilus-s4vrp update-demo-nautilus-xtxpg "
  I0423 19:52:45.791550 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:45.834001 25 builder.go:146] stderr: ""
  I0423 19:52:45.834039 25 builder.go:147] stdout: ""
  I0423 19:52:45.834049 25 kubectl.go:2512] update-demo-nautilus-s4vrp is created but not running
  E0423 19:52:46.291473      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:47.291932      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:48.292243      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:49.292831      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:50.292993      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:50.834971 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 19:52:50.884117 25 builder.go:146] stderr: ""
  I0423 19:52:50.884145 25 builder.go:147] stdout: "update-demo-nautilus-s4vrp update-demo-nautilus-xtxpg "
  I0423 19:52:50.884177 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:50.927871 25 builder.go:146] stderr: ""
  I0423 19:52:50.927928 25 builder.go:147] stdout: "true"
  I0423 19:52:50.928141 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 19:52:50.970441 25 builder.go:146] stderr: ""
  I0423 19:52:50.970474 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 19:52:50.970484 25 kubectl.go:2403] validating pod update-demo-nautilus-s4vrp
  I0423 19:52:50.974441 25 kubectl.go:2423] got data: {
    "image": "nautilus.jpg"
  }

  I0423 19:52:50.974482 25 kubectl.go:2428] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 19:52:50.974491 25 kubectl.go:2530] update-demo-nautilus-s4vrp is verified up and running
  I0423 19:52:50.974529 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-xtxpg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:51.012415 25 builder.go:146] stderr: ""
  I0423 19:52:51.012444 25 builder.go:147] stdout: ""
  I0423 19:52:51.012455 25 kubectl.go:2512] update-demo-nautilus-xtxpg is created but not running
  E0423 19:52:51.294281      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:52.294660      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:53.295076      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:54.296090      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:55.296716      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:56.012687 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 19:52:56.058552 25 builder.go:146] stderr: ""
  I0423 19:52:56.058580 25 builder.go:147] stdout: "update-demo-nautilus-s4vrp update-demo-nautilus-xtxpg "
  I0423 19:52:56.058637 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:56.112716 25 builder.go:146] stderr: ""
  I0423 19:52:56.112747 25 builder.go:147] stdout: "true"
  I0423 19:52:56.112801 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 19:52:56.166100 25 builder.go:146] stderr: ""
  I0423 19:52:56.166132 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 19:52:56.166143 25 kubectl.go:2403] validating pod update-demo-nautilus-s4vrp
  I0423 19:52:56.169055 25 kubectl.go:2423] got data: {
    "image": "nautilus.jpg"
  }

  I0423 19:52:56.169124 25 kubectl.go:2428] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 19:52:56.169141 25 kubectl.go:2530] update-demo-nautilus-s4vrp is verified up and running
  I0423 19:52:56.169257 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-xtxpg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:56.234983 25 builder.go:146] stderr: ""
  I0423 19:52:56.235035 25 builder.go:147] stdout: "true"
  I0423 19:52:56.235103 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-xtxpg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 19:52:56.279274 25 builder.go:146] stderr: ""
  I0423 19:52:56.279332 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 19:52:56.279390 25 kubectl.go:2403] validating pod update-demo-nautilus-xtxpg
  I0423 19:52:56.282882 25 kubectl.go:2423] got data: {
    "image": "nautilus.jpg"
  }

  I0423 19:52:56.283802 25 kubectl.go:2428] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 19:52:56.284500 25 kubectl.go:2530] update-demo-nautilus-xtxpg is verified up and running
  STEP: scaling down the replication controller @ 04/23/25 19:52:56.284
  I0423 19:52:56.287485 25 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0423 19:52:56.287566 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0423 19:52:56.297468      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:52:57.297706      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:57.353370 25 builder.go:146] stderr: ""
  I0423 19:52:57.353409 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 19:52:57.353
  I0423 19:52:57.353476 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 19:52:57.391160 25 builder.go:146] stderr: ""
  I0423 19:52:57.391188 25 builder.go:147] stdout: "update-demo-nautilus-s4vrp "
  I0423 19:52:57.391219 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:57.429505 25 builder.go:146] stderr: ""
  I0423 19:52:57.429534 25 builder.go:147] stdout: "true"
  I0423 19:52:57.429575 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 19:52:57.470515 25 builder.go:146] stderr: ""
  I0423 19:52:57.470552 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 19:52:57.470562 25 kubectl.go:2403] validating pod update-demo-nautilus-s4vrp
  I0423 19:52:57.473260 25 kubectl.go:2423] got data: {
    "image": "nautilus.jpg"
  }

  I0423 19:52:57.473300 25 kubectl.go:2428] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 19:52:57.473310 25 kubectl.go:2530] update-demo-nautilus-s4vrp is verified up and running
  STEP: scaling up the replication controller @ 04/23/25 19:52:57.473
  I0423 19:52:57.475059 25 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0423 19:52:57.475107 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0423 19:52:58.298189      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:52:58.529281 25 builder.go:146] stderr: ""
  I0423 19:52:58.529310 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 19:52:58.529
  I0423 19:52:58.529385 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 19:52:58.576873 25 builder.go:146] stderr: ""
  I0423 19:52:58.576900 25 builder.go:147] stdout: "update-demo-nautilus-cmx9k update-demo-nautilus-s4vrp "
  I0423 19:52:58.576934 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-cmx9k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:58.615204 25 builder.go:146] stderr: ""
  I0423 19:52:58.615236 25 builder.go:147] stdout: "true"
  I0423 19:52:58.615270 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-cmx9k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 19:52:58.661109 25 builder.go:146] stderr: ""
  I0423 19:52:58.661144 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 19:52:58.661156 25 kubectl.go:2403] validating pod update-demo-nautilus-cmx9k
  I0423 19:52:58.664064 25 kubectl.go:2423] got data: {
    "image": "nautilus.jpg"
  }

  I0423 19:52:58.664101 25 kubectl.go:2428] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 19:52:58.664111 25 kubectl.go:2530] update-demo-nautilus-cmx9k is verified up and running
  I0423 19:52:58.664238 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:58.703959 25 builder.go:146] stderr: ""
  I0423 19:52:58.704003 25 builder.go:147] stdout: "true"
  I0423 19:52:58.704102 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods update-demo-nautilus-s4vrp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 19:52:58.742158 25 builder.go:146] stderr: ""
  I0423 19:52:58.742188 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 19:52:58.742198 25 kubectl.go:2403] validating pod update-demo-nautilus-s4vrp
  I0423 19:52:58.744993 25 kubectl.go:2423] got data: {
    "image": "nautilus.jpg"
  }

  I0423 19:52:58.745051 25 kubectl.go:2428] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 19:52:58.745060 25 kubectl.go:2530] update-demo-nautilus-s4vrp is verified up and running
  STEP: using delete to clean up resources @ 04/23/25 19:52:58.745
  I0423 19:52:58.745114 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 delete --grace-period=0 --force -f -'
  I0423 19:52:58.786779 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 19:52:58.786820 25 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0423 19:52:58.786892 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get rc,svc -l name=update-demo --no-headers'
  I0423 19:52:58.844578 25 builder.go:146] stderr: "No resources found in kubectl-2809 namespace.\n"
  I0423 19:52:58.844637 25 builder.go:147] stdout: ""
  I0423 19:52:58.844721 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-2809 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0423 19:52:58.921028 25 builder.go:146] stderr: ""
  I0423 19:52:58.921079 25 builder.go:147] stdout: ""
  I0423 19:52:58.921189 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2809" for this suite. @ 04/23/25 19:52:58.924
• [18.405 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 04/23/25 19:52:58.928
  I0423 19:52:58.928812 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 19:52:58.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:52:58.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:52:58.941
  STEP: creating a replication controller @ 04/23/25 19:52:58.944
  I0423 19:52:58.944157 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 create -f -'
  I0423 19:52:59.034413 25 builder.go:146] stderr: ""
  I0423 19:52:59.034457 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 19:52:59.034
  I0423 19:52:59.034578 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 19:52:59.102503 25 builder.go:146] stderr: ""
  I0423 19:52:59.102533 25 builder.go:147] stdout: "update-demo-nautilus-ksxgc update-demo-nautilus-ttrxq "
  I0423 19:52:59.102569 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get pods update-demo-nautilus-ksxgc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:52:59.177814 25 builder.go:146] stderr: ""
  I0423 19:52:59.177904 25 builder.go:147] stdout: ""
  I0423 19:52:59.177915 25 kubectl.go:2512] update-demo-nautilus-ksxgc is created but not running
  E0423 19:52:59.298311      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:00.299047      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:01.299354      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:02.300201      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:03.301009      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:53:04.178829 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 19:53:04.229542 25 builder.go:146] stderr: ""
  I0423 19:53:04.229580 25 builder.go:147] stdout: "update-demo-nautilus-ksxgc update-demo-nautilus-ttrxq "
  I0423 19:53:04.229709 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get pods update-demo-nautilus-ksxgc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:53:04.270663 25 builder.go:146] stderr: ""
  I0423 19:53:04.270692 25 builder.go:147] stdout: "true"
  I0423 19:53:04.270732 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get pods update-demo-nautilus-ksxgc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0423 19:53:04.301172      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:53:04.323730 25 builder.go:146] stderr: ""
  I0423 19:53:04.323787 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 19:53:04.323798 25 kubectl.go:2403] validating pod update-demo-nautilus-ksxgc
  I0423 19:53:04.327829 25 kubectl.go:2423] got data: {
    "image": "nautilus.jpg"
  }

  I0423 19:53:04.327874 25 kubectl.go:2428] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 19:53:04.327884 25 kubectl.go:2530] update-demo-nautilus-ksxgc is verified up and running
  I0423 19:53:04.327923 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get pods update-demo-nautilus-ttrxq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 19:53:04.378660 25 builder.go:146] stderr: ""
  I0423 19:53:04.378850 25 builder.go:147] stdout: "true"
  I0423 19:53:04.379069 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get pods update-demo-nautilus-ttrxq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 19:53:04.420442 25 builder.go:146] stderr: ""
  I0423 19:53:04.420483 25 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 19:53:04.420509 25 kubectl.go:2403] validating pod update-demo-nautilus-ttrxq
  I0423 19:53:04.423814 25 kubectl.go:2423] got data: {
    "image": "nautilus.jpg"
  }

  I0423 19:53:04.423940 25 kubectl.go:2428] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 19:53:04.423962 25 kubectl.go:2530] update-demo-nautilus-ttrxq is verified up and running
  STEP: using delete to clean up resources @ 04/23/25 19:53:04.423
  I0423 19:53:04.424048 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 delete --grace-period=0 --force -f -'
  I0423 19:53:04.469134 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 19:53:04.469178 25 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0423 19:53:04.469239 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get rc,svc -l name=update-demo --no-headers'
  I0423 19:53:04.526523 25 builder.go:146] stderr: "No resources found in kubectl-1084 namespace.\n"
  I0423 19:53:04.526553 25 builder.go:147] stdout: ""
  I0423 19:53:04.526599 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=kubectl-1084 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0423 19:53:04.586711 25 builder.go:146] stderr: ""
  I0423 19:53:04.586756 25 builder.go:147] stdout: ""
  I0423 19:53:04.586851 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1084" for this suite. @ 04/23/25 19:53:04.59
• [5.666 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 04/23/25 19:53:04.595
  I0423 19:53:04.595436 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 19:53:04.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:53:04.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:53:04.607
  I0423 19:53:04.618787 25 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0423 19:53:05.301903      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:06.302226      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:07.302714      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:08.302939      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:09.303488      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:10.304335      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:11.305772      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:12.306320      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:13.306609      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:14.307104      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:15.307583      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:16.308189      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:17.308682      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:18.308624      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:19.309606      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:20.311372      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:21.312029      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:22.313197      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:23.313519      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:24.314064      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:25.314447      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:26.314406      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:27.315887      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:28.316912      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:29.317584      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:30.317949      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:31.318239      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:32.319257      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:33.320142      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:34.321087      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:35.321071      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:36.321111      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:37.321364      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:38.322401      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:39.322497      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:40.323629      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:41.324967      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:42.324961      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:43.325261      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:44.326736      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:45.327400      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:46.327932      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:47.328770      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:48.329297      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:49.329805      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:50.330980      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:51.331561      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:52.331918      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:53.332427      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:54.332771      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:55.333675      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:56.334384      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:57.335097      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:58.336095      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:53:59.337256      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:00.337547      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:01.337654      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:02.337818      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:03.338024      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:04.338607      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:54:04.623254 25 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/23/25 19:54:04.627
  I0423 19:54:04.627408 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/23/25 19:54:04.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:04.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:04.653
  STEP: Finding an available node @ 04/23/25 19:54:04.661
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 19:54:04.661
  E0423 19:54:05.338843      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:06.339035      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 19:54:06.682
  I0423 19:54:06.691715 25 preemption.go:585] found a healthy node: worker00
  E0423 19:54:07.339418      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:08.339565      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:09.340621      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:10.341587      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:11.341772      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:12.342242      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:54:12.766247 25 preemption.go:708] pods created so far: [1 1 1]
  I0423 19:54:12.766385 25 preemption.go:709] length of pods created so far: 3
  E0423 19:54:13.343075      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:14.343391      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:54:14.784260 25 preemption.go:726] pods created so far: [2 2 1]
  E0423 19:54:15.343809      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:16.344407      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:17.344771      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:18.344826      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:19.345943      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:20.346330      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:21.347561      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:54:21.812181 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8283" for this suite. @ 04/23/25 19:54:21.814
  I0423 19:54:21.817030 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-283" for this suite. @ 04/23/25 19:54:21.916
• [77.323 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 04/23/25 19:54:21.919
  I0423 19:54:21.919184 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:54:21.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:21.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:21.93
  STEP: Setting up server cert @ 04/23/25 19:54:21.944
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:54:22.107
  STEP: Deploying the webhook pod @ 04/23/25 19:54:22.111
  STEP: Wait for the deployment to be ready @ 04/23/25 19:54:22.117
  I0423 19:54:22.121551 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0423 19:54:22.348010      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:23.349903      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 19:54:24.128
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:54:24.145
  E0423 19:54:24.351010      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:54:25.146631 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/23/25 19:54:25.152
  STEP: verifying the mutating webhook match conditions @ 04/23/25 19:54:25.159
  STEP: updating the mutating webhook match conditions @ 04/23/25 19:54:25.161
  STEP: verifying the mutating webhook match conditions @ 04/23/25 19:54:25.166
  I0423 19:54:25.198256 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2419" for this suite. @ 04/23/25 19:54:25.2
  STEP: Destroying namespace "webhook-markers-9538" for this suite. @ 04/23/25 19:54:25.209
• [3.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/23/25 19:54:25.221
  I0423 19:54:25.221201 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 19:54:25.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:25.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:25.23
  STEP: Creating configMap with name configmap-test-volume-map-5f167447-dcc6-4fff-8c14-6d0c7fb9f68f @ 04/23/25 19:54:25.232
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:54:25.234
  E0423 19:54:25.351165      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:26.351983      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:27.352048      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:28.353019      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:54:29.247
  I0423 19:54:29.249048 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-c1bd0efe-ee14-49a6-83d7-579b5ecfb88f container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:54:29.253
  I0423 19:54:29.266603 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3026" for this suite. @ 04/23/25 19:54:29.27
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 04/23/25 19:54:29.275
  I0423 19:54:29.275516 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:54:29.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:29.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:29.287
  STEP: Setting up server cert @ 04/23/25 19:54:29.298
  E0423 19:54:29.353498      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:54:29.475
  STEP: Deploying the webhook pod @ 04/23/25 19:54:29.479
  STEP: Wait for the deployment to be ready @ 04/23/25 19:54:29.486
  I0423 19:54:29.490107 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 19:54:30.353979      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:31.354184      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 19:54:31.495
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:54:31.509
  E0423 19:54:32.354230      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:54:32.510578 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/23/25 19:54:32.514
  STEP: create a pod @ 04/23/25 19:54:32.531
  E0423 19:54:33.355055      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:34.355271      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/23/25 19:54:34.538
  I0423 19:54:34.538769 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=webhook-7492 attach --namespace=webhook-7492 to-be-attached-pod -i -c=container1'
  I0423 19:54:34.587763 25 builder.go:135] rc: 1
  I0423 19:54:34.621979 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7492" for this suite. @ 04/23/25 19:54:34.627
  STEP: Destroying namespace "webhook-markers-2827" for this suite. @ 04/23/25 19:54:34.636
• [5.365 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 04/23/25 19:54:34.64
  I0423 19:54:34.641001 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:54:34.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:34.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:34.656
  STEP: creating a secret @ 04/23/25 19:54:34.658
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/23/25 19:54:34.661
  STEP: patching the secret @ 04/23/25 19:54:34.665
  STEP: deleting the secret using a LabelSelector @ 04/23/25 19:54:34.672
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/23/25 19:54:34.677
  I0423 19:54:34.680665 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5545" for this suite. @ 04/23/25 19:54:34.725
• [0.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 04/23/25 19:54:34.73
  I0423 19:54:34.730014 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 19:54:34.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:34.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:34.742
  I0423 19:54:34.744427 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  E0423 19:54:35.355955      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 19:54:35.93
  I0423 19:54:35.930787 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-4272 --namespace=crd-publish-openapi-4272 create -f -'
  I0423 19:54:36.050251 25 builder.go:146] stderr: ""
  I0423 19:54:36.050294 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3812-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0423 19:54:36.050337 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-4272 --namespace=crd-publish-openapi-4272 delete e2e-test-crd-publish-openapi-3812-crds test-cr'
  I0423 19:54:36.114969 25 builder.go:146] stderr: ""
  I0423 19:54:36.115012 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3812-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0423 19:54:36.115082 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-4272 --namespace=crd-publish-openapi-4272 apply -f -'
  I0423 19:54:36.176649 25 builder.go:146] stderr: ""
  I0423 19:54:36.176702 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3812-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0423 19:54:36.176761 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-4272 --namespace=crd-publish-openapi-4272 delete e2e-test-crd-publish-openapi-3812-crds test-cr'
  I0423 19:54:36.236606 25 builder.go:146] stderr: ""
  I0423 19:54:36.236638 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3812-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/23/25 19:54:36.236
  I0423 19:54:36.236699 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=crd-publish-openapi-4272 explain e2e-test-crd-publish-openapi-3812-crds'
  I0423 19:54:36.291669 25 builder.go:146] stderr: ""
  I0423 19:54:36.291761 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-3812-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0423 19:54:36.357310      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:37.359089      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:54:37.507375 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4272" for this suite. @ 04/23/25 19:54:37.51
• [2.784 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/23/25 19:54:37.514
  I0423 19:54:37.514324 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:54:37.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:37.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:37.524
  STEP: Creating configMap with name projected-configmap-test-volume-b6ab6883-6e48-4645-8e81-bfa2c96f93fa @ 04/23/25 19:54:37.526
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:54:37.529
  E0423 19:54:38.360134      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:39.360358      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:54:39.537
  I0423 19:54:39.539261 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-8648f171-aa35-4016-947f-ff6479b34bc3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:54:39.542
  I0423 19:54:39.550304 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4671" for this suite. @ 04/23/25 19:54:39.552
• [2.041 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/23/25 19:54:39.555
  I0423 19:54:39.555182 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 19:54:39.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:39.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:39.566
  STEP: Creating a pod to test service account token:  @ 04/23/25 19:54:39.569
  E0423 19:54:40.361016      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:41.362043      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:54:41.58
  I0423 19:54:41.582600 25 output.go:196] Trying to get logs from node worker00 pod test-pod-964a4f80-92ae-4bfe-88fe-a1d75e7bc199 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 19:54:41.586
  I0423 19:54:41.594930 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8952" for this suite. @ 04/23/25 19:54:41.596
• [2.045 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/23/25 19:54:41.601
  I0423 19:54:41.601046 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/23/25 19:54:41.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:41.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:41.615
  STEP: getting /apis @ 04/23/25 19:54:41.618
  STEP: getting /apis/storage.k8s.io @ 04/23/25 19:54:41.621
  STEP: getting /apis/storage.k8s.io/v1 @ 04/23/25 19:54:41.622
  STEP: creating @ 04/23/25 19:54:41.623
  STEP: watching @ 04/23/25 19:54:41.633
  I0423 19:54:41.633271 25 csistoragecapacity.go:143] starting watch
  STEP: getting @ 04/23/25 19:54:41.636
  STEP: listing in namespace @ 04/23/25 19:54:41.638
  STEP: listing across namespaces @ 04/23/25 19:54:41.64
  STEP: patching @ 04/23/25 19:54:41.642
  STEP: updating @ 04/23/25 19:54:41.648
  I0423 19:54:41.653561 25 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0423 19:54:41.653965 25 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/23/25 19:54:41.654
  STEP: deleting a collection @ 04/23/25 19:54:41.66
  I0423 19:54:41.666926 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6823" for this suite. @ 04/23/25 19:54:41.699
• [0.103 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 04/23/25 19:54:41.703
  I0423 19:54:41.703731 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename configmap @ 04/23/25 19:54:41.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:41.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:41.714
  STEP: Creating configMap configmap-3909/configmap-test-0b9ea127-dda0-430a-a5da-d626f5f2a3b9 @ 04/23/25 19:54:41.716
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:54:41.718
  E0423 19:54:42.362537      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:43.362933      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:54:43.726
  I0423 19:54:43.728243 25 output.go:196] Trying to get logs from node worker00 pod pod-configmaps-e861ee2a-f339-4be2-89f6-e7c22554f57b container env-test: <nil>
  STEP: delete the pod @ 04/23/25 19:54:43.731
  I0423 19:54:43.738698 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3909" for this suite. @ 04/23/25 19:54:43.74
• [2.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 04/23/25 19:54:43.745
  I0423 19:54:43.745214 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 19:54:43.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:54:43.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:54:43.755
  STEP: Creating service test in namespace statefulset-7794 @ 04/23/25 19:54:43.757
  STEP: Creating stateful set ss in namespace statefulset-7794 @ 04/23/25 19:54:43.762
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7794 @ 04/23/25 19:54:43.766
  I0423 19:54:43.768789 25 wait.go:40] Found 0 stateful pods, waiting for 1
  E0423 19:54:44.363616      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:45.364235      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:46.365471      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:47.365753      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:48.366517      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:49.367026      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:50.367387      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:51.367479      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:52.367962      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:53.368067      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:54:53.769648 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/23/25 19:54:53.769
  I0423 19:54:53.771884 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-7794 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 19:54:53.866597 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 19:54:53.866629 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 19:54:53.866643 25 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 19:54:53.870203 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0423 19:54:54.368758      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:55.369675      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:56.370193      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:57.371255      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:58.371412      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:54:59.372025      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:00.372597      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:01.372936      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:02.373273      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:03.373396      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:03.869143 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 19:55:03.869177 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0423 19:55:03.880655 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999755s
  E0423 19:55:04.373466      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:04.884607 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.994944308s
  E0423 19:55:05.373786      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:05.888639 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.991746577s
  E0423 19:55:06.373919      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:06.891919 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.987121971s
  E0423 19:55:07.374040      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:07.894870 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.983815762s
  E0423 19:55:08.374510      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:08.898583 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.98129391s
  E0423 19:55:09.375097      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:09.904437 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.977494464s
  E0423 19:55:10.376470      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:10.909898 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.97118235s
  E0423 19:55:11.377249      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:11.912252 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.96655953s
  E0423 19:55:12.377630      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:12.914604 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 964.329085ms
  E0423 19:55:13.378003      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7794 @ 04/23/25 19:55:13.914
  I0423 19:55:13.917180 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-7794 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 19:55:13.992734 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 19:55:13.992771 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 19:55:13.992780 25 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 19:55:13.992816 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-7794 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 19:55:14.072935 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0423 19:55:14.072973 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 19:55:14.072982 25 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 19:55:14.073018 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-7794 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 19:55:14.152399 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0423 19:55:14.152442 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 19:55:14.152451 25 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 19:55:14.154701 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:55:14.154738 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 19:55:14.154746 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/23/25 19:55:14.154
  I0423 19:55:14.156573 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-7794 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 19:55:14.230794 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 19:55:14.230840 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 19:55:14.230849 25 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 19:55:14.230902 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-7794 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 19:55:14.315731 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 19:55:14.315770 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 19:55:14.315782 25 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 19:55:14.315855 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=statefulset-7794 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0423 19:55:14.378424      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:14.401242 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 19:55:14.401271 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 19:55:14.401280 25 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 19:55:14.401289 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0423 19:55:14.403174 25 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0423 19:55:15.378632      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:16.379012      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:17.379297      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:18.379490      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:19.379805      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:20.380108      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:21.380155      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:22.380517      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:23.380675      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:24.381675      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:24.405160 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 19:55:24.405237 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0423 19:55:24.405257 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0423 19:55:24.416750 25 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0423 19:55:24.416938 25 resource.go:175] ss-0  worker00  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:54:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:54:43 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:54:43 +0000 UTC  }]
  I0423 19:55:24.416956 25 resource.go:175] ss-1  worker01  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:04 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:03 +0000 UTC  }]
  I0423 19:55:24.417084 25 resource.go:175] ss-2  worker00  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:03 +0000 UTC  }]
  I0423 19:55:24.417464 25 resource.go:178] 
  I0423 19:55:24.417477 25 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E0423 19:55:25.382488      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:25.422018 25 resource.go:168] POD   NODE      PHASE      GRACE  CONDITIONS
  I0423 19:55:25.422103 25 resource.go:175] ss-0  worker00  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:54:43 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:54:43 +0000 UTC  }]
  I0423 19:55:25.422142 25 resource.go:175] ss-2  worker00  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:03 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:15 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 19:55:03 +0000 UTC  }]
  I0423 19:55:25.422153 25 resource.go:178] 
  I0423 19:55:25.422166 25 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 2
  E0423 19:55:26.382982      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:26.426218 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.987754254s
  E0423 19:55:27.383267      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:27.431657 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.983773931s
  E0423 19:55:28.383513      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:28.434562 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.978661433s
  E0423 19:55:29.383588      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:29.437258 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.975778473s
  E0423 19:55:30.384377      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:30.439333 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.973351797s
  E0423 19:55:31.384562      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:31.442489 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.970561297s
  E0423 19:55:32.385487      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:32.446303 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.967795848s
  E0423 19:55:33.385990      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:55:33.449383 25 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 963.989612ms
  E0423 19:55:34.386590      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7794 @ 04/23/25 19:55:34.45
  I0423 19:55:34.453560 25 rest.go:150] Scaling statefulset ss to 0
  I0423 19:55:34.455980 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 19:55:34.457212 25 statefulset.go:138] Deleting all statefulset in ns statefulset-7794
  I0423 19:55:34.458460 25 rest.go:150] Scaling statefulset ss to 0
  I0423 19:55:34.460462 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 19:55:34.461655 25 rest.go:88] Deleting statefulset ss
  I0423 19:55:34.480680 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7794" for this suite. @ 04/23/25 19:55:34.483
• [50.741 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/23/25 19:55:34.486
  I0423 19:55:34.486753 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 19:55:34.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:55:34.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:55:34.5
  STEP: create the container @ 04/23/25 19:55:34.502
  W0423 19:55:34.508985      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/23/25 19:55:34.509
  E0423 19:55:35.387043      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:36.387648      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:37.388022      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/23/25 19:55:37.523
  STEP: the container should be terminated @ 04/23/25 19:55:37.525
  STEP: the termination message should be set @ 04/23/25 19:55:37.525
  I0423 19:55:37.525739 25 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/23/25 19:55:37.525
  I0423 19:55:37.535428 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2091" for this suite. @ 04/23/25 19:55:37.537
• [3.055 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 04/23/25 19:55:37.541
  I0423 19:55:37.541550 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 19:55:37.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:55:37.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:55:37.551
  I0423 19:55:37.554684 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9628" for this suite. @ 04/23/25 19:55:37.638
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/23/25 19:55:37.641
  I0423 19:55:37.641338 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:55:37.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:55:37.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:55:37.651
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:55:37.653
  E0423 19:55:38.388810      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:39.389503      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:55:39.664
  I0423 19:55:39.666871 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-d5b780d9-7f6e-41e1-bb0a-21e0eb0de61c container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:55:39.672
  I0423 19:55:39.684887 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1939" for this suite. @ 04/23/25 19:55:39.687
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/23/25 19:55:39.691
  I0423 19:55:39.691882 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename gc @ 04/23/25 19:55:39.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:55:39.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:55:39.705
  STEP: create the rc @ 04/23/25 19:55:39.79
  W0423 19:55:39.793868      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0423 19:55:40.391016      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:41.394174      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:42.397579      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:43.404585      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:44.405802      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:45.406197      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/23/25 19:55:45.799
  STEP: wait for the rc to be deleted @ 04/23/25 19:55:45.821
  E0423 19:55:46.405725      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:47.415049      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:48.411173      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:49.412289      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:50.412479      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/23/25 19:55:50.826
  E0423 19:55:51.415314      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:52.419775      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:53.418127      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:54.418942      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:55.419116      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:56.419173      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:57.419424      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:58.419749      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:55:59.420498      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:00.420588      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:01.421195      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:02.421704      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:03.421472      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:04.422327      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:05.422896      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:06.423111      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:07.423305      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:08.423580      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:09.424098      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:10.424523      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:11.424781      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:12.425131      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:13.425488      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:14.425959      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:15.426251      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:16.426718      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:17.427170      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:18.427712      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:19.427645      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:20.427820      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/23/25 19:56:20.831
  I0423 19:56:20.868722 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 19:56:20.868812 25 delete.go:95] Deleting pod "simpletest.rc-28kzw" in namespace "gc-3956"
  I0423 19:56:20.876721 25 delete.go:95] Deleting pod "simpletest.rc-2wp7h" in namespace "gc-3956"
  I0423 19:56:20.889752 25 delete.go:95] Deleting pod "simpletest.rc-4lkcn" in namespace "gc-3956"
  I0423 19:56:20.951284 25 delete.go:95] Deleting pod "simpletest.rc-4n54n" in namespace "gc-3956"
  I0423 19:56:20.974177 25 delete.go:95] Deleting pod "simpletest.rc-5r4x7" in namespace "gc-3956"
  I0423 19:56:21.003195 25 delete.go:95] Deleting pod "simpletest.rc-5rczl" in namespace "gc-3956"
  I0423 19:56:21.018141 25 delete.go:95] Deleting pod "simpletest.rc-64w9l" in namespace "gc-3956"
  I0423 19:56:21.055052 25 delete.go:95] Deleting pod "simpletest.rc-664vq" in namespace "gc-3956"
  I0423 19:56:21.090214 25 delete.go:95] Deleting pod "simpletest.rc-6bc4p" in namespace "gc-3956"
  I0423 19:56:21.123696 25 delete.go:95] Deleting pod "simpletest.rc-6gjhj" in namespace "gc-3956"
  I0423 19:56:21.150564 25 delete.go:95] Deleting pod "simpletest.rc-6r5qh" in namespace "gc-3956"
  I0423 19:56:21.210356 25 delete.go:95] Deleting pod "simpletest.rc-6rwtt" in namespace "gc-3956"
  I0423 19:56:21.229166 25 delete.go:95] Deleting pod "simpletest.rc-6zbwg" in namespace "gc-3956"
  I0423 19:56:21.262417 25 delete.go:95] Deleting pod "simpletest.rc-6zrfz" in namespace "gc-3956"
  I0423 19:56:21.307693 25 delete.go:95] Deleting pod "simpletest.rc-7flbw" in namespace "gc-3956"
  I0423 19:56:21.365568 25 delete.go:95] Deleting pod "simpletest.rc-7vrqv" in namespace "gc-3956"
  I0423 19:56:21.400960 25 delete.go:95] Deleting pod "simpletest.rc-82wcx" in namespace "gc-3956"
  E0423 19:56:21.429485      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:21.438508 25 delete.go:95] Deleting pod "simpletest.rc-88kz2" in namespace "gc-3956"
  I0423 19:56:21.464908 25 delete.go:95] Deleting pod "simpletest.rc-8dspz" in namespace "gc-3956"
  I0423 19:56:21.494418 25 delete.go:95] Deleting pod "simpletest.rc-8pz6j" in namespace "gc-3956"
  I0423 19:56:21.579597 25 delete.go:95] Deleting pod "simpletest.rc-8s6dq" in namespace "gc-3956"
  I0423 19:56:21.646932 25 delete.go:95] Deleting pod "simpletest.rc-9dg2v" in namespace "gc-3956"
  I0423 19:56:21.723264 25 delete.go:95] Deleting pod "simpletest.rc-9zb9m" in namespace "gc-3956"
  I0423 19:56:21.771634 25 delete.go:95] Deleting pod "simpletest.rc-bd7r8" in namespace "gc-3956"
  I0423 19:56:21.828191 25 delete.go:95] Deleting pod "simpletest.rc-bmmzp" in namespace "gc-3956"
  I0423 19:56:21.855522 25 delete.go:95] Deleting pod "simpletest.rc-czw72" in namespace "gc-3956"
  I0423 19:56:21.889342 25 delete.go:95] Deleting pod "simpletest.rc-d9hb5" in namespace "gc-3956"
  I0423 19:56:21.903542 25 delete.go:95] Deleting pod "simpletest.rc-d9zz6" in namespace "gc-3956"
  I0423 19:56:21.966319 25 delete.go:95] Deleting pod "simpletest.rc-dck2r" in namespace "gc-3956"
  I0423 19:56:22.023108 25 delete.go:95] Deleting pod "simpletest.rc-dhvj5" in namespace "gc-3956"
  I0423 19:56:22.078262 25 delete.go:95] Deleting pod "simpletest.rc-dvnfp" in namespace "gc-3956"
  I0423 19:56:22.180100 25 delete.go:95] Deleting pod "simpletest.rc-dzvvx" in namespace "gc-3956"
  I0423 19:56:22.211329 25 delete.go:95] Deleting pod "simpletest.rc-f5ccn" in namespace "gc-3956"
  I0423 19:56:22.227772 25 delete.go:95] Deleting pod "simpletest.rc-g4xts" in namespace "gc-3956"
  I0423 19:56:22.255779 25 delete.go:95] Deleting pod "simpletest.rc-g62tj" in namespace "gc-3956"
  I0423 19:56:22.285537 25 delete.go:95] Deleting pod "simpletest.rc-g848c" in namespace "gc-3956"
  I0423 19:56:22.326631 25 delete.go:95] Deleting pod "simpletest.rc-gdbzg" in namespace "gc-3956"
  I0423 19:56:22.356665 25 delete.go:95] Deleting pod "simpletest.rc-gkmsz" in namespace "gc-3956"
  I0423 19:56:22.409132 25 delete.go:95] Deleting pod "simpletest.rc-gnb64" in namespace "gc-3956"
  E0423 19:56:22.436957      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:22.485971 25 delete.go:95] Deleting pod "simpletest.rc-h5zvx" in namespace "gc-3956"
  I0423 19:56:22.522737 25 delete.go:95] Deleting pod "simpletest.rc-h8swv" in namespace "gc-3956"
  I0423 19:56:22.569888 25 delete.go:95] Deleting pod "simpletest.rc-hcrgn" in namespace "gc-3956"
  I0423 19:56:22.678916 25 delete.go:95] Deleting pod "simpletest.rc-hg6wc" in namespace "gc-3956"
  I0423 19:56:22.834705 25 delete.go:95] Deleting pod "simpletest.rc-hgf45" in namespace "gc-3956"
  I0423 19:56:22.872964 25 delete.go:95] Deleting pod "simpletest.rc-hgktj" in namespace "gc-3956"
  I0423 19:56:22.969977 25 delete.go:95] Deleting pod "simpletest.rc-hm9zp" in namespace "gc-3956"
  I0423 19:56:23.019443 25 delete.go:95] Deleting pod "simpletest.rc-hpq7c" in namespace "gc-3956"
  I0423 19:56:23.057422 25 delete.go:95] Deleting pod "simpletest.rc-hrqzd" in namespace "gc-3956"
  I0423 19:56:23.131256 25 delete.go:95] Deleting pod "simpletest.rc-hsg9g" in namespace "gc-3956"
  I0423 19:56:23.173056 25 delete.go:95] Deleting pod "simpletest.rc-j54vh" in namespace "gc-3956"
  I0423 19:56:23.239696 25 delete.go:95] Deleting pod "simpletest.rc-kh7x4" in namespace "gc-3956"
  I0423 19:56:23.304376 25 delete.go:95] Deleting pod "simpletest.rc-lbdmc" in namespace "gc-3956"
  I0423 19:56:23.359741 25 delete.go:95] Deleting pod "simpletest.rc-lbspn" in namespace "gc-3956"
  E0423 19:56:23.435184      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:23.449385 25 delete.go:95] Deleting pod "simpletest.rc-m7rjs" in namespace "gc-3956"
  I0423 19:56:23.521958 25 delete.go:95] Deleting pod "simpletest.rc-m8nnw" in namespace "gc-3956"
  I0423 19:56:23.583801 25 delete.go:95] Deleting pod "simpletest.rc-mg7mv" in namespace "gc-3956"
  I0423 19:56:23.676350 25 delete.go:95] Deleting pod "simpletest.rc-mg98n" in namespace "gc-3956"
  I0423 19:56:23.709081 25 delete.go:95] Deleting pod "simpletest.rc-mlwm7" in namespace "gc-3956"
  I0423 19:56:23.740326 25 delete.go:95] Deleting pod "simpletest.rc-mthqf" in namespace "gc-3956"
  I0423 19:56:23.764934 25 delete.go:95] Deleting pod "simpletest.rc-n659r" in namespace "gc-3956"
  I0423 19:56:23.817304 25 delete.go:95] Deleting pod "simpletest.rc-nvssn" in namespace "gc-3956"
  I0423 19:56:23.910852 25 delete.go:95] Deleting pod "simpletest.rc-p9cdc" in namespace "gc-3956"
  I0423 19:56:23.968090 25 delete.go:95] Deleting pod "simpletest.rc-pb6pm" in namespace "gc-3956"
  I0423 19:56:24.004954 25 delete.go:95] Deleting pod "simpletest.rc-plrlf" in namespace "gc-3956"
  I0423 19:56:24.092450 25 delete.go:95] Deleting pod "simpletest.rc-pnlc7" in namespace "gc-3956"
  I0423 19:56:24.120225 25 delete.go:95] Deleting pod "simpletest.rc-pzhtw" in namespace "gc-3956"
  I0423 19:56:24.251054 25 delete.go:95] Deleting pod "simpletest.rc-q67p5" in namespace "gc-3956"
  I0423 19:56:24.352716 25 delete.go:95] Deleting pod "simpletest.rc-qdxwc" in namespace "gc-3956"
  I0423 19:56:24.400555 25 delete.go:95] Deleting pod "simpletest.rc-r8hn4" in namespace "gc-3956"
  E0423 19:56:24.435471      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:24.446535 25 delete.go:95] Deleting pod "simpletest.rc-r9hfq" in namespace "gc-3956"
  I0423 19:56:24.474422 25 delete.go:95] Deleting pod "simpletest.rc-rm8mx" in namespace "gc-3956"
  I0423 19:56:24.529540 25 delete.go:95] Deleting pod "simpletest.rc-rsdb8" in namespace "gc-3956"
  I0423 19:56:24.668972 25 delete.go:95] Deleting pod "simpletest.rc-rw4d2" in namespace "gc-3956"
  I0423 19:56:24.716298 25 delete.go:95] Deleting pod "simpletest.rc-s6zkr" in namespace "gc-3956"
  I0423 19:56:24.747981 25 delete.go:95] Deleting pod "simpletest.rc-s9xh8" in namespace "gc-3956"
  I0423 19:56:24.793382 25 delete.go:95] Deleting pod "simpletest.rc-sgvwt" in namespace "gc-3956"
  I0423 19:56:24.820309 25 delete.go:95] Deleting pod "simpletest.rc-sjgv4" in namespace "gc-3956"
  I0423 19:56:24.841196 25 delete.go:95] Deleting pod "simpletest.rc-srtrg" in namespace "gc-3956"
  I0423 19:56:24.868362 25 delete.go:95] Deleting pod "simpletest.rc-t5sqm" in namespace "gc-3956"
  I0423 19:56:24.890387 25 delete.go:95] Deleting pod "simpletest.rc-t8mmv" in namespace "gc-3956"
  I0423 19:56:24.909085 25 delete.go:95] Deleting pod "simpletest.rc-t9vdt" in namespace "gc-3956"
  I0423 19:56:25.013929 25 delete.go:95] Deleting pod "simpletest.rc-tj2cs" in namespace "gc-3956"
  I0423 19:56:25.071934 25 delete.go:95] Deleting pod "simpletest.rc-tl84t" in namespace "gc-3956"
  I0423 19:56:25.111172 25 delete.go:95] Deleting pod "simpletest.rc-trzp5" in namespace "gc-3956"
  I0423 19:56:25.144944 25 delete.go:95] Deleting pod "simpletest.rc-txw49" in namespace "gc-3956"
  I0423 19:56:25.180512 25 delete.go:95] Deleting pod "simpletest.rc-v5vb7" in namespace "gc-3956"
  I0423 19:56:25.213299 25 delete.go:95] Deleting pod "simpletest.rc-vmsw9" in namespace "gc-3956"
  I0423 19:56:25.225138 25 delete.go:95] Deleting pod "simpletest.rc-vtwjd" in namespace "gc-3956"
  I0423 19:56:25.257510 25 delete.go:95] Deleting pod "simpletest.rc-vtxd8" in namespace "gc-3956"
  I0423 19:56:25.290938 25 delete.go:95] Deleting pod "simpletest.rc-vv9kn" in namespace "gc-3956"
  I0423 19:56:25.308239 25 delete.go:95] Deleting pod "simpletest.rc-vvqbl" in namespace "gc-3956"
  I0423 19:56:25.328614 25 delete.go:95] Deleting pod "simpletest.rc-vzgsw" in namespace "gc-3956"
  I0423 19:56:25.369196 25 delete.go:95] Deleting pod "simpletest.rc-w4jm9" in namespace "gc-3956"
  I0423 19:56:25.399273 25 delete.go:95] Deleting pod "simpletest.rc-xc2zc" in namespace "gc-3956"
  I0423 19:56:25.428433 25 delete.go:95] Deleting pod "simpletest.rc-xfgrp" in namespace "gc-3956"
  E0423 19:56:25.435752      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:25.447206 25 delete.go:95] Deleting pod "simpletest.rc-xlk75" in namespace "gc-3956"
  I0423 19:56:25.485927 25 delete.go:95] Deleting pod "simpletest.rc-xvpnm" in namespace "gc-3956"
  I0423 19:56:25.506477 25 delete.go:95] Deleting pod "simpletest.rc-z6hfx" in namespace "gc-3956"
  I0423 19:56:25.524958 25 delete.go:95] Deleting pod "simpletest.rc-zbd64" in namespace "gc-3956"
  I0423 19:56:25.538185 25 delete.go:95] Deleting pod "simpletest.rc-zcgxq" in namespace "gc-3956"
  I0423 19:56:25.675675 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3956" for this suite. @ 04/23/25 19:56:25.726
• [46.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 04/23/25 19:56:25.752
  I0423 19:56:25.752377 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename services @ 04/23/25 19:56:25.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:56:25.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:56:25.805
  STEP: creating service endpoint-test2 in namespace services-5530 @ 04/23/25 19:56:25.819
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5530 to expose endpoints map[] @ 04/23/25 19:56:25.861
  I0423 19:56:25.909417 25 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5530 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5530 @ 04/23/25 19:56:25.909
  E0423 19:56:26.436978      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:27.436983      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:28.437245      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:29.437999      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:30.438631      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:31.439117      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5530 to expose endpoints map[pod1:[80]] @ 04/23/25 19:56:31.968
  I0423 19:56:31.980303 25 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5530 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/23/25 19:56:31.98
  I0423 19:56:31.980359 25 resource.go:361] Creating new exec pod
  E0423 19:56:32.439364      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:33.440200      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:34.440452      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:34.996125 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-5530 exec execpodhjr77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 19:56:35.135480 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0423 19:56:35.135532 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:56:35.135602 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-5530 exec execpodhjr77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.27 80'
  I0423 19:56:35.256239 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.27 80\nConnection to 10.32.0.27 80 port [tcp/http] succeeded!\n"
  I0423 19:56:35.256278 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5530 @ 04/23/25 19:56:35.256
  E0423 19:56:35.441669      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:36.442580      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5530 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/23/25 19:56:37.272
  I0423 19:56:37.283482 25 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5530 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/23/25 19:56:37.283
  E0423 19:56:37.442516      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:38.284362 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-5530 exec execpodhjr77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 19:56:38.382796 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0423 19:56:38.382834 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:56:38.382895 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-5530 exec execpodhjr77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.27 80'
  E0423 19:56:38.443239      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:38.498609 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.27 80\nConnection to 10.32.0.27 80 port [tcp/http] succeeded!\n"
  I0423 19:56:38.498662 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5530 @ 04/23/25 19:56:38.498
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5530 to expose endpoints map[pod2:[80]] @ 04/23/25 19:56:38.521
  I0423 19:56:38.542060 25 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5530 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/23/25 19:56:38.542
  E0423 19:56:39.444184      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:39.543183 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-5530 exec execpodhjr77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 19:56:39.648723 25 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0423 19:56:39.648770 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 19:56:39.648916 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-791953700 --namespace=services-5530 exec execpodhjr77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.27 80'
  I0423 19:56:39.757528 25 builder.go:146] stderr: "+ + nc -v -techo -w 2 hostName 10.32.0.27 80\n\nConnection to 10.32.0.27 80 port [tcp/http] succeeded!\n"
  I0423 19:56:39.757592 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5530 @ 04/23/25 19:56:39.757
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5530 to expose endpoints map[] @ 04/23/25 19:56:39.771
  I0423 19:56:39.782900 25 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5530 exposes endpoints map[]
  I0423 19:56:39.802132 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5530" for this suite. @ 04/23/25 19:56:39.808
• [14.064 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/23/25 19:56:39.815
  I0423 19:56:39.816029 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 19:56:39.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:56:39.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:56:39.831
  STEP: Creating ReplicationController "e2e-rc-6p76c" @ 04/23/25 19:56:39.834
  I0423 19:56:39.841258 25 rc.go:792] Get Replication Controller "e2e-rc-6p76c" to confirm replicas
  E0423 19:56:40.445246      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:40.842170 25 rc.go:792] Get Replication Controller "e2e-rc-6p76c" to confirm replicas
  I0423 19:56:40.844314 25 rc.go:801] Found 1 replicas for "e2e-rc-6p76c" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-6p76c" @ 04/23/25 19:56:40.844
  STEP: Updating a scale subresource @ 04/23/25 19:56:40.846
  STEP: Verifying replicas where modified for replication controller "e2e-rc-6p76c" @ 04/23/25 19:56:40.852
  I0423 19:56:40.853049 25 rc.go:792] Get Replication Controller "e2e-rc-6p76c" to confirm replicas
  E0423 19:56:41.445708      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:41.853926 25 rc.go:792] Get Replication Controller "e2e-rc-6p76c" to confirm replicas
  I0423 19:56:41.855847 25 rc.go:801] Found 2 replicas for "e2e-rc-6p76c" replication controller
  I0423 19:56:41.855937 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4521" for this suite. @ 04/23/25 19:56:41.858
• [2.046 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 04/23/25 19:56:41.862
  I0423 19:56:41.862458 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename job @ 04/23/25 19:56:41.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:56:41.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:56:41.873
  STEP: Creating Indexed job @ 04/23/25 19:56:41.876
  STEP: Ensuring job reaches completions @ 04/23/25 19:56:41.881
  E0423 19:56:42.446266      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:43.446751      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:44.447162      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:45.447525      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:46.447887      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:47.449180      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:48.449631      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:49.450059      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:50.451022      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:51.451106      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 04/23/25 19:56:51.885
  I0423 19:56:51.888647 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9935" for this suite. @ 04/23/25 19:56:51.891
• [10.032 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 04/23/25 19:56:51.894
  I0423 19:56:51.894515 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 19:56:51.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:56:51.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:56:51.905
  STEP: Creating pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957 @ 04/23/25 19:56:51.906
  E0423 19:56:52.452041      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:53.453274      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 19:56:53.915
  I0423 19:56:53.917824 25 container_probe.go:1749] Initial restart count of pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b is 0
  I0423 19:56:53.919820 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:56:54.454026      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:55.454729      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:55.922179 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:56:56.455805      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:57.457330      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:57.924795 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:56:58.458320      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:56:59.458481      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:56:59.927939 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:57:00.458755      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:01.459073      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:01.930729 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:57:02.459400      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:03.459493      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:03.933545 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:57:04.460392      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:05.460529      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:05.935674 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:57:06.460737      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:07.461591      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:07.937686 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:57:08.462661      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:09.463535      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:09.940405 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:57:10.463932      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:11.463914      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:11.943161 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  E0423 19:57:12.464417      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:13.465113      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:13.945354 25 container_probe.go:1759] Get pod liveness-c46a42cb-986c-43c5-a336-82f935a35b5b in namespace container-probe-5957
  I0423 19:57:13.945383 25 container_probe.go:1763] Restart count of pod container-probe-5957/liveness-c46a42cb-986c-43c5-a336-82f935a35b5b is now 1 (20.027480679s elapsed)
  STEP: deleting the pod @ 04/23/25 19:57:13.945
  I0423 19:57:13.955042 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5957" for this suite. @ 04/23/25 19:57:13.962
• [22.076 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/23/25 19:57:13.97
  I0423 19:57:13.970227 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:57:13.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:13.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:13.982
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:57:13.985
  E0423 19:57:14.466143      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:15.466571      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:57:16.001
  I0423 19:57:16.002840 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-a4f2d591-9b94-4cce-a91b-4b5178183f8a container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:57:16.008
  I0423 19:57:16.025833 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6339" for this suite. @ 04/23/25 19:57:16.028
• [2.062 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/23/25 19:57:16.032
  I0423 19:57:16.032833 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:57:16.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:16.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:16.046
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:57:16.049
  E0423 19:57:16.468437      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:17.467770      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:57:18.059
  I0423 19:57:18.061376 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-adc4757d-e4f8-488e-9dd8-81f6aa2594fd container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:57:18.063
  I0423 19:57:18.070593 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2953" for this suite. @ 04/23/25 19:57:18.072
• [2.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/23/25 19:57:18.076
  I0423 19:57:18.076556 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 19:57:18.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:18.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:18.087
  I0423 19:57:18.088797 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  E0423 19:57:18.467945      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:19.469017      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:20.469381      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:21.469513      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:22.469937      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:23.470742      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:24.253875 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1964" for this suite. @ 04/23/25 19:57:24.256
• [6.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/23/25 19:57:24.27
  I0423 19:57:24.270552 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename events @ 04/23/25 19:57:24.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:24.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:24.278
  STEP: creating a test event @ 04/23/25 19:57:24.28
  STEP: listing events in all namespaces @ 04/23/25 19:57:24.285
  STEP: listing events in test namespace @ 04/23/25 19:57:24.294
  STEP: listing events with field selection filtering on source @ 04/23/25 19:57:24.295
  STEP: listing events with field selection filtering on reportingController @ 04/23/25 19:57:24.297
  STEP: getting the test event @ 04/23/25 19:57:24.298
  STEP: patching the test event @ 04/23/25 19:57:24.299
  STEP: getting the test event @ 04/23/25 19:57:24.307
  STEP: updating the test event @ 04/23/25 19:57:24.309
  STEP: getting the test event @ 04/23/25 19:57:24.313
  STEP: deleting the test event @ 04/23/25 19:57:24.314
  STEP: listing events in all namespaces @ 04/23/25 19:57:24.317
  STEP: listing events in test namespace @ 04/23/25 19:57:24.32
  I0423 19:57:24.321364 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3058" for this suite. @ 04/23/25 19:57:24.357
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/23/25 19:57:24.361
  I0423 19:57:24.361974 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename projected @ 04/23/25 19:57:24.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:24.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:24.373
  STEP: Creating configMap with name projected-configmap-test-volume-0eac9d6e-226e-48a6-ac79-a247952b2d2f @ 04/23/25 19:57:24.376
  STEP: Creating a pod to test consume configMaps @ 04/23/25 19:57:24.378
  E0423 19:57:24.470978      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:25.471258      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:26.472246      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:27.472577      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:57:28.396
  I0423 19:57:28.398387 25 output.go:196] Trying to get logs from node worker00 pod pod-projected-configmaps-2571a1e0-fd43-4128-9a8f-a47c620db126 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:57:28.401
  I0423 19:57:28.422198 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3137" for this suite. @ 04/23/25 19:57:28.424
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 04/23/25 19:57:28.427
  I0423 19:57:28.427806 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:57:28.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:28.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:28.437
  STEP: Setting up server cert @ 04/23/25 19:57:28.455
  E0423 19:57:28.472798      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:57:28.524
  STEP: Deploying the webhook pod @ 04/23/25 19:57:28.528
  STEP: Wait for the deployment to be ready @ 04/23/25 19:57:28.536
  I0423 19:57:28.543173 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 19:57:29.474205      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:30.474798      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 19:57:30.548
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:57:30.553
  E0423 19:57:31.475131      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:31.554026 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/23/25 19:57:31.557
  STEP: verifying the validating webhook match conditions @ 04/23/25 19:57:31.573
  STEP: updating the validating webhook match conditions @ 04/23/25 19:57:31.574
  STEP: verifying the validating webhook match conditions @ 04/23/25 19:57:31.579
  I0423 19:57:31.604900 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4706" for this suite. @ 04/23/25 19:57:31.608
  STEP: Destroying namespace "webhook-markers-4433" for this suite. @ 04/23/25 19:57:31.613
• [3.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/23/25 19:57:31.621
  I0423 19:57:31.621869 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 19:57:31.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:31.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:31.634
  STEP: Performing setup for networking test in namespace pod-network-test-7555 @ 04/23/25 19:57:31.636
  STEP: creating a selector @ 04/23/25 19:57:31.636
  STEP: Creating the service pods in kubernetes @ 04/23/25 19:57:31.636
  I0423 19:57:31.636792 25 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0423 19:57:32.475339      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:33.476330      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:34.476762      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:35.476982      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:36.477279      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:37.477445      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:38.477520      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:39.477513      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:40.478058      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:41.478259      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:42.479053      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:43.479158      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/23/25 19:57:43.747
  E0423 19:57:44.480225      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:45.480969      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:45.765102 25 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 19:57:45.774905 25 networking.go:42] Breadth first check of 10.200.131.136 on host 192.168.58.100...
  I0423 19:57:45.777458 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.141:9080/dial?request=hostname&protocol=http&host=10.200.131.136&port=8083&tries=1'] Namespace:pod-network-test-7555 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:57:45.777879 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:57:45.778542 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:57:45.778601 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-7555/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.141%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.131.136%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0423 19:57:45.818597 25 utils.go:356] Waiting for responses: map[]
  I0423 19:57:45.818625 25 utils.go:360] reached 10.200.131.136 after 0/1 tries
  I0423 19:57:45.818634 25 networking.go:42] Breadth first check of 10.200.5.57 on host 192.168.58.101...
  I0423 19:57:45.820571 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.141:9080/dial?request=hostname&protocol=http&host=10.200.5.57&port=8083&tries=1'] Namespace:pod-network-test-7555 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 19:57:45.820595 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  I0423 19:57:45.821054 25 exec_util.go:66] ExecWithOptions: Clientset creation
  I0423 19:57:45.821090 25 exec_util.go:83] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-7555/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.141%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.5.57%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0423 19:57:45.864133 25 utils.go:356] Waiting for responses: map[]
  I0423 19:57:45.864242 25 utils.go:360] reached 10.200.5.57 after 0/1 tries
  I0423 19:57:45.864251 25 networking.go:53] Going to retry 0 out of 2 pods....
  I0423 19:57:45.864394 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7555" for this suite. @ 04/23/25 19:57:45.866
• [14.248 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 04/23/25 19:57:45.869
  I0423 19:57:45.869613 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename webhook @ 04/23/25 19:57:45.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:45.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:45.88
  STEP: Setting up server cert @ 04/23/25 19:57:45.89
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 19:57:46.288
  STEP: Deploying the webhook pod @ 04/23/25 19:57:46.302
  STEP: Wait for the deployment to be ready @ 04/23/25 19:57:46.311
  I0423 19:57:46.319223 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 19:57:46.483237      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:47.484268      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 19:57:48.325
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 19:57:48.34
  E0423 19:57:48.485089      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:49.340971 25 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/23/25 19:57:49.382
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 19:57:49.405
  STEP: Deleting the collection of validation webhooks @ 04/23/25 19:57:49.424
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 19:57:49.445
  I0423 19:57:49.472195 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5782" for this suite. @ 04/23/25 19:57:49.474
  STEP: Destroying namespace "webhook-markers-5219" for this suite. @ 04/23/25 19:57:49.48
• [3.616 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/23/25 19:57:49.486
  I0423 19:57:49.486121 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 19:57:49.486
  E0423 19:57:49.489852      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:49.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:49.5
  I0423 19:57:49.578495 25 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 19:57:49.582
  I0423 19:57:49.677988 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:57:49.678018 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0423 19:57:50.485959      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:50.586199 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:57:50.586235 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0423 19:57:51.486035      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:51.590763 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 19:57:51.590800 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/23/25 19:57:51.601
  STEP: Check that daemon pods images are updated. @ 04/23/25 19:57:51.689
  I0423 19:57:51.693932 25 daemon_set.go:1193] Wrong image for pod: daemon-set-95hpp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0423 19:57:52.486740      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:52.694862 25 daemon_set.go:1193] Wrong image for pod: daemon-set-95hpp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0423 19:57:52.694921 25 daemon_set.go:1198] Pod daemon-set-ghvj7 is not available
  E0423 19:57:53.487119      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:53.694788 25 daemon_set.go:1198] Pod daemon-set-mvr7j is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/23/25 19:57:53.699
  I0423 19:57:53.707450 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:57:53.707500 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0423 19:57:54.488655      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:54.733140 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 19:57:54.733286 25 fixtures.go:130] Node worker00 is running 0 daemon pod, expected 1
  E0423 19:57:55.488555      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:55.710723 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 19:57:55.711107 25 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 19:57:55.729
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2238, will wait for the garbage collector to delete the pods @ 04/23/25 19:57:55.729
  I0423 19:57:55.785465 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.120028ms
  I0423 19:57:55.886770 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.301641ms
  E0423 19:57:56.490140      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:57.490964      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:57:57.888644 25 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 19:57:57.888670 25 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 19:57:57.890735 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"54730"},"items":null}

  I0423 19:57:57.989828 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"54734"},"items":null}

  I0423 19:57:57.994366 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2238" for this suite. @ 04/23/25 19:57:57.997
• [8.514 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 04/23/25 19:57:58
  I0423 19:57:58.000639 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename disruption @ 04/23/25 19:57:58.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:58.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:58.012
  STEP: Creating a kubernetes client @ 04/23/25 19:57:58.014
  I0423 19:57:58.014399 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename disruption-2 @ 04/23/25 19:57:58.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:57:58.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:57:58.024
  STEP: Waiting for the pdb to be processed @ 04/23/25 19:57:58.029
  E0423 19:57:58.492946      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:57:59.494240      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/23/25 19:58:00.035
  E0423 19:58:00.494588      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:01.495544      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/23/25 19:58:02.04
  E0423 19:58:02.496485      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:03.497080      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/23/25 19:58:04.042
  STEP: listing a collection of PDBs in namespace disruption-6266 @ 04/23/25 19:58:04.045
  STEP: deleting a collection of PDBs @ 04/23/25 19:58:04.046
  STEP: Waiting for the PDB collection to be deleted @ 04/23/25 19:58:04.051
  I0423 19:58:04.054370 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8894" for this suite. @ 04/23/25 19:58:04.056
  I0423 19:58:04.061774 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6266" for this suite. @ 04/23/25 19:58:04.157
• [6.160 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 04/23/25 19:58:04.161
  I0423 19:58:04.161232 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename security-context @ 04/23/25 19:58:04.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:58:04.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:58:04.172
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/23/25 19:58:04.173
  E0423 19:58:04.498006      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:05.499103      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:58:06.182
  I0423 19:58:06.185846 25 output.go:196] Trying to get logs from node worker00 pod security-context-7f6e5729-e020-4d53-b0bf-9505b6b5a56c container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:58:06.19
  I0423 19:58:06.204394 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4935" for this suite. @ 04/23/25 19:58:06.208
• [2.054 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 04/23/25 19:58:06.215
  I0423 19:58:06.215790 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 19:58:06.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:58:06.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:58:06.238
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 19:58:06.31
  E0423 19:58:06.500118      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:07.501220      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/23/25 19:58:08.328
  E0423 19:58:08.501859      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:09.502989      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/23/25 19:58:10.337
  STEP: delete the pod with lifecycle hook @ 04/23/25 19:58:10.358
  E0423 19:58:10.503891      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:11.504210      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:12.504935      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:13.505475      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 19:58:14.370661 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1428" for this suite. @ 04/23/25 19:58:14.372
• [8.171 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 04/23/25 19:58:14.386
  I0423 19:58:14.386609 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 19:58:14.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:58:14.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:58:14.396
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 19:58:14.473
  E0423 19:58:14.505579      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:15.506898      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/23/25 19:58:16.486
  E0423 19:58:16.507289      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:17.507609      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/23/25 19:58:18.506
  E0423 19:58:18.508017      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:19.508922      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:20.509698      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:21.511302      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:22.511916      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/23/25 19:58:22.528
  I0423 19:58:22.534099 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3642" for this suite. @ 04/23/25 19:58:22.537
• [8.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/23/25 19:58:22.551
  I0423 19:58:22.551753 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename subpath @ 04/23/25 19:58:22.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:58:22.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:58:22.565
  STEP: Setting up data @ 04/23/25 19:58:22.567
  STEP: Creating pod pod-subpath-test-secret-rnvg @ 04/23/25 19:58:22.573
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 19:58:22.573
  E0423 19:58:23.512680      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:24.513379      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:25.514123      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:26.514459      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:27.514962      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:28.515360      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:29.516689      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:30.517666      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:31.518218      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:32.518529      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:33.518608      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:34.519738      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:35.520069      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:36.520698      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:37.521136      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:38.521731      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:39.522021      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:40.522351      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:41.522562      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:42.523349      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:43.524759      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:44.525243      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:45.525606      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:46.525972      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:58:46.638
  I0423 19:58:46.642445 25 output.go:196] Trying to get logs from node worker00 pod pod-subpath-test-secret-rnvg container test-container-subpath-secret-rnvg: <nil>
  STEP: delete the pod @ 04/23/25 19:58:46.648
  STEP: Deleting pod pod-subpath-test-secret-rnvg @ 04/23/25 19:58:46.667
  I0423 19:58:46.667800 25 delete.go:62] Deleting pod "pod-subpath-test-secret-rnvg" in namespace "subpath-1915"
  I0423 19:58:46.669756 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1915" for this suite. @ 04/23/25 19:58:46.671
• [24.123 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 04/23/25 19:58:46.674
  I0423 19:58:46.674312 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 19:58:46.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:58:46.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:58:46.685
  STEP: Creating a pod to test substitution in container's args @ 04/23/25 19:58:46.687
  E0423 19:58:47.526213      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:48.526653      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:49.527683      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:50.528080      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:58:50.705
  I0423 19:58:50.709000 25 output.go:196] Trying to get logs from node worker00 pod var-expansion-33aed1a8-7e63-4876-b6b5-937310390d48 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 19:58:50.712
  I0423 19:58:50.728757 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8016" for this suite. @ 04/23/25 19:58:50.73
• [4.059 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/23/25 19:58:50.733
  I0423 19:58:50.733282 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 19:58:50.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:58:50.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:58:50.744
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/23/25 19:58:50.745
  E0423 19:58:51.528648      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:52.529273      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:53.530358      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:54.531334      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:58:54.764
  I0423 19:58:54.767950 25 output.go:196] Trying to get logs from node worker00 pod pod-2a735a10-551f-407c-812c-00de28090eb9 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 19:58:54.772
  I0423 19:58:54.779169 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5385" for this suite. @ 04/23/25 19:58:54.78
• [4.050 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/23/25 19:58:54.783
  I0423 19:58:54.783539 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename secrets @ 04/23/25 19:58:54.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:58:54.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:58:54.792
  STEP: Creating secret with name secret-test-c0a4f987-901d-44b0-bc2f-41fc07c62719 @ 04/23/25 19:58:54.804
  STEP: Creating a pod to test consume secrets @ 04/23/25 19:58:54.805
  E0423 19:58:55.532310      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:56.533357      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:57.533593      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:58:58.534162      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:58:58.82
  I0423 19:58:58.823180 25 output.go:196] Trying to get logs from node worker00 pod pod-secrets-2d347abb-f64f-4bef-85aa-c5f223781583 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 19:58:58.827
  I0423 19:58:58.850021 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9483" for this suite. @ 04/23/25 19:58:58.853
  STEP: Destroying namespace "secret-namespace-1050" for this suite. @ 04/23/25 19:58:58.856
• [4.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/23/25 19:58:58.86
  I0423 19:58:58.860693 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 19:58:58.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:58:58.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:58:58.869
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 19:58:58.87
  E0423 19:58:59.534994      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:00.535157      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:01.535525      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:02.536234      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 19:59:02.883
  I0423 19:59:02.886697 25 output.go:196] Trying to get logs from node worker00 pod downwardapi-volume-6c4a5271-396e-4fb4-9281-6688493eb60e container client-container: <nil>
  STEP: delete the pod @ 04/23/25 19:59:02.892
  I0423 19:59:02.910437 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4446" for this suite. @ 04/23/25 19:59:02.913
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/23/25 19:59:02.919
  I0423 19:59:02.919988 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename pods @ 04/23/25 19:59:02.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:59:02.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:59:02.936
  STEP: creating the pod @ 04/23/25 19:59:02.941
  STEP: submitting the pod to kubernetes @ 04/23/25 19:59:02.941
  STEP: verifying QOS class is set on the pod @ 04/23/25 19:59:02.949
  I0423 19:59:02.953796 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2058" for this suite. @ 04/23/25 19:59:03.014
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 04/23/25 19:59:03.019
  I0423 19:59:03.019120 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 19:59:03.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 19:59:03.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 19:59:03.036
  I0423 19:59:03.052449 25 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0423 19:59:03.537411      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:04.538272      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:05.539001      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:06.539686      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:07.540995      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:08.541284      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:09.541679      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:10.542895      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:11.543303      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:12.543778      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:13.544666      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:14.546581      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:15.546753      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:16.547880      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:17.548180      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:18.548502      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:19.548557      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:20.549000      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:21.549156      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:22.549508      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:23.549742      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:24.551039      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:25.551126      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:26.551306      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:27.551508      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:28.552031      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:29.552290      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:30.552492      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:31.553581      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:32.554661      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:33.554842      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:34.555868      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:35.555983      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:36.556279      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:37.556683      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:38.557601      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:39.558482      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:40.558533      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:41.559694      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:42.560353      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:43.561173      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:44.561440      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:45.561727      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:46.562001      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:47.563199      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:48.563589      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:49.563708      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:50.564813      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:51.565317      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:52.565491      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:53.565712      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:54.565907      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:55.567208      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:56.568138      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:57.569093      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:58.569533      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 19:59:59.570833      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 20:00:00.571135      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 20:00:01.571561      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 20:00:02.571873      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 20:00:03.055413 25 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/23/25 20:00:03.067
  I0423 20:00:03.077671 25 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0423 20:00:03.084151 25 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0423 20:00:03.105756 25 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0423 20:00:03.110253 25 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/23/25 20:00:03.11
  E0423 20:00:03.572090      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 20:00:04.572517      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/23/25 20:00:05.123
  E0423 20:00:05.572858      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 20:00:06.573220      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0423 20:00:07.173679 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6770" for this suite. @ 04/23/25 20:00:07.177
• [64.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 04/23/25 20:00:07.186
  I0423 20:00:07.186172 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename job @ 04/23/25 20:00:07.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:00:07.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:00:07.198
  STEP: Creating a job @ 04/23/25 20:00:07.201
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/23/25 20:00:07.205
  E0423 20:00:07.573264      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0423 20:00:08.574112      25 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/23/25 20:00:09.209
  STEP: updating /status @ 04/23/25 20:00:09.215
  STEP: get /status @ 04/23/25 20:00:09.22
  I0423 20:00:09.223050 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9291" for this suite. @ 04/23/25 20:00:09.225
• [2.044 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 04/23/25 20:00:09.23
  I0423 20:00:09.230585 25 util.go:499] >>> kubeConfig: /tmp/kubeconfig-791953700
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 20:00:09.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 20:00:09.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 20:00:09.242
  STEP: Updating Namespace "namespaces-9686" @ 04/23/25 20:00:09.243
  I0423 20:00:09.248891 25 namespace.go:390] Namespace "namespaces-9686" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"22d30a80-7c43-4746-bf1f-5b29f78dd3fc", "kubernetes.io/metadata.name":"namespaces-9686", "namespaces-9686":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0423 20:00:09.248997 25 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9686" for this suite. @ 04/23/25 20:00:09.326
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0423 20:00:09.332392 25 suites.go:34] Running AfterSuite actions on node 1
  I0423 20:00:09.332982 25 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.038 seconds]
------------------------------

Ran 404 of 6608 Specs in 6415.581 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6204 Skipped
PASS

Ginkgo ran 1 suite in 1h46m56.117795893s
Test Suite Passed
