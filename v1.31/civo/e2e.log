  I0512 21:01:20.640924      19 e2e.go:109] Starting e2e run "36b03196-9ad7-49b1-955a-403e91bbc697" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1747083679 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0512 21:01:20.887620 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:01:20.888935 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0512 21:01:20.952709 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0512 21:01:20.962040 19 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'civo-csi-node' (0 seconds elapsed)
  I0512 21:01:20.962148 19 e2e.go:153] 2 / 2 pods ready in namespace 'kube-system' in daemonset 'traefik' (0 seconds elapsed)
  I0512 21:01:20.962188 19 e2e.go:245] e2e test version: v1.31.6
  I0512 21:01:20.964314 19 e2e.go:254] kube-apiserver version: v1.31.6+k3s1
  I0512 21:01:20.964450 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:01:20.970214 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.083 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/12/25 21:01:21.171
  I0512 21:01:21.172391 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/12/25 21:01:21.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:01:21.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:01:21.198
  I0512 21:01:21.203726 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:01:24.273871 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2078" for this suite. @ 05/12/25 21:01:24.28
• [3.124 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/12/25 21:01:24.289
  I0512 21:01:24.289953 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename svcaccounts @ 05/12/25 21:01:24.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:01:24.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:01:24.312
  I0512 21:01:24.326721 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0512 21:01:24.326857 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0512 21:01:24.334519 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I0512 21:01:24.334678 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0512 21:01:24.345010 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0512 21:01:24.345145 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0512 21:01:24.356409 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0512 21:01:24.356556 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0512 21:01:24.374270 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0512 21:01:24.374315 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0512 21:01:24.386840 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0512 21:01:24.386997 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0512 21:01:24.399681 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0512 21:01:24.399808 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0512 21:01:24.411013 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0512 21:01:24.411190 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0512 21:01:24.425847 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0512 21:01:24.425900 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0512 21:01:24.426057 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1655" for this suite. @ 05/12/25 21:01:24.438
• [0.156 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/12/25 21:01:24.446
  I0512 21:01:24.446245 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:01:24.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:01:24.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:01:24.474
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:01:24.479
  STEP: Saw pod success @ 05/12/25 21:01:32.543
  I0512 21:01:32.549301 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-d4ab7d21-05a9-44e0-a91e-ede4256d9b2c container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:01:32.573
  I0512 21:01:32.591595 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8820" for this suite. @ 05/12/25 21:01:32.598
• [8.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 05/12/25 21:01:32.606
  I0512 21:01:32.606639 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 21:01:32.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:01:32.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:01:32.631
  STEP: Creating resourceQuota "e2e-rq-status-nsbgc" @ 05/12/25 21:01:32.714
  I0512 21:01:32.733014 19 resource_quota.go:1102] Resource quota "e2e-rq-status-nsbgc" reports spec: hard cpu limit of 500m
  I0512 21:01:32.733424 19 resource_quota.go:1104] Resource quota "e2e-rq-status-nsbgc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-nsbgc" /status @ 05/12/25 21:01:32.733
  STEP: Confirm /status for "e2e-rq-status-nsbgc" resourceQuota via watch @ 05/12/25 21:01:32.741
  I0512 21:01:32.743628 19 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-nsbgc" in namespace "resourcequota-337" with hard status: v1.ResourceList(nil)
  I0512 21:01:32.744212 19 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-nsbgc" in namespace "resourcequota-337" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0512 21:01:32.744292 19 resource_quota.go:1141] ResourceQuota "e2e-rq-status-nsbgc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/12/25 21:01:32.747
  I0512 21:01:32.752847 19 resource_quota.go:1152] Resource quota "e2e-rq-status-nsbgc" reports spec: hard cpu limit of 1
  I0512 21:01:32.752904 19 resource_quota.go:1153] Resource quota "e2e-rq-status-nsbgc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-nsbgc" /status @ 05/12/25 21:01:32.752
  STEP: Confirm /status for "e2e-rq-status-nsbgc" resourceQuota via watch @ 05/12/25 21:01:32.759
  I0512 21:01:32.761655 19 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-nsbgc" in namespace "resourcequota-337" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0512 21:01:32.761849 19 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-nsbgc" in namespace "resourcequota-337" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0512 21:01:32.762234 19 resource_quota.go:1185] ResourceQuota "e2e-rq-status-nsbgc" /status was patched
  STEP: Get "e2e-rq-status-nsbgc" /status @ 05/12/25 21:01:32.762
  I0512 21:01:32.766938 19 resource_quota.go:1196] Resourcequota "e2e-rq-status-nsbgc" reports status: hard cpu of 1
  I0512 21:01:32.767008 19 resource_quota.go:1198] Resourcequota "e2e-rq-status-nsbgc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-nsbgc" /status before checking Spec is unchanged @ 05/12/25 21:01:32.769
  I0512 21:01:32.773370 19 resource_quota.go:1218] Resourcequota "e2e-rq-status-nsbgc" reports status: hard cpu of 2
  I0512 21:01:32.773443 19 resource_quota.go:1220] Resourcequota "e2e-rq-status-nsbgc" reports status: hard memory of 2Gi
  I0512 21:01:32.775257 19 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-nsbgc" in namespace "resourcequota-337" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0512 21:01:32.777886 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87818), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87848), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87878), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:01:37.780049 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd15d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1608), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1638), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:01:42.787637 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1788), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd17d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1818), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:01:47.783047 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a879c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a879f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:01:52.782688 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1950), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd19c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:01:57.781929 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1ad0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1b00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1b30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:02.782266 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1c50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1c80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1cb0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:07.784702 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87b78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87ba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87bd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:12.783216 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1e00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1e48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004cd1e78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:17.782319 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87d10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87d40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87d70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:22.783607 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2030), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba20a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:27.782611 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba21f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:32.785801 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87ec0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004a87ef0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:37.782615 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba23a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba23f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:42.784541 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048000c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:47.785396 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba25a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba25e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:52.783720 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048002b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:02:57.784699 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2738), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2768), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2798), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:02.786312 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048004c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:07.782612 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2978), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:12.783312 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2ac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:17.782237 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2cc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:22.786163 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048006c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:27.780280 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048000c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:32.780094 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba20a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba20d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:37.782789 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2228), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2258), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba22a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:42.784369 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048002a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048002d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:47.784821 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba23f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:52.782590 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:03:57.782765 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba25a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba25e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ba2618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:04:02.783254 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nsbgc" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nsbgc", GenerateName:"", Namespace:"resourcequota-337", SelfLink:"", UID:"6bcf1abb-4b93-4903-aca0-30178f31f8bd", ResourceVersion:"945", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nsbgc"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048007e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 1, 32, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004800858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0512 21:04:07.782945 19 resource_quota.go:1260] ResourceQuota "e2e-rq-status-nsbgc" Spec was unchanged and /status reset
  I0512 21:04:07.783537 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-337" for this suite. @ 05/12/25 21:04:07.79
• [155.193 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 05/12/25 21:04:07.8
  I0512 21:04:07.800809 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:04:07.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:04:07.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:04:07.829
  STEP: creating service in namespace services-7847 @ 05/12/25 21:04:07.833
  STEP: creating service affinity-clusterip-transition in namespace services-7847 @ 05/12/25 21:04:07.833
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7847 @ 05/12/25 21:04:07.84
  I0512 21:04:07.853066      19 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7847, replica count: 3
  I0512 21:04:10.904612      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 21:04:10.915321 19 resource.go:361] Creating new exec pod
  I0512 21:04:13.943388 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-7847 exec execpod-affinityhgxj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0512 21:04:14.178453 19 builder.go:146] stderr: "+ + nc -v -t -w 2 affinity-clusterip-transition 80\necho hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0512 21:04:14.178556 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:04:14.178739 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-7847 exec execpod-affinityhgxj6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.177.235 80'
  I0512 21:04:14.382273 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.177.235 80\nConnection to 10.43.177.235 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0512 21:04:14.382330 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:04:14.398511 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-7847 exec execpod-affinityhgxj6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.177.235:80/ ; done'
  I0512 21:04:14.672189 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n"
  I0512 21:04:14.672247 19 builder.go:147] stdout: "\naffinity-clusterip-transition-crvdx\naffinity-clusterip-transition-crvdx\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-crvdx\naffinity-clusterip-transition-crvdx\naffinity-clusterip-transition-mwllb\naffinity-clusterip-transition-crvdx\naffinity-clusterip-transition-crvdx\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-mwllb\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-mwllb\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-crvdx"
  I0512 21:04:14.672261 19 service.go:242] Received response from host: affinity-clusterip-transition-crvdx
  I0512 21:04:14.672285 19 service.go:242] Received response from host: affinity-clusterip-transition-crvdx
  I0512 21:04:14.672293 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.672299 19 service.go:242] Received response from host: affinity-clusterip-transition-crvdx
  I0512 21:04:14.672333 19 service.go:242] Received response from host: affinity-clusterip-transition-crvdx
  I0512 21:04:14.672348 19 service.go:242] Received response from host: affinity-clusterip-transition-mwllb
  I0512 21:04:14.672354 19 service.go:242] Received response from host: affinity-clusterip-transition-crvdx
  I0512 21:04:14.672360 19 service.go:242] Received response from host: affinity-clusterip-transition-crvdx
  I0512 21:04:14.672367 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.672374 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.672380 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.672403 19 service.go:242] Received response from host: affinity-clusterip-transition-mwllb
  I0512 21:04:14.672411 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.672417 19 service.go:242] Received response from host: affinity-clusterip-transition-mwllb
  I0512 21:04:14.672424 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.672433 19 service.go:242] Received response from host: affinity-clusterip-transition-crvdx
  I0512 21:04:14.682796 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-7847 exec execpod-affinityhgxj6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.177.235:80/ ; done'
  I0512 21:04:14.960357 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.177.235:80/\n"
  I0512 21:04:14.960428 19 builder.go:147] stdout: "\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf\naffinity-clusterip-transition-6t6sf"
  I0512 21:04:14.960448 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960460 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960471 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960482 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960492 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960502 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960512 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960522 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960549 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960559 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960568 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960577 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960586 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960595 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960605 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960633 19 service.go:242] Received response from host: affinity-clusterip-transition-6t6sf
  I0512 21:04:14.960765 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7847, will wait for the garbage collector to delete the pods @ 05/12/25 21:04:14.974
  I0512 21:04:15.048304 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 10.528166ms
  I0512 21:04:15.149196 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.896981ms
  I0512 21:04:18.380025 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7847" for this suite. @ 05/12/25 21:04:18.387
• [10.592 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/12/25 21:04:18.393
  I0512 21:04:18.393080 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:04:18.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:04:18.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:04:18.412
  STEP: Creating configMap with name projected-configmap-test-volume-map-ee5129d5-1ff0-449e-b990-f3e805151015 @ 05/12/25 21:04:18.415
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:04:18.419
  STEP: Saw pod success @ 05/12/25 21:04:20.437
  I0512 21:04:20.440213 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-configmaps-b7504a73-c84a-49c9-b3dc-2e2dd4dcdb52 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 21:04:20.452
  I0512 21:04:20.465255 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7755" for this suite. @ 05/12/25 21:04:20.472
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 05/12/25 21:04:20.481
  I0512 21:04:20.481321 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 21:04:20.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:04:20.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:04:20.502
  I0512 21:04:20.505409 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/12/25 21:04:22.071
  I0512 21:04:22.071903 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-7115 --namespace=crd-publish-openapi-7115 create -f -'
  I0512 21:04:22.180426 19 builder.go:146] stderr: ""
  I0512 21:04:22.180490 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7033-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0512 21:04:22.180551 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-7115 --namespace=crd-publish-openapi-7115 delete e2e-test-crd-publish-openapi-7033-crds test-cr'
  I0512 21:04:22.269778 19 builder.go:146] stderr: ""
  I0512 21:04:22.270267 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7033-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0512 21:04:22.270419 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-7115 --namespace=crd-publish-openapi-7115 apply -f -'
  I0512 21:04:22.349366 19 builder.go:146] stderr: ""
  I0512 21:04:22.349442 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7033-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0512 21:04:22.349572 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-7115 --namespace=crd-publish-openapi-7115 delete e2e-test-crd-publish-openapi-7033-crds test-cr'
  I0512 21:04:22.449664 19 builder.go:146] stderr: ""
  I0512 21:04:22.449717 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7033-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/12/25 21:04:22.449
  I0512 21:04:22.449837 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-7115 explain e2e-test-crd-publish-openapi-7033-crds'
  I0512 21:04:22.523814 19 builder.go:146] stderr: ""
  I0512 21:04:22.523911 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7033-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0512 21:04:23.896243 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7115" for this suite. @ 05/12/25 21:04:23.907
• [3.437 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 05/12/25 21:04:23.918
  I0512 21:04:23.918666 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubelet-test @ 05/12/25 21:04:23.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:04:23.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:04:23.943
  I0512 21:04:27.985815 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8801" for this suite. @ 05/12/25 21:04:27.989
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/12/25 21:04:27.998
  I0512 21:04:27.998761 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/12/25 21:04:28
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:04:28.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:04:28.019
  I0512 21:04:28.027818 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6257" for this suite. @ 05/12/25 21:04:28.031
• [0.039 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/12/25 21:04:28.037
  I0512 21:04:28.037867 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename subpath @ 05/12/25 21:04:28.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:04:28.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:04:28.13
  STEP: Setting up data @ 05/12/25 21:04:28.132
  STEP: Creating pod pod-subpath-test-projected-zmpr @ 05/12/25 21:04:28.14
  STEP: Creating a pod to test atomic-volume-subpath @ 05/12/25 21:04:28.14
  STEP: Saw pod success @ 05/12/25 21:04:52.247
  I0512 21:04:52.255904 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-subpath-test-projected-zmpr container test-container-subpath-projected-zmpr: <nil>
  STEP: delete the pod @ 05/12/25 21:04:52.267
  STEP: Deleting pod pod-subpath-test-projected-zmpr @ 05/12/25 21:04:52.281
  I0512 21:04:52.281690 19 delete.go:62] Deleting pod "pod-subpath-test-projected-zmpr" in namespace "subpath-3510"
  I0512 21:04:52.284296 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3510" for this suite. @ 05/12/25 21:04:52.288
• [24.257 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/12/25 21:04:52.296
  I0512 21:04:52.296373 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 21:04:52.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:04:52.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:04:52.317
  STEP: Create a pod @ 05/12/25 21:04:52.319
  STEP: patching /status @ 05/12/25 21:04:54.356
  I0512 21:04:54.372134 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0512 21:04:54.372373 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9601" for this suite. @ 05/12/25 21:04:54.379
• [2.088 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/12/25 21:04:54.384
  I0512 21:04:54.385121 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/12/25 21:04:54.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:04:54.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:04:54.405
  STEP: create the container to handle the HTTPGet hook request. @ 05/12/25 21:04:54.479
  STEP: create the pod with lifecycle hook @ 05/12/25 21:04:56.518
  STEP: check poststart hook @ 05/12/25 21:04:58.549
  STEP: delete the pod with lifecycle hook @ 05/12/25 21:04:58.562
  I0512 21:05:02.588793 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9095" for this suite. @ 05/12/25 21:05:02.594
• [8.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/12/25 21:05:02.606
  I0512 21:05:02.606667 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replication-controller @ 05/12/25 21:05:02.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:05:02.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:05:02.637
  STEP: Creating replication controller my-hostname-basic-104cfc00-5ebd-4de8-b934-e130b05ef7ef @ 05/12/25 21:05:02.64
  I0512 21:05:02.648695 19 resource.go:87] Pod name my-hostname-basic-104cfc00-5ebd-4de8-b934-e130b05ef7ef: Found 0 pods out of 1
  I0512 21:05:07.657666 19 resource.go:87] Pod name my-hostname-basic-104cfc00-5ebd-4de8-b934-e130b05ef7ef: Found 1 pods out of 1
  I0512 21:05:07.657748 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-104cfc00-5ebd-4de8-b934-e130b05ef7ef" are running
  I0512 21:05:07.661697 19 rc.go:523] Pod "my-hostname-basic-104cfc00-5ebd-4de8-b934-e130b05ef7ef-pr6ln" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-12 21:05:03 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-12 21:05:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-12 21:05:03 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-12 21:05:03 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-12 21:05:02 +0000 UTC Reason: Message:}])
  I0512 21:05:07.661765 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/12/25 21:05:07.661
  I0512 21:05:07.679911 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2655" for this suite. @ 05/12/25 21:05:07.685
• [5.085 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/12/25 21:05:07.693
  I0512 21:05:07.693237 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename namespaces @ 05/12/25 21:05:07.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:05:07.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:05:07.78
  STEP: Creating a test namespace @ 05/12/25 21:05:07.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:05:07.878
  STEP: Creating a service in the namespace @ 05/12/25 21:05:07.88
  STEP: Deleting the namespace @ 05/12/25 21:05:07.887
  STEP: Waiting for the namespace to be removed. @ 05/12/25 21:05:07.896
  STEP: Recreating the namespace @ 05/12/25 21:05:13.902
  STEP: Verifying there is no service in the namespace @ 05/12/25 21:05:13.926
  I0512 21:05:13.928991 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9594" for this suite. @ 05/12/25 21:05:13.932
  STEP: Destroying namespace "nsdeletetest-5658" for this suite. @ 05/12/25 21:05:13.936
  I0512 21:05:13.938888 19 framework.go:370] Namespace nsdeletetest-5658 was already deleted
  STEP: Destroying namespace "nsdeletetest-6216" for this suite. @ 05/12/25 21:05:13.939
• [6.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 05/12/25 21:05:13.948
  I0512 21:05:13.948561 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 21:05:13.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:05:14.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:05:14.031
  STEP: Creating pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259 @ 05/12/25 21:05:14.035
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/12/25 21:05:16.055
  I0512 21:05:16.061047 19 container_probe.go:1749] Initial restart count of pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 is 0
  I0512 21:05:16.066194 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:18.075004 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:20.081073 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:22.088386 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:24.096236 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:26.102554 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:28.109950 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:30.116802 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:32.124888 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:34.133082 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:36.139936 19 container_probe.go:1759] Get pod liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 in namespace container-probe-5259
  I0512 21:05:36.140018 19 container_probe.go:1763] Restart count of pod container-probe-5259/liveness-1057bb5d-9cea-4d68-a4b9-7dbe79162c22 is now 1 (20.078901795s elapsed)
  STEP: deleting the pod @ 05/12/25 21:05:36.14
  I0512 21:05:36.157594 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5259" for this suite. @ 05/12/25 21:05:36.162
• [22.219 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/12/25 21:05:36.168
  I0512 21:05:36.168492 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:05:36.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:05:36.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:05:36.185
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:05:36.191
  STEP: Saw pod success @ 05/12/25 21:05:40.236
  I0512 21:05:40.242789 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-899ee98a-b365-4cd3-8664-a54ab88baa2b container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:05:40.254
  I0512 21:05:40.272384 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1418" for this suite. @ 05/12/25 21:05:40.277
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/12/25 21:05:40.282
  I0512 21:05:40.283008 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename gc @ 05/12/25 21:05:40.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:05:40.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:05:40.299
  STEP: create the deployment @ 05/12/25 21:05:40.302
  W0512 21:05:40.306223      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/12/25 21:05:40.306
  STEP: delete the deployment @ 05/12/25 21:05:40.812
  STEP: wait for all rs to be garbage collected @ 05/12/25 21:05:40.821
  STEP: expected 0 pods, got 2 pods @ 05/12/25 21:05:40.851
  STEP: Gathering metrics @ 05/12/25 21:05:41.335
  W0512 21:05:41.339044      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0512 21:05:41.339187 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0512 21:05:41.340295 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-98" for this suite. @ 05/12/25 21:05:41.343
• [1.066 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 05/12/25 21:05:41.349
  I0512 21:05:41.349119 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 21:05:41.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:05:41.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:05:41.365
  STEP: Creating pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988 @ 05/12/25 21:05:41.368
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/12/25 21:05:43.388
  I0512 21:05:43.395797 19 container_probe.go:1749] Initial restart count of pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 is 0
  I0512 21:05:43.400595 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:05:45.406473 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:05:47.412190 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:05:49.419838 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:05:51.426474 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:05:53.433982 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:05:55.443499 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:05:57.451381 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:05:59.459813 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:01.466078 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:03.472240 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:05.480792 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:07.488901 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:09.497055 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:11.505439 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:13.509368 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:15.516040 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:17.523516 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:19.531397 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:21.537156 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:23.546199 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:25.553395 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:27.559291 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:29.568569 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:31.576748 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:33.587597 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:35.595069 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:37.604531 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:39.613220 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:41.622166 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:43.629244 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:45.638136 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:47.646382 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:49.652889 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:51.660076 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:53.667921 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:55.673135 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:57.682578 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:06:59.689630 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:01.694540 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:03.701041 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:05.708262 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:07.715781 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:09.724517 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:11.732070 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:13.742186 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:15.749295 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:17.757758 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:19.763641 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:21.771724 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:23.779034 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:25.787266 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:27.794873 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:29.802383 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:31.810283 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:33.819985 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:35.829189 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:37.836964 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:39.845055 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:41.849660 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:43.855899 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:45.863871 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:47.870285 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:49.877808 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:51.883689 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:53.892041 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:55.897844 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:57.907182 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:07:59.912386 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:01.920270 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:03.927800 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:05.935221 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:07.942021 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:09.948208 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:11.956506 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:13.963606 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:15.968997 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:17.977243 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:19.985368 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:21.992686 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:23.999963 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:26.007612 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:28.014058 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:30.020363 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:32.028254 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:34.035253 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:36.042776 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:38.050255 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:40.054662 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:42.065669 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:44.078838 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:46.086473 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:48.093160 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:50.100783 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:52.108301 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:54.115374 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:56.122878 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:08:58.129161 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:00.139005 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:02.145948 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:04.152635 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:06.159068 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:08.166824 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:10.173381 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:12.178865 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:14.185828 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:16.196405 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:18.203029 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:20.209595 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:22.217397 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:24.227063 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:26.236395 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:28.243425 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:30.251264 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:32.257828 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:34.264138 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:36.271984 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:38.278837 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:40.287463 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  I0512 21:09:42.292200 19 container_probe.go:1759] Get pod test-grpc-028f64c7-31f0-48e9-b1dc-823ed691e4d9 in namespace container-probe-7988
  STEP: deleting the pod @ 05/12/25 21:09:44.292
  I0512 21:09:44.319015 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7988" for this suite. @ 05/12/25 21:09:44.325
• [242.984 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/12/25 21:09:44.335
  I0512 21:09:44.335159 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename cronjob @ 05/12/25 21:09:44.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:09:44.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:09:44.357
  STEP: Creating a cronjob @ 05/12/25 21:09:44.359
  STEP: Ensuring more than one job is running at a time @ 05/12/25 21:09:44.363
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/12/25 21:11:00.371
  STEP: Removing cronjob @ 05/12/25 21:11:00.378
  I0512 21:11:00.386670 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5149" for this suite. @ 05/12/25 21:11:00.417
• [76.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/12/25 21:11:00.431
  I0512 21:11:00.431118 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replication-controller @ 05/12/25 21:11:00.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:11:00.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:11:00.45
  STEP: Given a ReplicationController is created @ 05/12/25 21:11:00.453
  STEP: When the matched label of one of its pods change @ 05/12/25 21:11:00.464
  I0512 21:11:00.478616 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/12/25 21:11:00.496
  I0512 21:11:01.509195 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9952" for this suite. @ 05/12/25 21:11:01.515
• [1.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/12/25 21:11:01.528
  I0512 21:11:01.528858 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:11:01.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:11:01.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:11:01.559
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/12/25 21:11:01.564
  STEP: Saw pod success @ 05/12/25 21:11:05.599
  I0512 21:11:05.606735 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-fbc5ca49-c27f-4449-8b53-393902fc9e05 container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:11:05.619
  I0512 21:11:05.642769 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7707" for this suite. @ 05/12/25 21:11:05.646
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/12/25 21:11:05.651
  I0512 21:11:05.651087 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 21:11:05.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:11:05.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:11:05.706
  STEP: creating the pod @ 05/12/25 21:11:05.71
  STEP: submitting the pod to kubernetes @ 05/12/25 21:11:05.711
  W0512 21:11:05.717004      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/12/25 21:11:07.729
  STEP: updating the pod @ 05/12/25 21:11:07.733
  I0512 21:11:08.251735 19 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-dd3fe834-098a-4816-8b81-0aebc278eded"
  I0512 21:11:12.268865 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7527" for this suite. @ 05/12/25 21:11:12.272
• [6.627 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 05/12/25 21:11:12.282
  I0512 21:11:12.282827 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:11:12.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:11:12.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:11:12.303
  STEP: fetching services @ 05/12/25 21:11:12.305
  I0512 21:11:12.308560 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2839" for this suite. @ 05/12/25 21:11:12.374
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 05/12/25 21:11:12.388
  I0512 21:11:12.388312 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-preemption @ 05/12/25 21:11:12.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:11:12.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:11:12.415
  I0512 21:11:12.441584 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0512 21:12:12.448887 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/12/25 21:12:12.455
  I0512 21:12:12.455074 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/12/25 21:12:12.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:12:12.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:12:12.482
  I0512 21:12:12.499352 19 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0512 21:12:12.501998 19 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0512 21:12:12.557760 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8909" for this suite. @ 05/12/25 21:12:12.563
  I0512 21:12:12.569598 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3385" for this suite. @ 05/12/25 21:12:12.664
• [60.287 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/12/25 21:12:12.677
  I0512 21:12:12.677284 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 21:12:12.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:12:12.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:12:12.706
  STEP: Creating configMap that has name configmap-test-emptyKey-d4e8c098-8775-414e-ab09-b17c379a9f66 @ 05/12/25 21:12:12.708
  I0512 21:12:12.710484 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-24" for this suite. @ 05/12/25 21:12:12.765
• [0.097 seconds]
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/12/25 21:12:12.774
  I0512 21:12:12.775009 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename deployment @ 05/12/25 21:12:12.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:12:12.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:12:12.809
  I0512 21:12:12.824351 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0512 21:12:17.831181 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/12/25 21:12:17.831
  I0512 21:12:17.831321 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0512 21:12:19.839725 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0512 21:12:19.867063 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0512 21:12:21.888417 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0512 21:12:21.897338 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0512 21:12:21.905120 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0512 21:12:21.915750 19 deployment.go:314] Updating deployment test-rollover-deployment
  I0512 21:12:21.915840 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0512 21:12:23.929289 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0512 21:12:23.938999 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0512 21:12:23.952564 19 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0512 21:12:23.952699 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 21:12:25.967509 19 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0512 21:12:25.967597 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 21:12:27.968259 19 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0512 21:12:27.968381 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 21:12:29.968000 19 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0512 21:12:29.968132 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 21:12:31.967214 19 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0512 21:12:31.967711 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 12, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 12, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 21:12:33.967155 19 deployment.go:95] 
  I0512 21:12:33.967814 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I0512 21:12:33.982651 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0cc3a776-e3a2-4539-b574-7fb14270339a",
      ResourceVersion: (string) (len=4) "2309",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0512 21:12:33.996826 19 deployment.go:40] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "935f7216-bdf0-42cc-b347-c89ec2f1d9c4",
      ResourceVersion: (string) (len=4) "2299",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0cc3a776-e3a2-4539-b574-7fb14270339a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 63 63 33 61 37  37 36 2d 65 33 61 32 2d  |\"0cc3a776-e3a2-|
              00000120  34 35 33 39 2d 62 35 37  34 2d 37 66 62 31 34 32  |4539-b574-7fb142|
              00000130  37 30 33 33 39 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |70339a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:12:33.998688 19 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0512 21:12:33.999058 19 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09097301-aba0-4fe7-9951-80bdd319c258",
      ResourceVersion: (string) (len=4) "2308",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0cc3a776-e3a2-4539-b574-7fb14270339a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  30 63 63 33 61 37 37 36  2d 65 33 61 32 2d 34 35  |0cc3a776-e3a2-45|
              000000c0  33 39 2d 62 35 37 34 2d  37 66 62 31 34 32 37 30  |39-b574-7fb14270|
              000000d0  33 33 39 61 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |339a\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:12:34.000502 19 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ed1db64-1bd5-4cf2-8ba4-d5dad5c433b9",
      ResourceVersion: (string) (len=4) "2282",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "0cc3a776-e3a2-4539-b574-7fb14270339a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 63 63 33 61 37  37 36 2d 65 33 61 32 2d  |\"0cc3a776-e3a2-|
              00000120  34 35 33 39 2d 62 35 37  34 2d 37 66 62 31 34 32  |4539-b574-7fb142|
              00000130  37 30 33 33 39 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |70339a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:12:34.017233 19 deployment.go:68] Pod "test-rollover-deployment-5f974d7468-vfv2m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-vfv2m",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-6040",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63c53642-defd-40d4-a65d-d7b545b6cbe3",
      ResourceVersion: (string) (len=4) "2287",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "935f7216-bdf0-42cc-b347-c89ec2f1d9c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 33  35 66 37 32 31 36 2d 62  |d\":\"935f7216-b|
              00000090  64 66 30 2d 34 32 63 63  2d 62 33 34 37 2d 63 38  |df0-42cc-b347-c8|
              000000a0  39 65 63 32 66 31 64 39  63 34 5c 22 7d 22 3a 7b  |9ec2f1d9c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 39  5c 22 7d 22 3a 7b 22 2e  |.42.1.29\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z4zt5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z4zt5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681142,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681141,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=10) "10.42.1.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681141,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882681142,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://892bb3f196a23efb63a22e6c8762e02658bb0e51fc5b83a9f9c12309ab0b34a6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-z4zt5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:12:34.022976 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6040" for this suite. @ 05/12/25 21:12:34.029
• [21.265 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/12/25 21:12:34.039
  I0512 21:12:34.039823 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:12:34.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:12:34.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:12:34.062
  STEP: Creating secret with name projected-secret-test-0f48857b-84ca-44bb-9c08-ca046b195c90 @ 05/12/25 21:12:34.065
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:12:34.069
  STEP: Saw pod success @ 05/12/25 21:12:36.088
  I0512 21:12:36.093519 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-secrets-be848f21-ba62-4fcf-99c4-0789062bf815 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:12:36.113
  I0512 21:12:36.130209 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6795" for this suite. @ 05/12/25 21:12:36.134
• [2.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 05/12/25 21:12:36.14
  I0512 21:12:36.140128 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 21:12:36.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:12:36.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:12:36.168
  STEP: Counting existing ResourceQuota @ 05/12/25 21:12:53.176
  STEP: Creating a ResourceQuota @ 05/12/25 21:12:58.183
  STEP: Ensuring resource quota status is calculated @ 05/12/25 21:12:58.192
  STEP: Creating a ConfigMap @ 05/12/25 21:13:00.198
  STEP: Ensuring resource quota status captures configMap creation @ 05/12/25 21:13:00.214
  STEP: Deleting a ConfigMap @ 05/12/25 21:13:02.228
  STEP: Ensuring resource quota status released usage @ 05/12/25 21:13:02.248
  I0512 21:13:04.265357 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3028" for this suite. @ 05/12/25 21:13:04.276
• [28.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 05/12/25 21:13:04.288
  I0512 21:13:04.288817 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-pred @ 05/12/25 21:13:04.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:04.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:04.313
  I0512 21:13:04.316503 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0512 21:13:04.378224 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0512 21:13:04.381967 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr before test
  I0512 21:13:04.390490 19 predicates.go:957] civo-ccm-bd7449dd8-g59ts from kube-system started at 2025-05-12 20:59:04 +0000 UTC (1 container statuses recorded)
  I0512 21:13:04.390532 19 predicates.go:959] 	Container civo-ccm ready: true, restart count 0
  I0512 21:13:04.390574 19 predicates.go:957] civo-csi-controller-0 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (4 container statuses recorded)
  I0512 21:13:04.390586 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 21:13:04.390597 19 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0512 21:13:04.390611 19 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0512 21:13:04.390624 19 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0512 21:13:04.390666 19 predicates.go:957] civo-csi-node-wt7c2 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (2 container statuses recorded)
  I0512 21:13:04.390677 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 21:13:04.390691 19 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0512 21:13:04.390731 19 predicates.go:957] coredns-ccb96694c-l7675 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (1 container statuses recorded)
  I0512 21:13:04.390743 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0512 21:13:04.390757 19 predicates.go:957] metrics-server-7bf7d58749-v5xjt from kube-system started at 2025-05-12 20:59:12 +0000 UTC (1 container statuses recorded)
  I0512 21:13:04.390771 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0512 21:13:04.390785 19 predicates.go:957] traefik-4ncsl from kube-system started at 2025-05-12 20:59:57 +0000 UTC (1 container statuses recorded)
  I0512 21:13:04.390815 19 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0512 21:13:04.390827 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt before test
  I0512 21:13:04.401381 19 predicates.go:957] install-traefik2-nodeport-hi-gh9ls from default started at 2025-05-12 20:59:49 +0000 UTC (1 container statuses recorded)
  I0512 21:13:04.401454 19 predicates.go:959] 	Container install-traefik2-nodeport-hi ready: false, restart count 0
  I0512 21:13:04.401526 19 predicates.go:957] civo-csi-node-l7nfx from kube-system started at 2025-05-12 20:59:12 +0000 UTC (2 container statuses recorded)
  I0512 21:13:04.401545 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 21:13:04.401560 19 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0512 21:13:04.401580 19 predicates.go:957] traefik-bwh9l from kube-system started at 2025-05-12 20:59:57 +0000 UTC (1 container statuses recorded)
  I0512 21:13:04.401593 19 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0512 21:13:04.401609 19 predicates.go:957] sonobuoy from sonobuoy started at 2025-05-12 21:01:09 +0000 UTC (1 container statuses recorded)
  I0512 21:13:04.401621 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0512 21:13:04.401637 19 predicates.go:957] sonobuoy-e2e-job-e851b625746c4110 from sonobuoy started at 2025-05-12 21:01:13 +0000 UTC (2 container statuses recorded)
  I0512 21:13:04.401650 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0512 21:13:04.401664 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/12/25 21:13:04.401
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.183ee3fdbdfba2a3], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 05/12/25 21:13:04.426
  I0512 21:13:05.428362 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4918" for this suite. @ 05/12/25 21:13:05.435
• [1.154 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 05/12/25 21:13:05.443
  I0512 21:13:05.443148 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 21:13:05.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:05.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:05.468
  STEP: set up a multi version CRD @ 05/12/25 21:13:05.472
  I0512 21:13:05.473878 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: mark a version not serverd @ 05/12/25 21:13:08.829
  STEP: check the unserved version gets removed @ 05/12/25 21:13:08.855
  STEP: check the other version is not changed @ 05/12/25 21:13:09.712
  I0512 21:13:12.431017 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6684" for this suite. @ 05/12/25 21:13:12.445
• [7.011 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/12/25 21:13:12.454
  I0512 21:13:12.454952 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 21:13:12.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:12.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:12.479
  I0512 21:13:12.484133 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: creating the pod @ 05/12/25 21:13:12.485
  STEP: submitting the pod to kubernetes @ 05/12/25 21:13:12.485
  I0512 21:13:14.667906 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2391" for this suite. @ 05/12/25 21:13:14.674
• [2.229 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/12/25 21:13:14.684
  I0512 21:13:14.684499 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pod-network-test @ 05/12/25 21:13:14.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:14.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:14.72
  STEP: Performing setup for networking test in namespace pod-network-test-5971 @ 05/12/25 21:13:14.724
  STEP: creating a selector @ 05/12/25 21:13:14.724
  STEP: Creating the service pods in kubernetes @ 05/12/25 21:13:14.724
  I0512 21:13:14.724597 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/12/25 21:13:26.846
  I0512 21:13:28.910906 19 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0512 21:13:28.911339 19 utils.go:496] Going to poll 10.42.0.10 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0512 21:13:28.916075 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.10:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5971 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:13:28.916140 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:13:28.917276 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:13:28.917655 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5971/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.10%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0512 21:13:29.037715 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0512 21:13:29.038195 19 utils.go:496] Going to poll 10.42.1.32 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0512 21:13:29.042623 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.32:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5971 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:13:29.043075 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:13:29.044369 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:13:29.044532 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5971/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.32%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0512 21:13:29.150925 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0512 21:13:29.151965 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5971" for this suite. @ 05/12/25 21:13:29.158
• [14.485 seconds]
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 05/12/25 21:13:29.17
  I0512 21:13:29.170079 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename dns @ 05/12/25 21:13:29.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:29.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:29.209
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/12/25 21:13:29.215
  I0512 21:13:29.228149 19 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-36  ab228164-50ad-492d-a061-1389e7dff86d 2530 0 2025-05-12 21:13:29 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-05-12 21:13:29 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xl9zv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xl9zv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/12/25 21:13:31.243
  I0512 21:13:31.243400 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-36 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:13:31.243436 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:13:31.244488 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:13:31.244632 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-36/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/12/25 21:13:31.377
  I0512 21:13:31.377859 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-36 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:13:31.377904 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:13:31.379004 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:13:31.379116 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-36/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0512 21:13:31.513854 19 dns.go:423] Deleting pod test-dns-nameservers...
  I0512 21:13:31.559749 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-36" for this suite. @ 05/12/25 21:13:31.564
• [2.400 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/12/25 21:13:31.57
  I0512 21:13:31.570539 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 21:13:31.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:31.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:31.585
  STEP: Creating configMap with name configmap-test-volume-map-32d5bed5-63a7-4b97-9ce6-5cbf34432a00 @ 05/12/25 21:13:31.588
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:13:31.591
  STEP: Saw pod success @ 05/12/25 21:13:35.616
  I0512 21:13:35.622578 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-66acb913-9097-4ce3-b5a1-9fb441a9d8e8 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 21:13:35.634
  I0512 21:13:35.654735 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6033" for this suite. @ 05/12/25 21:13:35.66
• [4.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/12/25 21:13:35.667
  I0512 21:13:35.667426 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:13:35.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:35.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:35.696
  STEP: Creating a pod to test downward api env vars @ 05/12/25 21:13:35.699
  STEP: Saw pod success @ 05/12/25 21:13:39.732
  I0512 21:13:39.737974 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downward-api-eb0357fb-ac01-452f-9570-66f4d417ac0d container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 21:13:39.75
  I0512 21:13:39.770506 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7837" for this suite. @ 05/12/25 21:13:39.775
• [4.113 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/12/25 21:13:39.78
  I0512 21:13:39.780869 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:13:39.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:39.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:39.8
  STEP: Creating configMap with name projected-configmap-test-volume-85829c82-dfb7-47fd-a2e2-fd227c5c1c1a @ 05/12/25 21:13:39.802
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:13:39.805
  STEP: Saw pod success @ 05/12/25 21:13:43.832
  I0512 21:13:43.839284 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-configmaps-44a9647a-d920-48ff-a91b-276e494c2851 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 21:13:43.853
  I0512 21:13:43.876909 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4414" for this suite. @ 05/12/25 21:13:43.881
• [4.106 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/12/25 21:13:43.886
  I0512 21:13:43.886935 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/12/25 21:13:43.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:43.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:43.906
  I0512 21:13:43.910021 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:13:50.215859 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1496" for this suite. @ 05/12/25 21:13:50.221
• [6.343 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 05/12/25 21:13:50.231
  I0512 21:13:50.231798 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename security-context-test @ 05/12/25 21:13:50.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:50.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:50.256
  I0512 21:13:52.280257 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7252" for this suite. @ 05/12/25 21:13:52.285
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 05/12/25 21:13:52.298
  I0512 21:13:52.298891 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 21:13:52.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:13:52.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:13:52.322
  STEP: Discovering how many secrets are in namespace by default @ 05/12/25 21:13:52.325
  STEP: Counting existing ResourceQuota @ 05/12/25 21:13:57.331
  STEP: Creating a ResourceQuota @ 05/12/25 21:14:02.34
  STEP: Ensuring resource quota status is calculated @ 05/12/25 21:14:02.349
  STEP: Creating a Secret @ 05/12/25 21:14:04.355
  STEP: Ensuring resource quota status captures secret creation @ 05/12/25 21:14:04.37
  STEP: Deleting a secret @ 05/12/25 21:14:06.376
  STEP: Ensuring resource quota status released usage @ 05/12/25 21:14:06.387
  I0512 21:14:08.395778 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4726" for this suite. @ 05/12/25 21:14:08.401
• [16.110 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 05/12/25 21:14:08.412
  I0512 21:14:08.412204 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename statefulset @ 05/12/25 21:14:08.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:14:08.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:14:08.436
  STEP: Creating service test in namespace statefulset-2657 @ 05/12/25 21:14:08.439
  STEP: Creating statefulset ss in namespace statefulset-2657 @ 05/12/25 21:14:08.444
  I0512 21:14:08.459136 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0512 21:14:18.461590 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/12/25 21:14:18.475
  STEP: updating a scale subresource @ 05/12/25 21:14:18.48
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/12/25 21:14:18.488
  STEP: Patch a scale subresource @ 05/12/25 21:14:18.498
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/12/25 21:14:18.55
  I0512 21:14:18.560567 19 statefulset.go:138] Deleting all statefulset in ns statefulset-2657
  I0512 21:14:18.563607 19 rest.go:150] Scaling statefulset ss to 0
  I0512 21:14:28.581554 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0512 21:14:28.586272 19 rest.go:88] Deleting statefulset ss
  I0512 21:14:28.612164 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2657" for this suite. @ 05/12/25 21:14:28.615
• [20.208 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 05/12/25 21:14:28.622
  I0512 21:14:28.622062 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:14:28.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:14:28.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:14:28.64
  STEP: Starting the proxy @ 05/12/25 21:14:28.643
  I0512 21:14:28.644888 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-5412 proxy --unix-socket=/tmp/kubectl-proxy-unix1040252747/test'
  STEP: retrieving proxy /api/ output @ 05/12/25 21:14:28.703
  I0512 21:14:28.704235 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5412" for this suite. @ 05/12/25 21:14:28.716
• [0.103 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 05/12/25 21:14:28.727
  I0512 21:14:28.727190 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:14:28.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:14:28.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:14:28.748
  STEP: Setting up server cert @ 05/12/25 21:14:28.853
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:14:29.192
  STEP: Deploying the webhook pod @ 05/12/25 21:14:29.198
  STEP: Wait for the deployment to be ready @ 05/12/25 21:14:29.208
  I0512 21:14:29.230572 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:14:31.247
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:14:31.259
  I0512 21:14:32.259737 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/12/25 21:14:32.268
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/12/25 21:14:32.27
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/12/25 21:14:32.27
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/12/25 21:14:32.27
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/12/25 21:14:32.271
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/12/25 21:14:32.272
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/12/25 21:14:32.273
  I0512 21:14:32.331905 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5051" for this suite. @ 05/12/25 21:14:32.344
  STEP: Destroying namespace "webhook-markers-5168" for this suite. @ 05/12/25 21:14:32.351
• [3.631 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 05/12/25 21:14:32.358
  I0512 21:14:32.358695 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-preemption @ 05/12/25 21:14:32.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:14:32.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:14:32.38
  I0512 21:14:32.395796 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0512 21:15:32.403789 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/12/25 21:15:32.41
  I0512 21:15:32.410936 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/12/25 21:15:32.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:15:32.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:15:32.433
  STEP: Finding an available node @ 05/12/25 21:15:32.438
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/12/25 21:15:32.439
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/12/25 21:15:34.469
  I0512 21:15:34.482141 19 preemption.go:585] found a healthy node: k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt
  I0512 21:15:40.558383 19 preemption.go:708] pods created so far: [1 1 1]
  I0512 21:15:40.558454 19 preemption.go:709] length of pods created so far: 3
  I0512 21:15:42.571593 19 preemption.go:726] pods created so far: [2 2 1]
  I0512 21:15:49.638820 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1967" for this suite. @ 05/12/25 21:15:49.643
  I0512 21:15:49.647973 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2010" for this suite. @ 05/12/25 21:15:49.743
• [77.401 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 05/12/25 21:15:49.765
  I0512 21:15:49.765915 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename field-validation @ 05/12/25 21:15:49.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:15:49.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:15:49.806
  I0512 21:15:49.810981 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:15:52.918916 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8370" for this suite. @ 05/12/25 21:15:52.924
• [3.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/12/25 21:15:52.931
  I0512 21:15:52.931948 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename events @ 05/12/25 21:15:52.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:15:52.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:15:52.952
  STEP: creating a test event @ 05/12/25 21:15:52.956
  STEP: listing all events in all namespaces @ 05/12/25 21:15:52.96
  STEP: patching the test event @ 05/12/25 21:15:52.972
  STEP: fetching the test event @ 05/12/25 21:15:52.986
  STEP: updating the test event @ 05/12/25 21:15:52.991
  STEP: getting the test event @ 05/12/25 21:15:53
  STEP: deleting the test event @ 05/12/25 21:15:53.005
  STEP: listing all events in all namespaces @ 05/12/25 21:15:53.01
  I0512 21:15:53.023482 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1640" for this suite. @ 05/12/25 21:15:53.033
• [0.107 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/12/25 21:15:53.039
  I0512 21:15:53.039972 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/12/25 21:15:53.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:15:53.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:15:53.064
  STEP: create the container to handle the HTTPGet hook request. @ 05/12/25 21:15:53.128
  STEP: create the pod with lifecycle hook @ 05/12/25 21:15:55.16
  STEP: delete the pod with lifecycle hook @ 05/12/25 21:15:57.195
  STEP: check prestop hook @ 05/12/25 21:16:01.222
  I0512 21:16:01.258673 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1017" for this suite. @ 05/12/25 21:16:01.264
• [8.232 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 05/12/25 21:16:01.273
  I0512 21:16:01.273386 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename dns @ 05/12/25 21:16:01.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:01.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:01.296
  STEP: Creating a test headless service @ 05/12/25 21:16:01.3
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4655.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4655.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4655.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4655.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4655.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4655.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4655.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4655.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4655.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4655.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 101.131.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.131.101_udp@PTR;check="$$(dig +tcp +noall +answer +search 101.131.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.131.101_tcp@PTR;sleep 1; done
   @ 05/12/25 21:16:01.318
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4655.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4655.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4655.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4655.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4655.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4655.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4655.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4655.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4655.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4655.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 101.131.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.131.101_udp@PTR;check="$$(dig +tcp +noall +answer +search 101.131.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.131.101_tcp@PTR;sleep 1; done
   @ 05/12/25 21:16:01.319
  STEP: creating a pod to probe DNS @ 05/12/25 21:16:01.319
  STEP: submitting the pod to kubernetes @ 05/12/25 21:16:01.319
  STEP: retrieving the pod @ 05/12/25 21:16:11.537
  STEP: looking for the results for each expected name from probers @ 05/12/25 21:16:11.544
  I0512 21:16:11.561973 19 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-4655.svc.cluster.local from pod dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c: the server could not find the requested resource (get pods dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c)
  I0512 21:16:11.567488 19 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-4655.svc.cluster.local from pod dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c: the server could not find the requested resource (get pods dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c)
  I0512 21:16:11.574085 19 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local from pod dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c: the server could not find the requested resource (get pods dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c)
  I0512 21:16:11.580286 19 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local from pod dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c: the server could not find the requested resource (get pods dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c)
  I0512 21:16:11.610746 19 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-4655.svc.cluster.local from pod dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c: the server could not find the requested resource (get pods dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c)
  I0512 21:16:11.619298 19 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-4655.svc.cluster.local from pod dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c: the server could not find the requested resource (get pods dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c)
  I0512 21:16:11.626689 19 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local from pod dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c: the server could not find the requested resource (get pods dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c)
  I0512 21:16:11.635048 19 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local from pod dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c: the server could not find the requested resource (get pods dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c)
  I0512 21:16:11.664082 19 dns_common.go:490] Lookups using dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c failed for: [wheezy_udp@dns-test-service.dns-4655.svc.cluster.local wheezy_tcp@dns-test-service.dns-4655.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local jessie_udp@dns-test-service.dns-4655.svc.cluster.local jessie_tcp@dns-test-service.dns-4655.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4655.svc.cluster.local]

  I0512 21:16:11.691102 19 dns_common.go:496] Pod client logs for webserver: 
  I0512 21:16:11.704867 19 dns_common.go:496] Pod client logs for querier: 
  I0512 21:16:11.714855 19 dns_common.go:496] Pod client logs for jessie-querier: 
  I0512 21:16:16.631495 19 dns_common.go:528] DNS probes using dns-4655/dns-test-f209e7a6-645e-432f-9d7b-0aec01b2f14c succeeded

  STEP: deleting the pod @ 05/12/25 21:16:16.631
  STEP: deleting the test service @ 05/12/25 21:16:16.643
  STEP: deleting the test headless service @ 05/12/25 21:16:16.7
  I0512 21:16:16.710779 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4655" for this suite. @ 05/12/25 21:16:16.717
• [15.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/12/25 21:16:16.722
  I0512 21:16:16.722359 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:16:16.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:16.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:16.738
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/12/25 21:16:16.743
  STEP: Saw pod success @ 05/12/25 21:16:20.78
  I0512 21:16:20.786750 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-64d65b6f-b379-4bc6-927d-123c5d6740a7 container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:16:20.801
  I0512 21:16:20.820825 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9980" for this suite. @ 05/12/25 21:16:20.829
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 05/12/25 21:16:20.839
  I0512 21:16:20.839970 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:16:20.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:20.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:20.859
  STEP: Setting up server cert @ 05/12/25 21:16:20.957
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:16:21.863
  STEP: Deploying the webhook pod @ 05/12/25 21:16:21.872
  STEP: Wait for the deployment to be ready @ 05/12/25 21:16:21.898
  I0512 21:16:21.941177 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:16:23.959
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:16:23.971
  I0512 21:16:24.973126 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/12/25 21:16:24.982
  STEP: create a configmap that should be updated by the webhook @ 05/12/25 21:16:25.007
  I0512 21:16:25.087610 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7538" for this suite. @ 05/12/25 21:16:25.093
  STEP: Destroying namespace "webhook-markers-5755" for this suite. @ 05/12/25 21:16:25.097
• [4.262 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/12/25 21:16:25.102
  I0512 21:16:25.102979 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/12/25 21:16:25.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:25.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:25.132
  STEP: creating a target pod @ 05/12/25 21:16:25.135
  STEP: adding an ephemeral container @ 05/12/25 21:16:27.164
  STEP: checking pod container endpoints @ 05/12/25 21:16:29.201
  I0512 21:16:29.201784 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-429 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:16:29.201968 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:16:29.203034 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:16:29.203152 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-429/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0512 21:16:29.342886 19 exec_util.go:111] Exec stderr: ""
  I0512 21:16:29.353760 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-429" for this suite. @ 05/12/25 21:16:29.359
• [4.263 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/12/25 21:16:29.368
  I0512 21:16:29.368537 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename watch @ 05/12/25 21:16:29.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:29.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:29.395
  STEP: getting a starting resourceVersion @ 05/12/25 21:16:29.4
  STEP: starting a background goroutine to produce watch events @ 05/12/25 21:16:29.403
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/12/25 21:16:29.404
  I0512 21:16:32.180306 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8662" for this suite. @ 05/12/25 21:16:32.246
• [2.912 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/12/25 21:16:32.283
  I0512 21:16:32.283687 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:16:32.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:32.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:32.313
  STEP: Creating secret with name secret-test-9677cae0-4874-4026-b226-7411c8752b5a @ 05/12/25 21:16:32.316
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:16:32.319
  STEP: Saw pod success @ 05/12/25 21:16:36.346
  I0512 21:16:36.351900 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-secrets-1ab1c90e-602a-4918-b234-522c7b3fce8a container secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:16:36.364
  I0512 21:16:36.384305 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2482" for this suite. @ 05/12/25 21:16:36.388
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/12/25 21:16:36.394
  I0512 21:16:36.394274 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:16:36.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:36.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:36.413
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/12/25 21:16:36.417
  STEP: Saw pod success @ 05/12/25 21:16:40.441
  I0512 21:16:40.448075 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-9d1cdea9-ea2c-48fc-afb9-6b859b780ec5 container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:16:40.46
  I0512 21:16:40.484365 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2902" for this suite. @ 05/12/25 21:16:40.493
• [4.109 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/12/25 21:16:40.503
  I0512 21:16:40.503981 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/12/25 21:16:40.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:40.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:40.524
  STEP: fetching the /apis discovery document @ 05/12/25 21:16:40.526
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/12/25 21:16:40.527
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/12/25 21:16:40.527
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/12/25 21:16:40.527
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/12/25 21:16:40.528
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/12/25 21:16:40.528
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/12/25 21:16:40.529
  I0512 21:16:40.529852 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1522" for this suite. @ 05/12/25 21:16:40.593
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/12/25 21:16:40.606
  I0512 21:16:40.606126 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 21:16:40.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:40.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:40.645
  STEP: Create set of pods @ 05/12/25 21:16:40.647
  I0512 21:16:40.659580 19 pods.go:871] created test-pod-1
  I0512 21:16:40.676000 19 pods.go:871] created test-pod-2
  I0512 21:16:40.686309 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/12/25 21:16:40.686
  STEP: waiting for all pods to be deleted @ 05/12/25 21:16:42.725
  I0512 21:16:42.733124 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0512 21:16:43.733046 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0512 21:16:44.734669 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9417" for this suite. @ 05/12/25 21:16:44.745
• [4.151 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/12/25 21:16:44.757
  I0512 21:16:44.757931 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename deployment @ 05/12/25 21:16:44.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:44.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:44.78
  I0512 21:16:44.784031 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0512 21:16:44.820258 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/12/25 21:16:44.82
  I0512 21:16:46.854499 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0512 21:16:46.866029 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0512 21:16:46.878654 19 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0512 21:16:48.894208 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0512 21:16:48.899146 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0512 21:16:48.913389 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7350",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4892d85-f97f-4e00-9e27-c3853c7dd5b0",
      ResourceVersion: (string) (len=4) "3776",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0512 21:16:48.926733 19 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7350",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc4b0a50-7cf4-4048-b4c3-449b0e37768f",
      ResourceVersion: (string) (len=4) "3766",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "f4892d85-f97f-4e00-9e27-c3853c7dd5b0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 34 38 39 32 64  38 35 2d 66 39 37 66 2d  |\"f4892d85-f97f-|
              00000120  34 65 30 30 2d 39 65 32  37 2d 63 33 38 35 33 63  |4e00-9e27-c3853c|
              00000130  37 64 64 35 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7dd5b0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:16:48.933178 19 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0512 21:16:48.933497 19 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7350",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41015987-93ef-496c-9870-7b02d3ddcf7b",
      ResourceVersion: (string) (len=4) "3775",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681404,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "f4892d85-f97f-4e00-9e27-c3853c7dd5b0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681404,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 34 38 39 32 64 38  |"uid\":\"f4892d8|
              000000b0  35 2d 66 39 37 66 2d 34  65 30 30 2d 39 65 32 37  |5-f97f-4e00-9e27|
              000000c0  2d 63 33 38 35 33 63 37  64 64 35 62 30 5c 22 7d  |-c3853c7dd5b0\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:16:48.939208 19 deployment.go:68] Pod "test-rolling-update-deployment-56bb5bb765-69xqp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-69xqp",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-7350",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21af814a-b2b1-4811-a86f-8f232c09170c",
      ResourceVersion: (string) (len=4) "3765",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "dc4b0a50-7cf4-4048-b4c3-449b0e37768f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 63  34 62 30 61 35 30 2d 37  |d\":\"dc4b0a50-7|
              00000090  63 66 34 2d 34 30 34 38  2d 62 34 63 33 2d 34 34  |cf4-4048-b4c3-44|
              000000a0  39 62 30 65 33 37 37 36  38 66 5c 22 7d 22 3a 7b  |9b0e37768f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 35 36  5c 22 7d 22 3a 7b 22 2e  |.42.1.56\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-262qf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-262qf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681406,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=10) "10.42.1.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681406,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882681407,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://488f312706e9d469bfaf5ea7f8a743ae48d3366dc33a8b401589c1e18b5d080f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-262qf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:16:48.944157 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7350" for this suite. @ 05/12/25 21:16:48.949
• [4.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/12/25 21:16:48.959
  I0512 21:16:48.959590 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:16:48.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:48.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:48.982
  I0512 21:16:49.019404 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3735" for this suite. @ 05/12/25 21:16:49.022
• [0.067 seconds]
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/12/25 21:16:49.026
  I0512 21:16:49.026109 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename svcaccounts @ 05/12/25 21:16:49.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:16:49.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:16:49.092
  I0512 21:16:49.108201 19 service_accounts.go:618] created pod
  STEP: Saw pod success @ 05/12/25 21:16:53.127
  I0512 21:17:23.128976 19 service_accounts.go:624] polling logs
  I0512 21:17:23.145050 19 service_accounts.go:634] Pod logs: 
  I0512 21:16:49.754017       1 log.go:245] OK: Got token
  I0512 21:16:49.754087       1 log.go:245] validating with in-cluster discovery
  I0512 21:16:49.754389       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0512 21:16:49.754626       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5148:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013ae0), NotBefore:(*jwt.NumericDate)(0xc000013bd0), IssuedAt:(*jwt.NumericDate)(0xc000013af0), ID:"21bc745d-4beb-404f-b831-6547dd38583a"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5148", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"aa0826e2-afb2-4ddd-8d1f-ba8599165ee0"}}}
  I0512 21:16:49.770463       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0512 21:16:49.777291       1 log.go:245] OK: Validated signature on JWT
  I0512 21:16:49.777376       1 log.go:245] OK: Got valid claims from token!
  I0512 21:16:49.777399       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5148:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002514e0), NotBefore:(*jwt.NumericDate)(0xc000251508), IssuedAt:(*jwt.NumericDate)(0xc0002514e8), ID:"21bc745d-4beb-404f-b831-6547dd38583a"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5148", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"aa0826e2-afb2-4ddd-8d1f-ba8599165ee0"}}}

  I0512 21:17:23.145171 19 service_accounts.go:638] completed pod
  I0512 21:17:23.155009 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5148" for this suite. @ 05/12/25 21:17:23.161
• [34.142 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/12/25 21:17:23.169
  I0512 21:17:23.169625 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/12/25 21:17:23.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:17:23.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:17:23.192
  STEP: Creating 50 configmaps @ 05/12/25 21:17:23.196
  STEP: Creating RC which spawns configmap-volume pods @ 05/12/25 21:17:23.429
  I0512 21:17:23.618303 19 resource.go:87] Pod name wrapped-volume-race-d3803e3d-aa40-4877-816d-3ef191fb393d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/12/25 21:17:23.618
  STEP: Creating RC which spawns configmap-volume pods @ 05/12/25 21:17:27.86
  I0512 21:17:27.877461 19 resource.go:87] Pod name wrapped-volume-race-ecc99e05-1ae8-414f-acae-615d3b0c6e3c: Found 1 pods out of 5
  I0512 21:17:32.885255 19 resource.go:87] Pod name wrapped-volume-race-ecc99e05-1ae8-414f-acae-615d3b0c6e3c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/12/25 21:17:32.885
  STEP: Creating RC which spawns configmap-volume pods @ 05/12/25 21:17:32.913
  I0512 21:17:32.932240 19 resource.go:87] Pod name wrapped-volume-race-810b651f-084d-47e5-b61e-f35c95676519: Found 1 pods out of 5
  I0512 21:17:37.942190 19 resource.go:87] Pod name wrapped-volume-race-810b651f-084d-47e5-b61e-f35c95676519: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/12/25 21:17:37.942
  STEP: deleting ReplicationController wrapped-volume-race-810b651f-084d-47e5-b61e-f35c95676519 in namespace emptydir-wrapper-591, will wait for the garbage collector to delete the pods @ 05/12/25 21:17:37.966
  I0512 21:17:38.030530 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-810b651f-084d-47e5-b61e-f35c95676519 took: 8.880358ms
  I0512 21:17:38.131822 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-810b651f-084d-47e5-b61e-f35c95676519 pods took: 101.28959ms
  STEP: deleting ReplicationController wrapped-volume-race-ecc99e05-1ae8-414f-acae-615d3b0c6e3c in namespace emptydir-wrapper-591, will wait for the garbage collector to delete the pods @ 05/12/25 21:17:39.333
  I0512 21:17:39.403869 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-ecc99e05-1ae8-414f-acae-615d3b0c6e3c took: 11.501043ms
  I0512 21:17:39.504602 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-ecc99e05-1ae8-414f-acae-615d3b0c6e3c pods took: 100.728931ms
  STEP: deleting ReplicationController wrapped-volume-race-d3803e3d-aa40-4877-816d-3ef191fb393d in namespace emptydir-wrapper-591, will wait for the garbage collector to delete the pods @ 05/12/25 21:17:40.304
  I0512 21:17:40.373434 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-d3803e3d-aa40-4877-816d-3ef191fb393d took: 13.245612ms
  I0512 21:17:40.474343 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-d3803e3d-aa40-4877-816d-3ef191fb393d pods took: 100.904676ms
  STEP: Cleaning up the configMaps @ 05/12/25 21:17:41.374
  I0512 21:17:41.694727 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-591" for this suite. @ 05/12/25 21:17:41.698
• [18.534 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/12/25 21:17:41.704
  I0512 21:17:41.704924 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:17:41.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:17:41.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:17:41.725
  STEP: Creating a pod to test downward api env vars @ 05/12/25 21:17:41.729
  STEP: Saw pod success @ 05/12/25 21:17:45.753
  I0512 21:17:45.759034 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downward-api-dcf30d4f-3121-4714-ac25-180216886273 container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 21:17:45.772
  I0512 21:17:45.794706 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6931" for this suite. @ 05/12/25 21:17:45.803
• [4.110 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/12/25 21:17:45.814
  I0512 21:17:45.814447 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:17:45.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:17:45.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:17:45.838
  STEP: Creating configMap with name projected-configmap-test-volume-6b2a9206-7793-4a55-b47b-4cacc9ff7635 @ 05/12/25 21:17:45.843
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:17:45.854
  STEP: Saw pod success @ 05/12/25 21:17:49.903
  I0512 21:17:49.910144 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-configmaps-7ef09706-91a6-4d1e-8f91-61c632d95fb2 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 21:17:49.923
  I0512 21:17:49.943795 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2276" for this suite. @ 05/12/25 21:17:49.951
• [4.144 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/12/25 21:17:49.958
  I0512 21:17:49.958702 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename var-expansion @ 05/12/25 21:17:49.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:17:49.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:17:49.977
  STEP: Creating a pod to test substitution in container's command @ 05/12/25 21:17:49.979
  STEP: Saw pod success @ 05/12/25 21:17:54.013
  I0512 21:17:54.019302 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod var-expansion-12b9386f-0cad-4c71-bc14-b469f73a24d1 container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 21:17:54.031
  I0512 21:17:54.053192 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8568" for this suite. @ 05/12/25 21:17:54.059
• [4.106 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/12/25 21:17:54.065
  I0512 21:17:54.065624 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename var-expansion @ 05/12/25 21:17:54.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:17:54.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:17:54.085
  STEP: Creating a pod to test substitution in volume subpath @ 05/12/25 21:17:54.088
  STEP: Saw pod success @ 05/12/25 21:17:58.122
  I0512 21:17:58.131390 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod var-expansion-42a575ec-9719-4959-ae84-7527575cc679 container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 21:17:58.145
  I0512 21:17:58.165697 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3763" for this suite. @ 05/12/25 21:17:58.17
• [4.110 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/12/25 21:17:58.177
  I0512 21:17:58.177960 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename watch @ 05/12/25 21:17:58.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:17:58.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:17:58.196
  STEP: creating a watch on configmaps @ 05/12/25 21:17:58.199
  STEP: creating a new configmap @ 05/12/25 21:17:58.2
  STEP: modifying the configmap once @ 05/12/25 21:17:58.204
  STEP: closing the watch once it receives two notifications @ 05/12/25 21:17:58.21
  I0512 21:17:58.210311 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5955  f5f523bc-8dab-4cfd-816c-edaba9a7e2bf 4448 0 2025-05-12 21:17:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-12 21:17:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:17:58.210433 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5955  f5f523bc-8dab-4cfd-816c-edaba9a7e2bf 4449 0 2025-05-12 21:17:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-12 21:17:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/12/25 21:17:58.21
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/12/25 21:17:58.217
  STEP: deleting the configmap @ 05/12/25 21:17:58.218
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/12/25 21:17:58.223
  I0512 21:17:58.223242 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5955  f5f523bc-8dab-4cfd-816c-edaba9a7e2bf 4450 0 2025-05-12 21:17:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-12 21:17:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:17:58.223414 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5955  f5f523bc-8dab-4cfd-816c-edaba9a7e2bf 4451 0 2025-05-12 21:17:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-05-12 21:17:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:17:58.223552 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5955" for this suite. @ 05/12/25 21:17:58.27
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 05/12/25 21:17:58.279
  I0512 21:17:58.279567 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pv @ 05/12/25 21:17:58.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:17:58.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:17:58.307
  STEP: Creating initial PV and PVC @ 05/12/25 21:17:58.31
  I0512 21:17:58.310795 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6874" @ 05/12/25 21:17:58.328
  STEP: Listing PVCs in namespace "pv-6874" @ 05/12/25 21:17:58.333
  STEP: Patching the PV "pv-6874-ggx9z" @ 05/12/25 21:17:58.335
  STEP: Patching the PVC "pvc-gkj78" @ 05/12/25 21:17:58.344
  STEP: Getting PV "pv-6874-ggx9z" @ 05/12/25 21:17:58.35
  STEP: Getting PVC "pvc-gkj78" @ 05/12/25 21:17:58.357
  STEP: Deleting PVC "pvc-gkj78" @ 05/12/25 21:17:58.361
  STEP: Confirm deletion of PVC "pvc-gkj78" @ 05/12/25 21:17:58.37
  STEP: Deleting PV "pv-6874-ggx9z" @ 05/12/25 21:18:00.385
  STEP: Confirm deletion of PV "pv-6874-ggx9z" @ 05/12/25 21:18:00.396
  STEP: Recreating another PV & PVC @ 05/12/25 21:18:02.413
  I0512 21:18:02.413800 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6874-nzxvx" @ 05/12/25 21:18:02.434
  STEP: Updating the PVC "pvc-r4pnd" @ 05/12/25 21:18:02.468
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-r4pnd=updated" @ 05/12/25 21:18:02.477
  STEP: Deleting PVC "pvc-r4pnd" via DeleteCollection @ 05/12/25 21:18:02.48
  STEP: Confirm deletion of PVC "pvc-r4pnd" @ 05/12/25 21:18:02.488
  STEP: Deleting PV "pv-6874-nzxvx" via DeleteCollection @ 05/12/25 21:18:04.498
  STEP: Confirm deletion of PV "pv-6874-nzxvx" @ 05/12/25 21:18:04.511
  I0512 21:18:06.526682 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0512 21:18:06.526773 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-r4pnd"
  I0512 21:18:06.530850 19 pv.go:193] Deleting PersistentVolume "pv-6874-nzxvx"
  I0512 21:18:06.535534 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6874" for this suite. @ 05/12/25 21:18:06.54
• [8.267 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/12/25 21:18:06.546
  I0512 21:18:06.546855 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename hostport @ 05/12/25 21:18:06.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:18:06.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:18:06.568
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/12/25 21:18:06.64
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.1.7 on the node which pod1 resides and expect scheduled @ 05/12/25 21:18:08.668
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.1.7 but use UDP protocol on the node which pod2 resides @ 05/12/25 21:18:10.699
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/12/25 21:18:24.797
  I0512 21:18:24.798265 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.1.7 http://127.0.0.1:54323/hostname] Namespace:hostport-8170 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:18:24.798496 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:18:24.799335 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:18:24.799668 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-8170/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.1.7+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.1.7, port: 54323 @ 05/12/25 21:18:24.921
  I0512 21:18:24.921434 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.1.7:54323/hostname] Namespace:hostport-8170 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:18:24.921465 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:18:24.922179 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:18:24.922264 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-8170/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.1.7%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.1.7, port: 54323 UDP @ 05/12/25 21:18:25.037
  I0512 21:18:25.037299 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.1.7 54323] Namespace:hostport-8170 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:18:25.037406 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:18:25.038358 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:18:25.038457 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-8170/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.1.7+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0512 21:18:30.145351 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-8170" for this suite. @ 05/12/25 21:18:30.158
• [23.630 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/12/25 21:18:30.177
  I0512 21:18:30.177323 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:18:30.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:18:30.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:18:30.202
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/12/25 21:18:30.205
  STEP: Saw pod success @ 05/12/25 21:18:34.245
  I0512 21:18:34.249769 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr pod pod-ab17d5a1-746f-4436-98d8-6f71552ab36e container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:18:34.264
  I0512 21:18:34.282849 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8144" for this suite. @ 05/12/25 21:18:34.287
• [4.116 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/12/25 21:18:34.294
  I0512 21:18:34.294249 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:18:34.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:18:34.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:18:34.322
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/12/25 21:18:34.325
  STEP: Saw pod success @ 05/12/25 21:18:38.362
  I0512 21:18:38.369352 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-454995b5-b736-4265-b70d-0c65f99e666b container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:18:38.381
  I0512 21:18:38.399890 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4731" for this suite. @ 05/12/25 21:18:38.405
• [4.116 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 05/12/25 21:18:38.411
  I0512 21:18:38.411220 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:18:38.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:18:38.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:18:38.429
  STEP: creating a replication controller @ 05/12/25 21:18:38.431
  I0512 21:18:38.431785 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 create -f -'
  I0512 21:18:38.615526 19 builder.go:146] stderr: ""
  I0512 21:18:38.615576 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/12/25 21:18:38.615
  I0512 21:18:38.615671 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0512 21:18:38.718178 19 builder.go:146] stderr: ""
  I0512 21:18:38.718218 19 builder.go:147] stdout: "update-demo-nautilus-w2c54 update-demo-nautilus-zndv8 "
  I0512 21:18:38.718263 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get pods update-demo-nautilus-w2c54 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:18:38.791370 19 builder.go:146] stderr: ""
  I0512 21:18:38.791426 19 builder.go:147] stdout: ""
  I0512 21:18:38.791439 19 kubectl.go:2502] update-demo-nautilus-w2c54 is created but not running
  I0512 21:18:43.791836 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0512 21:18:44.129408 19 builder.go:146] stderr: ""
  I0512 21:18:44.129465 19 builder.go:147] stdout: "update-demo-nautilus-w2c54 update-demo-nautilus-zndv8 "
  I0512 21:18:44.129572 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get pods update-demo-nautilus-w2c54 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:18:44.223215 19 builder.go:146] stderr: ""
  I0512 21:18:44.223258 19 builder.go:147] stdout: "true"
  I0512 21:18:44.223309 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get pods update-demo-nautilus-w2c54 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0512 21:18:44.326418 19 builder.go:146] stderr: ""
  I0512 21:18:44.326483 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0512 21:18:44.326497 19 kubectl.go:2393] validating pod update-demo-nautilus-w2c54
  I0512 21:18:44.337105 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0512 21:18:44.337198 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0512 21:18:44.337218 19 kubectl.go:2520] update-demo-nautilus-w2c54 is verified up and running
  I0512 21:18:44.337273 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get pods update-demo-nautilus-zndv8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:18:44.431066 19 builder.go:146] stderr: ""
  I0512 21:18:44.431115 19 builder.go:147] stdout: "true"
  I0512 21:18:44.431191 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get pods update-demo-nautilus-zndv8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0512 21:18:44.512939 19 builder.go:146] stderr: ""
  I0512 21:18:44.512996 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0512 21:18:44.513018 19 kubectl.go:2393] validating pod update-demo-nautilus-zndv8
  I0512 21:18:44.527218 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0512 21:18:44.527322 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0512 21:18:44.527348 19 kubectl.go:2520] update-demo-nautilus-zndv8 is verified up and running
  STEP: using delete to clean up resources @ 05/12/25 21:18:44.527
  I0512 21:18:44.527525 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 delete --grace-period=0 --force -f -'
  I0512 21:18:44.626235 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 21:18:44.626313 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0512 21:18:44.626407 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get rc,svc -l name=update-demo --no-headers'
  I0512 21:18:44.748439 19 builder.go:146] stderr: "No resources found in kubectl-6603 namespace.\n"
  I0512 21:18:44.748530 19 builder.go:147] stdout: ""
  I0512 21:18:44.748644 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6603 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0512 21:18:44.849550 19 builder.go:146] stderr: ""
  I0512 21:18:44.849611 19 builder.go:147] stdout: ""
  I0512 21:18:44.849780 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6603" for this suite. @ 05/12/25 21:18:44.857
• [6.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/12/25 21:18:44.871
  I0512 21:18:44.871657 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/12/25 21:18:44.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:18:44.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:18:44.897
  STEP: mirroring a new custom Endpoint @ 05/12/25 21:18:44.908
  I0512 21:18:44.927557 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/12/25 21:18:46.936
  STEP: mirroring deletion of a custom Endpoint @ 05/12/25 21:18:46.954
  I0512 21:18:46.970552 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9210" for this suite. @ 05/12/25 21:18:46.975
• [2.112 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/12/25 21:18:46.983
  I0512 21:18:46.983790 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename gc @ 05/12/25 21:18:46.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:18:47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:18:47.004
  STEP: create the rc @ 05/12/25 21:18:47.007
  W0512 21:18:47.011411      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/12/25 21:18:52.02
  STEP: wait for all pods to be garbage collected @ 05/12/25 21:18:52.027
  STEP: Gathering metrics @ 05/12/25 21:18:57.04
  W0512 21:18:57.048006      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0512 21:18:57.048076 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0512 21:18:57.048804 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9227" for this suite. @ 05/12/25 21:18:57.055
• [10.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 05/12/25 21:18:57.067
  I0512 21:18:57.067083 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:18:57.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:18:57.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:18:57.095
  STEP: Setting up server cert @ 05/12/25 21:18:57.191
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:18:57.701
  STEP: Deploying the webhook pod @ 05/12/25 21:18:57.716
  STEP: Wait for the deployment to be ready @ 05/12/25 21:18:57.731
  I0512 21:18:57.746862 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:18:59.769
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:18:59.778
  I0512 21:19:00.778614 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/12/25 21:19:00.85
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/12/25 21:19:00.905
  STEP: Deleting the collection of validation webhooks @ 05/12/25 21:19:00.99
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/12/25 21:19:01.026
  I0512 21:19:01.097913 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6049" for this suite. @ 05/12/25 21:19:01.103
  STEP: Destroying namespace "webhook-markers-4063" for this suite. @ 05/12/25 21:19:01.118
• [4.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 05/12/25 21:19:01.123
  I0512 21:19:01.123163 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename security-context @ 05/12/25 21:19:01.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:19:01.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:19:01.139
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/12/25 21:19:01.142
  STEP: Saw pod success @ 05/12/25 21:19:05.167
  I0512 21:19:05.174150 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod security-context-932287f9-162a-49bb-b72b-6c9a337a554b container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:19:05.185
  I0512 21:19:05.207518 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-78" for this suite. @ 05/12/25 21:19:05.212
• [4.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 05/12/25 21:19:05.218
  I0512 21:19:05.218817 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/12/25 21:19:05.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:19:05.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:19:05.236
  I0512 21:19:05.238918 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0512 21:20:05.239687 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0512 21:20:05.244819 19 taints.go:144] Starting informer...
  STEP: Starting pods... @ 05/12/25 21:20:05.244
  I0512 21:20:05.475695 19 taints.go:463] Pod1 is running on k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt. Tainting Node
  I0512 21:20:07.715894 19 taints.go:471] Pod2 is running on k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/12/25 21:20:07.716
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/12/25 21:20:07.738
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/12/25 21:20:07.759
  I0512 21:20:13.563398 19 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0512 21:20:33.617123 19 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/12/25 21:20:33.632
  I0512 21:20:33.642528 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5937" for this suite. @ 05/12/25 21:20:33.646
• [88.452 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/12/25 21:20:33.671
  I0512 21:20:33.671429 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename subpath @ 05/12/25 21:20:33.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:20:33.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:20:33.77
  STEP: Setting up data @ 05/12/25 21:20:33.773
  STEP: Creating pod pod-subpath-test-downwardapi-gzmx @ 05/12/25 21:20:33.78
  STEP: Creating a pod to test atomic-volume-subpath @ 05/12/25 21:20:33.78
  STEP: Saw pod success @ 05/12/25 21:20:57.876
  I0512 21:20:57.882389 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-subpath-test-downwardapi-gzmx container test-container-subpath-downwardapi-gzmx: <nil>
  STEP: delete the pod @ 05/12/25 21:20:57.903
  STEP: Deleting pod pod-subpath-test-downwardapi-gzmx @ 05/12/25 21:20:57.922
  I0512 21:20:57.922901 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-gzmx" in namespace "subpath-9274"
  I0512 21:20:57.926886 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9274" for this suite. @ 05/12/25 21:20:57.931
• [24.265 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 05/12/25 21:20:57.937
  I0512 21:20:57.938028 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename taint-single-pod @ 05/12/25 21:20:57.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:20:57.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:20:57.957
  I0512 21:20:57.960682 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0512 21:21:57.961183 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0512 21:21:57.969933 19 taints.go:144] Starting informer...
  STEP: Starting pod... @ 05/12/25 21:21:57.969
  I0512 21:21:58.200685 19 taints.go:294] Pod is running on k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/12/25 21:21:58.2
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/12/25 21:21:58.223
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/12/25 21:21:58.243
  I0512 21:21:58.244305 19 taints.go:313] Pod wasn't evicted. Proceeding
  I0512 21:21:58.244696 19 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/12/25 21:21:58.305
  STEP: Waiting some time to make sure that toleration time passed. @ 05/12/25 21:21:58.335
  I0512 21:23:13.337948 19 taints.go:329] Pod wasn't evicted. Test successful
  I0512 21:23:13.338771 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-9502" for this suite. @ 05/12/25 21:23:13.346
• [135.421 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/12/25 21:23:13.359
  I0512 21:23:13.360095 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:23:13.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:23:13.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:23:13.392
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:23:13.396
  STEP: Saw pod success @ 05/12/25 21:23:15.418
  I0512 21:23:15.427483 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-551d3cfe-76d3-4b09-a335-11e271cf76de container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:23:15.453
  I0512 21:23:15.472161 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5151" for this suite. @ 05/12/25 21:23:15.478
• [2.126 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/12/25 21:23:15.486
  I0512 21:23:15.486957 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename chunking @ 05/12/25 21:23:15.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:23:15.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:23:15.511
  STEP: creating a large number of resources @ 05/12/25 21:23:15.514
  STEP: retrieving those results in paged fashion several times @ 05/12/25 21:23:33.195
  I0512 21:23:33.246321 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0512 21:23:33.299616 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0512 21:23:33.352801 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0512 21:23:33.398815 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0512 21:23:33.451568 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0512 21:23:33.498819 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0512 21:23:33.550072 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0512 21:23:33.598653 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0512 21:23:33.648891 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0512 21:23:33.695523 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0512 21:23:33.748888 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0512 21:23:33.796831 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0512 21:23:33.844542 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0512 21:23:33.897774 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0512 21:23:33.949652 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0512 21:23:33.997644 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0512 21:23:34.048384 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0512 21:23:34.097896 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0512 21:23:34.148971 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0512 21:23:34.198722 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0512 21:23:34.248631 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0512 21:23:34.297224 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0512 21:23:34.348260 19 chunking.go:98] Retrieved 17/17 results with rv 5800 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0512 21:23:34.401849 19 chunking.go:98] Retrieved 9/17 results with rv 5800 and continue 
  I0512 21:23:34.443065 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0512 21:23:34.500233 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0512 21:23:34.550251 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0512 21:23:34.602426 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0512 21:23:34.652862 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0512 21:23:34.702329 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0512 21:23:34.759651 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0512 21:23:34.798486 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0512 21:23:34.853158 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0512 21:23:34.899066 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0512 21:23:34.947024 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0512 21:23:34.997075 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0512 21:23:35.048195 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0512 21:23:35.095721 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0512 21:23:35.145216 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0512 21:23:35.200580 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0512 21:23:35.254509 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0512 21:23:35.299553 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0512 21:23:35.349698 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0512 21:23:35.404991 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0512 21:23:35.449867 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0512 21:23:35.501604 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0512 21:23:35.549837 19 chunking.go:98] Retrieved 17/17 results with rv 5801 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0512 21:23:35.596761 19 chunking.go:98] Retrieved 9/17 results with rv 5801 and continue 
  I0512 21:23:35.646564 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0512 21:23:35.704583 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0512 21:23:35.750258 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0512 21:23:35.800649 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0512 21:23:35.845095 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0512 21:23:35.900639 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0512 21:23:35.952850 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0512 21:23:35.996715 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0512 21:23:36.053658 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0512 21:23:36.100514 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0512 21:23:36.151097 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0512 21:23:36.201866 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0512 21:23:36.249170 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0512 21:23:36.302545 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0512 21:23:36.351413 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0512 21:23:36.404067 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0512 21:23:36.450618 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0512 21:23:36.500045 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0512 21:23:36.546623 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0512 21:23:36.597680 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0512 21:23:36.653119 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0512 21:23:36.695338 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0512 21:23:36.744254 19 chunking.go:98] Retrieved 17/17 results with rv 5802 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTgwMiwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0512 21:23:36.793574 19 chunking.go:98] Retrieved 9/17 results with rv 5802 and continue 
  STEP: retrieving those results all at once @ 05/12/25 21:23:36.793
  I0512 21:23:36.855812 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7351" for this suite. @ 05/12/25 21:23:36.898
• [21.463 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 05/12/25 21:23:36.952
  I0512 21:23:36.952499 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename statefulset @ 05/12/25 21:23:36.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:23:36.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:23:36.979
  STEP: Creating service test in namespace statefulset-724 @ 05/12/25 21:23:36.99
  STEP: Creating a new StatefulSet @ 05/12/25 21:23:37.001
  I0512 21:23:37.027018 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0512 21:23:47.027764 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0512 21:23:47.027808 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0512 21:23:47.027817 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/12/25 21:23:47.045
  I0512 21:23:47.055937 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 05/12/25 21:23:47.056
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/12/25 21:23:57.071
  STEP: Performing a canary update @ 05/12/25 21:23:57.071
  I0512 21:23:57.085755 19 statefulset.go:2507] Updating stateful set ss2
  I0512 21:23:57.107368 19 wait.go:74] Waiting for Pod statefulset-724/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/12/25 21:24:07.099
  I0512 21:24:07.157245 19 wait.go:40] Found 2 stateful pods, waiting for 3
  I0512 21:24:17.151505 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0512 21:24:17.151589 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0512 21:24:17.151615 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/12/25 21:24:17.162
  I0512 21:24:17.175856 19 statefulset.go:2507] Updating stateful set ss2
  I0512 21:24:17.213397 19 wait.go:74] Waiting for Pod statefulset-724/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0512 21:24:27.200323 19 statefulset.go:2507] Updating stateful set ss2
  I0512 21:24:27.244022 19 wait.go:56] Waiting for StatefulSet statefulset-724/ss2 to complete update
  I0512 21:24:27.244221 19 wait.go:63] Waiting for Pod statefulset-724/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0512 21:24:37.212980 19 statefulset.go:138] Deleting all statefulset in ns statefulset-724
  I0512 21:24:37.218391 19 rest.go:150] Scaling statefulset ss2 to 0
  I0512 21:24:47.253580 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0512 21:24:47.264484 19 rest.go:88] Deleting statefulset ss2
  I0512 21:24:47.284826 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-724" for this suite. @ 05/12/25 21:24:47.288
• [70.341 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 05/12/25 21:24:47.293
  I0512 21:24:47.293221 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:24:47.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:24:47.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:24:47.311
  I0512 21:24:47.314336 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-8234 version'
  I0512 21:24:47.402540 19 builder.go:146] stderr: ""
  I0512 21:24:47.402598 19 builder.go:147] stdout: "Client Version: v1.31.6\nKustomize Version: v5.4.2\nServer Version: v1.31.6+k3s1\n"
  I0512 21:24:47.402991 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8234" for this suite. @ 05/12/25 21:24:47.409
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/12/25 21:24:47.419
  I0512 21:24:47.419177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename deployment @ 05/12/25 21:24:47.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:24:47.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:24:47.439
  STEP: creating a Deployment @ 05/12/25 21:24:47.451
  I0512 21:24:47.451509 19 deployment.go:507] Creating simple deployment test-deployment-lbmgw
  I0512 21:24:47.488535 19 deployment.go:223] deployment "test-deployment-lbmgw" doesn't have the required revision set
  STEP: Getting /status @ 05/12/25 21:24:49.516
  I0512 21:24:49.522846 19 deployment.go:532] Deployment test-deployment-lbmgw has Conditions: [{Available True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbmgw-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/12/25 21:24:49.522
  I0512 21:24:49.535165 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 24, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 24, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 24, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 24, 47, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-lbmgw-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/12/25 21:24:49.535
  I0512 21:24:49.537991 19 deployment.go:579] Observed &Deployment event: ADDED
  I0512 21:24:49.538144 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lbmgw-f4dbbbf74"}
  I0512 21:24:49.538303 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0512 21:24:49.538333 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lbmgw-f4dbbbf74"}
  I0512 21:24:49.538348 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0512 21:24:49.538464 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0512 21:24:49.538504 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0512 21:24:49.538526 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-lbmgw-f4dbbbf74" is progressing.}
  I0512 21:24:49.538638 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0512 21:24:49.538941 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0512 21:24:49.538994 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbmgw-f4dbbbf74" has successfully progressed.}
  I0512 21:24:49.539315 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0512 21:24:49.539417 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0512 21:24:49.539452 19 deployment.go:575] Observed Deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbmgw-f4dbbbf74" has successfully progressed.}
  I0512 21:24:49.539484 19 deployment.go:572] Found Deployment test-deployment-lbmgw in namespace deployment-4131 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0512 21:24:49.539511 19 deployment.go:583] Deployment test-deployment-lbmgw has an updated status
  STEP: patching the Statefulset Status @ 05/12/25 21:24:49.539
  I0512 21:24:49.539570 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0512 21:24:49.546192 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/12/25 21:24:49.546
  I0512 21:24:49.549928 19 deployment.go:616] Observed &Deployment event: ADDED
  I0512 21:24:49.549993 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lbmgw-f4dbbbf74"}
  I0512 21:24:49.550601 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0512 21:24:49.550656 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lbmgw-f4dbbbf74"}
  I0512 21:24:49.550673 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0512 21:24:49.550826 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0512 21:24:49.550853 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0512 21:24:49.550883 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:47 +0000 UTC 2025-05-12 21:24:47 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-lbmgw-f4dbbbf74" is progressing.}
  I0512 21:24:49.551027 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0512 21:24:49.551355 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0512 21:24:49.551412 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbmgw-f4dbbbf74" has successfully progressed.}
  I0512 21:24:49.552048 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0512 21:24:49.552266 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0512 21:24:49.552453 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-05-12 21:24:48 +0000 UTC 2025-05-12 21:24:47 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbmgw-f4dbbbf74" has successfully progressed.}
  I0512 21:24:49.552509 19 deployment.go:612] Observed deployment test-deployment-lbmgw in namespace deployment-4131 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0512 21:24:49.552877 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0512 21:24:49.552931 19 deployment.go:609] Found deployment test-deployment-lbmgw in namespace deployment-4131 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0512 21:24:49.553029 19 deployment.go:620] Deployment test-deployment-lbmgw has a patched status
  I0512 21:24:49.556748 19 deployment.go:633] Deployment "test-deployment-lbmgw":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-lbmgw",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4131",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddaf81b0-795f-43c2-9bd2-b5f5f93f2652",
      ResourceVersion: (string) (len=4) "6552",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681887,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681887,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681889,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681889,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681889,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681889,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-lbmgw-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0512 21:24:49.604630 19 deployment.go:40] New ReplicaSet "test-deployment-lbmgw-f4dbbbf74" of Deployment "test-deployment-lbmgw":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-lbmgw-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4131",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5eb46cd2-f7c1-40c1-9cca-481f1f692c9d",
      ResourceVersion: (string) (len=4) "6547",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681887,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-lbmgw",
          UID: (types.UID) (len=36) "ddaf81b0-795f-43c2-9bd2-b5f5f93f2652",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681887,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 64 61  |k:{\"uid\":\"dda|
              00000120  66 38 31 62 30 2d 37 39  35 66 2d 34 33 63 32 2d  |f81b0-795f-43c2-|
              00000130  39 62 64 32 2d 62 35 66  35 66 39 33 66 32 36 35  |9bd2-b5f5f93f265|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681888,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:24:49.621536 19 deployment.go:68] Pod "test-deployment-lbmgw-f4dbbbf74-289kb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-lbmgw-f4dbbbf74-289kb",
      GenerateName: (string) (len=32) "test-deployment-lbmgw-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-4131",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19cda767-dce9-46cc-a186-33e4dd28d6da",
      ResourceVersion: (string) (len=4) "6546",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681887,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-lbmgw-f4dbbbf74",
          UID: (types.UID) (len=36) "5eb46cd2-f7c1-40c1-9cca-481f1f692c9d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681887,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 35 65 62 34 36 63 64  32 2d 66 37 63 31 2d 34  |"5eb46cd2-f7c1-4|
              000000a0  30 63 31 2d 39 63 63 61  2d 34 38 31 66 31 66 36  |0c1-9cca-481f1f6|
              000000b0  39 32 63 39 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |92c9d\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681888,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 38 31  5c 22 7d 22 3a 7b 22 2e  |.42.1.81\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4cbql",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4cbql",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681888,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681887,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681888,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681888,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882681887,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=10) "10.42.1.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882681887,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882681888,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6b9d66f87d6a59439ea8a2279fc25b0fb63a53a6d2d873056ebb8ac6d88efdf9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4cbql",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:24:49.631410 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4131" for this suite. @ 05/12/25 21:24:49.636
• [2.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/12/25 21:24:49.643
  I0512 21:24:49.643886 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename runtimeclass @ 05/12/25 21:24:49.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:24:49.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:24:49.666
  STEP: getting /apis @ 05/12/25 21:24:49.67
  STEP: getting /apis/node.k8s.io @ 05/12/25 21:24:49.674
  STEP: getting /apis/node.k8s.io/v1 @ 05/12/25 21:24:49.675
  STEP: creating @ 05/12/25 21:24:49.676
  STEP: watching @ 05/12/25 21:24:49.687
  I0512 21:24:49.687634 19 runtimeclass.go:275] starting watch
  STEP: getting @ 05/12/25 21:24:49.691
  STEP: listing @ 05/12/25 21:24:49.694
  STEP: patching @ 05/12/25 21:24:49.696
  STEP: updating @ 05/12/25 21:24:49.7
  I0512 21:24:49.703245 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 05/12/25 21:24:49.703
  STEP: deleting a collection @ 05/12/25 21:24:49.711
  I0512 21:24:49.721527 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8872" for this suite. @ 05/12/25 21:24:49.737
• [0.117 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 05/12/25 21:24:49.762
  I0512 21:24:49.762181 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:24:49.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:24:49.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:24:49.782
  STEP: Setting up server cert @ 05/12/25 21:24:49.884
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:24:50.379
  STEP: Deploying the webhook pod @ 05/12/25 21:24:50.394
  STEP: Wait for the deployment to be ready @ 05/12/25 21:24:50.408
  I0512 21:24:50.416575 19 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/12/25 21:24:52.447
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:24:52.475
  I0512 21:24:53.475710 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/12/25 21:24:53.493
  STEP: verifying the validating webhook match conditions @ 05/12/25 21:24:53.519
  STEP: updating the validating webhook match conditions @ 05/12/25 21:24:53.538
  STEP: verifying the validating webhook match conditions @ 05/12/25 21:24:53.546
  I0512 21:24:53.596762 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5547" for this suite. @ 05/12/25 21:24:53.605
  STEP: Destroying namespace "webhook-markers-2107" for this suite. @ 05/12/25 21:24:53.61
• [3.853 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/12/25 21:24:53.614
  I0512 21:24:53.614187 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename endpointslice @ 05/12/25 21:24:53.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:24:53.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:24:53.632
  STEP: getting /apis @ 05/12/25 21:24:53.637
  STEP: getting /apis/discovery.k8s.io @ 05/12/25 21:24:53.646
  STEP: getting /apis/discovery.k8s.iov1 @ 05/12/25 21:24:53.653
  STEP: creating @ 05/12/25 21:24:53.654
  STEP: getting @ 05/12/25 21:24:53.67
  STEP: listing @ 05/12/25 21:24:53.673
  STEP: watching @ 05/12/25 21:24:53.676
  I0512 21:24:53.676475 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/12/25 21:24:53.677
  STEP: cluster-wide watching @ 05/12/25 21:24:53.68
  I0512 21:24:53.680814 19 endpointslice.go:459] starting watch
  STEP: patching @ 05/12/25 21:24:53.682
  STEP: updating @ 05/12/25 21:24:53.687
  I0512 21:24:53.707018 19 endpointslice.go:482] waiting for watch events with expected annotations
  I0512 21:24:53.707094 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/12/25 21:24:53.707
  STEP: deleting a collection @ 05/12/25 21:24:53.72
  I0512 21:24:53.744511 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3523" for this suite. @ 05/12/25 21:24:53.749
• [0.147 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 05/12/25 21:24:53.762
  I0512 21:24:53.762398 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 21:24:53.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:24:53.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:24:53.788
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/12/25 21:24:53.791
  I0512 21:24:53.792792 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:24:55.076420 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:25:01.003175 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2314" for this suite. @ 05/12/25 21:25:01.02
• [7.267 seconds]
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 05/12/25 21:25:01.03
  I0512 21:25:01.030618 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:25:01.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:01.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:01.06
  STEP: creating service nodeport-test with type=NodePort in namespace services-3544 @ 05/12/25 21:25:01.065
  STEP: creating replication controller nodeport-test in namespace services-3544 @ 05/12/25 21:25:01.078
  I0512 21:25:01.090436      19 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-3544, replica count: 2
  I0512 21:25:04.142204      19 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 21:25:04.142349 19 resource.go:361] Creating new exec pod
  I0512 21:25:07.171425 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3544 exec execpodjx45j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0512 21:25:07.433117 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0512 21:25:07.433175 19 builder.go:147] stdout: "nodeport-test-t42ws"
  I0512 21:25:07.433266 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3544 exec execpodjx45j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.94.246 80'
  I0512 21:25:07.628725 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.94.246 80\nConnection to 10.43.94.246 80 port [tcp/http] succeeded!\n"
  I0512 21:25:07.628790 19 builder.go:147] stdout: "nodeport-test-t42ws"
  I0512 21:25:07.628886 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3544 exec execpodjx45j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.8 31766'
  I0512 21:25:07.839253 19 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.8 31766\n+ echo hostName\nConnection to 192.168.1.8 31766 port [tcp/*] succeeded!\n"
  I0512 21:25:07.839334 19 builder.go:147] stdout: ""
  I0512 21:25:08.629435 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3544 exec execpodjx45j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.8 31766'
  I0512 21:25:08.833941 19 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.8 31766\n+ echo hostName\nConnection to 192.168.1.8 31766 port [tcp/*] succeeded!\n"
  I0512 21:25:08.834023 19 builder.go:147] stdout: ""
  I0512 21:25:09.630052 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3544 exec execpodjx45j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.8 31766'
  I0512 21:25:09.911469 19 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.8 31766\n+ echo hostName\nConnection to 192.168.1.8 31766 port [tcp/*] succeeded!\n"
  I0512 21:25:09.911530 19 builder.go:147] stdout: ""
  I0512 21:25:10.629144 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3544 exec execpodjx45j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.8 31766'
  I0512 21:25:10.837468 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.8 31766\nConnection to 192.168.1.8 31766 port [tcp/*] succeeded!\n"
  I0512 21:25:10.837530 19 builder.go:147] stdout: "nodeport-test-s4q2v"
  I0512 21:25:10.837617 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3544 exec execpodjx45j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.7 31766'
  I0512 21:25:11.024173 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.7 31766\nConnection to 192.168.1.7 31766 port [tcp/*] succeeded!\n"
  I0512 21:25:11.024232 19 builder.go:147] stdout: "nodeport-test-s4q2v"
  I0512 21:25:11.024390 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3544" for this suite. @ 05/12/25 21:25:11.031
• [10.008 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 05/12/25 21:25:11.038
  I0512 21:25:11.038969 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:25:11.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:11.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:11.064
  STEP: Setting up server cert @ 05/12/25 21:25:11.164
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:25:11.438
  STEP: Deploying the webhook pod @ 05/12/25 21:25:11.455
  STEP: Wait for the deployment to be ready @ 05/12/25 21:25:11.469
  I0512 21:25:11.496635 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:25:13.516
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:25:13.527
  I0512 21:25:14.527344 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/12/25 21:25:14.543
  I0512 21:25:14.601665 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1210" for this suite. @ 05/12/25 21:25:14.614
  STEP: Destroying namespace "webhook-markers-9410" for this suite. @ 05/12/25 21:25:14.63
• [3.599 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/12/25 21:25:14.637
  I0512 21:25:14.637936 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename gc @ 05/12/25 21:25:14.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:14.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:14.672
  STEP: create the deployment @ 05/12/25 21:25:14.678
  W0512 21:25:14.683390      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/12/25 21:25:14.683
  STEP: delete the deployment @ 05/12/25 21:25:14.798
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/12/25 21:25:14.824
  STEP: Gathering metrics @ 05/12/25 21:25:15.354
  W0512 21:25:15.363637      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0512 21:25:15.363862 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0512 21:25:15.365865 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2600" for this suite. @ 05/12/25 21:25:15.372
• [0.746 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 05/12/25 21:25:15.384
  I0512 21:25:15.384106 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename dns @ 05/12/25 21:25:15.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:15.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:15.411
  STEP: Creating a test headless service @ 05/12/25 21:25:15.415
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2516.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2516.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/12/25 21:25:15.42
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2516.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2516.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/12/25 21:25:15.42
  STEP: creating a pod to probe DNS @ 05/12/25 21:25:15.42
  STEP: submitting the pod to kubernetes @ 05/12/25 21:25:15.42
  STEP: retrieving the pod @ 05/12/25 21:25:17.455
  STEP: looking for the results for each expected name from probers @ 05/12/25 21:25:17.46
  I0512 21:25:17.483964 19 dns_common.go:528] DNS probes using dns-2516/dns-test-3e72d0b4-2f4a-4a56-91a7-5d9f3e5d9cb6 succeeded

  STEP: deleting the pod @ 05/12/25 21:25:17.484
  STEP: deleting the test headless service @ 05/12/25 21:25:17.504
  I0512 21:25:17.538591 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2516" for this suite. @ 05/12/25 21:25:17.541
• [2.163 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/12/25 21:25:17.547
  I0512 21:25:17.547265 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 21:25:17.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:17.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:17.564
  STEP: Creating configMap with name configmap-test-volume-bb5cbc3d-f222-4a08-ad6a-5ff17b0e75c6 @ 05/12/25 21:25:17.567
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:25:17.571
  STEP: Saw pod success @ 05/12/25 21:25:21.603
  I0512 21:25:21.613260 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-c9e34e5d-8094-421e-9ab3-3deef6940418 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 21:25:21.63
  I0512 21:25:21.652969 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8447" for this suite. @ 05/12/25 21:25:21.657
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/12/25 21:25:21.664
  I0512 21:25:21.664267 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:25:21.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:21.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:21.685
  STEP: Creating the pod @ 05/12/25 21:25:21.692
  I0512 21:25:24.277289 19 pod_client.go:173] Successfully updated pod "annotationupdate610b37a8-332d-425c-9ca3-7a3f3232eee0"
  I0512 21:25:28.319430 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2314" for this suite. @ 05/12/25 21:25:28.325
• [6.669 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 05/12/25 21:25:28.333
  I0512 21:25:28.333751 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:25:28.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:28.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:28.357
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8790 @ 05/12/25 21:25:28.361
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/12/25 21:25:28.369
  STEP: creating service externalsvc in namespace services-8790 @ 05/12/25 21:25:28.369
  STEP: creating replication controller externalsvc in namespace services-8790 @ 05/12/25 21:25:28.383
  I0512 21:25:28.396375      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-8790, replica count: 2
  I0512 21:25:31.447694      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/12/25 21:25:31.455
  I0512 21:25:31.476807 19 resource.go:361] Creating new exec pod
  I0512 21:25:33.503293 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-8790 exec execpod56nv4 -- /bin/sh -x -c nslookup clusterip-service.services-8790.svc.cluster.local'
  I0512 21:25:33.860830 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-8790.svc.cluster.local\n"
  I0512 21:25:33.860883 19 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-8790.svc.cluster.local\tcanonical name = externalsvc.services-8790.svc.cluster.local.\nName:\texternalsvc.services-8790.svc.cluster.local\nAddress: 10.43.51.192\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8790, will wait for the garbage collector to delete the pods @ 05/12/25 21:25:33.861
  I0512 21:25:33.932887 19 resources.go:139] Deleting ReplicationController externalsvc took: 13.568671ms
  I0512 21:25:34.033656 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.767553ms
  I0512 21:25:36.664038 19 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0512 21:25:36.678222 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8790" for this suite. @ 05/12/25 21:25:36.687
• [8.361 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/12/25 21:25:36.696
  I0512 21:25:36.696617 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename prestop @ 05/12/25 21:25:36.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:36.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:36.719
  STEP: Creating server pod server in namespace prestop-7753 @ 05/12/25 21:25:36.722
  STEP: Waiting for pods to come up. @ 05/12/25 21:25:36.729
  STEP: Creating tester pod tester in namespace prestop-7753 @ 05/12/25 21:25:38.747
  STEP: Deleting pre-stop pod @ 05/12/25 21:25:40.782
  I0512 21:25:45.800956 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/12/25 21:25:45.803
  I0512 21:25:45.820649 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7753" for this suite. @ 05/12/25 21:25:45.833
• [9.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/12/25 21:25:45.842
  I0512 21:25:45.842935 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename endpointslice @ 05/12/25 21:25:45.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:45.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:45.861
  I0512 21:25:45.902059 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5573" for this suite. @ 05/12/25 21:25:45.934
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/12/25 21:25:45.944
  I0512 21:25:45.944618 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:25:45.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:45.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:45.968
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:25:45.972
  STEP: Saw pod success @ 05/12/25 21:25:47.998
  I0512 21:25:48.004912 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-5b59f64c-94f9-4127-87d7-7acc9ec071ed container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:25:48.017
  I0512 21:25:48.039391 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3914" for this suite. @ 05/12/25 21:25:48.043
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/12/25 21:25:48.049
  I0512 21:25:48.049601 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename proxy @ 05/12/25 21:25:48.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:48.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:48.068
  STEP: starting an echo server on multiple ports @ 05/12/25 21:25:48.081
  STEP: creating replication controller proxy-service-bk58c in namespace proxy-1538 @ 05/12/25 21:25:48.081
  I0512 21:25:48.093785      19 runners.go:193] Created replication controller with name: proxy-service-bk58c, namespace: proxy-1538, replica count: 1
  I0512 21:25:49.145012      19 runners.go:193] proxy-service-bk58c Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 21:25:50.146236      19 runners.go:193] proxy-service-bk58c Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 21:25:50.153693 19 proxy.go:230] setup took 2.082654309s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/12/25 21:25:50.153
  I0512 21:25:50.221591 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 67.683707ms)
  I0512 21:25:50.222265 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 68.098959ms)
  I0512 21:25:50.222298 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 68.446749ms)
  I0512 21:25:50.222321 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 67.713857ms)
  I0512 21:25:50.222343 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 68.031645ms)
  I0512 21:25:50.222376 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 67.956042ms)
  I0512 21:25:50.222392 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 68.01046ms)
  I0512 21:25:50.222417 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 68.30852ms)
  I0512 21:25:50.222442 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 68.403296ms)
  I0512 21:25:50.232056 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 77.487453ms)
  I0512 21:25:50.232072 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 77.558222ms)
  I0512 21:25:50.232387 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 78.178204ms)
  I0512 21:25:50.232518 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 78.063241ms)
  I0512 21:25:50.232537 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 78.056423ms)
  I0512 21:25:50.232699 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 78.336945ms)
  I0512 21:25:50.232718 19 proxy.go:558] (0) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 78.456403ms)
  I0512 21:25:50.260252 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 26.679724ms)
  I0512 21:25:50.264244 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 30.539003ms)
  I0512 21:25:50.264457 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 30.057329ms)
  I0512 21:25:50.265018 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 30.740847ms)
  I0512 21:25:50.265230 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 31.095867ms)
  I0512 21:25:50.265669 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 32.106899ms)
  I0512 21:25:50.265063 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 30.840789ms)
  I0512 21:25:50.266015 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 31.465314ms)
  I0512 21:25:50.266169 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 32.405215ms)
  I0512 21:25:50.266350 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 31.903195ms)
  I0512 21:25:50.271486 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 36.877957ms)
  I0512 21:25:50.273224 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 39.085116ms)
  I0512 21:25:50.273862 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 40.014877ms)
  I0512 21:25:50.275082 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 41.144576ms)
  I0512 21:25:50.275023 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 40.695312ms)
  I0512 21:25:50.275805 19 proxy.go:558] (1) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 41.306996ms)
  I0512 21:25:50.306329 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 29.254076ms)
  I0512 21:25:50.306479 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 29.855301ms)
  I0512 21:25:50.306634 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 29.703153ms)
  I0512 21:25:50.306911 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 29.926714ms)
  I0512 21:25:50.307001 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 30.274501ms)
  I0512 21:25:50.307075 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 29.963563ms)
  I0512 21:25:50.310185 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 33.51669ms)
  I0512 21:25:50.310708 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 34.705869ms)
  I0512 21:25:50.311086 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 33.886949ms)
  I0512 21:25:50.311731 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 34.925982ms)
  I0512 21:25:50.311778 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 35.394682ms)
  I0512 21:25:50.312363 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 35.516784ms)
  I0512 21:25:50.313609 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 36.581173ms)
  I0512 21:25:50.313617 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 36.72307ms)
  I0512 21:25:50.313698 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 37.218714ms)
  I0512 21:25:50.316523 19 proxy.go:558] (2) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 39.359857ms)
  I0512 21:25:50.349275 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 32.021418ms)
  I0512 21:25:50.349957 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 31.9128ms)
  I0512 21:25:50.349341 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 30.594725ms)
  I0512 21:25:50.350743 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 33.184794ms)
  I0512 21:25:50.350989 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 33.630923ms)
  I0512 21:25:50.351215 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 33.532369ms)
  I0512 21:25:50.351560 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 34.459288ms)
  I0512 21:25:50.351789 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 33.49041ms)
  I0512 21:25:50.352118 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 33.469702ms)
  I0512 21:25:50.352352 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 35.544314ms)
  I0512 21:25:50.352648 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 34.212816ms)
  I0512 21:25:50.351608 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 33.424413ms)
  I0512 21:25:50.355744 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 37.948202ms)
  I0512 21:25:50.357577 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 40.730576ms)
  I0512 21:25:50.358702 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 40.80333ms)
  I0512 21:25:50.359180 19 proxy.go:558] (3) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 40.647879ms)
  I0512 21:25:50.387063 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 27.440228ms)
  I0512 21:25:50.387758 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 28.276394ms)
  I0512 21:25:50.387074 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 27.081104ms)
  I0512 21:25:50.387134 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 27.453926ms)
  I0512 21:25:50.387160 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 27.335719ms)
  I0512 21:25:50.387330 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 27.272043ms)
  I0512 21:25:50.387559 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 27.395179ms)
  I0512 21:25:50.388072 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 28.323702ms)
  I0512 21:25:50.389935 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 30.026177ms)
  I0512 21:25:50.390394 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 30.61727ms)
  I0512 21:25:50.390627 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 30.769409ms)
  I0512 21:25:50.391648 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 31.556733ms)
  I0512 21:25:50.391724 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 31.779939ms)
  I0512 21:25:50.391766 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 31.629553ms)
  I0512 21:25:50.391982 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 32.502615ms)
  I0512 21:25:50.393990 19 proxy.go:558] (4) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 33.9802ms)
  I0512 21:25:50.428719 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 34.182334ms)
  I0512 21:25:50.428765 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 33.925951ms)
  I0512 21:25:50.429220 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 34.486222ms)
  I0512 21:25:50.429397 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 34.604193ms)
  I0512 21:25:50.429430 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 34.768617ms)
  I0512 21:25:50.432489 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 37.583372ms)
  I0512 21:25:50.432612 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 37.658202ms)
  I0512 21:25:50.432985 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 38.018853ms)
  I0512 21:25:50.434883 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 40.045932ms)
  I0512 21:25:50.435711 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 41.640682ms)
  I0512 21:25:50.436057 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 41.460252ms)
  I0512 21:25:50.436424 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 42.142102ms)
  I0512 21:25:50.437135 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 42.26619ms)
  I0512 21:25:50.437194 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 42.727024ms)
  I0512 21:25:50.437640 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 42.623331ms)
  I0512 21:25:50.439450 19 proxy.go:558] (5) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 45.056757ms)
  I0512 21:25:50.486437 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 46.431489ms)
  I0512 21:25:50.488169 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 46.459853ms)
  I0512 21:25:50.488742 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 49.210495ms)
  I0512 21:25:50.489203 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 47.599414ms)
  I0512 21:25:50.489753 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 48.444081ms)
  I0512 21:25:50.490295 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 49.213804ms)
  I0512 21:25:50.490323 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 49.622577ms)
  I0512 21:25:50.490370 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 48.575627ms)
  I0512 21:25:50.490396 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 48.962341ms)
  I0512 21:25:50.495575 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 54.631865ms)
  I0512 21:25:50.496026 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 55.48047ms)
  I0512 21:25:50.496980 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 55.945925ms)
  I0512 21:25:50.497010 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 55.072516ms)
  I0512 21:25:50.497079 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 55.949841ms)
  I0512 21:25:50.497791 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 57.460556ms)
  I0512 21:25:50.497273 19 proxy.go:558] (6) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 57.102271ms)
  I0512 21:25:50.527815 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 27.643271ms)
  I0512 21:25:50.528741 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 28.417582ms)
  I0512 21:25:50.529157 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 29.107412ms)
  I0512 21:25:50.529249 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 28.886254ms)
  I0512 21:25:50.529864 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 30.322705ms)
  I0512 21:25:50.529990 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 30.213391ms)
  I0512 21:25:50.529943 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 29.854434ms)
  I0512 21:25:50.533407 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 33.889693ms)
  I0512 21:25:50.533613 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 33.494659ms)
  I0512 21:25:50.534722 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 34.822657ms)
  I0512 21:25:50.535192 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 35.172855ms)
  I0512 21:25:50.535373 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 35.406577ms)
  I0512 21:25:50.535999 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 36.268747ms)
  I0512 21:25:50.536606 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 36.778714ms)
  I0512 21:25:50.540383 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 40.17421ms)
  I0512 21:25:50.540923 19 proxy.go:558] (7) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 40.685406ms)
  I0512 21:25:50.569545 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 28.537036ms)
  I0512 21:25:50.571337 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 29.334046ms)
  I0512 21:25:50.572101 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 29.829177ms)
  I0512 21:25:50.571478 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 29.408671ms)
  I0512 21:25:50.573305 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 31.667742ms)
  I0512 21:25:50.573652 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 31.252927ms)
  I0512 21:25:50.573807 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 32.162531ms)
  I0512 21:25:50.573891 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 32.543598ms)
  I0512 21:25:50.573920 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 32.22598ms)
  I0512 21:25:50.573905 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 32.664323ms)
  I0512 21:25:50.573955 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 32.177206ms)
  I0512 21:25:50.573986 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 31.867012ms)
  I0512 21:25:50.574011 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 32.082062ms)
  I0512 21:25:50.577626 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 36.050121ms)
  I0512 21:25:50.579551 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 37.350886ms)
  I0512 21:25:50.583244 19 proxy.go:558] (8) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 41.387452ms)
  I0512 21:25:50.609142 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 24.771114ms)
  I0512 21:25:50.609348 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 24.839795ms)
  I0512 21:25:50.609380 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 25.416463ms)
  I0512 21:25:50.609399 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 24.768118ms)
  I0512 21:25:50.618947 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 33.422806ms)
  I0512 21:25:50.619130 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 35.327549ms)
  I0512 21:25:50.619160 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 34.417984ms)
  I0512 21:25:50.619384 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 35.290639ms)
  I0512 21:25:50.619420 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 34.201105ms)
  I0512 21:25:50.619455 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 34.13032ms)
  I0512 21:25:50.619579 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 36.184045ms)
  I0512 21:25:50.619604 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 36.241092ms)
  I0512 21:25:50.621388 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 36.277008ms)
  I0512 21:25:50.621525 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 36.440555ms)
  I0512 21:25:50.622113 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 37.889697ms)
  I0512 21:25:50.622139 19 proxy.go:558] (9) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 37.28926ms)
  I0512 21:25:50.665887 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 43.288717ms)
  I0512 21:25:50.666388 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 43.835693ms)
  I0512 21:25:50.666966 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 44.132784ms)
  I0512 21:25:50.667052 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 44.312957ms)
  I0512 21:25:50.667081 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 44.674531ms)
  I0512 21:25:50.667107 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 44.589839ms)
  I0512 21:25:50.667199 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 44.895207ms)
  I0512 21:25:50.667229 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 44.349291ms)
  I0512 21:25:50.667305 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 44.537299ms)
  I0512 21:25:50.667336 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 44.718761ms)
  I0512 21:25:50.668711 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 46.030749ms)
  I0512 21:25:50.669295 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 46.999656ms)
  I0512 21:25:50.670611 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 47.905485ms)
  I0512 21:25:50.670986 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 48.464304ms)
  I0512 21:25:50.671050 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 48.400097ms)
  I0512 21:25:50.671056 19 proxy.go:558] (10) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 48.607621ms)
  I0512 21:25:50.698093 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 25.527289ms)
  I0512 21:25:50.698191 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 25.52691ms)
  I0512 21:25:50.698299 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 24.576321ms)
  I0512 21:25:50.698736 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 26.575118ms)
  I0512 21:25:50.700569 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 27.189989ms)
  I0512 21:25:50.700660 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 27.408379ms)
  I0512 21:25:50.700695 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 27.919662ms)
  I0512 21:25:50.700735 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 27.707011ms)
  I0512 21:25:50.700798 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 27.263441ms)
  I0512 21:25:50.702319 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 30.559808ms)
  I0512 21:25:50.704664 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 32.750825ms)
  I0512 21:25:50.704738 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 31.821205ms)
  I0512 21:25:50.704769 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 32.332454ms)
  I0512 21:25:50.705650 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 32.501128ms)
  I0512 21:25:50.705952 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 33.431703ms)
  I0512 21:25:50.705696 19 proxy.go:558] (11) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 31.930713ms)
  I0512 21:25:50.734908 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 28.602555ms)
  I0512 21:25:50.740791 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 34.300855ms)
  I0512 21:25:50.743449 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 36.298972ms)
  I0512 21:25:50.743881 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 36.956767ms)
  I0512 21:25:50.743925 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 36.905539ms)
  I0512 21:25:50.744061 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 36.980229ms)
  I0512 21:25:50.744105 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 37.572271ms)
  I0512 21:25:50.744134 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 37.18712ms)
  I0512 21:25:50.743955 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 37.113759ms)
  I0512 21:25:50.744192 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 37.021282ms)
  I0512 21:25:50.744216 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 37.865942ms)
  I0512 21:25:50.744305 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 37.320543ms)
  I0512 21:25:50.744328 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 37.504641ms)
  I0512 21:25:50.745578 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 38.87112ms)
  I0512 21:25:50.746292 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 39.172686ms)
  I0512 21:25:50.746286 19 proxy.go:558] (12) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 39.198046ms)
  I0512 21:25:50.772094 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 25.470111ms)
  I0512 21:25:50.775211 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 27.545365ms)
  I0512 21:25:50.775594 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 28.418966ms)
  I0512 21:25:50.775645 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 28.093944ms)
  I0512 21:25:50.775708 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 29.339139ms)
  I0512 21:25:50.775728 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 28.97838ms)
  I0512 21:25:50.776176 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 28.945981ms)
  I0512 21:25:50.776246 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 28.771752ms)
  I0512 21:25:50.776263 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 29.438272ms)
  I0512 21:25:50.776213 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 28.799113ms)
  I0512 21:25:50.781766 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 34.730663ms)
  I0512 21:25:50.782236 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 35.297318ms)
  I0512 21:25:50.783988 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 36.633525ms)
  I0512 21:25:50.784019 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 36.421902ms)
  I0512 21:25:50.784394 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 37.102853ms)
  I0512 21:25:50.784538 19 proxy.go:558] (13) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 37.435524ms)
  I0512 21:25:50.814115 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 28.902356ms)
  I0512 21:25:50.814152 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 28.766654ms)
  I0512 21:25:50.814236 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 29.268299ms)
  I0512 21:25:50.814702 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 29.631293ms)
  I0512 21:25:50.814872 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 29.5227ms)
  I0512 21:25:50.815053 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 30.056933ms)
  I0512 21:25:50.818947 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 33.668093ms)
  I0512 21:25:50.818972 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 33.870786ms)
  I0512 21:25:50.819595 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 34.886354ms)
  I0512 21:25:50.819868 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 35.073957ms)
  I0512 21:25:50.819767 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 34.455785ms)
  I0512 21:25:50.820487 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 35.439593ms)
  I0512 21:25:50.820576 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 35.33328ms)
  I0512 21:25:50.820639 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 35.734873ms)
  I0512 21:25:50.820729 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 35.603561ms)
  I0512 21:25:50.820893 19 proxy.go:558] (14) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 35.872824ms)
  I0512 21:25:50.842928 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 21.876603ms)
  I0512 21:25:50.851482 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 29.547537ms)
  I0512 21:25:50.851866 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 30.297711ms)
  I0512 21:25:50.855488 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 34.490789ms)
  I0512 21:25:50.856088 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 34.285568ms)
  I0512 21:25:50.856815 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 34.353122ms)
  I0512 21:25:50.857084 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 35.216382ms)
  I0512 21:25:50.857115 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 35.158309ms)
  I0512 21:25:50.857037 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 35.00945ms)
  I0512 21:25:50.857490 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 35.851934ms)
  I0512 21:25:50.861760 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 39.855439ms)
  I0512 21:25:50.861829 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 39.759524ms)
  I0512 21:25:50.862320 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 40.503624ms)
  I0512 21:25:50.862856 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 40.860556ms)
  I0512 21:25:50.862889 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 41.177318ms)
  I0512 21:25:50.862816 19 proxy.go:558] (15) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 41.048572ms)
  I0512 21:25:50.887421 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 24.35634ms)
  I0512 21:25:50.887404 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 24.033281ms)
  I0512 21:25:50.896352 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 32.710314ms)
  I0512 21:25:50.896437 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 32.103932ms)
  I0512 21:25:50.896536 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 32.354418ms)
  I0512 21:25:50.897013 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 33.234498ms)
  I0512 21:25:50.897354 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 34.387289ms)
  I0512 21:25:50.897550 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 33.694519ms)
  I0512 21:25:50.897744 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 34.041802ms)
  I0512 21:25:50.897824 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 33.332631ms)
  I0512 21:25:50.901982 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 37.868435ms)
  I0512 21:25:50.902412 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 38.867652ms)
  I0512 21:25:50.902429 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 38.964328ms)
  I0512 21:25:50.903978 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 40.026197ms)
  I0512 21:25:50.904012 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 39.986572ms)
  I0512 21:25:50.903978 19 proxy.go:558] (16) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 40.758199ms)
  I0512 21:25:50.933530 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 28.951038ms)
  I0512 21:25:50.934192 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 29.749731ms)
  I0512 21:25:50.934614 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 29.708333ms)
  I0512 21:25:50.934978 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 30.756938ms)
  I0512 21:25:50.938142 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 32.929869ms)
  I0512 21:25:50.938148 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 33.221391ms)
  I0512 21:25:50.938197 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 32.941305ms)
  I0512 21:25:50.938331 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 33.483923ms)
  I0512 21:25:50.938708 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 33.690184ms)
  I0512 21:25:50.938757 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 34.127328ms)
  I0512 21:25:50.945409 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 40.697119ms)
  I0512 21:25:50.945376 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 40.345077ms)
  I0512 21:25:50.946347 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 41.974617ms)
  I0512 21:25:50.946849 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 41.75386ms)
  I0512 21:25:50.947163 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 42.008611ms)
  I0512 21:25:50.947539 19 proxy.go:558] (17) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 42.114867ms)
  I0512 21:25:50.974727 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 25.626362ms)
  I0512 21:25:50.974779 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 25.983481ms)
  I0512 21:25:50.974803 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 25.569096ms)
  I0512 21:25:50.976813 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 27.347899ms)
  I0512 21:25:50.976843 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 28.89775ms)
  I0512 21:25:50.976858 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 27.912563ms)
  I0512 21:25:50.981117 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 31.322252ms)
  I0512 21:25:50.981703 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 30.675501ms)
  I0512 21:25:50.981751 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 31.432084ms)
  I0512 21:25:50.981950 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 30.837149ms)
  I0512 21:25:50.983558 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 35.079836ms)
  I0512 21:25:50.984446 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 35.809251ms)
  I0512 21:25:50.986749 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 38.456377ms)
  I0512 21:25:50.987218 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 37.574614ms)
  I0512 21:25:50.987272 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 37.12091ms)
  I0512 21:25:50.987341 19 proxy.go:558] (18) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 37.336139ms)
  I0512 21:25:51.023142 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 34.331396ms)
  I0512 21:25:51.023242 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 35.409599ms)
  I0512 21:25:51.023592 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:460/proxy/: tls baz (200; 34.533609ms)
  I0512 21:25:51.024050 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:462/proxy/: tls qux (200; 36.089714ms)
  I0512 21:25:51.023284 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">... (200; 35.810694ms)
  I0512 21:25:51.024227 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/http:proxy-service-bk58c-jc7fh:160/proxy/: foo (200; 35.324561ms)
  I0512 21:25:51.024408 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh/proxy/rewriteme">test</a> (200; 36.185691ms)
  I0512 21:25:51.024328 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:162/proxy/: bar (200; 36.64398ms)
  I0512 21:25:51.024534 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/https:proxy-service-bk58c-jc7fh:443/proxy/tlsrewritem... (200; 37.097433ms)
  I0512 21:25:51.024606 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/: <a href="/api/v1/namespaces/proxy-1538/pods/proxy-service-bk58c-jc7fh:1080/proxy/rewriteme">test<... (200; 35.057732ms)
  I0512 21:25:51.028376 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname1/proxy/: tls baz (200; 40.001309ms)
  I0512 21:25:51.032132 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/services/https:proxy-service-bk58c:tlsportname2/proxy/: tls qux (200; 43.5437ms)
  I0512 21:25:51.032526 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname2/proxy/: bar (200; 43.349289ms)
  I0512 21:25:51.032579 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname1/proxy/: foo (200; 44.48081ms)
  I0512 21:25:51.032656 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/services/proxy-service-bk58c:portname2/proxy/: bar (200; 43.358356ms)
  I0512 21:25:51.032660 19 proxy.go:558] (19) /api/v1/namespaces/proxy-1538/services/http:proxy-service-bk58c:portname1/proxy/: foo (200; 44.001751ms)
  STEP: deleting ReplicationController proxy-service-bk58c in namespace proxy-1538, will wait for the garbage collector to delete the pods @ 05/12/25 21:25:51.033
  I0512 21:25:51.111046 19 resources.go:139] Deleting ReplicationController proxy-service-bk58c took: 21.433339ms
  I0512 21:25:51.212530 19 resources.go:163] Terminating ReplicationController proxy-service-bk58c pods took: 101.483358ms
  I0512 21:25:53.714137 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1538" for this suite. @ 05/12/25 21:25:53.72
• [5.679 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/12/25 21:25:53.729
  I0512 21:25:53.729133 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:25:53.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:53.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:53.75
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:25:53.753
  STEP: Saw pod success @ 05/12/25 21:25:57.783
  I0512 21:25:57.796859 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-20cf8e9f-07e6-430c-82f8-a5a95caae4ae container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:25:57.807
  I0512 21:25:57.820951 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-977" for this suite. @ 05/12/25 21:25:57.828
• [4.105 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/12/25 21:25:57.835
  I0512 21:25:57.835226 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:25:57.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:25:57.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:25:57.868
  STEP: Creating secret with name secret-test-2503e7a2-7029-43be-86a4-3b2ab484ffab @ 05/12/25 21:25:57.872
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:25:57.876
  STEP: Saw pod success @ 05/12/25 21:26:01.919
  I0512 21:26:01.929534 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-secrets-b11cc962-b259-4632-bf89-b9413303aa2c container secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:26:01.944
  I0512 21:26:01.968442 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-330" for this suite. @ 05/12/25 21:26:01.972
• [4.144 seconds]
------------------------------
SS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/12/25 21:26:01.979
  I0512 21:26:01.979528 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/12/25 21:26:01.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:01.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:02.006
  STEP: creating a target pod @ 05/12/25 21:26:02.009
  STEP: adding an ephemeral container @ 05/12/25 21:26:04.074
  STEP: checking pod container endpoints @ 05/12/25 21:26:06.127
  I0512 21:26:06.127147 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6448 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:26:06.127177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:26:06.128094 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:26:06.128249 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-6448/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0512 21:26:06.237080 19 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/12/25 21:26:06.247
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/12/25 21:26:06.254
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/12/25 21:26:06.268
  I0512 21:26:06.275609 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6448" for this suite. @ 05/12/25 21:26:06.282
• [4.317 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 05/12/25 21:26:06.296
  I0512 21:26:06.296522 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 21:26:06.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:06.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:06.314
  I0512 21:26:06.318579 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/12/25 21:26:07.682
  I0512 21:26:07.682653 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 create -f -'
  I0512 21:26:09.825305 19 builder.go:146] stderr: ""
  I0512 21:26:09.825389 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6337-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0512 21:26:09.825538 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 delete e2e-test-crd-publish-openapi-6337-crds test-foo'
  I0512 21:26:09.942756 19 builder.go:146] stderr: ""
  I0512 21:26:09.942821 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6337-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0512 21:26:09.942877 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 apply -f -'
  I0512 21:26:10.047627 19 builder.go:146] stderr: ""
  I0512 21:26:10.047684 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6337-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0512 21:26:10.047742 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 delete e2e-test-crd-publish-openapi-6337-crds test-foo'
  I0512 21:26:10.136922 19 builder.go:146] stderr: ""
  I0512 21:26:10.137003 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-6337-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/12/25 21:26:10.137
  I0512 21:26:10.137131 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 create -f -'
  I0512 21:26:10.229624 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/12/25 21:26:10.229
  I0512 21:26:10.229797 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 create -f -'
  I0512 21:26:10.327894 19 builder.go:135] rc: 1
  I0512 21:26:10.327999 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 apply -f -'
  I0512 21:26:10.432515 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/12/25 21:26:10.432
  I0512 21:26:10.433168 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 create -f -'
  I0512 21:26:10.539176 19 builder.go:135] rc: 1
  I0512 21:26:10.539283 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 --namespace=crd-publish-openapi-5094 apply -f -'
  I0512 21:26:10.641077 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/12/25 21:26:10.641
  I0512 21:26:10.641606 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 explain e2e-test-crd-publish-openapi-6337-crds'
  I0512 21:26:10.731988 19 builder.go:146] stderr: ""
  I0512 21:26:10.732076 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6337-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/12/25 21:26:10.732
  I0512 21:26:10.732852 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 explain e2e-test-crd-publish-openapi-6337-crds.metadata'
  I0512 21:26:10.818574 19 builder.go:146] stderr: ""
  I0512 21:26:10.818725 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6337-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0512 21:26:10.818981 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 explain e2e-test-crd-publish-openapi-6337-crds.spec'
  I0512 21:26:10.923363 19 builder.go:146] stderr: ""
  I0512 21:26:10.923419 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6337-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0512 21:26:10.923506 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 explain e2e-test-crd-publish-openapi-6337-crds.spec.bars'
  I0512 21:26:10.996363 19 builder.go:146] stderr: ""
  I0512 21:26:10.996445 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6337-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/12/25 21:26:10.996
  I0512 21:26:10.996743 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5094 explain e2e-test-crd-publish-openapi-6337-crds.spec.bars2'
  I0512 21:26:11.089264 19 builder.go:135] rc: 1
  I0512 21:26:12.406165 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5094" for this suite. @ 05/12/25 21:26:12.415
• [6.128 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/12/25 21:26:12.424
  I0512 21:26:12.424851 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename subjectreview @ 05/12/25 21:26:12.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:12.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:12.446
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2690" @ 05/12/25 21:26:12.449
  I0512 21:26:12.454206 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-2690:e2e"
  I0512 21:26:12.454540 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2690"}
  I0512 21:26:12.454641 19 subjectreviews.go:71] saUID: "996ad546-6676-489a-843a-a8fb42a57b29"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2690:e2e" @ 05/12/25 21:26:12.454
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2690:e2e" @ 05/12/25 21:26:12.455
  I0512 21:26:12.457943 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2690:e2e" api 'list' configmaps in "subjectreview-2690" namespace @ 05/12/25 21:26:12.457
  I0512 21:26:12.459835 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2690:e2e" @ 05/12/25 21:26:12.46
  I0512 21:26:12.464995 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0512 21:26:12.465378 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0512 21:26:12.465849 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2690" for this suite. @ 05/12/25 21:26:12.529
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/12/25 21:26:12.542
  I0512 21:26:12.542038 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename controllerrevisions @ 05/12/25 21:26:12.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:12.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:12.583
  STEP: Creating DaemonSet "e2e-b7rp5-daemon-set" @ 05/12/25 21:26:12.63
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/12/25 21:26:12.637
  I0512 21:26:12.723510 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-b7rp5-daemon-set: 0
  I0512 21:26:12.723553 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:26:13.648425 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-b7rp5-daemon-set: 1
  I0512 21:26:13.648623 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt is running 0 daemon pod, expected 1
  I0512 21:26:14.648746 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-b7rp5-daemon-set: 2
  I0512 21:26:14.648800 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-b7rp5-daemon-set
  STEP: Confirm DaemonSet "e2e-b7rp5-daemon-set" successfully created with "daemonset-name=e2e-b7rp5-daemon-set" label @ 05/12/25 21:26:14.654
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-b7rp5-daemon-set" @ 05/12/25 21:26:14.668
  I0512 21:26:14.674116 19 controller_revision.go:162] Located ControllerRevision: "e2e-b7rp5-daemon-set-5958589b56"
  STEP: Patching ControllerRevision "e2e-b7rp5-daemon-set-5958589b56" @ 05/12/25 21:26:14.677
  I0512 21:26:14.682560 19 controller_revision.go:173] e2e-b7rp5-daemon-set-5958589b56 has been patched
  STEP: Create a new ControllerRevision @ 05/12/25 21:26:14.682
  I0512 21:26:14.687173 19 controller_revision.go:191] Created ControllerRevision: e2e-b7rp5-daemon-set-bf974f58b
  STEP: Confirm that there are two ControllerRevisions @ 05/12/25 21:26:14.687
  I0512 21:26:14.687315 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0512 21:26:14.694693 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-b7rp5-daemon-set-5958589b56" @ 05/12/25 21:26:14.694
  STEP: Confirm that there is only one ControllerRevision @ 05/12/25 21:26:14.706
  I0512 21:26:14.706498 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0512 21:26:14.711721 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-b7rp5-daemon-set-bf974f58b" @ 05/12/25 21:26:14.716
  I0512 21:26:14.743981 19 controller_revision.go:220] e2e-b7rp5-daemon-set-bf974f58b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/12/25 21:26:14.744
  W0512 21:26:14.755159      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/12/25 21:26:14.755
  I0512 21:26:14.756523 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0512 21:26:14.773628 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-b7rp5-daemon-set-bf974f58b=updated" @ 05/12/25 21:26:14.773
  STEP: Confirm that there is only one ControllerRevision @ 05/12/25 21:26:14.792
  I0512 21:26:14.793025 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0512 21:26:14.796272 19 controller_revision.go:265] Found 1 ControllerRevisions
  I0512 21:26:14.798745 19 controller_revision.go:246] ControllerRevision "e2e-b7rp5-daemon-set-5b84dc8f7f" has revision 3
  STEP: Deleting DaemonSet "e2e-b7rp5-daemon-set" @ 05/12/25 21:26:14.801
  STEP: deleting DaemonSet.extensions e2e-b7rp5-daemon-set in namespace controllerrevisions-9610, will wait for the garbage collector to delete the pods @ 05/12/25 21:26:14.801
  I0512 21:26:14.866131 19 resources.go:139] Deleting DaemonSet.extensions e2e-b7rp5-daemon-set took: 11.182393ms
  I0512 21:26:14.967204 19 resources.go:163] Terminating DaemonSet.extensions e2e-b7rp5-daemon-set pods took: 101.067668ms
  I0512 21:26:16.876062 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-b7rp5-daemon-set: 0
  I0512 21:26:16.876115 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-b7rp5-daemon-set
  I0512 21:26:16.882757 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7507"},"items":null}

  I0512 21:26:16.888527 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7507"},"items":null}

  I0512 21:26:16.903352 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9610" for this suite. @ 05/12/25 21:26:16.907
• [4.371 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/12/25 21:26:16.914
  I0512 21:26:16.915002 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:26:16.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:16.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:16.937
  STEP: Creating secret with name secret-test-ad7a2b97-af52-4ba8-bc0f-c89478179e46 @ 05/12/25 21:26:16.942
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:26:16.948
  STEP: Saw pod success @ 05/12/25 21:26:20.98
  I0512 21:26:20.989285 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-secrets-7f12d18e-5a28-4654-a138-eb383c83ec57 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:26:21.001
  I0512 21:26:21.023266 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5204" for this suite. @ 05/12/25 21:26:21.027
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/12/25 21:26:21.033
  I0512 21:26:21.033610 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/12/25 21:26:21.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:21.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:21.048
  STEP: create the container to handle the HTTPGet hook request. @ 05/12/25 21:26:21.132
  STEP: create the pod with lifecycle hook @ 05/12/25 21:26:23.169
  STEP: check poststart hook @ 05/12/25 21:26:25.2
  STEP: delete the pod with lifecycle hook @ 05/12/25 21:26:25.207
  I0512 21:26:27.229880 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2799" for this suite. @ 05/12/25 21:26:27.246
• [6.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 05/12/25 21:26:27.259
  I0512 21:26:27.259739 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 21:26:27.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:27.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:27.293
  STEP: set up a multi version CRD @ 05/12/25 21:26:27.296
  I0512 21:26:27.297043 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: rename a version @ 05/12/25 21:26:30.788
  STEP: check the new version name is served @ 05/12/25 21:26:30.801
  STEP: check the old version name is removed @ 05/12/25 21:26:31.578
  STEP: check the other version is not changed @ 05/12/25 21:26:32.299
  I0512 21:26:35.125810 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1610" for this suite. @ 05/12/25 21:26:35.134
• [7.883 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/12/25 21:26:35.143
  I0512 21:26:35.143445 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:26:35.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:35.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:35.167
  STEP: Creating configMap with name projected-configmap-test-volume-map-87a5648e-2f1c-48e1-8c99-5fbd28a6d909 @ 05/12/25 21:26:35.17
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:26:35.174
  STEP: Saw pod success @ 05/12/25 21:26:37.194
  I0512 21:26:37.205771 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-configmaps-6a6a9385-d136-4406-b02b-72d324286498 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 21:26:37.227
  I0512 21:26:37.268341 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1129" for this suite. @ 05/12/25 21:26:37.273
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/12/25 21:26:37.279
  I0512 21:26:37.279855 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:26:37.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:37.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:37.298
  STEP: Creating secret with name secret-test-map-8c922add-71ca-482d-aec4-2abbcf6dd7a4 @ 05/12/25 21:26:37.3
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:26:37.307
  STEP: Saw pod success @ 05/12/25 21:26:41.345
  I0512 21:26:41.362735 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-secrets-a2c2e4ea-e2cd-4f56-8ade-4efb97ca2e19 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:26:41.375
  I0512 21:26:41.397555 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2411" for this suite. @ 05/12/25 21:26:41.404
• [4.131 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 05/12/25 21:26:41.412
  I0512 21:26:41.412317 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:26:41.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:41.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:41.434
  I0512 21:26:41.440496 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9425" for this suite. @ 05/12/25 21:26:41.506
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 05/12/25 21:26:41.518
  I0512 21:26:41.518528 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:26:41.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:41.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:41.55
  STEP: Setting up server cert @ 05/12/25 21:26:41.646
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:26:42.365
  STEP: Deploying the webhook pod @ 05/12/25 21:26:42.4
  STEP: Wait for the deployment to be ready @ 05/12/25 21:26:42.414
  I0512 21:26:42.432220 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:26:44.453
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:26:44.479
  I0512 21:26:45.479825 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/12/25 21:26:45.496
  STEP: create the configmap with a random name @ 05/12/25 21:26:45.528
  STEP: verify the configmap is mutated @ 05/12/25 21:26:45.553
  STEP: create the configmap with 'skip-me' name @ 05/12/25 21:26:45.553
  I0512 21:26:45.629268 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6668" for this suite. @ 05/12/25 21:26:45.634
  STEP: Destroying namespace "webhook-markers-896" for this suite. @ 05/12/25 21:26:45.639
• [4.126 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 05/12/25 21:26:45.646
  I0512 21:26:45.646143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename field-validation @ 05/12/25 21:26:45.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:45.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:45.664
  I0512 21:26:45.667753 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  W0512 21:26:48.218918      19 warnings.go:70] unknown field "alpha"
  W0512 21:26:48.218970      19 warnings.go:70] unknown field "beta"
  W0512 21:26:48.218983      19 warnings.go:70] unknown field "delta"
  W0512 21:26:48.218993      19 warnings.go:70] unknown field "epsilon"
  W0512 21:26:48.219002      19 warnings.go:70] unknown field "gamma"
  I0512 21:26:48.791021 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6437" for this suite. @ 05/12/25 21:26:48.798
• [3.161 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/12/25 21:26:48.807
  I0512 21:26:48.807032 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:26:48.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:48.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:48.829
  STEP: Creating Pod @ 05/12/25 21:26:48.832
  STEP: Reading file content from the nginx-container @ 05/12/25 21:26:50.861
  I0512 21:26:50.861067 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4934 PodName:pod-sharedvolume-ad8357ec-1ac6-416b-9647-14fd925ec345 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:26:50.861121 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:26:50.862059 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:26:50.862176 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-4934/pods/pod-sharedvolume-ad8357ec-1ac6-416b-9647-14fd925ec345/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0512 21:26:51.021992 19 exec_util.go:111] Exec stderr: ""
  I0512 21:26:51.022220 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4934" for this suite. @ 05/12/25 21:26:51.03
• [2.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/12/25 21:26:51.044
  I0512 21:26:51.044101 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-runtime @ 05/12/25 21:26:51.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:51.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:51.063
  STEP: create the container @ 05/12/25 21:26:51.068
  W0512 21:26:51.075980      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/12/25 21:26:51.076
  STEP: get the container status @ 05/12/25 21:26:55.114
  STEP: the container should be terminated @ 05/12/25 21:26:55.122
  STEP: the termination message should be set @ 05/12/25 21:26:55.122
  I0512 21:26:55.122801 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/12/25 21:26:55.122
  I0512 21:26:55.148818 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1418" for this suite. @ 05/12/25 21:26:55.155
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/12/25 21:26:55.163
  I0512 21:26:55.163505 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:26:55.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:55.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:55.183
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:26:55.185
  STEP: Saw pod success @ 05/12/25 21:26:59.215
  I0512 21:26:59.218866 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-1e2e4c68-acac-410c-9fa4-c87fba479fad container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:26:59.233
  I0512 21:26:59.248300 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1594" for this suite. @ 05/12/25 21:26:59.252
• [4.097 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 05/12/25 21:26:59.26
  I0512 21:26:59.260072 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename daemonsets @ 05/12/25 21:26:59.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:26:59.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:26:59.282
  STEP: Creating simple DaemonSet "daemon-set" @ 05/12/25 21:26:59.366
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/12/25 21:26:59.375
  I0512 21:26:59.459577 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:26:59.459803 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:27:00.390944 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:27:00.391017 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:27:01.408494 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 21:27:01.408604 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/12/25 21:27:01.415
  STEP: DeleteCollection of the DaemonSets @ 05/12/25 21:27:01.419
  STEP: Verify that ReplicaSets have been deleted @ 05/12/25 21:27:01.425
  I0512 21:27:01.452087 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7911"},"items":null}

  I0512 21:27:01.463942 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7914"},"items":[{"metadata":{"name":"daemon-set-4hf5q","generateName":"daemon-set-","namespace":"daemonsets-4538","uid":"1c2d8900-ec79-425b-b23e-7b5862dac223","resourceVersion":"7914","creationTimestamp":"2025-05-12T21:26:59Z","deletionTimestamp":"2025-05-12T21:27:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5cb42f80-2cf3-4fdd-9d72-80ebeabd2351","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-05-12T21:26:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5cb42f80-2cf3-4fdd-9d72-80ebeabd2351\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-05-12T21:27:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tvrsw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tvrsw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:27:00Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:26:59Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:27:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:27:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:26:59Z"}],"hostIP":"192.168.1.8","hostIPs":[{"ip":"192.168.1.8"}],"podIP":"10.42.0.37","podIPs":[{"ip":"10.42.0.37"}],"startTime":"2025-05-12T21:26:59Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-12T21:26:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3f41c09dfa951a5f81cd60f23da443602f1502130e345dfde07e6203f4bad97b","started":true,"volumeMounts":[{"name":"kube-api-access-tvrsw","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-dtj7g","generateName":"daemon-set-","namespace":"daemonsets-4538","uid":"7a395f1b-fdec-48bb-a014-9c8b07754440","resourceVersion":"7912","creationTimestamp":"2025-05-12T21:26:59Z","deletionTimestamp":"2025-05-12T21:27:31Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"5cb42f80-2cf3-4fdd-9d72-80ebeabd2351","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-05-12T21:26:59Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5cb42f80-2cf3-4fdd-9d72-80ebeabd2351\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2025-05-12T21:27:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.109\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lrqm9","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lrqm9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:27:00Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:26:59Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:27:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:27:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-05-12T21:26:59Z"}],"hostIP":"192.168.1.7","hostIPs":[{"ip":"192.168.1.7"}],"podIP":"10.42.1.109","podIPs":[{"ip":"10.42.1.109"}],"startTime":"2025-05-12T21:26:59Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-05-12T21:27:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3f86f0b4e8d811d9fd078a5b365f6170156998c2740953e909aeca50470604ea","started":true,"volumeMounts":[{"name":"kube-api-access-lrqm9","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0512 21:27:01.507107 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4538" for this suite. @ 05/12/25 21:27:01.511
• [2.259 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/12/25 21:27:01.519
  I0512 21:27:01.519102 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/12/25 21:27:01.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:01.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:01.553
  STEP: creating the policy @ 05/12/25 21:27:01.565
  STEP: waiting until the marker is denied @ 05/12/25 21:27:01.636
  STEP: testing a replicated Deployment to be allowed @ 05/12/25 21:27:02.446
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/12/25 21:27:02.475
  I0512 21:27:02.606008 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3867" for this suite. @ 05/12/25 21:27:02.609
• [1.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/12/25 21:27:02.613
  I0512 21:27:02.613740 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename events @ 05/12/25 21:27:02.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:02.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:02.638
  STEP: creating a test event @ 05/12/25 21:27:02.644
  STEP: listing events in all namespaces @ 05/12/25 21:27:02.652
  STEP: listing events in test namespace @ 05/12/25 21:27:02.666
  STEP: listing events with field selection filtering on source @ 05/12/25 21:27:02.669
  STEP: listing events with field selection filtering on reportingController @ 05/12/25 21:27:02.672
  STEP: getting the test event @ 05/12/25 21:27:02.675
  STEP: patching the test event @ 05/12/25 21:27:02.678
  STEP: getting the test event @ 05/12/25 21:27:02.685
  STEP: updating the test event @ 05/12/25 21:27:02.688
  STEP: getting the test event @ 05/12/25 21:27:02.693
  STEP: deleting the test event @ 05/12/25 21:27:02.695
  STEP: listing events in all namespaces @ 05/12/25 21:27:02.702
  STEP: listing events in test namespace @ 05/12/25 21:27:02.709
  I0512 21:27:02.713568 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6713" for this suite. @ 05/12/25 21:27:02.716
• [0.109 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 05/12/25 21:27:02.722
  I0512 21:27:02.723028 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:27:02.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:02.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:02.751
  STEP: validating api versions @ 05/12/25 21:27:02.754
  I0512 21:27:02.754917 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-5304 api-versions'
  I0512 21:27:02.834359 19 builder.go:146] stderr: ""
  I0512 21:27:02.834420 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0512 21:27:02.834648 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5304" for this suite. @ 05/12/25 21:27:02.842
• [0.129 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/12/25 21:27:02.852
  I0512 21:27:02.852925 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 21:27:02.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:02.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:02.881
  STEP: Saw pod success @ 05/12/25 21:27:08.961
  I0512 21:27:08.964697 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod client-envvars-7d3b26aa-2781-468e-933c-1b7aadc82140 container env3cont: <nil>
  STEP: delete the pod @ 05/12/25 21:27:08.972
  I0512 21:27:08.986190 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4934" for this suite. @ 05/12/25 21:27:08.989
• [6.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/12/25 21:27:08.995
  I0512 21:27:08.996035 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/12/25 21:27:08.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:09.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:09.012
  STEP: creating a policy with variables @ 05/12/25 21:27:09.018
  STEP: waiting until the marker is denied @ 05/12/25 21:27:09.044
  STEP: testing a replicated Deployment to be allowed @ 05/12/25 21:27:09.496
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/12/25 21:27:09.581
  I0512 21:27:09.896801 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1268" for this suite. @ 05/12/25 21:27:09.907
• [0.916 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/12/25 21:27:09.912
  I0512 21:27:09.912848 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename apf @ 05/12/25 21:27:09.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:09.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:09.95
  STEP: getting /apis @ 05/12/25 21:27:09.954
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/12/25 21:27:09.958
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/12/25 21:27:09.96
  STEP: creating @ 05/12/25 21:27:09.962
  STEP: getting @ 05/12/25 21:27:09.975
  STEP: listing @ 05/12/25 21:27:09.98
  STEP: watching @ 05/12/25 21:27:09.983
  I0512 21:27:09.983106 19 flowcontrol.go:620] starting watch
  STEP: patching @ 05/12/25 21:27:09.984
  STEP: updating @ 05/12/25 21:27:09.988
  I0512 21:27:09.996780 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/12/25 21:27:09.996
  STEP: patching /status @ 05/12/25 21:27:10
  STEP: updating /status @ 05/12/25 21:27:10.005
  STEP: deleting @ 05/12/25 21:27:10.011
  STEP: deleting a collection @ 05/12/25 21:27:10.021
  I0512 21:27:10.043041 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7768" for this suite. @ 05/12/25 21:27:10.048
• [0.147 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 05/12/25 21:27:10.06
  I0512 21:27:10.060436 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename cronjob @ 05/12/25 21:27:10.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:10.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:10.08
  STEP: Creating a cronjob @ 05/12/25 21:27:10.083
  STEP: creating @ 05/12/25 21:27:10.083
  STEP: getting @ 05/12/25 21:27:10.088
  STEP: listing @ 05/12/25 21:27:10.098
  STEP: watching @ 05/12/25 21:27:10.103
  I0512 21:27:10.103373 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 05/12/25 21:27:10.108
  STEP: cluster-wide watching @ 05/12/25 21:27:10.118
  I0512 21:27:10.118500 19 cronjob.go:382] starting watch
  STEP: patching @ 05/12/25 21:27:10.121
  STEP: updating @ 05/12/25 21:27:10.133
  I0512 21:27:10.146510 19 cronjob.go:406] waiting for watch events with expected annotations
  I0512 21:27:10.146589 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 05/12/25 21:27:10.146
  STEP: updating /status @ 05/12/25 21:27:10.153
  STEP: get /status @ 05/12/25 21:27:10.163
  STEP: deleting @ 05/12/25 21:27:10.167
  STEP: deleting a collection @ 05/12/25 21:27:10.181
  I0512 21:27:10.191561 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3581" for this suite. @ 05/12/25 21:27:10.195
• [0.141 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/12/25 21:27:10.201
  I0512 21:27:10.202263 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename svcaccounts @ 05/12/25 21:27:10.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:10.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:10.221
  STEP: reading a file in the container @ 05/12/25 21:27:12.26
  I0512 21:27:12.260151 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1664 pod-service-account-ef5a8070-1c33-4c68-930c-5ec63bfa8e2a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/12/25 21:27:12.488
  I0512 21:27:12.488851 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1664 pod-service-account-ef5a8070-1c33-4c68-930c-5ec63bfa8e2a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/12/25 21:27:12.678
  I0512 21:27:12.678845 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1664 pod-service-account-ef5a8070-1c33-4c68-930c-5ec63bfa8e2a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0512 21:27:12.907097 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-1664"
  I0512 21:27:12.912183 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1664" for this suite. @ 05/12/25 21:27:12.919
• [2.726 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 05/12/25 21:27:12.928
  I0512 21:27:12.928605 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename field-validation @ 05/12/25 21:27:12.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:12.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:12.957
  I0512 21:27:12.960166 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  W0512 21:27:12.960819      19 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000d2c9b0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0512 21:27:15.521290      19 warnings.go:70] unknown field "alpha"
  W0512 21:27:15.521663      19 warnings.go:70] unknown field "beta"
  W0512 21:27:15.521778      19 warnings.go:70] unknown field "delta"
  W0512 21:27:15.521882      19 warnings.go:70] unknown field "epsilon"
  W0512 21:27:15.521974      19 warnings.go:70] unknown field "gamma"
  I0512 21:27:16.086341 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-441" for this suite. @ 05/12/25 21:27:16.091
• [3.171 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 05/12/25 21:27:16.099
  I0512 21:27:16.099555 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename dns @ 05/12/25 21:27:16.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:16.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:16.123
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/12/25 21:27:16.125
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/12/25 21:27:16.125
  STEP: creating a pod to probe DNS @ 05/12/25 21:27:16.125
  STEP: submitting the pod to kubernetes @ 05/12/25 21:27:16.125
  STEP: retrieving the pod @ 05/12/25 21:27:18.144
  STEP: looking for the results for each expected name from probers @ 05/12/25 21:27:18.148
  I0512 21:27:18.173352 19 dns_common.go:528] DNS probes using dns-6231/dns-test-084284da-0d5e-4b5a-aaa4-6e49879d49bc succeeded

  STEP: deleting the pod @ 05/12/25 21:27:18.173
  I0512 21:27:18.189012 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6231" for this suite. @ 05/12/25 21:27:18.197
• [2.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 05/12/25 21:27:18.206
  I0512 21:27:18.206534 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:27:18.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:18.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:18.223
  STEP: Setting up server cert @ 05/12/25 21:27:18.335
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:27:18.734
  STEP: Deploying the webhook pod @ 05/12/25 21:27:18.749
  STEP: Wait for the deployment to be ready @ 05/12/25 21:27:18.764
  I0512 21:27:18.772586 19 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/12/25 21:27:20.795
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:27:20.826
  I0512 21:27:21.826504 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0512 21:27:21.840315 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/12/25 21:27:22.36
  STEP: Creating a custom resource that should be denied by the webhook @ 05/12/25 21:27:22.391
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/12/25 21:27:24.424
  STEP: Updating the custom resource with disallowed data should be denied @ 05/12/25 21:27:24.435
  STEP: Deleting the custom resource should be denied @ 05/12/25 21:27:24.449
  STEP: Remove the offending key and value from the custom resource data @ 05/12/25 21:27:24.458
  STEP: Deleting the updated custom resource should be successful @ 05/12/25 21:27:24.471
  I0512 21:27:25.059334 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-764" for this suite. @ 05/12/25 21:27:25.068
  STEP: Destroying namespace "webhook-markers-5895" for this suite. @ 05/12/25 21:27:25.078
• [6.881 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/12/25 21:27:25.088
  I0512 21:27:25.088931 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:27:25.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:25.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:25.115
  STEP: Creating secret with name secret-test-955179b7-253d-4a1c-b533-6c8c0098fd65 @ 05/12/25 21:27:25.118
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:27:25.122
  STEP: Saw pod success @ 05/12/25 21:27:29.162
  I0512 21:27:29.172011 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-secrets-0760fc5a-8199-4050-9795-08120b23d560 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:27:29.183
  I0512 21:27:29.200828 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8488" for this suite. @ 05/12/25 21:27:29.205
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/12/25 21:27:29.218
  I0512 21:27:29.218626 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/12/25 21:27:29.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:29.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:29.244
  I0512 21:27:29.247170 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:29.801062 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5503" for this suite. @ 05/12/25 21:27:29.81
• [0.601 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 05/12/25 21:27:29.822
  I0512 21:27:29.822886 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename dns @ 05/12/25 21:27:29.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:29.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:29.85
  STEP: Creating a test headless service @ 05/12/25 21:27:29.855
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3673 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3673;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3673 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3673;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3673.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3673.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3673.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3673.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3673.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3673.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3673.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3673.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3673.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3673.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3673.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3673.svc;check="$$(dig +notcp +noall +answer +search 96.53.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.53.96_udp@PTR;check="$$(dig +tcp +noall +answer +search 96.53.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.53.96_tcp@PTR;sleep 1; done
   @ 05/12/25 21:27:29.877
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3673 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3673;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3673 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3673;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3673.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3673.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3673.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3673.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3673.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3673.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3673.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3673.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3673.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3673.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3673.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3673.svc;check="$$(dig +notcp +noall +answer +search 96.53.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.53.96_udp@PTR;check="$$(dig +tcp +noall +answer +search 96.53.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.53.96_tcp@PTR;sleep 1; done
   @ 05/12/25 21:27:29.877
  STEP: creating a pod to probe DNS @ 05/12/25 21:27:29.877
  STEP: submitting the pod to kubernetes @ 05/12/25 21:27:29.877
  STEP: retrieving the pod @ 05/12/25 21:27:31.91
  STEP: looking for the results for each expected name from probers @ 05/12/25 21:27:31.918
  I0512 21:27:31.931570 19 dns_common.go:479] Unable to read wheezy_udp@dns-test-service from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:31.936909 19 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:31.942792 19 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-3673 from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:31.948693 19 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-3673 from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:31.956437 19 dns_common.go:479] Unable to read wheezy_udp@dns-test-service.dns-3673.svc from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:31.962386 19 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service.dns-3673.svc from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:31.971424 19 dns_common.go:479] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3673.svc from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:31.979086 19 dns_common.go:479] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3673.svc from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.033208 19 dns_common.go:479] Unable to read jessie_udp@dns-test-service from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.046326 19 dns_common.go:479] Unable to read jessie_tcp@dns-test-service from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.054325 19 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-3673 from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.060551 19 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-3673 from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.073510 19 dns_common.go:479] Unable to read jessie_udp@dns-test-service.dns-3673.svc from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.080698 19 dns_common.go:479] Unable to read jessie_tcp@dns-test-service.dns-3673.svc from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.085494 19 dns_common.go:479] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3673.svc from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.089893 19 dns_common.go:479] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3673.svc from pod dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539: the server could not find the requested resource (get pods dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539)
  I0512 21:27:32.109130 19 dns_common.go:490] Lookups using dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-3673 wheezy_tcp@dns-test-service.dns-3673 wheezy_udp@dns-test-service.dns-3673.svc wheezy_tcp@dns-test-service.dns-3673.svc wheezy_udp@_http._tcp.dns-test-service.dns-3673.svc wheezy_tcp@_http._tcp.dns-test-service.dns-3673.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-3673 jessie_tcp@dns-test-service.dns-3673 jessie_udp@dns-test-service.dns-3673.svc jessie_tcp@dns-test-service.dns-3673.svc jessie_udp@_http._tcp.dns-test-service.dns-3673.svc jessie_tcp@_http._tcp.dns-test-service.dns-3673.svc]

  I0512 21:27:32.118688 19 dns_common.go:496] Pod client logs for webserver: 
  I0512 21:27:32.127662 19 dns_common.go:496] Pod client logs for querier: 
  I0512 21:27:32.135344 19 dns_common.go:496] Pod client logs for jessie-querier: 
  I0512 21:27:37.105117 19 dns_common.go:528] DNS probes using dns-3673/dns-test-bd870b95-fa8f-4de7-9e5d-6fd0a8245539 succeeded

  STEP: deleting the pod @ 05/12/25 21:27:37.105
  STEP: deleting the test service @ 05/12/25 21:27:37.136
  STEP: deleting the test headless service @ 05/12/25 21:27:37.173
  I0512 21:27:37.189315 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3673" for this suite. @ 05/12/25 21:27:37.203
• [7.391 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/12/25 21:27:37.215
  I0512 21:27:37.215022 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 21:27:37.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:37.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:37.249
  STEP: Creating configMap with name cm-test-opt-del-8f995e61-5dc5-4c87-b2b9-d35f7bf2aca0 @ 05/12/25 21:27:37.304
  STEP: Creating configMap with name cm-test-opt-upd-bce81ab3-df40-46d3-8993-f4dc4930275a @ 05/12/25 21:27:37.31
  STEP: Creating the pod @ 05/12/25 21:27:37.316
  STEP: Deleting configmap cm-test-opt-del-8f995e61-5dc5-4c87-b2b9-d35f7bf2aca0 @ 05/12/25 21:27:39.37
  STEP: Updating configmap cm-test-opt-upd-bce81ab3-df40-46d3-8993-f4dc4930275a @ 05/12/25 21:27:39.381
  STEP: Creating configMap with name cm-test-opt-create-485b2709-b405-4a61-9a09-a93137de512b @ 05/12/25 21:27:39.389
  STEP: waiting to observe update in volume @ 05/12/25 21:27:39.395
  I0512 21:27:43.443102 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4645" for this suite. @ 05/12/25 21:27:43.451
• [6.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/12/25 21:27:43.461
  I0512 21:27:43.462044 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 21:27:43.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:43.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:43.486
  STEP: creating pod @ 05/12/25 21:27:43.492
  I0512 21:27:45.544595 19 pods.go:83] Pod pod-hostip-d8ff6265-a196-4633-8b66-8338214061e5 has hostIP: 192.168.1.7
  I0512 21:27:45.544985 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4941" for this suite. @ 05/12/25 21:27:45.551
• [2.096 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 05/12/25 21:27:45.558
  I0512 21:27:45.558676 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename security-context-test @ 05/12/25 21:27:45.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:45.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:45.581
  I0512 21:27:47.608596 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5667" for this suite. @ 05/12/25 21:27:47.616
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/12/25 21:27:47.627
  I0512 21:27:47.627475 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:27:47.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:47.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:47.657
  STEP: Creating configMap with name projected-configmap-test-volume-map-42f13a86-a7e5-4ce0-9437-b113854718bf @ 05/12/25 21:27:47.661
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:27:47.666
  STEP: Saw pod success @ 05/12/25 21:27:51.728
  I0512 21:27:51.737257 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-configmaps-ffa892d2-20c6-41cb-ae4d-15a52c133cdb container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 21:27:51.755
  I0512 21:27:51.773474 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5239" for this suite. @ 05/12/25 21:27:51.778
• [4.157 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/12/25 21:27:51.784
  I0512 21:27:51.784170 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replicaset @ 05/12/25 21:27:51.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:51.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:51.805
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/12/25 21:27:51.809
  I0512 21:27:51.835748 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/12/25 21:27:51.835
  STEP: getting scale subresource @ 05/12/25 21:27:53.851
  STEP: updating a scale subresource @ 05/12/25 21:27:53.855
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/12/25 21:27:53.86
  STEP: Patch a scale subresource @ 05/12/25 21:27:53.867
  I0512 21:27:53.896430 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1380" for this suite. @ 05/12/25 21:27:53.907
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/12/25 21:27:53.927
  I0512 21:27:53.927223 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename namespaces @ 05/12/25 21:27:53.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:53.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:53.974
  STEP: Read namespace status @ 05/12/25 21:27:53.979
  I0512 21:27:53.984799 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/12/25 21:27:53.984
  I0512 21:27:53.990673 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/12/25 21:27:53.99
  I0512 21:27:53.997385 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0512 21:27:53.997661 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4438" for this suite. @ 05/12/25 21:27:54.005
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/12/25 21:27:54.013
  I0512 21:27:54.013071 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/12/25 21:27:54.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:54.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:54.075
  STEP: Setting up the test @ 05/12/25 21:27:54.078
  STEP: Creating hostNetwork=false pod @ 05/12/25 21:27:54.078
  STEP: Creating hostNetwork=true pod @ 05/12/25 21:27:56.11
  STEP: Running the test @ 05/12/25 21:27:58.143
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/12/25 21:27:58.143
  I0512 21:27:58.143787 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:58.143855 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:58.144818 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:58.144926 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0512 21:27:58.280726 19 exec_util.go:111] Exec stderr: ""
  I0512 21:27:58.280795 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:58.280811 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:58.281691 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:58.281781 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0512 21:27:58.354296 19 exec_util.go:111] Exec stderr: ""
  I0512 21:27:58.354533 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:58.354639 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:58.355417 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:58.355609 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0512 21:27:58.476334 19 exec_util.go:111] Exec stderr: ""
  I0512 21:27:58.476858 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:58.477019 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:58.477825 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:58.477916 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0512 21:27:58.596204 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/12/25 21:27:58.596
  I0512 21:27:58.596326 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:58.596364 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:58.597026 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:58.597104 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0512 21:27:58.696210 19 exec_util.go:111] Exec stderr: ""
  I0512 21:27:58.696292 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:58.696308 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:58.696963 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:58.697045 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0512 21:27:58.786467 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/12/25 21:27:58.786
  I0512 21:27:58.786901 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:58.786954 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:58.788356 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:58.788513 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0512 21:27:58.906249 19 exec_util.go:111] Exec stderr: ""
  I0512 21:27:58.906451 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:58.906547 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:58.907543 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:58.907696 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0512 21:27:59.034391 19 exec_util.go:111] Exec stderr: ""
  I0512 21:27:59.034825 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:59.034998 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:59.036165 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:59.036289 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0512 21:27:59.155589 19 exec_util.go:111] Exec stderr: ""
  I0512 21:27:59.155668 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-3794 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:27:59.155687 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:27:59.156753 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:27:59.156859 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-3794/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0512 21:27:59.271001 19 exec_util.go:111] Exec stderr: ""
  I0512 21:27:59.271399 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-3794" for this suite. @ 05/12/25 21:27:59.283
• [5.276 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 05/12/25 21:27:59.289
  I0512 21:27:59.289627 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename statefulset @ 05/12/25 21:27:59.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:27:59.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:27:59.319
  STEP: Creating service test in namespace statefulset-1881 @ 05/12/25 21:27:59.324
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/12/25 21:27:59.328
  STEP: Creating stateful set ss in namespace statefulset-1881 @ 05/12/25 21:27:59.396
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1881 @ 05/12/25 21:27:59.418
  I0512 21:27:59.440758 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0512 21:28:09.427543 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/12/25 21:28:09.427
  I0512 21:28:09.432570 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-1881 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 21:28:09.644981 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 21:28:09.645068 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 21:28:09.645093 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 21:28:09.653080 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0512 21:28:19.655171 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0512 21:28:19.655257 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0512 21:28:19.756382 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999518s
  I0512 21:28:20.773497 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.927525998s
  I0512 21:28:21.781917 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.909643725s
  I0512 21:28:22.788587 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.901821257s
  I0512 21:28:23.798799 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.895359318s
  I0512 21:28:24.806259 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.885138272s
  I0512 21:28:25.812530 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.877625325s
  I0512 21:28:26.822061 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.871409286s
  I0512 21:28:27.831620 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.861423403s
  I0512 21:28:28.841696 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 851.77699ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1881 @ 05/12/25 21:28:29.842
  I0512 21:28:29.850219 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-1881 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 21:28:30.056149 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0512 21:28:30.056217 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 21:28:30.056241 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0512 21:28:30.064089 19 wait.go:40] Found 1 stateful pods, waiting for 3
  I0512 21:28:40.065570 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0512 21:28:40.065934 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0512 21:28:40.066065 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/12/25 21:28:40.066
  STEP: Scale down will halt with unhealthy stateful pod @ 05/12/25 21:28:40.066
  I0512 21:28:40.078179 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-1881 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 21:28:40.298056 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 21:28:40.298112 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 21:28:40.298132 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 21:28:40.298200 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-1881 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 21:28:40.524635 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 21:28:40.524716 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 21:28:40.524743 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 21:28:40.524824 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-1881 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 21:28:40.791301 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 21:28:40.791370 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 21:28:40.791397 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 21:28:40.791416 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0512 21:28:40.807783 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0512 21:28:50.804764 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0512 21:28:50.804887 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0512 21:28:50.804902 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0512 21:28:50.906331 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999443s
  I0512 21:28:51.915483 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.911994488s
  I0512 21:28:52.921586 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.90282924s
  I0512 21:28:53.930917 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.896763658s
  I0512 21:28:54.938055 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.887084915s
  I0512 21:28:55.945830 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.879986121s
  I0512 21:28:56.951374 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.872424483s
  I0512 21:28:57.958432 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.866104454s
  I0512 21:28:58.965559 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.859771828s
  I0512 21:28:59.974070 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 852.776073ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1881 @ 05/12/25 21:29:00.974
  I0512 21:29:00.984220 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-1881 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 21:29:01.205157 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0512 21:29:01.205211 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 21:29:01.205230 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0512 21:29:01.205282 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-1881 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 21:29:01.418023 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0512 21:29:01.418094 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 21:29:01.418131 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0512 21:29:01.418211 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-1881 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 21:29:01.628604 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0512 21:29:01.628682 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 21:29:01.628697 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0512 21:29:01.628711 19 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/12/25 21:29:11.647
  I0512 21:29:11.647801 19 statefulset.go:138] Deleting all statefulset in ns statefulset-1881
  I0512 21:29:11.652792 19 rest.go:150] Scaling statefulset ss to 0
  I0512 21:29:11.661572 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0512 21:29:11.666076 19 rest.go:88] Deleting statefulset ss
  I0512 21:29:11.686221 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1881" for this suite. @ 05/12/25 21:29:11.69
• [72.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/12/25 21:29:11.698
  I0512 21:29:11.698756 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:29:11.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:29:11.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:29:11.729
  STEP: Creating configMap with name projected-configmap-test-volume-b6fbea73-1b76-4252-8a08-bdcfadb4f63f @ 05/12/25 21:29:11.731
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:29:11.734
  STEP: Saw pod success @ 05/12/25 21:29:15.765
  I0512 21:29:15.777689 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-configmaps-3e488c07-88dc-4a3a-977e-3f7295539270 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 21:29:15.792
  I0512 21:29:15.809389 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2871" for this suite. @ 05/12/25 21:29:15.815
• [4.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 05/12/25 21:29:15.825
  I0512 21:29:15.825461 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:29:15.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:29:15.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:29:15.848
  STEP: Setting up server cert @ 05/12/25 21:29:15.953
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:29:16.513
  STEP: Deploying the webhook pod @ 05/12/25 21:29:16.538
  STEP: Wait for the deployment to be ready @ 05/12/25 21:29:16.567
  I0512 21:29:16.590511 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:29:18.608
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:29:18.622
  I0512 21:29:19.623284 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/12/25 21:29:19.636
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/12/25 21:29:19.665
  STEP: Creating a dummy validating-webhook-configuration object @ 05/12/25 21:29:19.69
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/12/25 21:29:19.707
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/12/25 21:29:19.714
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/12/25 21:29:19.725
  I0512 21:29:19.793922 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3009" for this suite. @ 05/12/25 21:29:19.798
  STEP: Destroying namespace "webhook-markers-4214" for this suite. @ 05/12/25 21:29:19.802
• [3.983 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/12/25 21:29:19.808
  I0512 21:29:19.808467 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename podtemplate @ 05/12/25 21:29:19.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:29:19.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:29:19.825
  STEP: Create a pod template @ 05/12/25 21:29:19.827
  STEP: Replace a pod template @ 05/12/25 21:29:19.831
  I0512 21:29:19.838063 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0512 21:29:19.838353 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8275" for this suite. @ 05/12/25 21:29:19.9
• [0.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/12/25 21:29:19.916
  I0512 21:29:19.916825 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename var-expansion @ 05/12/25 21:29:19.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:29:19.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:29:19.939
  I0512 21:29:21.970320 19 delete.go:62] Deleting pod "var-expansion-50d697a1-d22a-4cb1-a293-cb9251e608fb" in namespace "var-expansion-4603"
  I0512 21:29:21.983006 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-50d697a1-d22a-4cb1-a293-cb9251e608fb" to be fully deleted
  I0512 21:29:24.011209 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4603" for this suite. @ 05/12/25 21:29:24.018
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 05/12/25 21:29:24.032
  I0512 21:29:24.032574 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 21:29:24.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:29:24.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:29:24.055
  STEP: Creating pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428 @ 05/12/25 21:29:24.058
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/12/25 21:29:26.082
  I0512 21:29:26.089213 19 container_probe.go:1749] Initial restart count of pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 is 0
  I0512 21:29:26.096576 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:28.105550 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:30.114541 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:32.124346 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:34.131892 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:36.140708 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:38.148046 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:40.156570 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:42.166739 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:44.175732 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:46.182914 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:48.191576 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:50.199371 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:52.209368 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:54.219382 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:56.224903 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:29:58.233204 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:00.237373 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:02.244424 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:04.251975 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:06.259484 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:08.267619 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:10.275607 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:12.282791 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:14.290852 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:16.297962 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:18.305235 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:20.313770 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:22.323761 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:24.332590 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:26.340371 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:28.348286 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:30.356556 19 container_probe.go:1759] Get pod test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 in namespace container-probe-7428
  I0512 21:30:30.356641 19 container_probe.go:1763] Restart count of pod container-probe-7428/test-grpc-cc4199a0-a489-42b3-8182-9985654c8e30 is now 1 (1m4.267358973s elapsed)
  STEP: deleting the pod @ 05/12/25 21:30:30.357
  I0512 21:30:30.373860 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7428" for this suite. @ 05/12/25 21:30:30.379
• [66.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/12/25 21:30:30.388
  I0512 21:30:30.388194 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:30:30.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:30:30.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:30:30.407
  STEP: Creating projection with secret that has name projected-secret-test-map-41f7aef7-d424-4f19-be47-33249ce9b902 @ 05/12/25 21:30:30.409
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:30:30.413
  STEP: Saw pod success @ 05/12/25 21:30:34.444
  I0512 21:30:34.453673 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-secrets-4eca6709-dbe4-48b9-8ba3-2968670beef6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:30:34.464
  I0512 21:30:34.478489 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2637" for this suite. @ 05/12/25 21:30:34.482
• [4.100 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 05/12/25 21:30:34.488
  I0512 21:30:34.488672 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 21:30:34.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:30:34.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:30:34.509
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/12/25 21:30:34.513
  I0512 21:30:34.514872 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:30:35.958020 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:30:41.311413 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9211" for this suite. @ 05/12/25 21:30:41.319
• [6.837 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 05/12/25 21:30:41.327
  I0512 21:30:41.327555 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename statefulset @ 05/12/25 21:30:41.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:30:41.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:30:41.354
  STEP: Creating service test in namespace statefulset-8233 @ 05/12/25 21:30:41.36
  STEP: Looking for a node to schedule stateful set and pod @ 05/12/25 21:30:41.367
  STEP: Creating pod with conflicting port in namespace statefulset-8233 @ 05/12/25 21:30:41.42
  STEP: Waiting until pod test-pod will start running in namespace statefulset-8233 @ 05/12/25 21:30:41.441
  STEP: Creating statefulset with conflicting port in namespace statefulset-8233 @ 05/12/25 21:30:43.455
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-8233 @ 05/12/25 21:30:43.464
  I0512 21:30:43.479750 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-8233, name: ss-0, uid: b6505743-53d5-42de-9df8-9cbb00b776d4, status phase: Pending. Waiting for statefulset controller to delete.
  I0512 21:30:43.500247 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-8233, name: ss-0, uid: b6505743-53d5-42de-9df8-9cbb00b776d4, status phase: Failed. Waiting for statefulset controller to delete.
  I0512 21:30:43.505771 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-8233, name: ss-0, uid: b6505743-53d5-42de-9df8-9cbb00b776d4, status phase: Failed. Waiting for statefulset controller to delete.
  I0512 21:30:43.509741 19 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-8233
  STEP: Removing pod with conflicting port in namespace statefulset-8233 @ 05/12/25 21:30:43.509
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-8233 and will be in running state @ 05/12/25 21:30:43.538
  I0512 21:30:45.559516 19 statefulset.go:138] Deleting all statefulset in ns statefulset-8233
  I0512 21:30:45.566756 19 rest.go:150] Scaling statefulset ss to 0
  I0512 21:30:55.590395 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0512 21:30:55.596858 19 rest.go:88] Deleting statefulset ss
  I0512 21:30:55.627472 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8233" for this suite. @ 05/12/25 21:30:55.631
• [14.310 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/12/25 21:30:55.637
  I0512 21:30:55.637877 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename watch @ 05/12/25 21:30:55.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:30:55.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:30:55.655
  STEP: creating a watch on configmaps with label A @ 05/12/25 21:30:55.66
  STEP: creating a watch on configmaps with label B @ 05/12/25 21:30:55.661
  STEP: creating a watch on configmaps with label A or B @ 05/12/25 21:30:55.662
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/12/25 21:30:55.664
  I0512 21:30:55.669073 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9080  ece4f2b6-f248-421e-b63b-4a464d57b71d 9589 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:30:55.669759 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9080  ece4f2b6-f248-421e-b63b-4a464d57b71d 9589 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/12/25 21:30:55.67
  I0512 21:30:55.677634 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9080  ece4f2b6-f248-421e-b63b-4a464d57b71d 9590 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:30:55.677825 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9080  ece4f2b6-f248-421e-b63b-4a464d57b71d 9590 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/12/25 21:30:55.677
  I0512 21:30:55.684044 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9080  ece4f2b6-f248-421e-b63b-4a464d57b71d 9591 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:30:55.684545 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9080  ece4f2b6-f248-421e-b63b-4a464d57b71d 9591 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/12/25 21:30:55.685
  I0512 21:30:55.689872 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9080  ece4f2b6-f248-421e-b63b-4a464d57b71d 9592 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:30:55.690043 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9080  ece4f2b6-f248-421e-b63b-4a464d57b71d 9592 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/12/25 21:30:55.69
  I0512 21:30:55.693605 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9080  c3c2ebcc-99c9-4dd3-9e20-cadc4a33f0b7 9593 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:30:55.693761 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9080  c3c2ebcc-99c9-4dd3-9e20-cadc4a33f0b7 9593 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/12/25 21:31:05.694
  I0512 21:31:05.706871 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9080  c3c2ebcc-99c9-4dd3-9e20-cadc4a33f0b7 9622 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:31:05.707048 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9080  c3c2ebcc-99c9-4dd3-9e20-cadc4a33f0b7 9622 0 2025-05-12 21:30:55 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-05-12 21:30:55 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:31:15.708699 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9080" for this suite. @ 05/12/25 21:31:15.717
• [20.089 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/12/25 21:31:15.729
  I0512 21:31:15.729135 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replicaset @ 05/12/25 21:31:15.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:15.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:15.758
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/12/25 21:31:15.761
  STEP: When a replicaset with a matching selector is created @ 05/12/25 21:31:17.793
  STEP: Then the orphan pod is adopted @ 05/12/25 21:31:17.801
  STEP: When the matched label of one of its pods change @ 05/12/25 21:31:17.827
  I0512 21:31:17.834337 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/12/25 21:31:17.852
  I0512 21:31:17.868805 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3386" for this suite. @ 05/12/25 21:31:17.889
• [2.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 05/12/25 21:31:17.897
  I0512 21:31:17.897160 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:31:17.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:17.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:17.92
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/12/25 21:31:17.923
  I0512 21:31:17.923479 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-8338 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0512 21:31:18.025118 19 builder.go:146] stderr: ""
  I0512 21:31:18.025163 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/12/25 21:31:18.025
  I0512 21:31:18.036300 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-8338 delete pods e2e-test-httpd-pod'
  I0512 21:31:19.981880 19 builder.go:146] stderr: ""
  I0512 21:31:19.981941 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0512 21:31:19.982149 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8338" for this suite. @ 05/12/25 21:31:19.986
• [2.093 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/12/25 21:31:19.99
  I0512 21:31:19.990542 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename runtimeclass @ 05/12/25 21:31:19.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:20.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:20.009
  I0512 21:31:20.056226 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4577" for this suite. @ 05/12/25 21:31:20.086
• [0.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/12/25 21:31:20.094
  I0512 21:31:20.094874 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename security-context-test @ 05/12/25 21:31:20.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:20.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:20.115
  I0512 21:31:26.179577 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7776" for this suite. @ 05/12/25 21:31:26.185
• [6.100 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 05/12/25 21:31:26.195
  I0512 21:31:26.195085 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:31:26.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:26.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:26.221
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/12/25 21:31:26.226
  I0512 21:31:26.226511 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-5967 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0512 21:31:26.356152 19 builder.go:146] stderr: ""
  I0512 21:31:26.356215 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/12/25 21:31:26.356
  I0512 21:31:26.356386 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-5967 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0512 21:31:26.460824 19 builder.go:146] stderr: ""
  I0512 21:31:26.460894 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/12/25 21:31:26.46
  I0512 21:31:26.465298 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-5967 delete pods e2e-test-httpd-pod'
  I0512 21:31:28.005661 19 builder.go:146] stderr: ""
  I0512 21:31:28.005821 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0512 21:31:28.005984 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5967" for this suite. @ 05/12/25 21:31:28.009
• [1.819 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/12/25 21:31:28.014
  I0512 21:31:28.014507 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename deployment @ 05/12/25 21:31:28.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:28.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:28.034
  I0512 21:31:28.036960 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I0512 21:31:28.060972 19 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 05/12/25 21:31:30.088
  STEP: updating a scale subresource @ 05/12/25 21:31:30.093
  STEP: verifying the deployment Spec.Replicas was modified @ 05/12/25 21:31:30.101
  STEP: Patch a scale subresource @ 05/12/25 21:31:30.107
  I0512 21:31:30.175591 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68fbab7d-2a7d-4f7e-bd47-c5c438ce098b",
      ResourceVersion: (string) (len=4) "9785",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682288,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682289,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0512 21:31:30.211419 19 deployment.go:40] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa45af02-6a84-473b-b0a7-a5eddc38ac76",
      ResourceVersion: (string) (len=4) "9797",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682288,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "68fbab7d-2a7d-4f7e-bd47-c5c438ce098b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 38 66 62 61 62  37 64 2d 32 61 37 64 2d  |\"68fbab7d-2a7d-|
              00000120  34 66 37 65 2d 62 64 34  37 2d 63 35 63 34 33 38  |4f7e-bd47-c5c438|
              00000130  63 65 30 39 38 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ce098b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:31:30.229544 19 deployment.go:68] Pod "test-new-deployment-64bcfc6446-7rx2g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-7rx2g",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aae928f2-6aef-4d2f-b7a4-d1268b194541",
      ResourceVersion: (string) (len=4) "9798",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682290,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "aa45af02-6a84-473b-b0a7-a5eddc38ac76",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  34 35 61 66 30 32 2d 36  |d\":\"aa45af02-6|
              00000090  61 38 34 2d 34 37 33 62  2d 62 30 61 37 2d 61 35  |a84-473b-b0a7-a5|
              000000a0  65 64 64 63 33 38 61 63  37 36 5c 22 7d 22 3a 7b  |eddc38ac76\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2fzcg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2fzcg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:31:30.234718 19 deployment.go:68] Pod "test-new-deployment-64bcfc6446-b6vmf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-b6vmf",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7792759a-09ef-4c5b-9763-c345c29a3c76",
      ResourceVersion: (string) (len=4) "9788",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682290,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "aa45af02-6a84-473b-b0a7-a5eddc38ac76",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  34 35 61 66 30 32 2d 36  |d\":\"aa45af02-6|
              00000090  61 38 34 2d 34 37 33 62  2d 62 30 61 37 2d 61 35  |a84-473b-b0a7-a5|
              000000a0  65 64 64 63 33 38 61 63  37 36 5c 22 7d 22 3a 7b  |eddc38ac76\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m2gc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m2gc2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682290,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m2gc2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:31:30.242683 19 deployment.go:68] Pod "test-new-deployment-64bcfc6446-sjjm9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-sjjm9",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52d16233-8b75-4e3b-a881-bd2b4a340d18",
      ResourceVersion: (string) (len=4) "9803",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682290,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "aa45af02-6a84-473b-b0a7-a5eddc38ac76",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  34 35 61 66 30 32 2d 36  |d\":\"aa45af02-6|
              00000090  61 38 34 2d 34 37 33 62  2d 62 30 61 37 2d 61 35  |a84-473b-b0a7-a5|
              000000a0  65 64 64 63 33 38 61 63  37 36 5c 22 7d 22 3a 7b  |eddc38ac76\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7gx5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7gx5v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682290,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682290,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7gx5v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:31:30.244965 19 deployment.go:68] Pod "test-new-deployment-64bcfc6446-vlhmt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-vlhmt",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-9672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d1264ad-0d1c-4d57-96d0-a2cfd9e4501c",
      ResourceVersion: (string) (len=4) "9773",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682288,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "aa45af02-6a84-473b-b0a7-a5eddc38ac76",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  34 35 61 66 30 32 2d 36  |d\":\"aa45af02-6|
              00000090  61 38 34 2d 34 37 33 62  2d 62 30 61 37 2d 61 35  |a84-473b-b0a7-a5|
              000000a0  65 64 64 63 33 38 61 63  37 36 5c 22 7d 22 3a 7b  |eddc38ac76\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 33  32 5c 22 7d 22 3a 7b 22  |.42.1.132\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nrq27",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nrq27",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682288,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=11) "10.42.1.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682288,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882682288,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c1ee9336ce1e6b7ce2662edf8bd7b153195b92764a0ba17a4aef28388d12edec",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nrq27",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:31:30.246812 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9672" for this suite. @ 05/12/25 21:31:30.25
• [2.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/12/25 21:31:30.256
  I0512 21:31:30.256020 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename events @ 05/12/25 21:31:30.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:30.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:30.298
  STEP: Create set of events @ 05/12/25 21:31:30.3
  STEP: get a list of Events with a label in the current namespace @ 05/12/25 21:31:30.31
  STEP: delete a list of events @ 05/12/25 21:31:30.312
  I0512 21:31:30.312869 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/12/25 21:31:30.327
  I0512 21:31:30.330883 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7245" for this suite. @ 05/12/25 21:31:30.351
• [0.108 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 05/12/25 21:31:30.365
  I0512 21:31:30.365299 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:31:30.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:30.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:30.399
  STEP: Setting up server cert @ 05/12/25 21:31:30.507
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:31:31.483
  STEP: Deploying the webhook pod @ 05/12/25 21:31:31.49
  STEP: Wait for the deployment to be ready @ 05/12/25 21:31:31.499
  I0512 21:31:31.518937 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:31:33.538
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:31:33.551
  I0512 21:31:34.552149 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/12/25 21:31:34.56
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/12/25 21:31:34.561
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/12/25 21:31:34.585
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/12/25 21:31:37.359
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/12/25 21:31:37.359
  STEP: Having no error when timeout is longer than webhook latency @ 05/12/25 21:31:38.399
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/12/25 21:31:38.399
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/12/25 21:31:43.451
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/12/25 21:31:43.451
  I0512 21:31:48.561869 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-642" for this suite. @ 05/12/25 21:31:48.565
  STEP: Destroying namespace "webhook-markers-9715" for this suite. @ 05/12/25 21:31:48.57
• [18.211 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/12/25 21:31:48.576
  I0512 21:31:48.576375 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sysctl @ 05/12/25 21:31:48.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:48.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:48.595
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/12/25 21:31:48.598
  I0512 21:31:48.603343 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8103" for this suite. @ 05/12/25 21:31:48.667
• [0.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 05/12/25 21:31:48.681
  I0512 21:31:48.681795 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename security-context @ 05/12/25 21:31:48.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:48.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:48.706
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/12/25 21:31:48.708
  STEP: Saw pod success @ 05/12/25 21:31:50.736
  I0512 21:31:50.744270 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod security-context-fd34c3f6-3390-4f49-a50e-e5320dbe5f12 container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:31:50.755
  I0512 21:31:50.785835 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8496" for this suite. @ 05/12/25 21:31:50.793
• [2.128 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/12/25 21:31:50.809
  I0512 21:31:50.809753 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:31:50.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:50.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:50.829
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:31:50.836
  STEP: Saw pod success @ 05/12/25 21:31:54.874
  I0512 21:31:54.882798 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-6d80da5a-4235-419f-8010-c7c6e6e1d8b4 container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:31:54.898
  I0512 21:31:54.920182 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3669" for this suite. @ 05/12/25 21:31:54.925
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/12/25 21:31:54.932
  I0512 21:31:54.932803 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename cronjob @ 05/12/25 21:31:54.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:31:54.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:31:54.952
  STEP: Creating a ForbidConcurrent cronjob @ 05/12/25 21:31:54.955
  STEP: Ensuring a job is scheduled @ 05/12/25 21:31:54.96
  STEP: Ensuring exactly one is scheduled @ 05/12/25 21:32:00.967
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/12/25 21:32:00.973
  STEP: Ensuring no more jobs are scheduled @ 05/12/25 21:32:00.98
  STEP: Removing cronjob @ 05/12/25 21:32:00.987
  I0512 21:32:01.000420 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5759" for this suite. @ 05/12/25 21:32:01.01
• [6.091 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 05/12/25 21:32:01.023
  I0512 21:32:01.023599 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename job @ 05/12/25 21:32:01.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:01.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:01.049
  STEP: Creating Indexed job @ 05/12/25 21:32:01.052
  STEP: Ensuring job reaches completions @ 05/12/25 21:32:01.056
  STEP: Ensuring pods with index for job exist @ 05/12/25 21:32:11.071
  I0512 21:32:11.078241 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8375" for this suite. @ 05/12/25 21:32:11.085
• [10.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/12/25 21:32:11.095
  I0512 21:32:11.096180 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-runtime @ 05/12/25 21:32:11.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:11.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:11.123
  STEP: create the container @ 05/12/25 21:32:11.127
  W0512 21:32:11.134055      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/12/25 21:32:11.134
  STEP: get the container status @ 05/12/25 21:32:14.162
  STEP: the container should be terminated @ 05/12/25 21:32:14.168
  STEP: the termination message should be set @ 05/12/25 21:32:14.168
  I0512 21:32:14.168216 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/12/25 21:32:14.168
  I0512 21:32:14.188460 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4469" for this suite. @ 05/12/25 21:32:14.193
• [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/12/25 21:32:14.2
  I0512 21:32:14.200143 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename runtimeclass @ 05/12/25 21:32:14.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:14.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:14.218
  STEP: Deleting RuntimeClass runtimeclass-2863-delete-me @ 05/12/25 21:32:14.223
  STEP: Waiting for the RuntimeClass to disappear @ 05/12/25 21:32:14.227
  I0512 21:32:14.237500 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2863" for this suite. @ 05/12/25 21:32:14.295
• [0.107 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/12/25 21:32:14.308
  I0512 21:32:14.308637 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename watch @ 05/12/25 21:32:14.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:14.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:14.337
  STEP: creating a new configmap @ 05/12/25 21:32:14.341
  STEP: modifying the configmap once @ 05/12/25 21:32:14.347
  STEP: modifying the configmap a second time @ 05/12/25 21:32:14.354
  STEP: deleting the configmap @ 05/12/25 21:32:14.361
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/12/25 21:32:14.366
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/12/25 21:32:14.367
  I0512 21:32:14.368102 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9777  0f34a0d0-2a6e-4a87-8bc1-ccb90601c669 10146 0 2025-05-12 21:32:14 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-12 21:32:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:32:14.368245 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9777  0f34a0d0-2a6e-4a87-8bc1-ccb90601c669 10147 0 2025-05-12 21:32:14 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-05-12 21:32:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:32:14.368343 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9777" for this suite. @ 05/12/25 21:32:14.395
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/12/25 21:32:14.404
  I0512 21:32:14.404321 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename proxy @ 05/12/25 21:32:14.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:14.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:14.433
  I0512 21:32:14.436891 19 proxy.go:293] Creating pod...
  I0512 21:32:16.462025 19 proxy.go:317] Creating service...
  I0512 21:32:16.483582 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy/some/path/with/DELETE
  I0512 21:32:16.517033 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0512 21:32:16.517278 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy/some/path/with/GET
  I0512 21:32:16.530341 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0512 21:32:16.530417 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy/some/path/with/HEAD
  I0512 21:32:16.541252 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0512 21:32:16.541329 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy/some/path/with/OPTIONS
  I0512 21:32:16.554233 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0512 21:32:16.554533 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy/some/path/with/PATCH
  I0512 21:32:16.562969 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0512 21:32:16.563054 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy/some/path/with/POST
  I0512 21:32:16.578693 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0512 21:32:16.578770 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/pods/agnhost/proxy/some/path/with/PUT
  I0512 21:32:16.587270 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0512 21:32:16.587333 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/services/test-service/proxy/some/path/with/DELETE
  I0512 21:32:16.596332 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0512 21:32:16.596424 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/services/test-service/proxy/some/path/with/GET
  I0512 21:32:16.608132 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0512 21:32:16.608220 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/services/test-service/proxy/some/path/with/HEAD
  I0512 21:32:16.616129 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0512 21:32:16.616194 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/services/test-service/proxy/some/path/with/OPTIONS
  I0512 21:32:16.622706 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0512 21:32:16.622989 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/services/test-service/proxy/some/path/with/PATCH
  I0512 21:32:16.629245 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0512 21:32:16.629319 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/services/test-service/proxy/some/path/with/POST
  I0512 21:32:16.636745 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0512 21:32:16.637156 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-2387/services/test-service/proxy/some/path/with/PUT
  I0512 21:32:16.645186 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0512 21:32:16.645632 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2387" for this suite. @ 05/12/25 21:32:16.65
• [2.254 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/12/25 21:32:16.658
  I0512 21:32:16.658743 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:32:16.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:16.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:16.768
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:32:16.774
  STEP: Saw pod success @ 05/12/25 21:32:18.804
  I0512 21:32:18.810931 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-dfc95060-6456-4ef6-826d-c25dc321dcef container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:32:18.822
  I0512 21:32:18.839833 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9965" for this suite. @ 05/12/25 21:32:18.843
• [2.190 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/12/25 21:32:18.849
  I0512 21:32:18.849491 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/12/25 21:32:18.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:18.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:18.881
  I0512 21:32:18.888073 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2187" for this suite. @ 05/12/25 21:32:18.945
• [0.109 seconds]
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/12/25 21:32:18.958
  I0512 21:32:18.958526 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename server-version @ 05/12/25 21:32:18.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:18.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:18.981
  STEP: Request ServerVersion @ 05/12/25 21:32:18.985
  STEP: Confirm major version @ 05/12/25 21:32:18.986
  I0512 21:32:18.986296 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/12/25 21:32:18.986
  I0512 21:32:18.986456 19 server_version.go:58] cleanMinorVersion: 31
  I0512 21:32:18.986537 19 server_version.go:62] Minor version: 31
  I0512 21:32:18.986737 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-206" for this suite. @ 05/12/25 21:32:19.045
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 05/12/25 21:32:19.058
  I0512 21:32:19.058418 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:32:19.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:19.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:19.093
  STEP: creating service endpoint-test2 in namespace services-9628 @ 05/12/25 21:32:19.098
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9628 to expose endpoints map[] @ 05/12/25 21:32:19.109
  I0512 21:32:19.128264 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9628 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9628 @ 05/12/25 21:32:19.128
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9628 to expose endpoints map[pod1:[80]] @ 05/12/25 21:32:21.149
  I0512 21:32:21.162842 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9628 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/12/25 21:32:21.162
  I0512 21:32:21.162974 19 resource.go:361] Creating new exec pod
  I0512 21:32:24.188761 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-9628 exec execpodfkr2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0512 21:32:24.364078 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0512 21:32:24.364123 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:32:24.364188 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-9628 exec execpodfkr2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.246.153 80'
  I0512 21:32:24.539732 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.246.153 80\nConnection to 10.43.246.153 80 port [tcp/http] succeeded!\n"
  I0512 21:32:24.539808 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9628 @ 05/12/25 21:32:24.539
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9628 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/12/25 21:32:26.575
  I0512 21:32:26.600831 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9628 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/12/25 21:32:26.6
  I0512 21:32:27.601823 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-9628 exec execpodfkr2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0512 21:32:27.846847 19 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0512 21:32:27.846936 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:32:27.847068 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-9628 exec execpodfkr2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.246.153 80'
  I0512 21:32:28.056941 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.246.153 80\nConnection to 10.43.246.153 80 port [tcp/http] succeeded!\n"
  I0512 21:32:28.057003 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9628 @ 05/12/25 21:32:28.057
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9628 to expose endpoints map[pod2:[80]] @ 05/12/25 21:32:28.097
  I0512 21:32:28.113822 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9628 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/12/25 21:32:28.113
  I0512 21:32:29.115169 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-9628 exec execpodfkr2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0512 21:32:29.314609 19 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0512 21:32:29.314681 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:32:29.314791 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-9628 exec execpodfkr2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.246.153 80'
  I0512 21:32:29.511473 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.246.153 80\nConnection to 10.43.246.153 80 port [tcp/http] succeeded!\n"
  I0512 21:32:29.511568 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9628 @ 05/12/25 21:32:29.511
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9628 to expose endpoints map[] @ 05/12/25 21:32:29.532
  I0512 21:32:30.559570 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-9628 exposes endpoints map[]
  I0512 21:32:30.587044 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9628" for this suite. @ 05/12/25 21:32:30.595
• [11.543 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/12/25 21:32:30.602
  I0512 21:32:30.602567 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:32:30.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:30.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:30.628
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/12/25 21:32:30.637
  STEP: Saw pod success @ 05/12/25 21:32:34.671
  I0512 21:32:34.678374 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-00906191-7cbf-4282-9c6b-8b565b09727f container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:32:34.69
  I0512 21:32:34.708496 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8830" for this suite. @ 05/12/25 21:32:34.714
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/12/25 21:32:34.721
  I0512 21:32:34.721970 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 21:32:34.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:34.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:34.74
  STEP: creating a ConfigMap @ 05/12/25 21:32:34.743
  STEP: fetching the ConfigMap @ 05/12/25 21:32:34.746
  STEP: patching the ConfigMap @ 05/12/25 21:32:34.75
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/12/25 21:32:34.754
  STEP: deleting the ConfigMap by collection with a label selector @ 05/12/25 21:32:34.756
  STEP: listing all ConfigMaps in test namespace @ 05/12/25 21:32:34.762
  I0512 21:32:34.764762 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2857" for this suite. @ 05/12/25 21:32:34.813
• [0.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/12/25 21:32:34.825
  I0512 21:32:34.825095 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 21:32:34.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:34.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:34.851
  I0512 21:32:34.855877 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: creating the pod @ 05/12/25 21:32:34.857
  STEP: submitting the pod to kubernetes @ 05/12/25 21:32:34.858
  I0512 21:32:36.921803 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3223" for this suite. @ 05/12/25 21:32:36.932
• [2.116 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/12/25 21:32:36.941
  I0512 21:32:36.941085 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename init-container @ 05/12/25 21:32:36.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:36.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:36.963
  STEP: creating the pod @ 05/12/25 21:32:36.967
  I0512 21:32:36.967378 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0512 21:32:39.771171 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1953" for this suite. @ 05/12/25 21:32:39.776
• [2.840 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/12/25 21:32:39.781
  I0512 21:32:39.781813 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replication-controller @ 05/12/25 21:32:39.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:39.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:39.801
  I0512 21:32:39.805805 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/12/25 21:32:40.824
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/12/25 21:32:40.833
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/12/25 21:32:41.849
  I0512 21:32:41.860726 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/12/25 21:32:41.86
  I0512 21:32:42.873038 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3521" for this suite. @ 05/12/25 21:32:42.882
• [3.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/12/25 21:32:42.895
  I0512 21:32:42.895795 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:32:42.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:42.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:42.921
  STEP: Creating projection with secret that has name projected-secret-test-db22c238-1246-439f-aba3-eb553555cc60 @ 05/12/25 21:32:42.924
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:32:42.929
  STEP: Saw pod success @ 05/12/25 21:32:46.96
  I0512 21:32:46.967257 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-secrets-6e8f0b0f-d89f-4e9f-b457-293e41a363f6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:32:46.979
  I0512 21:32:46.998729 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3119" for this suite. @ 05/12/25 21:32:47.003
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 05/12/25 21:32:47.016
  I0512 21:32:47.016976 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 21:32:47.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:47.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:47.041
  STEP: Counting existing ResourceQuota @ 05/12/25 21:32:47.044
  STEP: Creating a ResourceQuota @ 05/12/25 21:32:52.05
  STEP: Ensuring resource quota status is calculated @ 05/12/25 21:32:52.056
  STEP: Creating a Service @ 05/12/25 21:32:54.064
  STEP: Creating a NodePort Service @ 05/12/25 21:32:54.088
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/12/25 21:32:54.104
  STEP: Ensuring resource quota status captures service creation @ 05/12/25 21:32:54.121
  STEP: Deleting Services @ 05/12/25 21:32:56.127
  STEP: Ensuring resource quota status released usage @ 05/12/25 21:32:56.179
  I0512 21:32:58.187976 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6598" for this suite. @ 05/12/25 21:32:58.195
• [11.190 seconds]
------------------------------
S
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/12/25 21:32:58.208
  I0512 21:32:58.208065 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename lease-test @ 05/12/25 21:32:58.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:58.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:58.236
  I0512 21:32:58.303584 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4683" for this suite. @ 05/12/25 21:32:58.307
• [0.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/12/25 21:32:58.313
  I0512 21:32:58.313027 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename ingressclass @ 05/12/25 21:32:58.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:58.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:58.334
  STEP: getting /apis @ 05/12/25 21:32:58.336
  STEP: getting /apis/networking.k8s.io @ 05/12/25 21:32:58.343
  STEP: getting /apis/networking.k8s.iov1 @ 05/12/25 21:32:58.345
  STEP: creating @ 05/12/25 21:32:58.347
  STEP: getting @ 05/12/25 21:32:58.359
  STEP: listing @ 05/12/25 21:32:58.362
  STEP: watching @ 05/12/25 21:32:58.365
  I0512 21:32:58.366107 19 ingressclass.go:348] starting watch
  STEP: patching @ 05/12/25 21:32:58.367
  STEP: updating @ 05/12/25 21:32:58.372
  I0512 21:32:58.377013 19 ingressclass.go:364] waiting for watch events with expected annotations
  I0512 21:32:58.377078 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/12/25 21:32:58.377
  STEP: deleting a collection @ 05/12/25 21:32:58.391
  I0512 21:32:58.404593 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4671" for this suite. @ 05/12/25 21:32:58.407
• [0.100 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/12/25 21:32:58.413
  I0512 21:32:58.413258 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename namespaces @ 05/12/25 21:32:58.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:58.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:32:58.433
  STEP: Creating a test namespace @ 05/12/25 21:32:58.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:32:58.541
  STEP: Creating a pod in the namespace @ 05/12/25 21:32:58.545
  STEP: Waiting for the pod to have running status @ 05/12/25 21:32:58.555
  STEP: Deleting the namespace @ 05/12/25 21:33:00.568
  STEP: Waiting for the namespace to be removed. @ 05/12/25 21:33:00.575
  STEP: Recreating the namespace @ 05/12/25 21:33:11.582
  STEP: Verifying there are no pods in the namespace @ 05/12/25 21:33:11.607
  I0512 21:33:11.611205 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6946" for this suite. @ 05/12/25 21:33:11.62
  STEP: Destroying namespace "nsdeletetest-4318" for this suite. @ 05/12/25 21:33:11.631
  I0512 21:33:11.636068 19 framework.go:370] Namespace nsdeletetest-4318 was already deleted
  STEP: Destroying namespace "nsdeletetest-8919" for this suite. @ 05/12/25 21:33:11.636
• [13.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/12/25 21:33:11.644
  I0512 21:33:11.644817 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename deployment @ 05/12/25 21:33:11.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:33:11.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:33:11.717
  STEP: creating a Deployment @ 05/12/25 21:33:11.727
  STEP: waiting for Deployment to be created @ 05/12/25 21:33:11.734
  STEP: waiting for all Replicas to be Ready @ 05/12/25 21:33:11.741
  I0512 21:33:11.745993 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0512 21:33:11.746161 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0512 21:33:11.753077 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0512 21:33:11.753112 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0512 21:33:11.764140 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0512 21:33:11.764174 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0512 21:33:11.813749 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0512 21:33:11.813984 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0512 21:33:12.772028 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0512 21:33:12.772189 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0512 21:33:12.944316 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/12/25 21:33:12.944
  I0512 21:33:12.955650 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/12/25 21:33:12.955
  I0512 21:33:12.959957 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0
  I0512 21:33:12.960109 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0
  I0512 21:33:12.960311 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0
  I0512 21:33:12.960411 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0
  I0512 21:33:12.960629 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0
  I0512 21:33:12.960743 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0
  I0512 21:33:12.960832 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0
  I0512 21:33:12.960922 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 0
  I0512 21:33:12.961349 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:12.961515 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:12.961612 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:12.961698 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:12.961933 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:12.962045 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:12.965692 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:12.965808 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:12.990190 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:12.990362 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:13.012997 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:13.013058 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:13.037842 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:13.038077 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:13.945795 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:13.945857 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:13.986482 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  STEP: listing Deployments @ 05/12/25 21:33:13.986
  I0512 21:33:14.001693 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/12/25 21:33:14.001
  I0512 21:33:14.015890 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/12/25 21:33:14.015
  I0512 21:33:14.038937 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:14.039091 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:14.061099 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:14.095006 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:14.102471 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:14.778962 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:14.962846 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:15.166515 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:15.215588 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0512 21:33:16.803194 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/12/25 21:33:16.83
  STEP: fetching the DeploymentStatus @ 05/12/25 21:33:16.839
  I0512 21:33:16.844788 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:16.845065 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:16.845323 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:16.845348 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:16.845824 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 1
  I0512 21:33:16.845980 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:16.846006 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 3
  I0512 21:33:16.846607 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:16.846645 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 2
  I0512 21:33:16.846807 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-463 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/12/25 21:33:16.847
  I0512 21:33:16.856805 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.856990 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.857239 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.857750 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.858102 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.858147 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.858595 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.858661 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.858685 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.858874 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.858928 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.859002 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.859127 19 deployment.go:475] observed event type MODIFIED
  I0512 21:33:16.867146 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0512 21:33:16.879051 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-463" for this suite. @ 05/12/25 21:33:16.892
• [5.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 05/12/25 21:33:16.923
  I0512 21:33:16.923325 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 21:33:16.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:33:16.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:33:16.96
  I0512 21:34:16.987264 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4987" for this suite. @ 05/12/25 21:34:16.995
• [60.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/12/25 21:34:17.005
  I0512 21:34:17.005688 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:34:17.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:34:17.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:34:17.028
  STEP: Creating the pod @ 05/12/25 21:34:17.032
  I0512 21:34:19.603894 19 pod_client.go:173] Successfully updated pod "labelsupdateb14a9d84-33ae-45d0-b1fb-07b4c9d23a50"
  I0512 21:34:21.637207 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-133" for this suite. @ 05/12/25 21:34:21.645
• [4.649 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 05/12/25 21:34:21.657
  I0512 21:34:21.657894 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename daemonsets @ 05/12/25 21:34:21.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:34:21.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:34:21.684
  STEP: Creating simple DaemonSet "daemon-set" @ 05/12/25 21:34:21.762
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/12/25 21:34:21.768
  I0512 21:34:21.850959 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:34:21.851013 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:34:22.783305 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:34:22.783376 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:34:23.780983 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 21:34:23.781580 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 05/12/25 21:34:23.787
  I0512 21:34:23.790895 19 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/12/25 21:34:23.79
  I0512 21:34:23.801479 19 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/12/25 21:34:23.801
  I0512 21:34:23.804103 19 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0512 21:34:23.804546 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0512 21:34:23.805198 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0512 21:34:23.805954 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0512 21:34:23.806028 19 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3649 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0512 21:34:23.806056 19 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/12/25 21:34:23.806
  STEP: watching for the daemon set status to be patched @ 05/12/25 21:34:23.811
  I0512 21:34:23.814671 19 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0512 21:34:23.814942 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0512 21:34:23.815268 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0512 21:34:23.815691 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0512 21:34:23.815829 19 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3649 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0512 21:34:23.816154 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0512 21:34:23.816255 19 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3649 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0512 21:34:23.816326 19 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/12/25 21:34:23.819
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3649, will wait for the garbage collector to delete the pods @ 05/12/25 21:34:23.819
  I0512 21:34:23.882846 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.224167ms
  I0512 21:34:23.983973 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.122472ms
  I0512 21:34:25.192488 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:34:25.192738 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0512 21:34:25.199658 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11065"},"items":null}

  I0512 21:34:25.207191 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11065"},"items":null}

  I0512 21:34:25.221843 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3649" for this suite. @ 05/12/25 21:34:25.225
• [3.573 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/12/25 21:34:25.231
  I0512 21:34:25.231813 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:34:25.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:34:25.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:34:25.252
  STEP: Creating secret with name s-test-opt-del-5955abf5-33f2-4f9b-a71d-e107b1c92a75 @ 05/12/25 21:34:25.314
  STEP: Creating secret with name s-test-opt-upd-3d4220b6-654c-4a16-943f-aeae11d04289 @ 05/12/25 21:34:25.322
  STEP: Creating the pod @ 05/12/25 21:34:25.341
  STEP: Deleting secret s-test-opt-del-5955abf5-33f2-4f9b-a71d-e107b1c92a75 @ 05/12/25 21:34:27.407
  STEP: Updating secret s-test-opt-upd-3d4220b6-654c-4a16-943f-aeae11d04289 @ 05/12/25 21:34:27.415
  STEP: Creating secret with name s-test-opt-create-c8a00157-bf1d-4e76-8910-20cd3b1dd229 @ 05/12/25 21:34:27.421
  STEP: waiting to observe update in volume @ 05/12/25 21:34:27.426
  I0512 21:34:31.483401 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3143" for this suite. @ 05/12/25 21:34:31.489
• [6.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/12/25 21:34:31.503
  I0512 21:34:31.503934 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename deployment @ 05/12/25 21:34:31.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:34:31.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:34:31.531
  I0512 21:34:31.576942 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/12/25 21:34:31.577
  I0512 21:34:33.596591 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/12/25 21:34:33.613
  I0512 21:34:35.657811 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1483",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1eac1bb-9e34-4762-9ae7-2d0a35a44765",
      ResourceVersion: (string) (len=5) "11174",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=75) "ReplicaSet \"test-cleanup-deployment-898f8f847\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0512 21:34:35.667106 19 deployment.go:40] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1483",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23f09659-f6e8-4ba1-9aa6-9f206ba84208",
      ResourceVersion: (string) (len=5) "11164",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "f1eac1bb-9e34-4762-9ae7-2d0a35a44765",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 31 65 61 63 31  62 62 2d 39 65 33 34 2d  |\"f1eac1bb-9e34-|
              00000120  34 37 36 32 2d 39 61 65  37 2d 32 64 30 61 33 35  |4762-9ae7-2d0a35|
              00000130  61 34 34 37 36 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a44765\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:34:35.677669 19 deployment.go:68] Pod "test-cleanup-deployment-898f8f847-q7nc4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-q7nc4",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-1483",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a02b2793-c030-4a74-9a7d-396077953332",
      ResourceVersion: (string) (len=5) "11163",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "23f09659-f6e8-4ba1-9aa6-9f206ba84208",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  66 30 39 36 35 39 2d 66  |d\":\"23f09659-f|
              00000090  36 65 38 2d 34 62 61 31  2d 39 61 61 36 2d 39 66  |6e8-4ba1-9aa6-9f|
              000000a0  32 30 36 62 61 38 34 32  30 38 5c 22 7d 22 3a 7b  |206ba84208\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 36  30 5c 22 7d 22 3a 7b 22  |.42.1.160\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-97z9j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-97z9j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882682473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=11) "10.42.1.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882682473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882682474,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://40c383d8333eeec92bf1a08f8690c8b3e7f8c87ad384495d5aafd8dd5846030c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-97z9j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:34:35.684517 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1483" for this suite. @ 05/12/25 21:34:35.692
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/12/25 21:34:35.703
  I0512 21:34:35.703735 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename var-expansion @ 05/12/25 21:34:35.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:34:35.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:34:35.726
  STEP: creating the pod @ 05/12/25 21:34:35.729
  STEP: waiting for pod running @ 05/12/25 21:34:35.738
  STEP: creating a file in subpath @ 05/12/25 21:34:37.754
  I0512 21:34:37.760749 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6724 PodName:var-expansion-40ab38cf-aead-450c-a7ef-58926bc9348c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:34:37.760832 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:34:37.762337 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:34:37.762528 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-6724/pods/var-expansion-40ab38cf-aead-450c-a7ef-58926bc9348c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/12/25 21:34:37.91
  I0512 21:34:37.917056 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6724 PodName:var-expansion-40ab38cf-aead-450c-a7ef-58926bc9348c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 21:34:37.917117 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:34:37.918137 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 21:34:37.918276 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-6724/pods/var-expansion-40ab38cf-aead-450c-a7ef-58926bc9348c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/12/25 21:34:38.066
  I0512 21:34:38.586424 19 pod_client.go:173] Successfully updated pod "var-expansion-40ab38cf-aead-450c-a7ef-58926bc9348c"
  STEP: waiting for annotated pod running @ 05/12/25 21:34:38.586
  STEP: deleting the pod gracefully @ 05/12/25 21:34:38.592
  I0512 21:34:38.592655 19 delete.go:62] Deleting pod "var-expansion-40ab38cf-aead-450c-a7ef-58926bc9348c" in namespace "var-expansion-6724"
  I0512 21:34:38.599116 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-40ab38cf-aead-450c-a7ef-58926bc9348c" to be fully deleted
  I0512 21:35:10.733133 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6724" for this suite. @ 05/12/25 21:35:10.739
• [35.047 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/12/25 21:35:10.751
  I0512 21:35:10.751634 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 21:35:10.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:35:10.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:35:10.775
  STEP: Creating configMap with name configmap-test-upd-93600e6c-4ee9-40bc-8087-1df4011fb0c5 @ 05/12/25 21:35:10.84
  STEP: Creating the pod @ 05/12/25 21:35:10.849
  STEP: Updating configmap configmap-test-upd-93600e6c-4ee9-40bc-8087-1df4011fb0c5 @ 05/12/25 21:35:12.907
  STEP: waiting to observe update in volume @ 05/12/25 21:35:12.913
  I0512 21:36:29.576757 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-672" for this suite. @ 05/12/25 21:36:29.582
• [78.838 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/12/25 21:36:29.592
  I0512 21:36:29.592453 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename watch @ 05/12/25 21:36:29.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:36:29.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:36:29.623
  STEP: creating a watch on configmaps with a certain label @ 05/12/25 21:36:29.627
  STEP: creating a new configmap @ 05/12/25 21:36:29.629
  STEP: modifying the configmap once @ 05/12/25 21:36:29.634
  STEP: changing the label value of the configmap @ 05/12/25 21:36:29.642
  STEP: Expecting to observe a delete notification for the watched object @ 05/12/25 21:36:29.651
  I0512 21:36:29.652115 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5400  e8010ba4-b335-4237-9e44-067874fa209b 11367 0 2025-05-12 21:36:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-12 21:36:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:36:29.652928 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5400  e8010ba4-b335-4237-9e44-067874fa209b 11368 0 2025-05-12 21:36:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-12 21:36:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:36:29.653548 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5400  e8010ba4-b335-4237-9e44-067874fa209b 11369 0 2025-05-12 21:36:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-12 21:36:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/12/25 21:36:29.653
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/12/25 21:36:29.662
  STEP: changing the label value of the configmap back @ 05/12/25 21:36:39.662
  STEP: modifying the configmap a third time @ 05/12/25 21:36:39.672
  STEP: deleting the configmap @ 05/12/25 21:36:39.679
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/12/25 21:36:39.685
  I0512 21:36:39.686084 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5400  e8010ba4-b335-4237-9e44-067874fa209b 11391 0 2025-05-12 21:36:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-12 21:36:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:36:39.686647 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5400  e8010ba4-b335-4237-9e44-067874fa209b 11392 0 2025-05-12 21:36:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-12 21:36:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:36:39.687595 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5400  e8010ba4-b335-4237-9e44-067874fa209b 11393 0 2025-05-12 21:36:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-05-12 21:36:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0512 21:36:39.688402 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5400" for this suite. @ 05/12/25 21:36:39.696
• [10.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 05/12/25 21:36:39.713
  I0512 21:36:39.713797 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename dns @ 05/12/25 21:36:39.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:36:39.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:36:39.751
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7195.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-7195.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/12/25 21:36:39.755
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-7195.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-7195.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/12/25 21:36:39.755
  STEP: creating a pod to probe /etc/hosts @ 05/12/25 21:36:39.755
  STEP: submitting the pod to kubernetes @ 05/12/25 21:36:39.755
  STEP: retrieving the pod @ 05/12/25 21:36:41.779
  STEP: looking for the results for each expected name from probers @ 05/12/25 21:36:41.785
  I0512 21:36:41.818874 19 dns_common.go:528] DNS probes using dns-7195/dns-test-92da54b8-a7e2-4daa-9941-54a243020379 succeeded

  STEP: deleting the pod @ 05/12/25 21:36:41.819
  I0512 21:36:41.832117 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7195" for this suite. @ 05/12/25 21:36:41.838
• [2.136 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 05/12/25 21:36:41.851
  I0512 21:36:41.851390 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename statefulset @ 05/12/25 21:36:41.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:36:41.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:36:41.87
  STEP: Creating service test in namespace statefulset-3988 @ 05/12/25 21:36:41.872
  STEP: Creating stateful set ss in namespace statefulset-3988 @ 05/12/25 21:36:41.88
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3988 @ 05/12/25 21:36:41.901
  I0512 21:36:41.931457 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0512 21:36:51.910926 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/12/25 21:36:51.911
  I0512 21:36:51.918054 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-3988 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 21:36:52.126015 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 21:36:52.126078 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 21:36:52.126099 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 21:36:52.133297 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0512 21:37:02.133500 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0512 21:37:02.133600 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0512 21:37:02.157670 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999288s
  I0512 21:37:03.166463 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.990175433s
  I0512 21:37:04.174186 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.981493485s
  I0512 21:37:05.181744 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.973924504s
  I0512 21:37:06.190983 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.96556377s
  I0512 21:37:07.200052 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.957142627s
  I0512 21:37:08.209557 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.947962805s
  I0512 21:37:09.216940 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.938649329s
  I0512 21:37:10.225445 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.931285046s
  I0512 21:37:11.243997 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 922.294257ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3988 @ 05/12/25 21:37:12.244
  I0512 21:37:12.257763 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-3988 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 21:37:12.480448 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0512 21:37:12.480511 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 21:37:12.480534 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0512 21:37:12.480596 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-3988 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 21:37:12.690381 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0512 21:37:12.690427 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 21:37:12.690442 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0512 21:37:12.690488 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-3988 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 21:37:12.901490 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0512 21:37:12.901570 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 21:37:12.901606 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0512 21:37:12.912083 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0512 21:37:22.911070 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0512 21:37:22.911250 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0512 21:37:22.911277 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/12/25 21:37:22.911
  I0512 21:37:22.917338 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-3988 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 21:37:23.151860 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 21:37:23.151964 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 21:37:23.152008 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 21:37:23.152128 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-3988 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 21:37:23.376664 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 21:37:23.376704 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 21:37:23.376715 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 21:37:23.376754 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-3988 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 21:37:23.571408 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 21:37:23.571485 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 21:37:23.571515 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 21:37:23.571555 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0512 21:37:23.576475 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 1
  I0512 21:37:33.585865 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0512 21:37:33.585937 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0512 21:37:33.585962 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0512 21:37:33.639638 19 resource.go:168] POD   NODE                                                           PHASE    GRACE  CONDITIONS
  I0512 21:37:33.640018 19 resource.go:175] ss-0  k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:36:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:36:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:36:41 +0000 UTC  }]
  I0512 21:37:33.640219 19 resource.go:175] ss-1  k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:23 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:02 +0000 UTC  }]
  I0512 21:37:33.640414 19 resource.go:175] ss-2  k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:24 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:02 +0000 UTC  }]
  I0512 21:37:33.640575 19 resource.go:178] 
  I0512 21:37:33.640718 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I0512 21:37:34.650903 19 resource.go:168] POD   NODE                                                           PHASE      GRACE  CONDITIONS
  I0512 21:37:34.651089 19 resource.go:175] ss-0  k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:36:41 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:23 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:23 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:36:41 +0000 UTC  }]
  I0512 21:37:34.651218 19 resource.go:175] ss-1  k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:34 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:02 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:23 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:23 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 21:37:02 +0000 UTC  }]
  I0512 21:37:34.651268 19 resource.go:178] 
  I0512 21:37:34.651291 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 2
  I0512 21:37:35.659345 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.947229029s
  I0512 21:37:36.666496 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.939642868s
  I0512 21:37:37.672827 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.932660772s
  I0512 21:37:38.682699 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.926077324s
  I0512 21:37:39.689613 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.916385151s
  I0512 21:37:40.696936 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.90955117s
  I0512 21:37:41.703577 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.902081088s
  I0512 21:37:42.711630 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 895.45501ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3988 @ 05/12/25 21:37:43.712
  I0512 21:37:43.719928 19 rest.go:150] Scaling statefulset ss to 0
  I0512 21:37:43.731983 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0512 21:37:43.737624 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3988
  I0512 21:37:43.743307 19 rest.go:150] Scaling statefulset ss to 0
  I0512 21:37:43.753554 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0512 21:37:43.758626 19 rest.go:88] Deleting statefulset ss
  I0512 21:37:43.781005 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3988" for this suite. @ 05/12/25 21:37:43.787
• [61.941 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/12/25 21:37:43.793
  I0512 21:37:43.793487 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/12/25 21:37:43.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:37:43.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:37:43.813
  STEP: Creating two CSIDrivers @ 05/12/25 21:37:43.816
  STEP: Getting "inline-driver-21842289-64f7-4476-9602-9cae344349fa" & "inline-driver-47436b0b-c406-41d9-80eb-5435fe10c080" @ 05/12/25 21:37:43.827
  STEP: Patching the CSIDriver "inline-driver-47436b0b-c406-41d9-80eb-5435fe10c080" @ 05/12/25 21:37:43.832
  STEP: Updating the CSIDriver "inline-driver-47436b0b-c406-41d9-80eb-5435fe10c080" @ 05/12/25 21:37:43.845
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-3052" @ 05/12/25 21:37:43.853
  STEP: Deleting CSIDriver "inline-driver-21842289-64f7-4476-9602-9cae344349fa" @ 05/12/25 21:37:43.856
  STEP: Confirm deletion of CSIDriver "inline-driver-21842289-64f7-4476-9602-9cae344349fa" @ 05/12/25 21:37:43.862
  STEP: Deleting CSIDriver "inline-driver-47436b0b-c406-41d9-80eb-5435fe10c080" via DeleteCollection @ 05/12/25 21:37:43.864
  STEP: Confirm deletion of CSIDriver "inline-driver-47436b0b-c406-41d9-80eb-5435fe10c080" @ 05/12/25 21:37:43.87
  I0512 21:37:43.872684 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3052" for this suite. @ 05/12/25 21:37:43.886
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 05/12/25 21:37:43.894
  I0512 21:37:43.894255 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:37:43.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:37:43.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:37:43.92
  STEP: creating the pod @ 05/12/25 21:37:43.923
  I0512 21:37:43.923757 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7023 create -f -'
  I0512 21:37:44.092004 19 builder.go:146] stderr: ""
  I0512 21:37:44.092054 19 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/12/25 21:37:46.11
  I0512 21:37:46.110553 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7023 label pods pause testing-label=testing-label-value'
  I0512 21:37:46.233804 19 builder.go:146] stderr: ""
  I0512 21:37:46.233879 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/12/25 21:37:46.233
  I0512 21:37:46.234006 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7023 get pod pause -L testing-label'
  I0512 21:37:46.311854 19 builder.go:146] stderr: ""
  I0512 21:37:46.311932 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/12/25 21:37:46.311
  I0512 21:37:46.312207 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7023 label pods pause testing-label-'
  I0512 21:37:46.414622 19 builder.go:146] stderr: ""
  I0512 21:37:46.414708 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/12/25 21:37:46.414
  I0512 21:37:46.415196 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7023 get pod pause -L testing-label'
  I0512 21:37:46.499778 19 builder.go:146] stderr: ""
  I0512 21:37:46.499850 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/12/25 21:37:46.499
  I0512 21:37:46.500073 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7023 delete --grace-period=0 --force -f -'
  I0512 21:37:46.595713 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 21:37:46.595764 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0512 21:37:46.595821 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7023 get rc,svc -l name=pause --no-headers'
  I0512 21:37:46.681428 19 builder.go:146] stderr: "No resources found in kubectl-7023 namespace.\n"
  I0512 21:37:46.681497 19 builder.go:147] stdout: ""
  I0512 21:37:46.681555 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7023 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0512 21:37:46.771614 19 builder.go:146] stderr: ""
  I0512 21:37:46.771666 19 builder.go:147] stdout: ""
  I0512 21:37:46.772060 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7023" for this suite. @ 05/12/25 21:37:46.778
• [2.893 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/12/25 21:37:46.787
  I0512 21:37:46.787895 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 21:37:46.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:37:46.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:37:46.812
  STEP: Creating configMap configmap-8076/configmap-test-315e5839-6e78-4193-962e-e1242be91c96 @ 05/12/25 21:37:46.816
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:37:46.82
  STEP: Saw pod success @ 05/12/25 21:37:50.846
  I0512 21:37:50.851203 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-d0d4de5e-c670-4bc4-a58c-c8798d980b02 container env-test: <nil>
  STEP: delete the pod @ 05/12/25 21:37:50.864
  I0512 21:37:50.883680 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8076" for this suite. @ 05/12/25 21:37:50.889
• [4.112 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 05/12/25 21:37:50.899
  I0512 21:37:50.899902 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:37:50.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:37:50.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:37:50.924
  STEP: creating service in namespace services-5082 @ 05/12/25 21:37:50.927
  STEP: creating service affinity-clusterip in namespace services-5082 @ 05/12/25 21:37:50.927
  STEP: creating replication controller affinity-clusterip in namespace services-5082 @ 05/12/25 21:37:50.934
  I0512 21:37:50.943157      19 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5082, replica count: 3
  I0512 21:37:53.994828      19 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 21:37:54.007223 19 resource.go:361] Creating new exec pod
  I0512 21:37:57.029208 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-5082 exec execpod-affinityr5mcm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0512 21:37:57.261123 19 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0512 21:37:57.261247 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:37:57.261334 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-5082 exec execpod-affinityr5mcm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.108.223 80'
  I0512 21:37:57.466044 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.108.223 80\nConnection to 10.43.108.223 80 port [tcp/http] succeeded!\n"
  I0512 21:37:57.466095 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:37:57.466165 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-5082 exec execpod-affinityr5mcm -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.108.223:80/ ; done'
  I0512 21:37:57.773295 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.108.223:80/\n"
  I0512 21:37:57.773357 19 builder.go:147] stdout: "\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc\naffinity-clusterip-7m6xc"
  I0512 21:37:57.773376 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773389 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773423 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773435 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773447 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773625 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773651 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773697 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773769 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773778 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773786 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773794 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773801 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773809 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773829 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.773837 19 service.go:242] Received response from host: affinity-clusterip-7m6xc
  I0512 21:37:57.774029 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5082, will wait for the garbage collector to delete the pods @ 05/12/25 21:37:57.79
  I0512 21:37:57.866162 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 11.498758ms
  I0512 21:37:57.966618 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.450163ms
  I0512 21:38:01.004698 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5082" for this suite. @ 05/12/25 21:38:01.012
• [10.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 05/12/25 21:38:01.018
  I0512 21:38:01.018668 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubelet-test @ 05/12/25 21:38:01.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:38:01.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:38:01.035
  I0512 21:38:03.075515 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8450" for this suite. @ 05/12/25 21:38:03.082
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 05/12/25 21:38:03.097
  I0512 21:38:03.097082 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:38:03.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:38:03.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:38:03.123
  STEP: Setting up server cert @ 05/12/25 21:38:03.226
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:38:03.706
  STEP: Deploying the webhook pod @ 05/12/25 21:38:03.719
  STEP: Wait for the deployment to be ready @ 05/12/25 21:38:03.742
  I0512 21:38:03.779295 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 21, 38, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 38, 3, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-5b9c4f9645\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 21, 38, 3, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 21, 38, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/12/25 21:38:05.786
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:38:05.805
  I0512 21:38:06.805600 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/12/25 21:38:06.82
  I0512 21:38:06.875080 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-363" for this suite. @ 05/12/25 21:38:06.886
  STEP: Destroying namespace "webhook-markers-2453" for this suite. @ 05/12/25 21:38:06.901
• [3.809 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/12/25 21:38:06.906
  I0512 21:38:06.906858 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename events @ 05/12/25 21:38:06.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:38:06.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:38:06.925
  STEP: Create set of events @ 05/12/25 21:38:06.929
  I0512 21:38:06.934223 19 core_events.go:198] created test-event-1
  I0512 21:38:06.938029 19 core_events.go:198] created test-event-2
  I0512 21:38:06.942445 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/12/25 21:38:06.942
  STEP: delete collection of events @ 05/12/25 21:38:06.946
  I0512 21:38:06.946252 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/12/25 21:38:06.961
  I0512 21:38:06.961426 19 core_events.go:230] requesting list of events to confirm quantity
  I0512 21:38:06.965265 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4075" for this suite. @ 05/12/25 21:38:06.985
• [0.085 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 05/12/25 21:38:06.992
  I0512 21:38:06.992262 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 21:38:06.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:38:07.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:38:07.033
  STEP: Counting existing ResourceQuota @ 05/12/25 21:38:07.036
  STEP: Creating a ResourceQuota @ 05/12/25 21:38:12.041
  STEP: Ensuring resource quota status is calculated @ 05/12/25 21:38:12.048
  STEP: Creating a Pod that fits quota @ 05/12/25 21:38:14.055
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/12/25 21:38:14.077
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/12/25 21:38:16.083
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/12/25 21:38:16.086
  STEP: Ensuring a pod cannot update its resource requirements @ 05/12/25 21:38:16.089
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/12/25 21:38:16.095
  STEP: Deleting the pod @ 05/12/25 21:38:18.102
  STEP: Ensuring resource quota status released the pod usage @ 05/12/25 21:38:18.123
  I0512 21:38:20.131217 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3971" for this suite. @ 05/12/25 21:38:20.139
• [13.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 05/12/25 21:38:20.154
  I0512 21:38:20.154908 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename field-validation @ 05/12/25 21:38:20.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:38:20.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:38:20.179
  I0512 21:38:20.182724 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  W0512 21:38:22.739715      19 warnings.go:70] unknown field "alpha"
  W0512 21:38:22.739768      19 warnings.go:70] unknown field "beta"
  W0512 21:38:22.739779      19 warnings.go:70] unknown field "delta"
  W0512 21:38:22.739789      19 warnings.go:70] unknown field "epsilon"
  W0512 21:38:22.739809      19 warnings.go:70] unknown field "gamma"
  I0512 21:38:23.302855 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5994" for this suite. @ 05/12/25 21:38:23.308
• [3.159 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/12/25 21:38:23.314
  I0512 21:38:23.314532 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename init-container @ 05/12/25 21:38:23.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:38:23.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:38:23.332
  STEP: creating the pod @ 05/12/25 21:38:23.335
  I0512 21:38:23.335392 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0512 21:39:09.119404 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-39c16a67-3bd9-48a3-b68c-646ab02d5b50", GenerateName:"", Namespace:"init-container-7694", SelfLink:"", UID:"d366e105-8a89-412a-8278-971e5c8467f7", ResourceVersion:"12105", Generation:0, CreationTimestamp:time.Date(2025, time.May, 12, 21, 38, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"335381183"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 38, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003faa108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.May, 12, 21, 39, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003faa150), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-lkpkh", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0044b0060), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lkpkh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lkpkh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-lkpkh", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0063523a8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003fb8000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006352580)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0063525a0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0063525a8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0063525ac), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000e7a030), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 12, 21, 38, 23, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 12, 21, 38, 23, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 12, 21, 38, 23, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 12, 21, 38, 23, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.May, 12, 21, 38, 23, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.1.7", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.1.7"}}, PodIP:"10.42.1.173", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.1.173"}}, StartTime:time.Date(2025, time.May, 12, 21, 38, 23, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003ea0e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003ea150)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://3c8b3cde0db743500687d5cf1db98a641f2e2085ad3d2ff8f688875fbc049a2d", Started:(*bool)(0xc00635267a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-lkpkh", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e7a050)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0044b0120), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00635268d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-lkpkh", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e7a060)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0044b00e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00635264f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-lkpkh", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000e7a040)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0512 21:39:09.119634 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7694" for this suite. @ 05/12/25 21:39:09.127
• [45.818 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/12/25 21:39:09.133
  I0512 21:39:09.133254 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename daemonsets @ 05/12/25 21:39:09.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:39:09.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:39:09.15
  I0512 21:39:09.246200 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0512 21:39:09.252174 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0512 21:39:09.336044 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:39:09.336182 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:39:10.260278 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0512 21:39:10.260348 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:39:11.266351 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 21:39:11.266431 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0512 21:39:11.266465 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0512 21:39:11.279311 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0512 21:39:12.291864 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0512 21:39:12.300091 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0512 21:39:12.300165 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0512 21:39:12.305036 19 daemon_set.go:1193] Wrong image for pod: daemon-set-jr2tl. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0512 21:39:12.305099 19 daemon_set.go:1198] Pod daemon-set-jr2tl is not available
  I0512 21:39:15.304884 19 daemon_set.go:1198] Pod daemon-set-lxzkv is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/12/25 21:39:15.317
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5469, will wait for the garbage collector to delete the pods @ 05/12/25 21:39:15.317
  I0512 21:39:15.384362 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.794692ms
  I0512 21:39:15.485416 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.052093ms
  I0512 21:39:16.791275 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:39:16.791608 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0512 21:39:16.796754 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"12205"},"items":null}

  I0512 21:39:16.802236 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"12205"},"items":null}

  I0512 21:39:16.819730 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5469" for this suite. @ 05/12/25 21:39:16.824
• [7.697 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/12/25 21:39:16.832
  I0512 21:39:16.832238 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:39:16.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:39:16.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:39:16.852
  STEP: creating a secret @ 05/12/25 21:39:16.856
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/12/25 21:39:16.866
  STEP: patching the secret @ 05/12/25 21:39:16.87
  STEP: deleting the secret using a LabelSelector @ 05/12/25 21:39:16.879
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/12/25 21:39:16.885
  I0512 21:39:16.888427 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8098" for this suite. @ 05/12/25 21:39:16.908
• [0.082 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/12/25 21:39:16.914
  I0512 21:39:16.914176 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:39:16.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:39:16.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:39:16.959
  STEP: Creating a pod to test downward api env vars @ 05/12/25 21:39:16.964
  STEP: Saw pod success @ 05/12/25 21:39:20.998
  I0512 21:39:21.005197 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downward-api-f49a539c-c87a-48f5-9c85-39e244ff017c container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 21:39:21.022
  I0512 21:39:21.047435 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2172" for this suite. @ 05/12/25 21:39:21.051
• [4.143 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 05/12/25 21:39:21.057
  I0512 21:39:21.057721 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:39:21.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:39:21.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:39:21.075
  STEP: creating Agnhost RC @ 05/12/25 21:39:21.078
  I0512 21:39:21.078529 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2402 create -f -'
  I0512 21:39:21.240942 19 builder.go:146] stderr: ""
  I0512 21:39:21.240996 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/12/25 21:39:21.241
  I0512 21:39:22.252515 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0512 21:39:22.252582 19 framework.go:733] Found 1 / 1
  I0512 21:39:22.252618 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/12/25 21:39:22.252
  I0512 21:39:22.259194 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0512 21:39:22.259261 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0512 21:39:22.259338 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2402 patch pod agnhost-primary-88hd2 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0512 21:39:22.367564 19 builder.go:146] stderr: ""
  I0512 21:39:22.367640 19 builder.go:147] stdout: "pod/agnhost-primary-88hd2 patched\n"
  STEP: checking annotations @ 05/12/25 21:39:22.367
  I0512 21:39:22.372566 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0512 21:39:22.372633 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0512 21:39:22.372944 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2402" for this suite. @ 05/12/25 21:39:22.378
• [1.326 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/12/25 21:39:22.385
  I0512 21:39:22.385280 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename svcaccounts @ 05/12/25 21:39:22.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:39:22.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:39:22.405
  STEP: Creating ServiceAccount "e2e-sa-wq96s"  @ 05/12/25 21:39:22.408
  I0512 21:39:22.412325 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-wq96s"  @ 05/12/25 21:39:22.412
  I0512 21:39:22.418478 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I0512 21:39:22.418848 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6135" for this suite. @ 05/12/25 21:39:22.479
• [0.106 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 05/12/25 21:39:22.491
  I0512 21:39:22.491843 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:39:22.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:39:22.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:39:22.536
  STEP: starting the proxy server @ 05/12/25 21:39:22.541
  I0512 21:39:22.541450 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-4239 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/12/25 21:39:22.615
  I0512 21:39:22.624874 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0512 21:39:22.626273 19 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:35459

  I0512 21:39:22.626322 19 kubectl.go:2229] kubectl proxy stderr: W0512 21:39:22.615191     451 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-4239" for this suite. @ 05/12/25 21:39:22.634
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/12/25 21:39:22.642
  I0512 21:39:22.642367 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:39:22.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:39:22.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:39:22.662
  STEP: Creating the pod @ 05/12/25 21:39:22.665
  I0512 21:39:25.210481 19 pod_client.go:173] Successfully updated pod "annotationupdate86699df8-a9f2-480e-b90f-6516847dcfe9"
  I0512 21:39:29.250020 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6163" for this suite. @ 05/12/25 21:39:29.256
• [6.622 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 05/12/25 21:39:29.268
  I0512 21:39:29.268907 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-pred @ 05/12/25 21:39:29.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:39:29.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:39:29.297
  I0512 21:39:29.300164 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0512 21:39:29.363446 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0512 21:39:29.369660 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr before test
  I0512 21:39:29.376345 19 predicates.go:957] civo-ccm-bd7449dd8-g59ts from kube-system started at 2025-05-12 20:59:04 +0000 UTC (1 container statuses recorded)
  I0512 21:39:29.376409 19 predicates.go:959] 	Container civo-ccm ready: true, restart count 0
  I0512 21:39:29.376480 19 predicates.go:957] civo-csi-controller-0 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (4 container statuses recorded)
  I0512 21:39:29.376498 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 21:39:29.376513 19 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0512 21:39:29.376563 19 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0512 21:39:29.376579 19 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0512 21:39:29.376596 19 predicates.go:957] civo-csi-node-wt7c2 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (2 container statuses recorded)
  I0512 21:39:29.376690 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 21:39:29.376717 19 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0512 21:39:29.376782 19 predicates.go:957] coredns-ccb96694c-l7675 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (1 container statuses recorded)
  I0512 21:39:29.376799 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0512 21:39:29.376816 19 predicates.go:957] metrics-server-7bf7d58749-v5xjt from kube-system started at 2025-05-12 20:59:12 +0000 UTC (1 container statuses recorded)
  I0512 21:39:29.376866 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0512 21:39:29.376893 19 predicates.go:957] traefik-4ncsl from kube-system started at 2025-05-12 20:59:57 +0000 UTC (1 container statuses recorded)
  I0512 21:39:29.376959 19 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0512 21:39:29.376988 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt before test
  I0512 21:39:29.382048 19 predicates.go:957] annotationupdate86699df8-a9f2-480e-b90f-6516847dcfe9 from downward-api-6163 started at 2025-05-12 21:39:22 +0000 UTC (1 container statuses recorded)
  I0512 21:39:29.382104 19 predicates.go:959] 	Container client-container ready: true, restart count 0
  I0512 21:39:29.382163 19 predicates.go:957] civo-csi-node-5dvz4 from kube-system started at 2025-05-12 21:21:58 +0000 UTC (2 container statuses recorded)
  I0512 21:39:29.382182 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 21:39:29.382197 19 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0512 21:39:29.382249 19 predicates.go:957] traefik-lqppk from kube-system started at 2025-05-12 21:21:58 +0000 UTC (1 container statuses recorded)
  I0512 21:39:29.382265 19 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0512 21:39:29.382284 19 predicates.go:957] sonobuoy from sonobuoy started at 2025-05-12 21:01:09 +0000 UTC (1 container statuses recorded)
  I0512 21:39:29.382298 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0512 21:39:29.382348 19 predicates.go:957] sonobuoy-e2e-job-e851b625746c4110 from sonobuoy started at 2025-05-12 21:01:13 +0000 UTC (2 container statuses recorded)
  I0512 21:39:29.382364 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0512 21:39:29.382379 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/12/25 21:39:29.382
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/12/25 21:39:31.426
  STEP: Trying to apply a random label on the found node. @ 05/12/25 21:39:31.453
  STEP: verifying the node has the label kubernetes.io/e2e-af6f3d25-3fc8-4947-a12d-9cb170931971 95 @ 05/12/25 21:39:31.462
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/12/25 21:39:31.468
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.1.7 on the node which pod4 resides and expect not scheduled @ 05/12/25 21:39:33.486
  STEP: removing the label kubernetes.io/e2e-af6f3d25-3fc8-4947-a12d-9cb170931971 off the node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt @ 05/12/25 21:44:33.501
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-af6f3d25-3fc8-4947-a12d-9cb170931971 @ 05/12/25 21:44:33.521
  I0512 21:44:33.528881 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3713" for this suite. @ 05/12/25 21:44:33.531
• [304.268 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/12/25 21:44:33.537
  I0512 21:44:33.537300 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:44:33.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:44:33.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:44:33.553
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-20bc5c29-7a4f-4ade-90bb-1d9c917233ee @ 05/12/25 21:44:33.558
  STEP: Creating the pod @ 05/12/25 21:44:33.561
  STEP: Updating configmap projected-configmap-test-upd-20bc5c29-7a4f-4ade-90bb-1d9c917233ee @ 05/12/25 21:44:35.602
  STEP: waiting to observe update in volume @ 05/12/25 21:44:35.608
  I0512 21:45:48.154969 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-677" for this suite. @ 05/12/25 21:45:48.16
• [74.632 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/12/25 21:45:48.169
  I0512 21:45:48.169510 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:45:48.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:45:48.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:45:48.192
  STEP: Creating secret with name s-test-opt-del-429a2b04-8ffa-4dff-ac89-e643970036fe @ 05/12/25 21:45:48.261
  STEP: Creating secret with name s-test-opt-upd-d467aa7c-a6c3-436e-80fc-657d9e2fba0f @ 05/12/25 21:45:48.273
  STEP: Creating the pod @ 05/12/25 21:45:48.281
  STEP: Deleting secret s-test-opt-del-429a2b04-8ffa-4dff-ac89-e643970036fe @ 05/12/25 21:45:50.344
  STEP: Updating secret s-test-opt-upd-d467aa7c-a6c3-436e-80fc-657d9e2fba0f @ 05/12/25 21:45:50.351
  STEP: Creating secret with name s-test-opt-create-cfe65d0e-93f1-42ff-b63a-6319dce73ca2 @ 05/12/25 21:45:50.358
  STEP: waiting to observe update in volume @ 05/12/25 21:45:50.363
  I0512 21:47:13.013769 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6266" for this suite. @ 05/12/25 21:47:13.02
• [84.859 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/12/25 21:47:13.031
  I0512 21:47:13.031969 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-runtime @ 05/12/25 21:47:13.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:47:13.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:47:13.07
  STEP: create the container @ 05/12/25 21:47:13.076
  W0512 21:47:13.083413      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/12/25 21:47:13.083
  STEP: get the container status @ 05/12/25 21:47:16.114
  STEP: the container should be terminated @ 05/12/25 21:47:16.121
  STEP: the termination message should be set @ 05/12/25 21:47:16.121
  I0512 21:47:16.121629 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/12/25 21:47:16.121
  I0512 21:47:16.141755 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8767" for this suite. @ 05/12/25 21:47:16.148
• [3.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 05/12/25 21:47:16.161
  I0512 21:47:16.161834 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:47:16.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:47:16.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:47:16.184
  STEP: creating service multi-endpoint-test in namespace services-8214 @ 05/12/25 21:47:16.187
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8214 to expose endpoints map[] @ 05/12/25 21:47:16.194
  I0512 21:47:16.199778 19 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0512 21:47:17.214207 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-8214 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8214 @ 05/12/25 21:47:17.214
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8214 to expose endpoints map[pod1:[100]] @ 05/12/25 21:47:19.282
  I0512 21:47:19.299197 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-8214 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-8214 @ 05/12/25 21:47:19.299
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8214 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/12/25 21:47:21.324
  I0512 21:47:21.382145 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-8214 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/12/25 21:47:21.382
  I0512 21:47:21.382225 19 resource.go:361] Creating new exec pod
  I0512 21:47:24.409922 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-8214 exec execpod8sh5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0512 21:47:24.625490 19 builder.go:146] stderr: "+ + nc -vecho -t -w hostName 2\n multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0512 21:47:24.625555 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:47:24.625661 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-8214 exec execpod8sh5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.56.78 80'
  I0512 21:47:24.870442 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.56.78 80\nConnection to 10.43.56.78 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0512 21:47:24.870510 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:47:24.870606 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-8214 exec execpod8sh5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0512 21:47:25.069289 19 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0512 21:47:25.069346 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 21:47:25.069471 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-8214 exec execpod8sh5m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.56.78 81'
  I0512 21:47:25.264089 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.56.78 81\nConnection to 10.43.56.78 81 port [tcp/*] succeeded!\n"
  I0512 21:47:25.264171 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8214 @ 05/12/25 21:47:25.264
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8214 to expose endpoints map[pod2:[101]] @ 05/12/25 21:47:25.281
  I0512 21:47:26.314081 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-8214 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-8214 @ 05/12/25 21:47:26.314
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8214 to expose endpoints map[] @ 05/12/25 21:47:26.343
  I0512 21:47:26.359213 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-8214 exposes endpoints map[]
  I0512 21:47:26.379079 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8214" for this suite. @ 05/12/25 21:47:26.385
• [10.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/12/25 21:47:26.393
  I0512 21:47:26.393042 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename subpath @ 05/12/25 21:47:26.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:47:26.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:47:26.412
  STEP: Setting up data @ 05/12/25 21:47:26.414
  STEP: Creating pod pod-subpath-test-configmap-hzsh @ 05/12/25 21:47:26.42
  STEP: Creating a pod to test atomic-volume-subpath @ 05/12/25 21:47:26.421
  STEP: Saw pod success @ 05/12/25 21:47:50.523
  I0512 21:47:50.530447 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-subpath-test-configmap-hzsh container test-container-subpath-configmap-hzsh: <nil>
  STEP: delete the pod @ 05/12/25 21:47:50.545
  STEP: Deleting pod pod-subpath-test-configmap-hzsh @ 05/12/25 21:47:50.563
  I0512 21:47:50.563830 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-hzsh" in namespace "subpath-2459"
  I0512 21:47:50.568329 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2459" for this suite. @ 05/12/25 21:47:50.573
• [24.187 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 05/12/25 21:47:50.58
  I0512 21:47:50.580497 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:47:50.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:47:50.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:47:50.6
  STEP: Setting up server cert @ 05/12/25 21:47:50.706
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:47:51.339
  STEP: Deploying the webhook pod @ 05/12/25 21:47:51.351
  STEP: Wait for the deployment to be ready @ 05/12/25 21:47:51.374
  I0512 21:47:51.386987 19 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/12/25 21:47:53.408
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:47:53.418
  I0512 21:47:54.418632 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/12/25 21:47:54.429
  STEP: create a pod @ 05/12/25 21:47:54.454
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/12/25 21:47:56.482
  I0512 21:47:56.482426 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=webhook-4812 attach --namespace=webhook-4812 to-be-attached-pod -i -c=container1'
  I0512 21:47:56.600552 19 builder.go:135] rc: 1
  I0512 21:47:56.652267 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4812" for this suite. @ 05/12/25 21:47:56.666
  STEP: Destroying namespace "webhook-markers-3530" for this suite. @ 05/12/25 21:47:56.67
• [6.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 05/12/25 21:47:56.676
  I0512 21:47:56.676638 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:47:56.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:47:56.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:47:56.692
  STEP: Setting up server cert @ 05/12/25 21:47:56.799
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:47:57.707
  STEP: Deploying the webhook pod @ 05/12/25 21:47:57.715
  STEP: Wait for the deployment to be ready @ 05/12/25 21:47:57.729
  I0512 21:47:57.746435 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:47:59.767
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:47:59.791
  I0512 21:48:00.792563 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0512 21:48:00.806717 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9957-crds.webhook.example.com via the AdmissionRegistration API @ 05/12/25 21:48:01.324
  I0512 21:48:01.353177 19 webhook.go:2669] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource while v1 is storage version @ 05/12/25 21:48:01.479
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/12/25 21:48:03.528
  STEP: Patching the custom resource while v2 is storage version @ 05/12/25 21:48:03.555
  I0512 21:48:04.151293 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3556" for this suite. @ 05/12/25 21:48:04.158
  STEP: Destroying namespace "webhook-markers-5844" for this suite. @ 05/12/25 21:48:04.168
• [7.503 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 05/12/25 21:48:04.18
  I0512 21:48:04.180250 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 21:48:04.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:48:04.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:48:04.202
  STEP: Creating pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880 @ 05/12/25 21:48:04.208
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/12/25 21:48:06.227
  I0512 21:48:06.234875 19 container_probe.go:1749] Initial restart count of pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf is 0
  I0512 21:48:06.242247 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:08.247249 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:10.255237 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:12.260243 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:14.268378 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:16.274857 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:18.294253 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:20.307606 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:22.314401 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:24.324921 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:26.334613 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:26.334729 19 container_probe.go:1763] Restart count of pod container-probe-880/liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf is now 1 (20.099798993s elapsed)
  I0512 21:48:28.342746 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:30.350018 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:32.357700 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:34.365082 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:36.373973 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:38.382710 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:40.390553 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:42.401532 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:44.409994 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:46.417140 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:46.417236 19 container_probe.go:1763] Restart count of pod container-probe-880/liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf is now 2 (40.182307348s elapsed)
  I0512 21:48:48.423267 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:50.431823 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:52.437963 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:54.448244 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:56.454986 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:48:58.462430 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:00.468170 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:02.474434 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:04.481964 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:06.488904 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:06.489226 19 container_probe.go:1763] Restart count of pod container-probe-880/liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf is now 3 (1m0.254296319s elapsed)
  I0512 21:49:08.501616 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:10.509960 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:12.518903 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:14.526389 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:16.535476 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:18.543099 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:20.549756 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:22.557710 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:24.562029 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:26.568785 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:26.568879 19 container_probe.go:1763] Restart count of pod container-probe-880/liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf is now 4 (1m20.333948206s elapsed)
  I0512 21:49:28.573770 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:30.580914 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:32.587568 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:34.594566 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:36.601659 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:38.610096 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:40.617172 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:42.624986 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:44.631794 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:46.638896 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:48.645634 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:50.652903 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:52.659779 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:54.666788 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:56.672484 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:49:58.680408 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:00.687042 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:02.693984 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:04.701047 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:06.707527 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:08.715102 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:10.719801 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:12.726866 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:14.734410 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:16.741979 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:18.750685 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:20.757735 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:22.767773 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:24.775105 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:26.781808 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:28.788547 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:30.795220 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:32.803200 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:34.810069 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:36.816920 19 container_probe.go:1759] Get pod liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf in namespace container-probe-880
  I0512 21:50:36.817010 19 container_probe.go:1763] Restart count of pod container-probe-880/liveness-e9406802-93d4-41c2-98d9-8b7cbfc78aaf is now 5 (2m30.582081286s elapsed)
  STEP: deleting the pod @ 05/12/25 21:50:36.817
  I0512 21:50:36.839024 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-880" for this suite. @ 05/12/25 21:50:36.846
• [152.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/12/25 21:50:36.854
  I0512 21:50:36.854964 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:50:36.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:50:36.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:50:36.875
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/12/25 21:50:36.878
  STEP: Saw pod success @ 05/12/25 21:50:40.907
  I0512 21:50:40.912709 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-28a26c0f-9f08-45a6-b351-38cf895b62ca container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:50:40.943
  I0512 21:50:40.969812 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9333" for this suite. @ 05/12/25 21:50:40.974
• [4.125 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/12/25 21:50:40.982
  I0512 21:50:40.983134 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/12/25 21:50:40.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:50:41.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:50:41.004
  STEP: Cleaning up the secret @ 05/12/25 21:50:43.039
  STEP: Cleaning up the configmap @ 05/12/25 21:50:43.046
  STEP: Cleaning up the pod @ 05/12/25 21:50:43.054
  I0512 21:50:43.071034 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3430" for this suite. @ 05/12/25 21:50:43.077
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/12/25 21:50:43.087
  I0512 21:50:43.087350 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:50:43.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:50:43.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:50:43.11
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:50:43.113
  STEP: Saw pod success @ 05/12/25 21:50:47.157
  I0512 21:50:47.163062 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-6de24e3c-6f8d-4dcd-97e4-2260960cacef container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:50:47.174
  I0512 21:50:47.190507 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2285" for this suite. @ 05/12/25 21:50:47.194
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/12/25 21:50:47.204
  I0512 21:50:47.204165 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename conformance-tests @ 05/12/25 21:50:47.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:50:47.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:50:47.233
  STEP: Getting node addresses @ 05/12/25 21:50:47.237
  I0512 21:50:47.237626 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0512 21:50:47.295646 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-936" for this suite. @ 05/12/25 21:50:47.299
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 05/12/25 21:50:47.305
  I0512 21:50:47.306129 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:50:47.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:50:47.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:50:47.329
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1501 @ 05/12/25 21:50:47.336
  STEP: changing the ExternalName service to type=ClusterIP @ 05/12/25 21:50:47.341
  STEP: creating replication controller externalname-service in namespace services-1501 @ 05/12/25 21:50:47.352
  I0512 21:50:47.367972      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-1501, replica count: 2
  I0512 21:50:50.418950      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 21:50:50.419022 19 resource.go:361] Creating new exec pod
  I0512 21:50:53.453857 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-1501 exec execpodzdwc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0512 21:50:53.670781 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0512 21:50:53.670840 19 builder.go:147] stdout: "externalname-service-6lmvb"
  I0512 21:50:53.670935 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-1501 exec execpodzdwc4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.72.72 80'
  I0512 21:50:53.911317 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.72.72 80\n+ echo hostName\nConnection to 10.43.72.72 80 port [tcp/http] succeeded!\n"
  I0512 21:50:53.911373 19 builder.go:147] stdout: "externalname-service-6lmvb"
  I0512 21:50:53.911465 19 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0512 21:50:53.939325 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1501" for this suite. @ 05/12/25 21:50:53.946
• [6.646 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/12/25 21:50:53.952
  I0512 21:50:53.952530 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sysctl @ 05/12/25 21:50:53.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:50:53.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:50:53.971
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/12/25 21:50:53.976
  STEP: Watching for error events or started pod @ 05/12/25 21:50:53.982
  STEP: Waiting for pod completion @ 05/12/25 21:50:55.993
  STEP: Checking that the pod succeeded @ 05/12/25 21:50:58.011
  STEP: Getting logs from the pod @ 05/12/25 21:50:58.011
  STEP: Checking that the sysctl is actually updated @ 05/12/25 21:50:58.021
  I0512 21:50:58.021885 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5842" for this suite. @ 05/12/25 21:50:58.026
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 05/12/25 21:50:58.033
  I0512 21:50:58.033998 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubelet-test @ 05/12/25 21:50:58.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:50:58.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:50:58.056
  I0512 21:50:58.080659 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7389" for this suite. @ 05/12/25 21:50:58.126
• [0.100 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 05/12/25 21:50:58.134
  I0512 21:50:58.134185 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename job @ 05/12/25 21:50:58.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:50:58.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:50:58.158
  STEP: Creating a job @ 05/12/25 21:50:58.163
  STEP: Ensuring active pods == parallelism @ 05/12/25 21:50:58.169
  STEP: delete a job @ 05/12/25 21:51:00.18
  STEP: deleting Job.batch foo in namespace job-5137, will wait for the garbage collector to delete the pods @ 05/12/25 21:51:00.18
  I0512 21:51:00.283995 19 resources.go:139] Deleting Job.batch foo took: 20.371595ms
  I0512 21:51:00.385280 19 resources.go:163] Terminating Job.batch foo pods took: 101.28372ms
  STEP: Ensuring job was deleted @ 05/12/25 21:51:01.386
  I0512 21:51:01.398196 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5137" for this suite. @ 05/12/25 21:51:01.404
• [3.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 05/12/25 21:51:01.412
  I0512 21:51:01.412620 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubelet-test @ 05/12/25 21:51:01.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:01.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:01.445
  I0512 21:51:05.468910 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3861" for this suite. @ 05/12/25 21:51:05.475
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/12/25 21:51:05.486
  I0512 21:51:05.486634 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename namespaces @ 05/12/25 21:51:05.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:05.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:05.513
  STEP: creating a Namespace @ 05/12/25 21:51:05.517
  STEP: patching the Namespace @ 05/12/25 21:51:05.611
  STEP: get the Namespace and ensuring it has the label @ 05/12/25 21:51:05.616
  I0512 21:51:05.618757 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4004" for this suite. @ 05/12/25 21:51:05.622
  STEP: Destroying namespace "nspatchtest-7deb0049-5ec7-475b-859a-6f1831c40c25-2928" for this suite. @ 05/12/25 21:51:05.627
• [0.146 seconds]
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/12/25 21:51:05.632
  I0512 21:51:05.632732 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 21:51:05.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:05.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:05.716
  STEP: Creating configMap configmap-4078/configmap-test-d3de0070-c434-4cdd-83d3-4785f22e99d5 @ 05/12/25 21:51:05.718
  STEP: Creating a pod to test consume configMaps @ 05/12/25 21:51:05.723
  STEP: Saw pod success @ 05/12/25 21:51:09.758
  I0512 21:51:09.765880 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-d76db704-5b11-459b-8410-a1d808176332 container env-test: <nil>
  STEP: delete the pod @ 05/12/25 21:51:09.777
  I0512 21:51:09.803833 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4078" for this suite. @ 05/12/25 21:51:09.81
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/12/25 21:51:09.819
  I0512 21:51:09.820197 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:51:09.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:09.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:09.839
  STEP: Creating configMap with name configmap-projected-all-test-volume-a9bc20f2-4d24-436e-a7ca-9a0049e4c620 @ 05/12/25 21:51:09.847
  STEP: Creating secret with name secret-projected-all-test-volume-f7ae70a7-5492-47a9-9b53-f932af4ae6cd @ 05/12/25 21:51:09.855
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/12/25 21:51:09.861
  STEP: Saw pod success @ 05/12/25 21:51:13.904
  I0512 21:51:13.909170 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod projected-volume-1a397815-41d0-42f1-b012-c08842d991a1 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:51:13.923
  I0512 21:51:13.940716 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8027" for this suite. @ 05/12/25 21:51:13.944
• [4.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 05/12/25 21:51:13.955
  I0512 21:51:13.955929 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 21:51:13.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:13.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:13.98
  STEP: Creating a ResourceQuota @ 05/12/25 21:51:13.984
  STEP: Getting a ResourceQuota @ 05/12/25 21:51:13.988
  STEP: Updating a ResourceQuota @ 05/12/25 21:51:13.992
  STEP: Verifying a ResourceQuota was modified @ 05/12/25 21:51:13.996
  STEP: Deleting a ResourceQuota @ 05/12/25 21:51:14
  STEP: Verifying the deleted ResourceQuota @ 05/12/25 21:51:14.003
  I0512 21:51:14.005839 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4940" for this suite. @ 05/12/25 21:51:14.045
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/12/25 21:51:14.056
  I0512 21:51:14.056422 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replication-controller @ 05/12/25 21:51:14.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:14.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:14.087
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/12/25 21:51:14.09
  STEP: When a replication controller with a matching selector is created @ 05/12/25 21:51:16.116
  STEP: Then the orphan pod is adopted @ 05/12/25 21:51:16.121
  I0512 21:51:17.134287 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-275" for this suite. @ 05/12/25 21:51:17.142
• [3.095 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 05/12/25 21:51:17.154
  I0512 21:51:17.154354 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename disruption @ 05/12/25 21:51:17.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:17.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:17.182
  STEP: creating the pdb @ 05/12/25 21:51:17.187
  STEP: Waiting for the pdb to be processed @ 05/12/25 21:51:17.193
  STEP: updating the pdb @ 05/12/25 21:51:19.2
  STEP: Waiting for the pdb to be processed @ 05/12/25 21:51:19.211
  STEP: patching the pdb @ 05/12/25 21:51:21.22
  STEP: Waiting for the pdb to be processed @ 05/12/25 21:51:21.238
  STEP: Waiting for the pdb to be deleted @ 05/12/25 21:51:21.255
  I0512 21:51:21.258666 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8555" for this suite. @ 05/12/25 21:51:21.263
• [4.122 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/12/25 21:51:21.276
  I0512 21:51:21.276869 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename gc @ 05/12/25 21:51:21.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:21.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:21.303
  I0512 21:51:21.362167 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"8d55484a-c085-4868-82b7-a50201e107a3", Controller:(*bool)(0xc003653d06), BlockOwnerDeletion:(*bool)(0xc003653d07)}}
  I0512 21:51:21.371578 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"c188059b-a285-47e4-88e4-f9a64dc02ebb", Controller:(*bool)(0xc003653f2e), BlockOwnerDeletion:(*bool)(0xc003653f2f)}}
  I0512 21:51:21.380170 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b6541d1f-5a19-41d3-8807-c03f559d7b61", Controller:(*bool)(0xc004a58166), BlockOwnerDeletion:(*bool)(0xc004a58167)}}
  I0512 21:51:26.422787 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4259" for this suite. @ 05/12/25 21:51:26.428
• [5.157 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/12/25 21:51:26.434
  I0512 21:51:26.435098 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename discovery @ 05/12/25 21:51:26.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:26.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:26.466
  STEP: Setting up server cert @ 05/12/25 21:51:26.471
  I0512 21:51:27.043273 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0512 21:51:27.045314 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0512 21:51:27.045452 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0512 21:51:27.045483 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0512 21:51:27.045500 19 discovery.go:139] Checking APIGroup: apps
  I0512 21:51:27.047735 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0512 21:51:27.047771 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I0512 21:51:27.047781 19 discovery.go:154] apps/v1 matches apps/v1
  I0512 21:51:27.047788 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I0512 21:51:27.050784 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0512 21:51:27.050828 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0512 21:51:27.050836 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0512 21:51:27.050843 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0512 21:51:27.053959 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0512 21:51:27.054094 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0512 21:51:27.054205 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0512 21:51:27.054324 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0512 21:51:27.057228 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0512 21:51:27.057509 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0512 21:51:27.057540 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0512 21:51:27.057557 19 discovery.go:139] Checking APIGroup: autoscaling
  I0512 21:51:27.059681 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0512 21:51:27.059723 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0512 21:51:27.059746 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0512 21:51:27.059763 19 discovery.go:139] Checking APIGroup: batch
  I0512 21:51:27.061796 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0512 21:51:27.061839 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I0512 21:51:27.061855 19 discovery.go:154] batch/v1 matches batch/v1
  I0512 21:51:27.061870 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0512 21:51:27.063835 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0512 21:51:27.063875 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0512 21:51:27.063889 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0512 21:51:27.063903 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0512 21:51:27.065852 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0512 21:51:27.066093 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0512 21:51:27.066116 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0512 21:51:27.066209 19 discovery.go:139] Checking APIGroup: policy
  I0512 21:51:27.068597 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0512 21:51:27.069126 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I0512 21:51:27.069356 19 discovery.go:154] policy/v1 matches policy/v1
  I0512 21:51:27.069881 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0512 21:51:27.072120 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0512 21:51:27.072170 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0512 21:51:27.072184 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0512 21:51:27.072197 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0512 21:51:27.074335 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0512 21:51:27.074400 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0512 21:51:27.074418 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0512 21:51:27.074439 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0512 21:51:27.076464 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0512 21:51:27.076548 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0512 21:51:27.076571 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0512 21:51:27.076595 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0512 21:51:27.078480 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0512 21:51:27.078551 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0512 21:51:27.078577 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0512 21:51:27.078612 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0512 21:51:27.080548 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0512 21:51:27.080613 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0512 21:51:27.080641 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0512 21:51:27.080665 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0512 21:51:27.082491 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0512 21:51:27.082917 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0512 21:51:27.083289 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0512 21:51:27.083699 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I0512 21:51:27.085922 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0512 21:51:27.085990 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0512 21:51:27.086014 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0512 21:51:27.086043 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0512 21:51:27.087714 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0512 21:51:27.087768 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0512 21:51:27.087793 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0512 21:51:27.087816 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0512 21:51:27.089246 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0512 21:51:27.089306 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0512 21:51:27.089332 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0512 21:51:27.089354 19 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0512 21:51:27.090795 19 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0512 21:51:27.090852 19 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0512 21:51:27.090907 19 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0512 21:51:27.091428 19 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0512 21:51:27.093286 19 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0512 21:51:27.093343 19 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0512 21:51:27.093419 19 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0512 21:51:27.093720 19 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0512 21:51:27.095240 19 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0512 21:51:27.095297 19 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0512 21:51:27.095345 19 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0512 21:51:27.096066 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7295" for this suite. @ 05/12/25 21:51:27.101
• [0.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/12/25 21:51:27.11
  I0512 21:51:27.110573 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:51:27.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:27.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:27.146
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:51:27.149
  STEP: Saw pod success @ 05/12/25 21:51:31.174
  I0512 21:51:31.178607 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-65df2a49-c310-4c19-8286-13363a69db59 container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:51:31.19
  I0512 21:51:31.227445 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8396" for this suite. @ 05/12/25 21:51:31.234
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/12/25 21:51:31.239
  I0512 21:51:31.240037 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 21:51:31.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:31.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:31.258
  STEP: Creating the pod @ 05/12/25 21:51:31.261
  I0512 21:51:33.817889 19 pod_client.go:173] Successfully updated pod "labelsupdate470debdd-fd6e-4249-b2fb-37628acffb7d"
  I0512 21:51:37.864938 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1932" for this suite. @ 05/12/25 21:51:37.872
• [6.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 05/12/25 21:51:37.889
  I0512 21:51:37.889648 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-webhook @ 05/12/25 21:51:37.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:37.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:37.918
  STEP: Setting up server cert @ 05/12/25 21:51:37.921
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/12/25 21:51:38.615
  STEP: Deploying the custom resource conversion webhook pod @ 05/12/25 21:51:38.63
  STEP: Wait for the deployment to be ready @ 05/12/25 21:51:38.644
  I0512 21:51:38.658486 19 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:51:40.671
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:51:40.682
  I0512 21:51:41.683580 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0512 21:51:41.698068 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Creating a v1 custom resource @ 05/12/25 21:51:44.316
  STEP: Create a v2 custom resource @ 05/12/25 21:51:44.34
  STEP: List CRs in v1 @ 05/12/25 21:51:44.392
  STEP: List CRs in v2 @ 05/12/25 21:51:44.399
  I0512 21:51:44.992418 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3636" for this suite. @ 05/12/25 21:51:45.004
• [7.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/12/25 21:51:45.008
  I0512 21:51:45.008655 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:51:45.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:45.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:45.023
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 21:51:45.025
  STEP: Saw pod success @ 05/12/25 21:51:49.05
  I0512 21:51:49.056416 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-58625a86-b5ef-489a-8bc5-c1096002cf02 container client-container: <nil>
  STEP: delete the pod @ 05/12/25 21:51:49.065
  I0512 21:51:49.084780 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3213" for this suite. @ 05/12/25 21:51:49.091
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 05/12/25 21:51:49.098
  I0512 21:51:49.098987 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 21:51:49.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:49.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:49.119
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-4442 @ 05/12/25 21:51:49.123
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/12/25 21:51:49.132
  STEP: creating service externalsvc in namespace services-4442 @ 05/12/25 21:51:49.132
  STEP: creating replication controller externalsvc in namespace services-4442 @ 05/12/25 21:51:49.144
  I0512 21:51:49.151877      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4442, replica count: 2
  I0512 21:51:52.203941      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/12/25 21:51:52.21
  I0512 21:51:52.246747 19 resource.go:361] Creating new exec pod
  I0512 21:51:54.269988 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-4442 exec execpodc6487 -- /bin/sh -x -c nslookup nodeport-service.services-4442.svc.cluster.local'
  I0512 21:51:54.480676 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-4442.svc.cluster.local\n"
  I0512 21:51:54.480737 19 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-4442.svc.cluster.local\tcanonical name = externalsvc.services-4442.svc.cluster.local.\nName:\texternalsvc.services-4442.svc.cluster.local\nAddress: 10.43.195.89\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4442, will wait for the garbage collector to delete the pods @ 05/12/25 21:51:54.481
  I0512 21:51:54.550034 19 resources.go:139] Deleting ReplicationController externalsvc took: 11.083072ms
  I0512 21:51:54.651005 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.928163ms
  I0512 21:51:57.783113 19 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0512 21:51:57.793000 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4442" for this suite. @ 05/12/25 21:51:57.801
• [8.707 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/12/25 21:51:57.806
  I0512 21:51:57.806455 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:51:57.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:57.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:57.824
  STEP: Creating projection with secret that has name projected-secret-test-8e0b8608-49ba-4595-b8a8-840a53330c9e @ 05/12/25 21:51:57.826
  STEP: Creating a pod to test consume secrets @ 05/12/25 21:51:57.83
  STEP: Saw pod success @ 05/12/25 21:51:59.847
  I0512 21:51:59.855067 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-secrets-ea0edfb3-f407-455e-9257-e300e19c916e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 21:51:59.866
  I0512 21:51:59.885956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6517" for this suite. @ 05/12/25 21:51:59.89
• [2.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/12/25 21:51:59.895
  I0512 21:51:59.895624 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename init-container @ 05/12/25 21:51:59.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:51:59.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:51:59.913
  STEP: creating the pod @ 05/12/25 21:51:59.916
  I0512 21:51:59.916369 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0512 21:52:04.778015 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4715" for this suite. @ 05/12/25 21:52:04.784
• [4.894 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/12/25 21:52:04.79
  I0512 21:52:04.790277 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 21:52:04.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:04.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:04.812
  STEP: Creating projection with secret that has name secret-emptykey-test-3b5956ec-484c-46c1-ba68-1fb63b97a24c @ 05/12/25 21:52:04.815
  I0512 21:52:04.817628 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8977" for this suite. @ 05/12/25 21:52:04.886
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/12/25 21:52:04.895
  I0512 21:52:04.895721 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 21:52:04.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:04.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:04.924
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/12/25 21:52:04.927
  STEP: Saw pod success @ 05/12/25 21:52:06.945
  I0512 21:52:06.950868 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-c6bddfe9-61b7-4461-a203-00bc92ef4be1 container test-container: <nil>
  STEP: delete the pod @ 05/12/25 21:52:06.961
  I0512 21:52:06.983964 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1537" for this suite. @ 05/12/25 21:52:06.992
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 05/12/25 21:52:07.002
  I0512 21:52:07.002519 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename dns @ 05/12/25 21:52:07.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:07.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:07.019
  STEP: Creating a test externalName service @ 05/12/25 21:52:07.022
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-101.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-101.svc.cluster.local; sleep 1; done
   @ 05/12/25 21:52:07.026
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-101.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-101.svc.cluster.local; sleep 1; done
   @ 05/12/25 21:52:07.026
  STEP: creating a pod to probe DNS @ 05/12/25 21:52:07.026
  STEP: submitting the pod to kubernetes @ 05/12/25 21:52:07.026
  STEP: retrieving the pod @ 05/12/25 21:52:09.046
  STEP: looking for the results for each expected name from probers @ 05/12/25 21:52:09.051
  I0512 21:52:09.070454 19 dns_common.go:553] DNS probes using dns-test-683003e4-9c45-47e1-9efc-a070074ce585 succeeded

  STEP: changing the externalName to bar.example.com @ 05/12/25 21:52:09.07
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-101.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-101.svc.cluster.local; sleep 1; done
   @ 05/12/25 21:52:09.082
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-101.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-101.svc.cluster.local; sleep 1; done
   @ 05/12/25 21:52:09.082
  STEP: creating a second pod to probe DNS @ 05/12/25 21:52:09.082
  STEP: submitting the pod to kubernetes @ 05/12/25 21:52:09.082
  STEP: retrieving the pod @ 05/12/25 21:52:11.107
  STEP: looking for the results for each expected name from probers @ 05/12/25 21:52:11.113
  I0512 21:52:11.124447 19 dns_common.go:483] File wheezy_udp@dns-test-service-3.dns-101.svc.cluster.local from pod  dns-101/dns-test-c5ffd7cc-173f-4d6b-93f2-9b0141f0f76c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0512 21:52:11.130987 19 dns_common.go:483] File jessie_udp@dns-test-service-3.dns-101.svc.cluster.local from pod  dns-101/dns-test-c5ffd7cc-173f-4d6b-93f2-9b0141f0f76c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0512 21:52:11.131092 19 dns_common.go:490] Lookups using dns-101/dns-test-c5ffd7cc-173f-4d6b-93f2-9b0141f0f76c failed for: [wheezy_udp@dns-test-service-3.dns-101.svc.cluster.local jessie_udp@dns-test-service-3.dns-101.svc.cluster.local]

  I0512 21:52:11.142195 19 dns_common.go:496] Pod client logs for webserver: 
  I0512 21:52:11.152102 19 dns_common.go:496] Pod client logs for querier: 
  I0512 21:52:11.161164 19 dns_common.go:496] Pod client logs for jessie-querier: 
  I0512 21:52:16.129901 19 dns_common.go:553] DNS probes using dns-test-c5ffd7cc-173f-4d6b-93f2-9b0141f0f76c succeeded

  STEP: changing the service to type=ClusterIP @ 05/12/25 21:52:16.129
  W0512 21:52:16.152458      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-101.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-101.svc.cluster.local; sleep 1; done
   @ 05/12/25 21:52:16.153
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-101.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-101.svc.cluster.local; sleep 1; done
   @ 05/12/25 21:52:16.154
  STEP: creating a third pod to probe DNS @ 05/12/25 21:52:16.154
  STEP: submitting the pod to kubernetes @ 05/12/25 21:52:16.159
  STEP: retrieving the pod @ 05/12/25 21:52:24.205
  STEP: looking for the results for each expected name from probers @ 05/12/25 21:52:24.213
  I0512 21:52:24.246729 19 dns_common.go:553] DNS probes using dns-test-37826819-fb5b-4155-835c-085c8c32d4fe succeeded

  STEP: deleting the pod @ 05/12/25 21:52:24.247
  STEP: deleting the pod @ 05/12/25 21:52:24.262
  STEP: deleting the pod @ 05/12/25 21:52:24.273
  STEP: deleting the test externalName service @ 05/12/25 21:52:24.291
  I0512 21:52:24.309179 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-101" for this suite. @ 05/12/25 21:52:24.317
• [17.320 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/12/25 21:52:24.322
  I0512 21:52:24.322853 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/12/25 21:52:24.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:24.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:24.347
  I0512 21:52:24.350453 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:52:27.427185 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3433" for this suite. @ 05/12/25 21:52:27.434
• [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/12/25 21:52:27.445
  I0512 21:52:27.445881 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/12/25 21:52:27.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:27.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:27.468
  STEP: getting /apis @ 05/12/25 21:52:27.471
  STEP: getting /apis/storage.k8s.io @ 05/12/25 21:52:27.475
  STEP: getting /apis/storage.k8s.io/v1 @ 05/12/25 21:52:27.476
  STEP: creating @ 05/12/25 21:52:27.477
  STEP: watching @ 05/12/25 21:52:27.488
  I0512 21:52:27.488232 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/12/25 21:52:27.494
  STEP: listing in namespace @ 05/12/25 21:52:27.496
  STEP: listing across namespaces @ 05/12/25 21:52:27.499
  STEP: patching @ 05/12/25 21:52:27.502
  STEP: updating @ 05/12/25 21:52:27.506
  I0512 21:52:27.509568 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0512 21:52:27.509707 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/12/25 21:52:27.509
  STEP: deleting a collection @ 05/12/25 21:52:27.518
  I0512 21:52:27.528612 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9963" for this suite. @ 05/12/25 21:52:27.534
• [0.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 05/12/25 21:52:27.538
  I0512 21:52:27.538583 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 21:52:27.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:27.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:27.582
  STEP: Counting existing ResourceQuota @ 05/12/25 21:52:27.585
  STEP: Creating a ResourceQuota @ 05/12/25 21:52:32.668
  STEP: Ensuring resource quota status is calculated @ 05/12/25 21:52:32.674
  I0512 21:52:34.684300 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5564" for this suite. @ 05/12/25 21:52:34.692
• [7.165 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/12/25 21:52:34.705
  I0512 21:52:34.705076 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 21:52:34.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:34.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:34.738
  STEP: creating the pod @ 05/12/25 21:52:34.742
  STEP: setting up watch @ 05/12/25 21:52:34.742
  STEP: submitting the pod to kubernetes @ 05/12/25 21:52:34.845
  STEP: verifying the pod is in kubernetes @ 05/12/25 21:52:34.855
  STEP: verifying pod creation was observed @ 05/12/25 21:52:34.877
  STEP: deleting the pod gracefully @ 05/12/25 21:52:36.893
  STEP: verifying pod deletion was observed @ 05/12/25 21:52:36.903
  I0512 21:52:37.727078 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5084" for this suite. @ 05/12/25 21:52:37.731
• [3.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 05/12/25 21:52:37.738
  I0512 21:52:37.738692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:52:37.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:37.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:37.758
  STEP: creating a replication controller @ 05/12/25 21:52:37.761
  I0512 21:52:37.761945 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 create -f -'
  I0512 21:52:37.936688 19 builder.go:146] stderr: ""
  I0512 21:52:37.936736 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/12/25 21:52:37.936
  I0512 21:52:37.936813 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0512 21:52:38.015171 19 builder.go:146] stderr: ""
  I0512 21:52:38.015222 19 builder.go:147] stdout: "update-demo-nautilus-5blqt update-demo-nautilus-c7w2r "
  I0512 21:52:38.015281 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-5blqt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:52:38.086807 19 builder.go:146] stderr: ""
  I0512 21:52:38.086877 19 builder.go:147] stdout: ""
  I0512 21:52:38.086904 19 kubectl.go:2502] update-demo-nautilus-5blqt is created but not running
  I0512 21:52:43.089084 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0512 21:52:43.199137 19 builder.go:146] stderr: ""
  I0512 21:52:43.199204 19 builder.go:147] stdout: "update-demo-nautilus-5blqt update-demo-nautilus-c7w2r "
  I0512 21:52:43.199264 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-5blqt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:52:43.273852 19 builder.go:146] stderr: ""
  I0512 21:52:43.273899 19 builder.go:147] stdout: "true"
  I0512 21:52:43.273957 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-5blqt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0512 21:52:43.358142 19 builder.go:146] stderr: ""
  I0512 21:52:43.358213 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0512 21:52:43.358237 19 kubectl.go:2393] validating pod update-demo-nautilus-5blqt
  I0512 21:52:43.373348 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0512 21:52:43.373743 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0512 21:52:43.373776 19 kubectl.go:2520] update-demo-nautilus-5blqt is verified up and running
  I0512 21:52:43.374165 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-c7w2r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:52:43.465498 19 builder.go:146] stderr: ""
  I0512 21:52:43.465555 19 builder.go:147] stdout: "true"
  I0512 21:52:43.465623 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-c7w2r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0512 21:52:43.542640 19 builder.go:146] stderr: ""
  I0512 21:52:43.542705 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0512 21:52:43.542729 19 kubectl.go:2393] validating pod update-demo-nautilus-c7w2r
  I0512 21:52:43.558466 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0512 21:52:43.558523 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0512 21:52:43.558535 19 kubectl.go:2520] update-demo-nautilus-c7w2r is verified up and running
  STEP: scaling down the replication controller @ 05/12/25 21:52:43.558
  I0512 21:52:43.559632 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0512 21:52:43.559672 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0512 21:52:44.675856 19 builder.go:146] stderr: ""
  I0512 21:52:44.675948 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/12/25 21:52:44.676
  I0512 21:52:44.676159 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0512 21:52:44.780657 19 builder.go:146] stderr: ""
  I0512 21:52:44.780708 19 builder.go:147] stdout: "update-demo-nautilus-5blqt "
  I0512 21:52:44.780754 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-5blqt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:52:44.854599 19 builder.go:146] stderr: ""
  I0512 21:52:44.854648 19 builder.go:147] stdout: "true"
  I0512 21:52:44.854690 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-5blqt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0512 21:52:44.939586 19 builder.go:146] stderr: ""
  I0512 21:52:44.939655 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0512 21:52:44.939682 19 kubectl.go:2393] validating pod update-demo-nautilus-5blqt
  I0512 21:52:44.948633 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0512 21:52:44.948705 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0512 21:52:44.948721 19 kubectl.go:2520] update-demo-nautilus-5blqt is verified up and running
  STEP: scaling up the replication controller @ 05/12/25 21:52:44.948
  I0512 21:52:44.950974 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0512 21:52:44.951035 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0512 21:52:46.062969 19 builder.go:146] stderr: ""
  I0512 21:52:46.063037 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/12/25 21:52:46.063
  I0512 21:52:46.063738 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0512 21:52:46.164257 19 builder.go:146] stderr: ""
  I0512 21:52:46.164335 19 builder.go:147] stdout: "update-demo-nautilus-5blqt update-demo-nautilus-kvtbg "
  I0512 21:52:46.164420 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-5blqt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:52:46.266157 19 builder.go:146] stderr: ""
  I0512 21:52:46.266232 19 builder.go:147] stdout: "true"
  I0512 21:52:46.266324 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-5blqt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0512 21:52:46.356148 19 builder.go:146] stderr: ""
  I0512 21:52:46.356205 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0512 21:52:46.356222 19 kubectl.go:2393] validating pod update-demo-nautilus-5blqt
  I0512 21:52:46.363803 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0512 21:52:46.363880 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0512 21:52:46.363992 19 kubectl.go:2520] update-demo-nautilus-5blqt is verified up and running
  I0512 21:52:46.364068 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-kvtbg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0512 21:52:46.464113 19 builder.go:146] stderr: ""
  I0512 21:52:46.464214 19 builder.go:147] stdout: "true"
  I0512 21:52:46.464325 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods update-demo-nautilus-kvtbg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0512 21:52:46.540066 19 builder.go:146] stderr: ""
  I0512 21:52:46.540110 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0512 21:52:46.540122 19 kubectl.go:2393] validating pod update-demo-nautilus-kvtbg
  I0512 21:52:46.552677 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I0512 21:52:46.552785 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0512 21:52:46.552814 19 kubectl.go:2520] update-demo-nautilus-kvtbg is verified up and running
  STEP: using delete to clean up resources @ 05/12/25 21:52:46.552
  I0512 21:52:46.552933 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 delete --grace-period=0 --force -f -'
  I0512 21:52:46.652536 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 21:52:46.652592 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0512 21:52:46.652658 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get rc,svc -l name=update-demo --no-headers'
  I0512 21:52:46.756444 19 builder.go:146] stderr: "No resources found in kubectl-2771 namespace.\n"
  I0512 21:52:46.756496 19 builder.go:147] stdout: ""
  I0512 21:52:46.756539 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-2771 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0512 21:52:46.846970 19 builder.go:146] stderr: ""
  I0512 21:52:46.847014 19 builder.go:147] stdout: ""
  I0512 21:52:46.847117 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2771" for this suite. @ 05/12/25 21:52:46.853
• [9.122 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 05/12/25 21:52:46.86
  I0512 21:52:46.860807 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename job @ 05/12/25 21:52:46.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:46.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:46.887
  STEP: Creating a job @ 05/12/25 21:52:46.891
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/12/25 21:52:46.894
  STEP: patching /status @ 05/12/25 21:52:48.908
  STEP: updating /status @ 05/12/25 21:52:48.918
  STEP: get /status @ 05/12/25 21:52:48.926
  I0512 21:52:48.929718 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9098" for this suite. @ 05/12/25 21:52:48.933
• [2.079 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 05/12/25 21:52:48.94
  I0512 21:52:48.940052 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 21:52:48.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:48.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:48.963
  STEP: creating Agnhost RC @ 05/12/25 21:52:48.969
  I0512 21:52:48.970144 19 kubectl.go:1537] namespace kubectl-3039
  I0512 21:52:48.970361 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-3039 create -f -'
  I0512 21:52:49.155084 19 builder.go:146] stderr: ""
  I0512 21:52:49.155181 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/12/25 21:52:49.155
  I0512 21:52:50.159586 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0512 21:52:50.159684 19 framework.go:733] Found 0 / 1
  I0512 21:52:51.160927 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0512 21:52:51.161005 19 framework.go:733] Found 1 / 1
  I0512 21:52:51.161037 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0512 21:52:51.165630 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0512 21:52:51.165693 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0512 21:52:51.165715 19 kubectl.go:1544] wait on agnhost-primary startup in kubectl-3039 
  I0512 21:52:51.165793 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-3039 logs agnhost-primary-2gnjs agnhost-primary'
  I0512 21:52:51.276413 19 builder.go:146] stderr: ""
  I0512 21:52:51.276482 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/12/25 21:52:51.276
  I0512 21:52:51.276598 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-3039 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0512 21:52:51.390198 19 builder.go:146] stderr: ""
  I0512 21:52:51.390254 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I0512 21:52:51.402761 19 utils.go:1203] Service rm2 in namespace kubectl-3039 found.
  STEP: exposing service @ 05/12/25 21:52:53.416
  I0512 21:52:53.416705 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-3039 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0512 21:52:53.533508 19 builder.go:146] stderr: ""
  I0512 21:52:53.534001 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I0512 21:52:53.540928 19 utils.go:1203] Service rm3 in namespace kubectl-3039 found.
  I0512 21:52:55.550040 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3039" for this suite. @ 05/12/25 21:52:55.556
• [6.627 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/12/25 21:52:55.567
  I0512 21:52:55.567705 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename gc @ 05/12/25 21:52:55.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:52:55.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:52:55.591
  STEP: create the rc @ 05/12/25 21:52:55.6
  W0512 21:52:55.606017      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/12/25 21:53:01.615
  STEP: wait for the rc to be deleted @ 05/12/25 21:53:01.625
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/12/25 21:53:06.632
  STEP: Gathering metrics @ 05/12/25 21:53:36.648
  W0512 21:53:36.654254      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0512 21:53:36.654289 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0512 21:53:36.654370 19 delete.go:95] Deleting pod "simpletest.rc-2b2zd" in namespace "gc-7200"
  I0512 21:53:36.693719 19 delete.go:95] Deleting pod "simpletest.rc-2bd5k" in namespace "gc-7200"
  I0512 21:53:36.709812 19 delete.go:95] Deleting pod "simpletest.rc-2nkp9" in namespace "gc-7200"
  I0512 21:53:36.724389 19 delete.go:95] Deleting pod "simpletest.rc-2x88w" in namespace "gc-7200"
  I0512 21:53:36.739856 19 delete.go:95] Deleting pod "simpletest.rc-2zqtw" in namespace "gc-7200"
  I0512 21:53:36.752623 19 delete.go:95] Deleting pod "simpletest.rc-4cb2h" in namespace "gc-7200"
  I0512 21:53:36.770355 19 delete.go:95] Deleting pod "simpletest.rc-4svn7" in namespace "gc-7200"
  I0512 21:53:36.780397 19 delete.go:95] Deleting pod "simpletest.rc-56ctx" in namespace "gc-7200"
  I0512 21:53:36.795234 19 delete.go:95] Deleting pod "simpletest.rc-5c75n" in namespace "gc-7200"
  I0512 21:53:36.807890 19 delete.go:95] Deleting pod "simpletest.rc-62htk" in namespace "gc-7200"
  I0512 21:53:36.822584 19 delete.go:95] Deleting pod "simpletest.rc-69sph" in namespace "gc-7200"
  I0512 21:53:36.840072 19 delete.go:95] Deleting pod "simpletest.rc-6dhqr" in namespace "gc-7200"
  I0512 21:53:36.850081 19 delete.go:95] Deleting pod "simpletest.rc-6tfb7" in namespace "gc-7200"
  I0512 21:53:36.860994 19 delete.go:95] Deleting pod "simpletest.rc-6zxwl" in namespace "gc-7200"
  I0512 21:53:36.868860 19 delete.go:95] Deleting pod "simpletest.rc-74rdl" in namespace "gc-7200"
  I0512 21:53:36.876977 19 delete.go:95] Deleting pod "simpletest.rc-7t4pw" in namespace "gc-7200"
  I0512 21:53:36.885010 19 delete.go:95] Deleting pod "simpletest.rc-86zjr" in namespace "gc-7200"
  I0512 21:53:36.895337 19 delete.go:95] Deleting pod "simpletest.rc-8ms8s" in namespace "gc-7200"
  I0512 21:53:36.902856 19 delete.go:95] Deleting pod "simpletest.rc-8tl5l" in namespace "gc-7200"
  I0512 21:53:36.910513 19 delete.go:95] Deleting pod "simpletest.rc-8vpx4" in namespace "gc-7200"
  I0512 21:53:36.924026 19 delete.go:95] Deleting pod "simpletest.rc-9n2qc" in namespace "gc-7200"
  I0512 21:53:36.935426 19 delete.go:95] Deleting pod "simpletest.rc-9nt68" in namespace "gc-7200"
  I0512 21:53:36.954663 19 delete.go:95] Deleting pod "simpletest.rc-9qwgx" in namespace "gc-7200"
  I0512 21:53:36.977412 19 delete.go:95] Deleting pod "simpletest.rc-9rm5q" in namespace "gc-7200"
  I0512 21:53:36.993593 19 delete.go:95] Deleting pod "simpletest.rc-b99gw" in namespace "gc-7200"
  I0512 21:53:37.003737 19 delete.go:95] Deleting pod "simpletest.rc-bnbm6" in namespace "gc-7200"
  I0512 21:53:37.013188 19 delete.go:95] Deleting pod "simpletest.rc-c6p6m" in namespace "gc-7200"
  I0512 21:53:37.034652 19 delete.go:95] Deleting pod "simpletest.rc-cf49d" in namespace "gc-7200"
  I0512 21:53:37.053997 19 delete.go:95] Deleting pod "simpletest.rc-ckdjr" in namespace "gc-7200"
  I0512 21:53:37.076284 19 delete.go:95] Deleting pod "simpletest.rc-cm9jc" in namespace "gc-7200"
  I0512 21:53:37.110523 19 delete.go:95] Deleting pod "simpletest.rc-cmphv" in namespace "gc-7200"
  I0512 21:53:37.120568 19 delete.go:95] Deleting pod "simpletest.rc-cqhmb" in namespace "gc-7200"
  I0512 21:53:37.139114 19 delete.go:95] Deleting pod "simpletest.rc-cw2dm" in namespace "gc-7200"
  I0512 21:53:37.182342 19 delete.go:95] Deleting pod "simpletest.rc-d2pp8" in namespace "gc-7200"
  I0512 21:53:37.195785 19 delete.go:95] Deleting pod "simpletest.rc-d4vwq" in namespace "gc-7200"
  I0512 21:53:37.244737 19 delete.go:95] Deleting pod "simpletest.rc-dh8md" in namespace "gc-7200"
  I0512 21:53:37.277944 19 delete.go:95] Deleting pod "simpletest.rc-f49xm" in namespace "gc-7200"
  I0512 21:53:37.298252 19 delete.go:95] Deleting pod "simpletest.rc-fbm4s" in namespace "gc-7200"
  I0512 21:53:37.314835 19 delete.go:95] Deleting pod "simpletest.rc-fn9jz" in namespace "gc-7200"
  I0512 21:53:37.332630 19 delete.go:95] Deleting pod "simpletest.rc-ft64q" in namespace "gc-7200"
  I0512 21:53:37.344118 19 delete.go:95] Deleting pod "simpletest.rc-g5862" in namespace "gc-7200"
  I0512 21:53:37.364257 19 delete.go:95] Deleting pod "simpletest.rc-ghkxn" in namespace "gc-7200"
  I0512 21:53:37.382444 19 delete.go:95] Deleting pod "simpletest.rc-grcfc" in namespace "gc-7200"
  I0512 21:53:37.396156 19 delete.go:95] Deleting pod "simpletest.rc-h2jph" in namespace "gc-7200"
  I0512 21:53:37.403556 19 delete.go:95] Deleting pod "simpletest.rc-hhgmb" in namespace "gc-7200"
  I0512 21:53:37.419699 19 delete.go:95] Deleting pod "simpletest.rc-hq2d5" in namespace "gc-7200"
  I0512 21:53:37.435651 19 delete.go:95] Deleting pod "simpletest.rc-j4wbw" in namespace "gc-7200"
  I0512 21:53:37.444660 19 delete.go:95] Deleting pod "simpletest.rc-j84kf" in namespace "gc-7200"
  I0512 21:53:37.466533 19 delete.go:95] Deleting pod "simpletest.rc-jfdf8" in namespace "gc-7200"
  I0512 21:53:37.476022 19 delete.go:95] Deleting pod "simpletest.rc-jg5fs" in namespace "gc-7200"
  I0512 21:53:37.483554 19 delete.go:95] Deleting pod "simpletest.rc-jkvxb" in namespace "gc-7200"
  I0512 21:53:37.490871 19 delete.go:95] Deleting pod "simpletest.rc-jphkz" in namespace "gc-7200"
  I0512 21:53:37.499114 19 delete.go:95] Deleting pod "simpletest.rc-k572z" in namespace "gc-7200"
  I0512 21:53:37.506171 19 delete.go:95] Deleting pod "simpletest.rc-kbdw2" in namespace "gc-7200"
  I0512 21:53:37.514533 19 delete.go:95] Deleting pod "simpletest.rc-kpzxp" in namespace "gc-7200"
  I0512 21:53:37.529771 19 delete.go:95] Deleting pod "simpletest.rc-kvnb8" in namespace "gc-7200"
  I0512 21:53:37.537786 19 delete.go:95] Deleting pod "simpletest.rc-kw58r" in namespace "gc-7200"
  I0512 21:53:37.545533 19 delete.go:95] Deleting pod "simpletest.rc-kw8k6" in namespace "gc-7200"
  I0512 21:53:37.556136 19 delete.go:95] Deleting pod "simpletest.rc-lghks" in namespace "gc-7200"
  I0512 21:53:37.567296 19 delete.go:95] Deleting pod "simpletest.rc-ll8sv" in namespace "gc-7200"
  I0512 21:53:37.578024 19 delete.go:95] Deleting pod "simpletest.rc-lph99" in namespace "gc-7200"
  I0512 21:53:37.602966 19 delete.go:95] Deleting pod "simpletest.rc-lr6lz" in namespace "gc-7200"
  I0512 21:53:37.612627 19 delete.go:95] Deleting pod "simpletest.rc-lsjl5" in namespace "gc-7200"
  I0512 21:53:37.620393 19 delete.go:95] Deleting pod "simpletest.rc-lsq2c" in namespace "gc-7200"
  I0512 21:53:37.632464 19 delete.go:95] Deleting pod "simpletest.rc-mm4c5" in namespace "gc-7200"
  I0512 21:53:37.645561 19 delete.go:95] Deleting pod "simpletest.rc-mmg5d" in namespace "gc-7200"
  I0512 21:53:37.654153 19 delete.go:95] Deleting pod "simpletest.rc-mpqw4" in namespace "gc-7200"
  I0512 21:53:37.661807 19 delete.go:95] Deleting pod "simpletest.rc-mr95n" in namespace "gc-7200"
  I0512 21:53:37.686705 19 delete.go:95] Deleting pod "simpletest.rc-n4kc9" in namespace "gc-7200"
  I0512 21:53:37.695075 19 delete.go:95] Deleting pod "simpletest.rc-n8dll" in namespace "gc-7200"
  I0512 21:53:37.754838 19 delete.go:95] Deleting pod "simpletest.rc-nbqx8" in namespace "gc-7200"
  I0512 21:53:37.806344 19 delete.go:95] Deleting pod "simpletest.rc-nw2xd" in namespace "gc-7200"
  I0512 21:53:37.850923 19 delete.go:95] Deleting pod "simpletest.rc-nzpcz" in namespace "gc-7200"
  I0512 21:53:37.902488 19 delete.go:95] Deleting pod "simpletest.rc-pq9m7" in namespace "gc-7200"
  I0512 21:53:37.944806 19 delete.go:95] Deleting pod "simpletest.rc-pxtsd" in namespace "gc-7200"
  I0512 21:53:38.040876 19 delete.go:95] Deleting pod "simpletest.rc-q4q9k" in namespace "gc-7200"
  I0512 21:53:38.077567 19 delete.go:95] Deleting pod "simpletest.rc-qtc8q" in namespace "gc-7200"
  I0512 21:53:38.092559 19 delete.go:95] Deleting pod "simpletest.rc-r8622" in namespace "gc-7200"
  I0512 21:53:38.166329 19 delete.go:95] Deleting pod "simpletest.rc-rn9hd" in namespace "gc-7200"
  I0512 21:53:38.195824 19 delete.go:95] Deleting pod "simpletest.rc-rq7jc" in namespace "gc-7200"
  I0512 21:53:38.242534 19 delete.go:95] Deleting pod "simpletest.rc-rxq7s" in namespace "gc-7200"
  I0512 21:53:38.307071 19 delete.go:95] Deleting pod "simpletest.rc-rzwmk" in namespace "gc-7200"
  I0512 21:53:38.342826 19 delete.go:95] Deleting pod "simpletest.rc-sfgmz" in namespace "gc-7200"
  I0512 21:53:38.412687 19 delete.go:95] Deleting pod "simpletest.rc-sflzk" in namespace "gc-7200"
  I0512 21:53:38.447580 19 delete.go:95] Deleting pod "simpletest.rc-t4rvb" in namespace "gc-7200"
  I0512 21:53:38.508430 19 delete.go:95] Deleting pod "simpletest.rc-t9zzj" in namespace "gc-7200"
  I0512 21:53:38.558863 19 delete.go:95] Deleting pod "simpletest.rc-td6ls" in namespace "gc-7200"
  I0512 21:53:38.592179 19 delete.go:95] Deleting pod "simpletest.rc-tpj5w" in namespace "gc-7200"
  I0512 21:53:38.663989 19 delete.go:95] Deleting pod "simpletest.rc-vtn9g" in namespace "gc-7200"
  I0512 21:53:38.694543 19 delete.go:95] Deleting pod "simpletest.rc-vvp25" in namespace "gc-7200"
  I0512 21:53:38.743650 19 delete.go:95] Deleting pod "simpletest.rc-w68vp" in namespace "gc-7200"
  I0512 21:53:38.802006 19 delete.go:95] Deleting pod "simpletest.rc-w6btz" in namespace "gc-7200"
  I0512 21:53:38.845222 19 delete.go:95] Deleting pod "simpletest.rc-x4q5n" in namespace "gc-7200"
  I0512 21:53:38.896975 19 delete.go:95] Deleting pod "simpletest.rc-x9bk2" in namespace "gc-7200"
  I0512 21:53:38.945907 19 delete.go:95] Deleting pod "simpletest.rc-xq8xx" in namespace "gc-7200"
  I0512 21:53:38.995244 19 delete.go:95] Deleting pod "simpletest.rc-xt55j" in namespace "gc-7200"
  I0512 21:53:39.076457 19 delete.go:95] Deleting pod "simpletest.rc-zpsv6" in namespace "gc-7200"
  I0512 21:53:39.101260 19 delete.go:95] Deleting pod "simpletest.rc-zrhhm" in namespace "gc-7200"
  I0512 21:53:39.146982 19 delete.go:95] Deleting pod "simpletest.rc-ztx5h" in namespace "gc-7200"
  I0512 21:53:39.197370 19 delete.go:95] Deleting pod "simpletest.rc-zxfm5" in namespace "gc-7200"
  I0512 21:53:39.248587 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7200" for this suite. @ 05/12/25 21:53:39.292
• [43.779 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/12/25 21:53:39.346
  I0512 21:53:39.346859 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename daemonsets @ 05/12/25 21:53:39.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:53:39.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:53:39.367
  I0512 21:53:39.398620 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/12/25 21:53:39.403
  I0512 21:53:39.418863 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:53:39.418978 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/12/25 21:53:39.419
  I0512 21:53:39.529224 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:53:39.529416 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:53:40.529001 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:53:40.529056 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:53:41.524361 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0512 21:53:41.524438 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/12/25 21:53:41.531
  I0512 21:53:41.562978 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:53:41.563772 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/12/25 21:53:41.564
  I0512 21:53:41.624626 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:53:41.624703 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:53:42.583261 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:53:42.583330 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 21:53:43.583218 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0512 21:53:43.583291 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/12/25 21:53:43.597
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1264, will wait for the garbage collector to delete the pods @ 05/12/25 21:53:43.597
  I0512 21:53:43.666561 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.839783ms
  I0512 21:53:43.767664 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.098509ms
  I0512 21:53:45.274547 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 21:53:45.274595 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0512 21:53:45.280480 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16218"},"items":null}

  I0512 21:53:45.374981 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16243"},"items":null}

  I0512 21:53:45.407155 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1264" for this suite. @ 05/12/25 21:53:45.484
• [6.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/12/25 21:53:45.494
  I0512 21:53:45.494823 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename csi-storageclass @ 05/12/25 21:53:45.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:53:45.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:53:45.523
  STEP: Creating a StorageClass @ 05/12/25 21:53:45.542
  STEP: Get StorageClass "e2e-h2zll" @ 05/12/25 21:53:45.55
  STEP: Patching the StorageClass "e2e-h2zll" @ 05/12/25 21:53:45.555
  STEP: Delete StorageClass "e2e-h2zll" @ 05/12/25 21:53:45.562
  STEP: Confirm deletion of StorageClass "e2e-h2zll" @ 05/12/25 21:53:45.569
  STEP: Create a replacement StorageClass @ 05/12/25 21:53:45.574
  STEP: Updating StorageClass "e2e-v2-s6npw" @ 05/12/25 21:53:45.58
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-s6npw=updated" @ 05/12/25 21:53:45.589
  STEP: Deleting StorageClass "e2e-v2-s6npw" via DeleteCollection @ 05/12/25 21:53:45.594
  STEP: Confirm deletion of StorageClass "e2e-v2-s6npw" @ 05/12/25 21:53:45.606
  I0512 21:53:45.702323 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-8250" for this suite. @ 05/12/25 21:53:45.71
• [0.224 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 05/12/25 21:53:45.722
  I0512 21:53:45.722868 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-preemption @ 05/12/25 21:53:45.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:53:45.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:53:45.753
  I0512 21:53:45.774713 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0512 21:54:45.785597 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 05/12/25 21:54:45.793
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 05/12/25 21:54:45.806
  I0512 21:54:45.818469 19 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 05/12/25 21:54:45.818
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 05/12/25 21:54:47.835
  I0512 21:54:47.844646 19 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 05/12/25 21:54:47.845
  STEP: Verifying the pod has the pod disruption condition @ 05/12/25 21:54:49.867
  I0512 21:54:49.873067 19 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0512 21:54:50.395843 19 pod_client.go:173] Successfully updated pod "victim-pod"
  I0512 21:54:50.445568 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7818" for this suite. @ 05/12/25 21:54:50.449
• [64.733 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/12/25 21:54:50.455
  I0512 21:54:50.455247 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 21:54:50.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:54:50.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:54:50.484
  STEP: Creating configMap with name cm-test-opt-del-1ff9c24f-0d22-484c-9ddd-941c01c36635 @ 05/12/25 21:54:50.55
  STEP: Creating configMap with name cm-test-opt-upd-608d7a16-8564-4365-8a8f-601076c1f64d @ 05/12/25 21:54:50.562
  STEP: Creating the pod @ 05/12/25 21:54:50.571
  STEP: Deleting configmap cm-test-opt-del-1ff9c24f-0d22-484c-9ddd-941c01c36635 @ 05/12/25 21:54:52.665
  STEP: Updating configmap cm-test-opt-upd-608d7a16-8564-4365-8a8f-601076c1f64d @ 05/12/25 21:54:52.672
  STEP: Creating configMap with name cm-test-opt-create-7335c2ac-b74e-44b9-a775-2528429e9cae @ 05/12/25 21:54:52.677
  STEP: waiting to observe update in volume @ 05/12/25 21:54:52.681
  I0512 21:55:57.279670 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7256" for this suite. @ 05/12/25 21:55:57.283
• [66.834 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/12/25 21:55:57.289
  I0512 21:55:57.289996 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename deployment @ 05/12/25 21:55:57.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:55:57.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:55:57.319
  I0512 21:55:57.322260 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0512 21:55:57.326987 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0512 21:55:57.362004 19 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0512 21:55:59.373684 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0512 21:55:59.380688 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0512 21:55:59.396688 19 deployment.go:314] Updating deployment test-recreate-deployment
  I0512 21:55:59.396791 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0512 21:55:59.504571 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7879",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e45ac7a-e00b-4baa-8b78-d5e18ea3fc37",
      ResourceVersion: (string) (len=5) "16866",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882683757,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683757,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0512 21:55:59.521257 19 deployment.go:40] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7879",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c8f0dce-9041-4b7c-be92-68b8590e473c",
      ResourceVersion: (string) (len=5) "16863",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882683759,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4e45ac7a-e00b-4baa-8b78-d5e18ea3fc37",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 65 34 35 61 63  37 61 2d 65 30 30 62 2d  |\"4e45ac7a-e00b-|
              00000120  34 62 61 61 2d 38 62 37  38 2d 64 35 65 31 38 65  |4baa-8b78-d5e18e|
              00000130  61 33 66 63 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a3fc37\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:55:59.522415 19 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0512 21:55:59.522833 19 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7879",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8181c6d7-e5d7-40b7-a0d8-390d0f0b311e",
      ResourceVersion: (string) (len=5) "16855",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882683757,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "4e45ac7a-e00b-4baa-8b78-d5e18ea3fc37",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 65 34 35 61 63  37 61 2d 65 30 30 62 2d  |\"4e45ac7a-e00b-|
              00000120  34 62 61 61 2d 38 62 37  38 2d 64 35 65 31 38 65  |4baa-8b78-d5e18e|
              00000130  61 33 66 63 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a3fc37\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 21:55:59.528267 19 deployment.go:68] Pod "test-recreate-deployment-88d47c55d-xlnvg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-xlnvg",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-7879",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44d755a3-3d5c-4678-8721-50920e2997aa",
      ResourceVersion: (string) (len=5) "16867",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882683759,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "5c8f0dce-9041-4b7c-be92-68b8590e473c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  38 66 30 64 63 65 2d 39  |d\":\"5c8f0dce-9|
              00000090  30 34 31 2d 34 62 37 63  2d 62 65 39 32 2d 36 38  |041-4b7c-be92-68|
              000000a0  62 38 35 39 30 65 34 37  33 63 5c 22 7d 22 3a 7b  |b8590e473c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pjmjv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pjmjv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882683759,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882683759,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pjmjv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 21:55:59.530194 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7879" for this suite. @ 05/12/25 21:55:59.534
• [2.250 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/12/25 21:55:59.54
  I0512 21:55:59.540246 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/12/25 21:55:59.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:55:59.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:55:59.558
  I0512 21:55:59.561177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 21:56:02.640904 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6591" for this suite. @ 05/12/25 21:56:02.647
• [3.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/12/25 21:56:02.657
  I0512 21:56:02.657929 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/12/25 21:56:02.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:02.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:02.679
  STEP: creating @ 05/12/25 21:56:02.681
  STEP: getting @ 05/12/25 21:56:02.696
  STEP: listing in namespace @ 05/12/25 21:56:02.704
  STEP: patching @ 05/12/25 21:56:02.713
  STEP: deleting @ 05/12/25 21:56:02.719
  I0512 21:56:02.727981 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9379" for this suite. @ 05/12/25 21:56:02.747
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/12/25 21:56:02.76
  I0512 21:56:02.760891 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename podtemplate @ 05/12/25 21:56:02.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:02.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:02.81
  STEP: Create set of pod templates @ 05/12/25 21:56:02.815
  I0512 21:56:02.823340 19 podtemplates.go:143] created test-podtemplate-1
  I0512 21:56:02.827346 19 podtemplates.go:143] created test-podtemplate-2
  I0512 21:56:02.831326 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/12/25 21:56:02.831
  STEP: delete collection of pod templates @ 05/12/25 21:56:02.838
  I0512 21:56:02.838801 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/12/25 21:56:02.856
  I0512 21:56:02.856664 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0512 21:56:02.859606 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5762" for this suite. @ 05/12/25 21:56:02.863
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 05/12/25 21:56:02.869
  I0512 21:56:02.869769 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename volumeattachment @ 05/12/25 21:56:02.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:02.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:02.908
  STEP: Create VolumeAttachment "va-e2e-txnlr" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr" @ 05/12/25 21:56:02.969
  STEP: Get VolumeAttachment "va-e2e-txnlr" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr" @ 05/12/25 21:56:02.974
  STEP: Patch VolumeAttachment "va-e2e-txnlr" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr" @ 05/12/25 21:56:02.978
  STEP: List VolumeAttachments with "va-e2e-txnlr=patched" label @ 05/12/25 21:56:02.985
  STEP: Delete VolumeAttachment "va-e2e-txnlr" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr" @ 05/12/25 21:56:02.988
  STEP: Confirm deletion of VolumeAttachment "va-e2e-txnlr" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr" @ 05/12/25 21:56:02.995
  STEP: Create VolumeAttachment "va-e2e-qch2x" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr" @ 05/12/25 21:56:03.069
  STEP: Update the VolumeAttachment "va-e2e-qch2x" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr" with label "va-e2e=updated" @ 05/12/25 21:56:03.074
  STEP: Create VolumeAttachment "va-e2e-288l9" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt" @ 05/12/25 21:56:03.169
  STEP: Update the VolumeAttachment "va-e2e-288l9" on node "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt" with label "va-e2e=updated" @ 05/12/25 21:56:03.178
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/12/25 21:56:03.2
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/12/25 21:56:03.214
  I0512 21:56:03.217811 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1104" for this suite. @ 05/12/25 21:56:03.274
• [0.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/12/25 21:56:03.282
  I0512 21:56:03.282857 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-runtime @ 05/12/25 21:56:03.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:03.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:03.315
  STEP: create the container @ 05/12/25 21:56:03.318
  W0512 21:56:03.323856      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/12/25 21:56:03.324
  STEP: get the container status @ 05/12/25 21:56:06.361
  STEP: the container should be terminated @ 05/12/25 21:56:06.367
  STEP: the termination message should be set @ 05/12/25 21:56:06.367
  I0512 21:56:06.367939 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/12/25 21:56:06.368
  I0512 21:56:06.387815 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3410" for this suite. @ 05/12/25 21:56:06.394
• [3.119 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 05/12/25 21:56:06.402
  I0512 21:56:06.402694 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 21:56:06.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:06.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:06.427
  STEP: Setting up server cert @ 05/12/25 21:56:06.536
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 21:56:07.322
  STEP: Deploying the webhook pod @ 05/12/25 21:56:07.337
  STEP: Wait for the deployment to be ready @ 05/12/25 21:56:07.347
  I0512 21:56:07.371067 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 21:56:09.391
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 21:56:09.404
  I0512 21:56:10.405965 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/12/25 21:56:10.473
  STEP: Creating a configMap that should be mutated @ 05/12/25 21:56:10.494
  STEP: Deleting the collection of validation webhooks @ 05/12/25 21:56:10.559
  STEP: Creating a configMap that should not be mutated @ 05/12/25 21:56:10.6
  I0512 21:56:10.665170 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2777" for this suite. @ 05/12/25 21:56:10.677
  STEP: Destroying namespace "webhook-markers-1257" for this suite. @ 05/12/25 21:56:10.689
• [4.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 05/12/25 21:56:10.704
  I0512 21:56:10.704479 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename disruption @ 05/12/25 21:56:10.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:10.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:10.726
  STEP: Waiting for the pdb to be processed @ 05/12/25 21:56:10.732
  STEP: Updating PodDisruptionBudget status @ 05/12/25 21:56:10.74
  STEP: Waiting for all pods to be running @ 05/12/25 21:56:10.752
  I0512 21:56:10.761799 19 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 05/12/25 21:56:12.761
  STEP: Waiting for the pdb to be processed @ 05/12/25 21:56:12.78
  STEP: Patching PodDisruptionBudget status @ 05/12/25 21:56:12.793
  STEP: Waiting for the pdb to be processed @ 05/12/25 21:56:12.804
  I0512 21:56:12.808730 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-874" for this suite. @ 05/12/25 21:56:12.814
• [2.117 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/12/25 21:56:12.821
  I0512 21:56:12.822064 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replicaset @ 05/12/25 21:56:12.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:12.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:12.848
  I0512 21:56:12.880966 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0512 21:56:17.953586 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/12/25 21:56:17.953
  STEP: Scaling up "test-rs" replicaset @ 05/12/25 21:56:17.953
  I0512 21:56:17.962116 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/12/25 21:56:17.962
  I0512 21:56:17.979463 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7296 with ReadyReplicas 1, AvailableReplicas 1
  I0512 21:56:17.996662 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7296 with ReadyReplicas 1, AvailableReplicas 1
  I0512 21:56:18.011182 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7296 with ReadyReplicas 1, AvailableReplicas 1
  I0512 21:56:18.030324 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7296 with ReadyReplicas 1, AvailableReplicas 1
  I0512 21:56:18.664441 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7296 with ReadyReplicas 2, AvailableReplicas 2
  I0512 21:56:19.210723 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-7296 with ReadyReplicas 3 found true
  I0512 21:56:19.211032 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7296" for this suite. @ 05/12/25 21:56:19.215
• [6.398 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/12/25 21:56:19.221
  I0512 21:56:19.221653 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename runtimeclass @ 05/12/25 21:56:19.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:19.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:19.24
  I0512 21:56:19.341000 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1493" for this suite. @ 05/12/25 21:56:19.345
• [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/12/25 21:56:19.355
  I0512 21:56:19.355380 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/12/25 21:56:19.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:19.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:19.384
  STEP: create the container to handle the HTTPGet hook request. @ 05/12/25 21:56:19.467
  STEP: create the pod with lifecycle hook @ 05/12/25 21:56:21.5
  STEP: delete the pod with lifecycle hook @ 05/12/25 21:56:23.546
  STEP: check prestop hook @ 05/12/25 21:56:25.57
  I0512 21:56:25.586585 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6152" for this suite. @ 05/12/25 21:56:25.594
• [6.250 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 05/12/25 21:56:25.605
  I0512 21:56:25.606097 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 21:56:25.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 21:56:25.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 21:56:25.631
  STEP: Creating pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125 @ 05/12/25 21:56:25.636
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/12/25 21:56:27.652
  I0512 21:56:27.660575 19 container_probe.go:1749] Initial restart count of pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 is 0
  I0512 21:56:27.667655 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:29.675679 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:31.682594 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:33.690103 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:35.698512 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:37.707411 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:39.716558 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:41.726220 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:43.735092 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:45.743050 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:47.751860 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:49.759792 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:51.770013 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:53.778301 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:55.787695 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:57.797098 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:56:59.806187 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:01.815494 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:03.823774 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:05.833595 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:07.842453 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:09.851502 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:11.867113 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:13.877726 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:15.885102 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:17.896477 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:19.906744 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:21.916081 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:23.924758 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:25.932502 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:27.941897 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:29.951753 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:31.960063 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:33.968469 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:35.976291 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:37.981762 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:39.991948 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:42.001972 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:44.010142 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:46.018322 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:48.025718 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:50.037895 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:52.046098 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:54.055885 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:56.065749 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:57:58.075822 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:00.083244 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:02.092601 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:04.100787 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:06.110503 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:08.118090 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:10.129910 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:12.139863 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:14.149975 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:16.154814 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:18.159930 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:20.165800 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:22.174793 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:24.183738 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:26.195803 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:28.204899 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:30.214935 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:32.229261 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:34.235630 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:36.243110 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:38.248114 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:40.258768 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:42.264165 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:44.271607 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:46.281094 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:48.286931 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:50.296751 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:52.304770 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:54.314448 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:56.320682 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:58:58.328352 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:00.334005 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:02.341469 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:04.346454 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:06.353071 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:08.361267 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:10.369072 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:12.380823 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:14.388179 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:16.397739 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:18.406636 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:20.416549 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:22.422734 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:24.429883 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:26.438993 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:28.447765 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:30.454508 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:32.460994 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:34.469418 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:36.479332 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:38.488804 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:40.495193 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:42.502007 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:44.509960 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:46.518320 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:48.525754 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:50.536231 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:52.543058 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:54.549490 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:56.556486 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 21:59:58.566602 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:00.574123 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:02.581461 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:04.590113 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:06.599241 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:08.605630 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:10.610230 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:12.617748 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:14.625787 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:16.633487 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:18.640797 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:20.649756 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:22.656350 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:24.663006 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  I0512 22:00:26.670902 19 container_probe.go:1759] Get pod test-webserver-e63b3d8d-e992-4f1b-925a-6c625fe6f479 in namespace container-probe-125
  STEP: deleting the pod @ 05/12/25 22:00:28.671
  I0512 22:00:28.701068 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-125" for this suite. @ 05/12/25 22:00:28.705
• [243.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/12/25 22:00:28.71
  I0512 22:00:28.710921 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename apf @ 05/12/25 22:00:28.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:00:28.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:00:28.725
  STEP: getting /apis @ 05/12/25 22:00:28.727
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/12/25 22:00:28.73
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/12/25 22:00:28.731
  STEP: creating @ 05/12/25 22:00:28.732
  STEP: getting @ 05/12/25 22:00:28.752
  STEP: listing @ 05/12/25 22:00:28.755
  STEP: watching @ 05/12/25 22:00:28.759
  I0512 22:00:28.759793 19 flowcontrol.go:394] starting watch
  STEP: patching @ 05/12/25 22:00:28.76
  STEP: updating @ 05/12/25 22:00:28.765
  I0512 22:00:28.770979 19 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 05/12/25 22:00:28.771
  STEP: patching /status @ 05/12/25 22:00:28.774
  STEP: updating /status @ 05/12/25 22:00:28.789
  STEP: deleting @ 05/12/25 22:00:28.802
  STEP: deleting a collection @ 05/12/25 22:00:28.811
  I0512 22:00:28.825706 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4638" for this suite. @ 05/12/25 22:00:28.828
• [0.122 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/12/25 22:00:28.833
  I0512 22:00:28.833636 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename svcaccounts @ 05/12/25 22:00:28.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:00:28.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:00:28.85
  STEP: Creating a pod to test service account token:  @ 05/12/25 22:00:28.852
  STEP: Saw pod success @ 05/12/25 22:00:32.885
  I0512 22:00:32.890585 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod test-pod-0c2f89b5-2458-47df-8fe2-f52dca12f218 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 22:00:32.902
  I0512 22:00:32.922066 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4324" for this suite. @ 05/12/25 22:00:32.927
• [4.105 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 05/12/25 22:00:32.939
  I0512 22:00:32.939570 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl-logs @ 05/12/25 22:00:32.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:00:32.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:00:32.971
  STEP: creating a pod @ 05/12/25 22:00:32.973
  I0512 22:00:32.974006 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-logs-5872 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0512 22:00:33.068276 19 builder.go:146] stderr: ""
  I0512 22:00:33.068331 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/12/25 22:00:33.068
  I0512 22:00:33.068454 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0512 22:00:35.086247 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/12/25 22:00:35.086
  I0512 22:00:35.086414 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-logs-5872 logs logs-generator logs-generator'
  I0512 22:00:35.199653 19 builder.go:146] stderr: ""
  I0512 22:00:35.199728 19 builder.go:147] stdout: "I0512 22:00:33.668366       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/8bv 276\nI0512 22:00:33.868570       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/lpdh 308\nI0512 22:00:34.069185       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/jdp 550\nI0512 22:00:34.268578       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/gjl 256\nI0512 22:00:34.469009       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/dck4 228\nI0512 22:00:34.669491       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/w2p 293\nI0512 22:00:34.869037       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/768 539\nI0512 22:00:35.069445       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/f42j 448\n"
  STEP: limiting log lines @ 05/12/25 22:00:35.199
  I0512 22:00:35.200052 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-logs-5872 logs logs-generator logs-generator --tail=1'
  I0512 22:00:35.303494 19 builder.go:146] stderr: ""
  I0512 22:00:35.303571 19 builder.go:147] stdout: "I0512 22:00:35.268842       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/crc6 215\n"
  I0512 22:00:35.303604 19 logs.go:180] got output "I0512 22:00:35.268842       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/crc6 215\n"
  STEP: limiting log bytes @ 05/12/25 22:00:35.303
  I0512 22:00:35.303866 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-logs-5872 logs logs-generator logs-generator --limit-bytes=1'
  I0512 22:00:35.408713 19 builder.go:146] stderr: ""
  I0512 22:00:35.408787 19 builder.go:147] stdout: "I"
  I0512 22:00:35.408813 19 logs.go:186] got output "I"
  STEP: exposing timestamps @ 05/12/25 22:00:35.409
  I0512 22:00:35.409165 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-logs-5872 logs logs-generator logs-generator --tail=1 --timestamps'
  I0512 22:00:35.529595 19 builder.go:146] stderr: ""
  I0512 22:00:35.529644 19 builder.go:147] stdout: "2025-05-12T22:00:35.469596968Z I0512 22:00:35.469324       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/s5wv 565\n"
  I0512 22:00:35.529661 19 logs.go:192] got output "2025-05-12T22:00:35.469596968Z I0512 22:00:35.469324       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/s5wv 565\n"
  STEP: restricting to a time range @ 05/12/25 22:00:35.529
  I0512 22:00:38.031385 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-logs-5872 logs logs-generator logs-generator --since=1s'
  I0512 22:00:38.132806 19 builder.go:146] stderr: ""
  I0512 22:00:38.132890 19 builder.go:147] stdout: "I0512 22:00:37.268985       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/hdk5 521\nI0512 22:00:37.469525       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/q95 423\nI0512 22:00:37.669367       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/xlt 520\nI0512 22:00:37.868617       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/2hnj 258\nI0512 22:00:38.069015       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/wmm 346\n"
  I0512 22:00:38.132970 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-logs-5872 logs logs-generator logs-generator --since=24h'
  I0512 22:00:38.237668 19 builder.go:146] stderr: ""
  I0512 22:00:38.237798 19 builder.go:147] stdout: "I0512 22:00:33.668366       1 logs_generator.go:76] 0 POST /api/v1/namespaces/kube-system/pods/8bv 276\nI0512 22:00:33.868570       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/lpdh 308\nI0512 22:00:34.069185       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/jdp 550\nI0512 22:00:34.268578       1 logs_generator.go:76] 3 POST /api/v1/namespaces/ns/pods/gjl 256\nI0512 22:00:34.469009       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/dck4 228\nI0512 22:00:34.669491       1 logs_generator.go:76] 5 POST /api/v1/namespaces/kube-system/pods/w2p 293\nI0512 22:00:34.869037       1 logs_generator.go:76] 6 POST /api/v1/namespaces/ns/pods/768 539\nI0512 22:00:35.069445       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/f42j 448\nI0512 22:00:35.268842       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/crc6 215\nI0512 22:00:35.469324       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/s5wv 565\nI0512 22:00:35.669126       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/h78z 389\nI0512 22:00:35.868449       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/km9 424\nI0512 22:00:36.068995       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/hhvh 324\nI0512 22:00:36.269428       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/dwhp 339\nI0512 22:00:36.469057       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/2jtw 483\nI0512 22:00:36.668456       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/ggvq 275\nI0512 22:00:36.869045       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/2d4 485\nI0512 22:00:37.069493       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/gsc 336\nI0512 22:00:37.268985       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/hdk5 521\nI0512 22:00:37.469525       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/q95 423\nI0512 22:00:37.669367       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/xlt 520\nI0512 22:00:37.868617       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/2hnj 258\nI0512 22:00:38.069015       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/wmm 346\n"
  I0512 22:00:38.237966 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-logs-5872 delete pod logs-generator'
  I0512 22:00:38.991851 19 builder.go:146] stderr: ""
  I0512 22:00:38.991920 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0512 22:00:38.992145 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5872" for this suite. @ 05/12/25 22:00:38.998
• [6.064 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 05/12/25 22:00:39.003
  I0512 22:00:39.003329 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename dns @ 05/12/25 22:00:39.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:00:39.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:00:39.02
  STEP: Creating a test headless service @ 05/12/25 22:00:39.022
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8267.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-8267.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8267.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-8267.svc.cluster.local;sleep 1; done
   @ 05/12/25 22:00:39.026
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8267.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8267.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8267.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8267.svc.cluster.local;sleep 1; done
   @ 05/12/25 22:00:39.026
  STEP: creating a pod to probe DNS @ 05/12/25 22:00:39.026
  STEP: submitting the pod to kubernetes @ 05/12/25 22:00:39.026
  STEP: retrieving the pod @ 05/12/25 22:00:41.052
  STEP: looking for the results for each expected name from probers @ 05/12/25 22:00:41.059
  I0512 22:00:41.069540 19 dns_common.go:479] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local from pod dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39: the server could not find the requested resource (get pods dns-test-e14f6323-9077-41f4-9809-51e594c87f39)
  I0512 22:00:41.076957 19 dns_common.go:479] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local from pod dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39: the server could not find the requested resource (get pods dns-test-e14f6323-9077-41f4-9809-51e594c87f39)
  I0512 22:00:41.083089 19 dns_common.go:479] Unable to read wheezy_udp@dns-test-service-2.dns-8267.svc.cluster.local from pod dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39: the server could not find the requested resource (get pods dns-test-e14f6323-9077-41f4-9809-51e594c87f39)
  I0512 22:00:41.089259 19 dns_common.go:479] Unable to read wheezy_tcp@dns-test-service-2.dns-8267.svc.cluster.local from pod dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39: the server could not find the requested resource (get pods dns-test-e14f6323-9077-41f4-9809-51e594c87f39)
  I0512 22:00:41.094963 19 dns_common.go:479] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local from pod dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39: the server could not find the requested resource (get pods dns-test-e14f6323-9077-41f4-9809-51e594c87f39)
  I0512 22:00:41.100554 19 dns_common.go:479] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local from pod dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39: the server could not find the requested resource (get pods dns-test-e14f6323-9077-41f4-9809-51e594c87f39)
  I0512 22:00:41.106560 19 dns_common.go:479] Unable to read jessie_udp@dns-test-service-2.dns-8267.svc.cluster.local from pod dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39: the server could not find the requested resource (get pods dns-test-e14f6323-9077-41f4-9809-51e594c87f39)
  I0512 22:00:41.111651 19 dns_common.go:479] Unable to read jessie_tcp@dns-test-service-2.dns-8267.svc.cluster.local from pod dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39: the server could not find the requested resource (get pods dns-test-e14f6323-9077-41f4-9809-51e594c87f39)
  I0512 22:00:41.111726 19 dns_common.go:490] Lookups using dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local wheezy_udp@dns-test-service-2.dns-8267.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-8267.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8267.svc.cluster.local jessie_udp@dns-test-service-2.dns-8267.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8267.svc.cluster.local]

  I0512 22:00:41.126521 19 dns_common.go:496] Pod client logs for webserver: 
  I0512 22:00:41.141113 19 dns_common.go:496] Pod client logs for querier: 
  I0512 22:00:41.156376 19 dns_common.go:496] Pod client logs for jessie-querier: 
  I0512 22:00:46.115393 19 dns_common.go:528] DNS probes using dns-8267/dns-test-e14f6323-9077-41f4-9809-51e594c87f39 succeeded

  STEP: deleting the pod @ 05/12/25 22:00:46.116
  STEP: deleting the test headless service @ 05/12/25 22:00:46.131
  I0512 22:00:46.159923 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8267" for this suite. @ 05/12/25 22:00:46.17
• [7.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 05/12/25 22:00:46.176
  I0512 22:00:46.176446 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 22:00:46.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:00:46.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:00:46.19
  STEP: Counting existing ResourceQuota @ 05/12/25 22:00:46.192
  STEP: Creating a ResourceQuota @ 05/12/25 22:00:51.201
  STEP: Ensuring resource quota status is calculated @ 05/12/25 22:00:51.206
  STEP: Creating a ReplicationController @ 05/12/25 22:00:53.213
  STEP: Ensuring resource quota status captures replication controller creation @ 05/12/25 22:00:53.231
  STEP: Deleting a ReplicationController @ 05/12/25 22:00:55.237
  STEP: Ensuring resource quota status released usage @ 05/12/25 22:00:55.248
  I0512 22:00:57.257292 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1796" for this suite. @ 05/12/25 22:00:57.263
• [11.093 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/12/25 22:00:57.271
  I0512 22:00:57.271048 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename runtimeclass @ 05/12/25 22:00:57.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:00:57.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:00:57.291
  I0512 22:00:57.303595 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7726" for this suite. @ 05/12/25 22:00:57.363
• [0.104 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/12/25 22:00:57.376
  I0512 22:00:57.376196 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 22:00:57.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:00:57.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:00:57.407
  STEP: creating a Pod with a static label @ 05/12/25 22:00:57.414
  STEP: watching for Pod to be ready @ 05/12/25 22:00:57.42
  I0512 22:00:57.423461 19 pods.go:945] observed Pod pod-test in namespace pods-5565 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0512 22:00:57.424018 19 pods.go:945] observed Pod pod-test in namespace pods-5565 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:57 +0000 UTC  }]
  I0512 22:00:57.435390 19 pods.go:945] observed Pod pod-test in namespace pods-5565 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:57 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:57 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:57 +0000 UTC  }]
  I0512 22:00:59.046213 19 pods.go:948] Found Pod pod-test in namespace pods-5565 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:59 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:57 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:59 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:59 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-05-12 22:00:57 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/12/25 22:00:59.051
  STEP: getting the Pod and ensuring that it's patched @ 05/12/25 22:00:59.06
  STEP: replacing the Pod's status Ready condition to False @ 05/12/25 22:00:59.063
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/12/25 22:00:59.073
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/12/25 22:00:59.073
  STEP: watching for the Pod to be deleted @ 05/12/25 22:00:59.079
  I0512 22:00:59.080794 19 pods.go:1058] observed event type MODIFIED
  I0512 22:01:01.049055 19 pods.go:1058] observed event type MODIFIED
  I0512 22:01:01.314788 19 pods.go:1058] observed event type MODIFIED
  I0512 22:01:02.052978 19 pods.go:1058] observed event type MODIFIED
  I0512 22:01:02.061801 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5565" for this suite. @ 05/12/25 22:01:02.068
• [4.699 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 05/12/25 22:01:02.079
  I0512 22:01:02.079837 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename job @ 05/12/25 22:01:02.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:01:02.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:01:02.106
  STEP: Looking for a node to schedule job pod @ 05/12/25 22:01:02.109
  STEP: Creating a job @ 05/12/25 22:01:02.168
  STEP: Ensuring job fails @ 05/12/25 22:01:02.177
  I0512 22:01:08.195783 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5286" for this suite. @ 05/12/25 22:01:08.204
• [6.136 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 05/12/25 22:01:08.217
  I0512 22:01:08.218003 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename security-context-test @ 05/12/25 22:01:08.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:01:08.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:01:08.249
  I0512 22:01:10.279498 19 security_context.go:538] Got logs for pod "busybox-privileged-false-15aabfc8-506a-44d5-b41c-a05dbcc196a3": "ip: RTNETLINK answers: Operation not permitted\n"
  I0512 22:01:10.279838 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6641" for this suite. @ 05/12/25 22:01:10.285
• [2.077 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/12/25 22:01:10.294
  I0512 22:01:10.294936 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replicaset @ 05/12/25 22:01:10.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:01:10.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:01:10.323
  STEP: Create a Replicaset @ 05/12/25 22:01:10.334
  STEP: Verify that the required pods have come up. @ 05/12/25 22:01:10.341
  I0512 22:01:10.361577 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/12/25 22:01:10.361
  STEP: Getting /status @ 05/12/25 22:01:12.388
  I0512 22:01:12.397036 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/12/25 22:01:12.397
  I0512 22:01:12.417132 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/12/25 22:01:12.418
  I0512 22:01:12.423502 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0512 22:01:12.424252 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0512 22:01:12.426327 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0512 22:01:12.427874 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0512 22:01:12.428439 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8765 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0512 22:01:12.428777 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/12/25 22:01:12.429
  I0512 22:01:12.429370 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0512 22:01:12.442688 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/12/25 22:01:12.442
  I0512 22:01:12.444725 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0512 22:01:12.444876 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0512 22:01:12.444993 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0512 22:01:12.445310 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0512 22:01:12.445358 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8765 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0512 22:01:12.445498 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0512 22:01:12.445538 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8765 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0512 22:01:12.445564 19 replica_set.go:729] Replicaset test-rs has a patched status
  I0512 22:01:12.445693 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8765" for this suite. @ 05/12/25 22:01:12.449
• [2.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 05/12/25 22:01:12.456
  I0512 22:01:12.456795 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pv @ 05/12/25 22:01:12.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:01:12.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:01:12.478
  STEP: Creating initial PV and PVC @ 05/12/25 22:01:12.482
  I0512 22:01:12.482995 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8652" @ 05/12/25 22:01:12.502
  STEP: Listing PVCs in namespace "pv-8652" @ 05/12/25 22:01:12.509
  STEP: Reading "pvc-jzfdm" Status @ 05/12/25 22:01:12.517
  STEP: Reading "pv-8652-h5h2b" Status @ 05/12/25 22:01:12.527
  STEP: Patching "pvc-jzfdm" Status @ 05/12/25 22:01:12.533
  STEP: Patching "pv-8652-h5h2b" Status @ 05/12/25 22:01:12.538
  STEP: Updating "pvc-jzfdm" Status @ 05/12/25 22:01:12.543
  STEP: Updating "pv-8652-h5h2b" Status @ 05/12/25 22:01:12.551
  I0512 22:01:12.562107 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0512 22:01:12.562172 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-jzfdm"
  I0512 22:01:12.568213 19 pv.go:193] Deleting PersistentVolume "pv-8652-h5h2b"
  I0512 22:01:12.584314 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8652" for this suite. @ 05/12/25 22:01:12.588
• [0.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/12/25 22:01:12.603
  I0512 22:01:12.603453 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replicaset @ 05/12/25 22:01:12.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:01:12.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:01:12.628
  I0512 22:01:12.631840 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-be5eb2a9-e034-449c-87f5-0ec426c27567
  I0512 22:01:12.666414 19 resource.go:87] Pod name my-hostname-basic-be5eb2a9-e034-449c-87f5-0ec426c27567: Found 1 pods out of 1
  I0512 22:01:12.666589 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-be5eb2a9-e034-449c-87f5-0ec426c27567" is running
  I0512 22:01:14.679458 19 replica_set.go:220] Pod "my-hostname-basic-be5eb2a9-e034-449c-87f5-0ec426c27567-mqgqt" is running (conditions: [{Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-05-12 22:01:12 +0000 UTC Reason: Message:}])
  I0512 22:01:14.679538 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/12/25 22:01:14.679
  I0512 22:01:14.699627 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8049" for this suite. @ 05/12/25 22:01:14.705
• [2.108 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/12/25 22:01:14.713
  I0512 22:01:14.713668 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename discovery @ 05/12/25 22:01:14.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:01:14.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:01:14.737
  STEP: Setting up server cert @ 05/12/25 22:01:14.742
  STEP: Requesting APIResourceList from "/api/v1" @ 05/12/25 22:01:15.072
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/12/25 22:01:15.076
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/12/25 22:01:15.079
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/12/25 22:01:15.083
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/12/25 22:01:15.086
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/12/25 22:01:15.089
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/12/25 22:01:15.091
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/12/25 22:01:15.094
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/12/25 22:01:15.097
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/12/25 22:01:15.098
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/12/25 22:01:15.1
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/12/25 22:01:15.101
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/12/25 22:01:15.103
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/12/25 22:01:15.104
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/12/25 22:01:15.106
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/12/25 22:01:15.107
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/12/25 22:01:15.109
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/12/25 22:01:15.111
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/12/25 22:01:15.112
  I0512 22:01:15.114653 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8568" for this suite. @ 05/12/25 22:01:15.12
• [0.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/12/25 22:01:15.135
  I0512 22:01:15.135893 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename gc @ 05/12/25 22:01:15.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:01:15.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:01:15.164
  STEP: create the rc @ 05/12/25 22:01:15.22
  W0512 22:01:15.230724      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/12/25 22:01:19.24
  STEP: wait for the rc to be deleted @ 05/12/25 22:01:19.26
  I0512 22:01:20.308057 19 garbage_collector.go:670] 80 pods remaining
  I0512 22:01:20.311332 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0512 22:01:20.311403 19 garbage_collector.go:678] 
  I0512 22:01:21.345272 19 garbage_collector.go:670] 72 pods remaining
  I0512 22:01:21.345439 19 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0512 22:01:21.345503 19 garbage_collector.go:678] 
  I0512 22:01:22.281251 19 garbage_collector.go:670] 60 pods remaining
  I0512 22:01:22.281446 19 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0512 22:01:22.281490 19 garbage_collector.go:678] 
  I0512 22:01:23.279823 19 garbage_collector.go:670] 40 pods remaining
  I0512 22:01:23.279969 19 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0512 22:01:23.280022 19 garbage_collector.go:678] 
  I0512 22:01:24.310752 19 garbage_collector.go:670] 29 pods remaining
  I0512 22:01:24.310911 19 garbage_collector.go:677] 29 pods has nil DeletionTimestamp
  I0512 22:01:24.310977 19 garbage_collector.go:678] 
  I0512 22:01:25.270652 19 garbage_collector.go:670] 20 pods remaining
  I0512 22:01:25.270723 19 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0512 22:01:25.270743 19 garbage_collector.go:678] 
  STEP: Gathering metrics @ 05/12/25 22:01:26.274
  W0512 22:01:26.280308      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0512 22:01:26.280467 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0512 22:01:26.281434 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4218" for this suite. @ 05/12/25 22:01:26.285
• [11.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 05/12/25 22:01:26.294
  I0512 22:01:26.294528 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 22:01:26.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:01:26.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:01:26.315
  STEP: Creating pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919 @ 05/12/25 22:01:26.317
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/12/25 22:01:28.336
  I0512 22:01:28.342008 19 container_probe.go:1749] Initial restart count of pod busybox-05f5257b-9936-40d2-9969-f720051533e1 is 0
  I0512 22:01:28.346657 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:30.354613 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:32.362050 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:34.370823 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:36.380822 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:38.387829 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:40.397869 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:42.406229 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:44.414885 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:46.422186 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:48.429759 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:50.438232 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:52.447573 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:54.456026 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:56.465060 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:01:58.470564 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:00.479749 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:02.492211 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:04.501623 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:06.510234 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:08.517978 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:10.526737 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:12.535692 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:14.545309 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:16.553776 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:18.563935 19 container_probe.go:1759] Get pod busybox-05f5257b-9936-40d2-9969-f720051533e1 in namespace container-probe-9919
  I0512 22:02:18.564080 19 container_probe.go:1763] Restart count of pod container-probe-9919/busybox-05f5257b-9936-40d2-9969-f720051533e1 is now 1 (50.221987202s elapsed)
  STEP: deleting the pod @ 05/12/25 22:02:18.564
  I0512 22:02:18.586285 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9919" for this suite. @ 05/12/25 22:02:18.59
• [52.301 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/12/25 22:02:18.595
  I0512 22:02:18.595692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename ingress @ 05/12/25 22:02:18.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:18.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:18.616
  STEP: getting /apis @ 05/12/25 22:02:18.62
  STEP: getting /apis/networking.k8s.io @ 05/12/25 22:02:18.633
  STEP: getting /apis/networking.k8s.iov1 @ 05/12/25 22:02:18.634
  STEP: creating @ 05/12/25 22:02:18.636
  STEP: getting @ 05/12/25 22:02:18.696
  STEP: listing @ 05/12/25 22:02:18.707
  STEP: watching @ 05/12/25 22:02:18.711
  I0512 22:02:18.712049 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/12/25 22:02:18.713
  STEP: cluster-wide watching @ 05/12/25 22:02:18.717
  I0512 22:02:18.717252 19 ingress.go:198] starting watch
  STEP: patching @ 05/12/25 22:02:18.718
  STEP: updating @ 05/12/25 22:02:18.723
  I0512 22:02:18.731955 19 ingress.go:221] waiting for watch events with expected annotations
  I0512 22:02:18.732111 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/12/25 22:02:18.732
  STEP: updating /status @ 05/12/25 22:02:18.737
  STEP: get /status @ 05/12/25 22:02:18.77
  STEP: deleting @ 05/12/25 22:02:18.783
  STEP: deleting a collection @ 05/12/25 22:02:18.793
  I0512 22:02:18.805360 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-9876" for this suite. @ 05/12/25 22:02:18.809
• [0.219 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/12/25 22:02:18.815
  I0512 22:02:18.815742 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename svcaccounts @ 05/12/25 22:02:18.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:18.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:18.839
  I0512 22:02:18.844697 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-258"
  I0512 22:02:18.849312 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-258"
  STEP: waiting for a new root ca configmap created @ 05/12/25 22:02:19.349
  I0512 22:02:19.357054 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-258"
  I0512 22:02:19.365208 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-258"
  STEP: waiting for the root ca configmap reconciled @ 05/12/25 22:02:19.866
  I0512 22:02:19.874665 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-258"
  I0512 22:02:19.874922 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-258" for this suite. @ 05/12/25 22:02:19.883
• [1.077 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 05/12/25 22:02:19.896
  I0512 22:02:19.896689 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 22:02:19.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:19.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:19.93
  STEP: creating service in namespace services-3828 @ 05/12/25 22:02:19.934
  STEP: creating service affinity-nodeport in namespace services-3828 @ 05/12/25 22:02:19.934
  STEP: creating replication controller affinity-nodeport in namespace services-3828 @ 05/12/25 22:02:19.943
  I0512 22:02:19.954596      19 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-3828, replica count: 3
  I0512 22:02:23.005406      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 22:02:23.027064 19 resource.go:361] Creating new exec pod
  I0512 22:02:26.057998 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3828 exec execpod-affinity6wvf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0512 22:02:26.253150 19 builder.go:146] stderr: "+ echo+ nc -v -t -w 2 affinity-nodeport 80\n hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0512 22:02:26.253214 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:02:26.253303 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3828 exec execpod-affinity6wvf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.84.31 80'
  I0512 22:02:26.441008 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.84.31 80\nConnection to 10.43.84.31 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0512 22:02:26.441080 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:02:26.441254 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3828 exec execpod-affinity6wvf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.8 31969'
  I0512 22:02:26.608476 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.8 31969\nConnection to 192.168.1.8 31969 port [tcp/*] succeeded!\n"
  I0512 22:02:26.608537 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:02:26.608632 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3828 exec execpod-affinity6wvf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.7 31969'
  I0512 22:02:26.824712 19 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.7 31969\nConnection to 192.168.1.7 31969 port [tcp/*] succeeded!\n+ echo hostName\n"
  I0512 22:02:26.824775 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:02:26.824858 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-3828 exec execpod-affinity6wvf6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.1.8:31969/ ; done'
  I0512 22:02:27.193695 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:31969/\n"
  I0512 22:02:27.193764 19 builder.go:147] stdout: "\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8\naffinity-nodeport-xtkc8"
  I0512 22:02:27.193792 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.193808 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.193823 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.193834 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.193847 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.193859 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.193870 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.193881 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194022 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194036 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194046 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194057 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194082 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194095 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194106 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194116 19 service.go:242] Received response from host: affinity-nodeport-xtkc8
  I0512 22:02:27.194219 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3828, will wait for the garbage collector to delete the pods @ 05/12/25 22:02:27.225
  I0512 22:02:27.294647 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 9.223618ms
  I0512 22:02:27.395365 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.712103ms
  I0512 22:02:30.634505 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3828" for this suite. @ 05/12/25 22:02:30.639
• [10.748 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 05/12/25 22:02:30.645
  I0512 22:02:30.645763 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:02:30.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:30.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:30.664
  STEP: Setting up server cert @ 05/12/25 22:02:30.773
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:02:31.766
  STEP: Deploying the webhook pod @ 05/12/25 22:02:31.775
  STEP: Wait for the deployment to be ready @ 05/12/25 22:02:31.785
  I0512 22:02:31.804110 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 22:02:33.825
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:02:33.837
  I0512 22:02:34.837789 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/12/25 22:02:34.851
  STEP: verifying the mutating webhook match conditions @ 05/12/25 22:02:34.861
  STEP: updating the mutating webhook match conditions @ 05/12/25 22:02:34.865
  STEP: verifying the mutating webhook match conditions @ 05/12/25 22:02:34.873
  I0512 22:02:34.928245 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4509" for this suite. @ 05/12/25 22:02:34.932
  STEP: Destroying namespace "webhook-markers-6347" for this suite. @ 05/12/25 22:02:34.94
• [4.300 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 05/12/25 22:02:34.946
  I0512 22:02:34.946112 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 22:02:34.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:34.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:34.974
  STEP: creating a collection of services @ 05/12/25 22:02:34.977
  I0512 22:02:34.977934 19 service.go:3655] Creating e2e-svc-a-kfdst
  I0512 22:02:34.994415 19 service.go:3655] Creating e2e-svc-b-wqs7b
  I0512 22:02:35.007102 19 service.go:3655] Creating e2e-svc-c-q6rnr
  STEP: deleting service collection @ 05/12/25 22:02:35.041
  I0512 22:02:35.085504 19 service.go:3690] Collection of services has been deleted
  I0512 22:02:35.085707 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9386" for this suite. @ 05/12/25 22:02:35.094
• [0.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/12/25 22:02:35.133
  I0512 22:02:35.133647 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replicaset @ 05/12/25 22:02:35.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:35.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:35.165
  STEP: Create a ReplicaSet @ 05/12/25 22:02:35.168
  STEP: Verify that the required pods have come up @ 05/12/25 22:02:35.173
  I0512 22:02:35.205744 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 3
  I0512 22:02:40.246679 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/12/25 22:02:40.246
  I0512 22:02:40.250370 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/12/25 22:02:40.25
  STEP: DeleteCollection of the ReplicaSets @ 05/12/25 22:02:40.253
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/12/25 22:02:40.36
  I0512 22:02:40.370512 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1982" for this suite. @ 05/12/25 22:02:40.399
• [5.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/12/25 22:02:40.431
  I0512 22:02:40.431742 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename containers @ 05/12/25 22:02:40.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:40.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:40.459
  STEP: Creating a pod to test override command @ 05/12/25 22:02:40.462
  STEP: Saw pod success @ 05/12/25 22:02:44.489
  I0512 22:02:44.496726 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod client-containers-0835d3b3-6076-4023-9a97-6d8cf8b30441 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 22:02:44.511
  I0512 22:02:44.534434 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6771" for this suite. @ 05/12/25 22:02:44.539
• [4.114 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/12/25 22:02:44.548
  I0512 22:02:44.549272 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename daemonsets @ 05/12/25 22:02:44.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:44.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:44.572
  I0512 22:02:44.651257 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/12/25 22:02:44.659
  I0512 22:02:44.742910 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 22:02:44.743252 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 22:02:45.676293 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 22:02:45.676369 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/12/25 22:02:45.701
  STEP: Check that daemon pods images are updated. @ 05/12/25 22:02:45.773
  I0512 22:02:45.780140 19 daemon_set.go:1193] Wrong image for pod: daemon-set-x5ntv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0512 22:02:46.781746 19 daemon_set.go:1193] Wrong image for pod: daemon-set-x5ntv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0512 22:02:48.782262 19 daemon_set.go:1198] Pod daemon-set-2nsxd is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/12/25 22:02:48.787
  I0512 22:02:48.797154 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0512 22:02:48.797237 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt is running 0 daemon pod, expected 1
  I0512 22:02:49.806604 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 22:02:49.806981 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/12/25 22:02:49.913
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7330, will wait for the garbage collector to delete the pods @ 05/12/25 22:02:49.913
  I0512 22:02:49.981851 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.106632ms
  I0512 22:02:50.082289 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.433035ms
  I0512 22:02:52.492132 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 22:02:52.492207 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0512 22:02:52.500110 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20313"},"items":null}

  I0512 22:02:52.505933 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20313"},"items":null}

  I0512 22:02:52.522114 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7330" for this suite. @ 05/12/25 22:02:52.526
• [7.987 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/12/25 22:02:52.536
  I0512 22:02:52.536940 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 22:02:52.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:52.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:52.559
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 22:02:52.563
  STEP: Saw pod success @ 05/12/25 22:02:56.606
  I0512 22:02:56.615048 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-64605226-edae-4cd7-b14f-3e9093814205 container client-container: <nil>
  STEP: delete the pod @ 05/12/25 22:02:56.627
  I0512 22:02:56.644285 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3032" for this suite. @ 05/12/25 22:02:56.658
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 05/12/25 22:02:56.669
  I0512 22:02:56.669949 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 22:02:56.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:02:56.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:02:56.694
  STEP: creating service multiprotocol-test in namespace services-932 @ 05/12/25 22:02:56.697
  STEP: creating pod pod1 in namespace services-932 @ 05/12/25 22:02:56.704
  STEP: Creating pod pod1 in namespace services-932 @ 05/12/25 22:02:56.704
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-932 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/12/25 22:02:58.739
  I0512 22:02:58.755451 19 service.go:4392] successfully validated that service multiprotocol-test in namespace services-932 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/12/25 22:02:58.756
  I0512 22:02:58.756303 19 resource.go:361] Creating new exec pod
  I0512 22:03:00.778565 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.216 80'
  I0512 22:03:01.010288 19 builder.go:146] stderr: "+ + nc -v -t -w 2 10.43.222.216 80\necho hostName\nConnection to 10.43.222.216 80 port [tcp/http] succeeded!\n"
  I0512 22:03:01.010348 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:03:01.010437 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.222.216 80'
  I0512 22:03:05.210512 19 builder.go:146] stderr: "+ + nc -v -u -w 2 10.43.222.216 80\necho hostName\nConnection to 10.43.222.216 80 port [udp/*] succeeded!\n"
  I0512 22:03:05.210588 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/12/25 22:03:05.21
  I0512 22:03:05.228145 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.216 80'
  I0512 22:03:05.412186 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.222.216 80\nConnection to 10.43.222.216 80 port [tcp/http] succeeded!\n"
  I0512 22:03:05.412249 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:03:05.412369 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.222.216 80'
  I0512 22:03:09.611710 19 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.222.216 80\n+ echo hostName\nConnection to 10.43.222.216 80 port [udp/*] succeeded!\n"
  I0512 22:03:09.611799 19 builder.go:147] stdout: ""
  I0512 22:03:09.612037 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.222.216 80'
  I0512 22:03:13.816258 19 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.222.216 80\n+ echo hostName\nConnection to 10.43.222.216 80 port [udp/*] succeeded!\n"
  I0512 22:03:13.816348 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/12/25 22:03:13.816
  I0512 22:03:13.834017 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.222.216 80'
  I0512 22:03:18.055875 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.222.216 80\nConnection to 10.43.222.216 80 port [udp/*] succeeded!\n"
  I0512 22:03:18.055958 19 builder.go:147] stdout: "pod1"
  I0512 22:03:18.056267 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.216 80'
  I0512 22:03:20.272812 19 builder.go:135] rc: 1
  I0512 22:03:20.272907 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.216 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.222.216 80
  + echo hostName
  nc: connect to 10.43.222.216 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0512 22:03:20.273023 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.216 80'
  I0512 22:03:22.488365 19 builder.go:135] rc: 1
  I0512 22:03:22.488548 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.216 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.222.216 80
  + echo hostName
  nc: connect to 10.43.222.216 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0512 22:03:22.488677 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.216 80'
  I0512 22:03:24.706474 19 builder.go:135] rc: 1
  I0512 22:03:24.706590 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-932 exec execpodtsb9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.222.216 80:
  Command stdout:

  stderr:
  + echo+  hostName
  nc -v -t -w 2 10.43.222.216 80
  nc: connect to 10.43.222.216 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0512 22:03:24.706995 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-932" for this suite. @ 05/12/25 22:03:24.714
• [28.055 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/12/25 22:03:24.725
  I0512 22:03:24.725406 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename containers @ 05/12/25 22:03:24.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:03:24.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:03:24.752
  STEP: Creating a pod to test override arguments @ 05/12/25 22:03:24.755
  STEP: Saw pod success @ 05/12/25 22:03:26.774
  I0512 22:03:26.782534 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod client-containers-c885977a-ae10-41c9-b71a-67847824d051 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 22:03:26.793
  I0512 22:03:26.809905 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5187" for this suite. @ 05/12/25 22:03:26.814
• [2.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 05/12/25 22:03:26.82
  I0512 22:03:26.820926 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:03:26.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:03:26.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:03:26.849
  STEP: Setting up server cert @ 05/12/25 22:03:26.907
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:03:27.718
  STEP: Deploying the webhook pod @ 05/12/25 22:03:27.734
  STEP: Wait for the deployment to be ready @ 05/12/25 22:03:27.755
  I0512 22:03:27.776414 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 22:03:29.787
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:03:29.796
  I0512 22:03:30.796608 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/12/25 22:03:30.807
  STEP: create a pod that should be denied by the webhook @ 05/12/25 22:03:30.829
  STEP: create a pod that causes the webhook to hang @ 05/12/25 22:03:30.856
  STEP: create a configmap that should be denied by the webhook @ 05/12/25 22:03:40.868
  STEP: create a configmap that should be admitted by the webhook @ 05/12/25 22:03:40.898
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/12/25 22:03:40.923
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/12/25 22:03:40.936
  STEP: create a namespace that bypass the webhook @ 05/12/25 22:03:40.955
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/12/25 22:03:40.978
  I0512 22:03:41.064691 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7792" for this suite. @ 05/12/25 22:03:41.072
  STEP: Destroying namespace "webhook-markers-6053" for this suite. @ 05/12/25 22:03:41.077
  STEP: Destroying namespace "exempted-namespace-8311" for this suite. @ 05/12/25 22:03:41.081
• [14.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 05/12/25 22:03:41.087
  I0512 22:03:41.087212 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 22:03:41.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:03:41.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:03:41.105
  STEP: Creating a ResourceQuota with terminating scope @ 05/12/25 22:03:41.108
  STEP: Ensuring ResourceQuota status is calculated @ 05/12/25 22:03:41.117
  STEP: Creating a ResourceQuota with not terminating scope @ 05/12/25 22:03:43.126
  STEP: Ensuring ResourceQuota status is calculated @ 05/12/25 22:03:43.136
  STEP: Creating a long running pod @ 05/12/25 22:03:45.143
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/12/25 22:03:45.164
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/12/25 22:03:47.172
  STEP: Deleting the pod @ 05/12/25 22:03:49.18
  STEP: Ensuring resource quota status released the pod usage @ 05/12/25 22:03:49.206
  STEP: Creating a terminating pod @ 05/12/25 22:03:51.217
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/12/25 22:03:51.232
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/12/25 22:03:53.241
  STEP: Deleting the pod @ 05/12/25 22:03:55.249
  STEP: Ensuring resource quota status released the pod usage @ 05/12/25 22:03:55.264
  I0512 22:03:57.268694 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-997" for this suite. @ 05/12/25 22:03:57.272
• [16.190 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/12/25 22:03:57.279
  I0512 22:03:57.279360 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 22:03:57.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:03:57.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:03:57.299
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/12/25 22:03:57.303
  STEP: Saw pod success @ 05/12/25 22:04:01.33
  I0512 22:04:01.336592 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-99efc200-f09b-45ae-87da-88145d9c532f container test-container: <nil>
  STEP: delete the pod @ 05/12/25 22:04:01.35
  I0512 22:04:01.372287 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1187" for this suite. @ 05/12/25 22:04:01.377
• [4.105 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/12/25 22:04:01.384
  I0512 22:04:01.384880 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename certificates @ 05/12/25 22:04:01.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:01.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:01.405
  STEP: getting /apis @ 05/12/25 22:04:02.036
  STEP: getting /apis/certificates.k8s.io @ 05/12/25 22:04:02.041
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/12/25 22:04:02.043
  STEP: creating @ 05/12/25 22:04:02.044
  STEP: getting @ 05/12/25 22:04:02.064
  STEP: listing @ 05/12/25 22:04:02.067
  STEP: watching @ 05/12/25 22:04:02.07
  I0512 22:04:02.070507 19 certificates.go:316] starting watch
  STEP: patching @ 05/12/25 22:04:02.071
  STEP: updating @ 05/12/25 22:04:02.077
  I0512 22:04:02.082078 19 certificates.go:332] waiting for watch events with expected annotations
  I0512 22:04:02.082166 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/12/25 22:04:02.082
  STEP: patching /approval @ 05/12/25 22:04:02.085
  STEP: updating /approval @ 05/12/25 22:04:02.09
  STEP: getting /status @ 05/12/25 22:04:02.095
  STEP: patching /status @ 05/12/25 22:04:02.098
  STEP: updating /status @ 05/12/25 22:04:02.105
  STEP: deleting @ 05/12/25 22:04:02.11
  STEP: deleting a collection @ 05/12/25 22:04:02.122
  I0512 22:04:02.134568 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-140" for this suite. @ 05/12/25 22:04:02.138
• [0.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/12/25 22:04:02.146
  I0512 22:04:02.146528 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 22:04:02.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:02.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:02.167
  STEP: creating the pod @ 05/12/25 22:04:02.169
  STEP: submitting the pod to kubernetes @ 05/12/25 22:04:02.169
  STEP: verifying QOS class is set on the pod @ 05/12/25 22:04:02.175
  I0512 22:04:02.180613 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5448" for this suite. @ 05/12/25 22:04:02.241
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/12/25 22:04:02.255
  I0512 22:04:02.255810 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 22:04:02.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:02.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:02.281
  STEP: Creating a pod to test downward api env vars @ 05/12/25 22:04:02.288
  STEP: Saw pod success @ 05/12/25 22:04:06.335
  I0512 22:04:06.341864 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downward-api-6698a217-8289-4e06-b9c2-97217bc4e757 container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 22:04:06.354
  I0512 22:04:06.375633 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2189" for this suite. @ 05/12/25 22:04:06.38
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/12/25 22:04:06.388
  I0512 22:04:06.388568 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 22:04:06.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:06.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:06.413
  STEP: Creating configMap with name configmap-test-volume-b15275b8-cdaa-4b8d-9c92-ee50dd0aaf6d @ 05/12/25 22:04:06.417
  STEP: Creating a pod to test consume configMaps @ 05/12/25 22:04:06.422
  STEP: Saw pod success @ 05/12/25 22:04:10.457
  I0512 22:04:10.463660 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-294362a7-47b7-4a79-982e-c615159a9f0b container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 22:04:10.477
  I0512 22:04:10.498168 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2697" for this suite. @ 05/12/25 22:04:10.503
• [4.121 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/12/25 22:04:10.51
  I0512 22:04:10.510844 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename var-expansion @ 05/12/25 22:04:10.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:10.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:10.53
  STEP: Creating a pod to test env composition @ 05/12/25 22:04:10.533
  STEP: Saw pod success @ 05/12/25 22:04:14.562
  I0512 22:04:14.567296 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod var-expansion-691a43a9-a256-4b71-8cfb-3a1eecea413d container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 22:04:14.582
  I0512 22:04:14.600900 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7675" for this suite. @ 05/12/25 22:04:14.606
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 05/12/25 22:04:14.62
  I0512 22:04:14.620863 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename statefulset @ 05/12/25 22:04:14.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:14.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:14.645
  STEP: Creating service test in namespace statefulset-7050 @ 05/12/25 22:04:14.647
  STEP: Creating statefulset ss in namespace statefulset-7050 @ 05/12/25 22:04:14.658
  I0512 22:04:14.668055 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0512 22:04:24.673830 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/12/25 22:04:24.69
  STEP: Getting /status @ 05/12/25 22:04:24.715
  I0512 22:04:24.721038 19 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/12/25 22:04:24.721
  I0512 22:04:24.730380 19 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/12/25 22:04:24.73
  I0512 22:04:24.732775 19 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I0512 22:04:24.732845 19 statefulset.go:1111] Found Statefulset ss in namespace statefulset-7050 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0512 22:04:24.732866 19 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/12/25 22:04:24.732
  I0512 22:04:24.732912 19 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0512 22:04:24.738977 19 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/12/25 22:04:24.739
  I0512 22:04:24.741670 19 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I0512 22:04:24.741940 19 statefulset.go:138] Deleting all statefulset in ns statefulset-7050
  I0512 22:04:24.745015 19 rest.go:150] Scaling statefulset ss to 0
  I0512 22:04:34.764757 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0512 22:04:34.770619 19 rest.go:88] Deleting statefulset ss
  I0512 22:04:34.797602 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7050" for this suite. @ 05/12/25 22:04:34.803
• [20.188 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/12/25 22:04:34.811
  I0512 22:04:34.811343 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename tables @ 05/12/25 22:04:34.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:34.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:34.837
  I0512 22:04:34.843215 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9259" for this suite. @ 05/12/25 22:04:34.903
• [0.102 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/12/25 22:04:34.913
  I0512 22:04:34.913558 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename proxy @ 05/12/25 22:04:34.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:34.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:34.936
  I0512 22:04:34.939074 19 proxy.go:387] Creating pod...
  I0512 22:04:36.962761 19 proxy.go:411] Creating service...
  I0512 22:04:36.979172 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy?method=DELETE
  I0512 22:04:52.388882 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0512 22:04:52.389116 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy?method=OPTIONS
  I0512 22:04:52.396818 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0512 22:04:52.396893 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy?method=PATCH
  I0512 22:04:52.405100 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0512 22:04:52.405182 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy?method=POST
  I0512 22:04:52.412194 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0512 22:04:52.412806 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy?method=PUT
  I0512 22:04:52.419619 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0512 22:04:52.419713 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/services/e2e-proxy-test-service/proxy?method=DELETE
  I0512 22:04:52.428610 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0512 22:04:52.428709 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0512 22:04:52.435746 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0512 22:04:52.435915 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/services/e2e-proxy-test-service/proxy?method=PATCH
  I0512 22:04:52.442742 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0512 22:04:52.442799 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/services/e2e-proxy-test-service/proxy?method=POST
  I0512 22:04:52.450076 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0512 22:04:52.450142 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/services/e2e-proxy-test-service/proxy?method=PUT
  I0512 22:04:52.456827 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0512 22:04:52.456896 19 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy?method=GET
  I0512 22:04:52.460061 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0512 22:04:52.460123 19 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/services/e2e-proxy-test-service/proxy?method=GET
  I0512 22:04:52.465246 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0512 22:04:52.465359 19 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/pods/agnhost/proxy?method=HEAD
  I0512 22:04:52.468539 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0512 22:04:52.468599 19 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7679/services/e2e-proxy-test-service/proxy?method=HEAD
  I0512 22:04:52.472813 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0512 22:04:52.473248 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7679" for this suite. @ 05/12/25 22:04:52.478
• [17.571 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 05/12/25 22:04:52.485
  I0512 22:04:52.485165 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 22:04:52.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:04:52.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:04:52.511
  STEP: Counting existing ResourceQuota @ 05/12/25 22:04:52.515
  STEP: Creating a ResourceQuota @ 05/12/25 22:04:57.52
  STEP: Ensuring resource quota status is calculated @ 05/12/25 22:04:57.527
  STEP: Creating a ReplicaSet @ 05/12/25 22:04:59.537
  STEP: Ensuring resource quota status captures replicaset creation @ 05/12/25 22:04:59.554
  STEP: Deleting a ReplicaSet @ 05/12/25 22:05:01.559
  STEP: Ensuring resource quota status released usage @ 05/12/25 22:05:01.565
  I0512 22:05:03.574933 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8957" for this suite. @ 05/12/25 22:05:03.583
• [11.108 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/12/25 22:05:03.6
  I0512 22:05:03.600260 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pod-network-test @ 05/12/25 22:05:03.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:05:03.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:05:03.628
  STEP: Performing setup for networking test in namespace pod-network-test-9322 @ 05/12/25 22:05:03.631
  STEP: creating a selector @ 05/12/25 22:05:03.631
  STEP: Creating the service pods in kubernetes @ 05/12/25 22:05:03.632
  I0512 22:05:03.633256 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/12/25 22:05:15.792
  I0512 22:05:17.834136 19 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0512 22:05:17.834213 19 networking.go:42] Breadth first check of 10.42.0.168 on host 192.168.1.8...
  I0512 22:05:17.840442 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.107:9080/dial?request=hostname&protocol=udp&host=10.42.0.168&port=8081&tries=1'] Namespace:pod-network-test-9322 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 22:05:17.840510 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:05:17.841663 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 22:05:17.841790 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9322/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.107%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.168%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0512 22:05:17.977147 19 utils.go:356] Waiting for responses: map[]
  I0512 22:05:17.977201 19 utils.go:360] reached 10.42.0.168 after 0/1 tries
  I0512 22:05:17.977220 19 networking.go:42] Breadth first check of 10.42.1.106 on host 192.168.1.7...
  I0512 22:05:17.983807 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.107:9080/dial?request=hostname&protocol=udp&host=10.42.1.106&port=8081&tries=1'] Namespace:pod-network-test-9322 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 22:05:17.983873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:05:17.984826 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 22:05:17.984949 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9322/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.107%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.106%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0512 22:05:18.103361 19 utils.go:356] Waiting for responses: map[]
  I0512 22:05:18.103410 19 utils.go:360] reached 10.42.1.106 after 0/1 tries
  I0512 22:05:18.103426 19 networking.go:53] Going to retry 0 out of 2 pods....
  I0512 22:05:18.103545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9322" for this suite. @ 05/12/25 22:05:18.108
• [14.514 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/12/25 22:05:18.114
  I0512 22:05:18.114583 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-watch @ 05/12/25 22:05:18.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:05:18.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:05:18.138
  I0512 22:05:18.143518 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Creating first CR  @ 05/12/25 22:05:20.691
  I0512 22:05:20.699541 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-12T22:05:20Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-12T22:05:20Z]] name:name1 resourceVersion:20980 uid:bdfd487e-1916-44e6-89b1-03033ae342d5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/12/25 22:05:30.701
  I0512 22:05:30.710432 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-12T22:05:30Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-12T22:05:30Z]] name:name2 resourceVersion:21019 uid:fc824b6e-004d-4b60-91a7-0c54607be3dc] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/12/25 22:05:40.712
  I0512 22:05:40.726499 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-12T22:05:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-12T22:05:40Z]] name:name1 resourceVersion:21029 uid:bdfd487e-1916-44e6-89b1-03033ae342d5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/12/25 22:05:50.727
  I0512 22:05:50.738509 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-12T22:05:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-12T22:05:50Z]] name:name2 resourceVersion:21039 uid:fc824b6e-004d-4b60-91a7-0c54607be3dc] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/12/25 22:06:00.738
  I0512 22:06:00.752827 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-12T22:05:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-12T22:05:40Z]] name:name1 resourceVersion:21049 uid:bdfd487e-1916-44e6-89b1-03033ae342d5] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/12/25 22:06:10.753
  I0512 22:06:10.762978 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-05-12T22:05:30Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-05-12T22:05:50Z]] name:name2 resourceVersion:21059 uid:fc824b6e-004d-4b60-91a7-0c54607be3dc] num:map[num1:9223372036854775807 num2:1000000]]}
  I0512 22:06:21.296285 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6866" for this suite. @ 05/12/25 22:06:21.306
• [63.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 05/12/25 22:06:21.32
  I0512 22:06:21.320721 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-pred @ 05/12/25 22:06:21.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:06:21.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:06:21.352
  I0512 22:06:21.355533 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0512 22:06:21.413498 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0512 22:06:21.419514 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr before test
  I0512 22:06:21.426718 19 predicates.go:957] civo-ccm-bd7449dd8-g59ts from kube-system started at 2025-05-12 20:59:04 +0000 UTC (1 container statuses recorded)
  I0512 22:06:21.426789 19 predicates.go:959] 	Container civo-ccm ready: true, restart count 0
  I0512 22:06:21.426813 19 predicates.go:957] civo-csi-controller-0 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (4 container statuses recorded)
  I0512 22:06:21.426829 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 22:06:21.426893 19 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0512 22:06:21.426912 19 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0512 22:06:21.427063 19 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0512 22:06:21.427085 19 predicates.go:957] civo-csi-node-wt7c2 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (2 container statuses recorded)
  I0512 22:06:21.427175 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 22:06:21.427192 19 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0512 22:06:21.427248 19 predicates.go:957] coredns-ccb96694c-l7675 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (1 container statuses recorded)
  I0512 22:06:21.427263 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0512 22:06:21.427362 19 predicates.go:957] metrics-server-7bf7d58749-v5xjt from kube-system started at 2025-05-12 20:59:12 +0000 UTC (1 container statuses recorded)
  I0512 22:06:21.427405 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0512 22:06:21.427423 19 predicates.go:957] traefik-4ncsl from kube-system started at 2025-05-12 20:59:57 +0000 UTC (1 container statuses recorded)
  I0512 22:06:21.427437 19 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0512 22:06:21.427456 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt before test
  I0512 22:06:21.433553 19 predicates.go:957] civo-csi-node-5dvz4 from kube-system started at 2025-05-12 21:21:58 +0000 UTC (2 container statuses recorded)
  I0512 22:06:21.433621 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 22:06:21.433643 19 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0512 22:06:21.433663 19 predicates.go:957] traefik-lqppk from kube-system started at 2025-05-12 21:21:58 +0000 UTC (1 container statuses recorded)
  I0512 22:06:21.433725 19 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0512 22:06:21.433745 19 predicates.go:957] sonobuoy from sonobuoy started at 2025-05-12 21:01:09 +0000 UTC (1 container statuses recorded)
  I0512 22:06:21.433761 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0512 22:06:21.433854 19 predicates.go:957] sonobuoy-e2e-job-e851b625746c4110 from sonobuoy started at 2025-05-12 21:01:13 +0000 UTC (2 container statuses recorded)
  I0512 22:06:21.433874 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0512 22:06:21.433889 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/12/25 22:06:21.434
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/12/25 22:06:23.472
  STEP: Trying to apply a random label on the found node. @ 05/12/25 22:06:23.487
  STEP: verifying the node has the label kubernetes.io/e2e-e2fa7334-8bd4-4128-8691-9a142754eea5 42 @ 05/12/25 22:06:23.496
  STEP: Trying to relaunch the pod, now with labels. @ 05/12/25 22:06:23.502
  STEP: removing the label kubernetes.io/e2e-e2fa7334-8bd4-4128-8691-9a142754eea5 off the node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt @ 05/12/25 22:06:25.528
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e2fa7334-8bd4-4128-8691-9a142754eea5 @ 05/12/25 22:06:25.554
  I0512 22:06:25.558844 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-261" for this suite. @ 05/12/25 22:06:25.562
• [4.247 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/12/25 22:06:25.567
  I0512 22:06:25.567923 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename endpointslice @ 05/12/25 22:06:25.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:06:25.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:06:25.583
  I0512 22:06:25.592827 19 endpointslice.go:1045] Endpoints addresses: [31.28.88.149] , ports: [6443]
  I0512 22:06:25.592942 19 endpointslice.go:1075] EndpointSlices addresses: [31.28.88.149] , ports: [6443]
  I0512 22:06:25.593059 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3229" for this suite. @ 05/12/25 22:06:25.663
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 05/12/25 22:06:25.681
  I0512 22:06:25.681392 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 22:06:25.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:06:25.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:06:25.71
  I0512 22:06:25.714865 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/12/25 22:06:27.02
  I0512 22:06:27.020570 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-9936 --namespace=crd-publish-openapi-9936 create -f -'
  I0512 22:06:27.139467 19 builder.go:146] stderr: ""
  I0512 22:06:27.139537 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2884-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0512 22:06:27.139608 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-9936 --namespace=crd-publish-openapi-9936 delete e2e-test-crd-publish-openapi-2884-crds test-cr'
  I0512 22:06:27.266782 19 builder.go:146] stderr: ""
  I0512 22:06:27.266912 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2884-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0512 22:06:27.267033 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-9936 --namespace=crd-publish-openapi-9936 apply -f -'
  I0512 22:06:27.369126 19 builder.go:146] stderr: ""
  I0512 22:06:27.369201 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2884-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0512 22:06:27.369282 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-9936 --namespace=crd-publish-openapi-9936 delete e2e-test-crd-publish-openapi-2884-crds test-cr'
  I0512 22:06:27.456347 19 builder.go:146] stderr: ""
  I0512 22:06:27.456431 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2884-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/12/25 22:06:27.456
  I0512 22:06:27.456557 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-9936 explain e2e-test-crd-publish-openapi-2884-crds'
  I0512 22:06:27.530990 19 builder.go:146] stderr: ""
  I0512 22:06:27.531723 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2884-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0512 22:06:28.823956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9936" for this suite. @ 05/12/25 22:06:28.835
• [3.165 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 05/12/25 22:06:28.846
  I0512 22:06:28.846185 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename statefulset @ 05/12/25 22:06:28.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:06:28.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:06:28.87
  STEP: Creating service test in namespace statefulset-575 @ 05/12/25 22:06:28.873
  STEP: Creating a new StatefulSet @ 05/12/25 22:06:28.879
  I0512 22:06:28.895679 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0512 22:06:38.901462 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0512 22:06:38.901546 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0512 22:06:38.901571 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0512 22:06:38.923162 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-575 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 22:06:39.121436 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 22:06:39.121512 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 22:06:39.121541 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/12/25 22:06:49.136
  I0512 22:06:49.153998 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 05/12/25 22:06:49.154
  STEP: Updating Pods in reverse ordinal order @ 05/12/25 22:06:59.169
  I0512 22:06:59.175114 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-575 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 22:06:59.385705 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0512 22:06:59.385801 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 22:06:59.385831 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 05/12/25 22:07:09.413
  I0512 22:07:09.414024 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-575 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0512 22:07:09.626432 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0512 22:07:09.626503 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0512 22:07:09.626531 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0512 22:07:19.692019 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/12/25 22:07:29.706
  I0512 22:07:29.712844 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=statefulset-575 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0512 22:07:29.938677 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0512 22:07:29.938758 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0512 22:07:29.938784 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0512 22:07:39.966322 19 statefulset.go:138] Deleting all statefulset in ns statefulset-575
  I0512 22:07:39.970531 19 rest.go:150] Scaling statefulset ss2 to 0
  I0512 22:07:49.990509 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0512 22:07:49.996220 19 rest.go:88] Deleting statefulset ss2
  I0512 22:07:50.030236 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-575" for this suite. @ 05/12/25 22:07:50.035
• [81.195 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/12/25 22:07:50.043
  I0512 22:07:50.043715 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-runtime @ 05/12/25 22:07:50.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:07:50.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:07:50.065
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/12/25 22:07:50.075
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/12/25 22:08:08.26
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/12/25 22:08:08.268
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/12/25 22:08:08.279
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/12/25 22:08:08.279
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/12/25 22:08:08.303
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/12/25 22:08:11.336
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/12/25 22:08:12.35
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/12/25 22:08:12.361
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/12/25 22:08:12.361
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/12/25 22:08:12.389
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/12/25 22:08:13.4
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/12/25 22:08:15.429
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/12/25 22:08:15.441
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/12/25 22:08:15.441
  I0512 22:08:15.478508 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4636" for this suite. @ 05/12/25 22:08:15.484
• [25.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/12/25 22:08:15.491
  I0512 22:08:15.491320 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 22:08:15.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:08:15.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:08:15.51
  STEP: Creating secret with name secret-test-b436b63d-d084-4b92-989d-f3bacd8ec186 @ 05/12/25 22:08:15.625
  STEP: Creating a pod to test consume secrets @ 05/12/25 22:08:15.629
  STEP: Saw pod success @ 05/12/25 22:08:19.652
  I0512 22:08:19.660788 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-secrets-b35eb61b-141a-4810-a489-76f57ea5bde1 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 22:08:19.685
  I0512 22:08:19.703035 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8961" for this suite. @ 05/12/25 22:08:19.707
  STEP: Destroying namespace "secret-namespace-6372" for this suite. @ 05/12/25 22:08:19.712
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 05/12/25 22:08:19.718
  I0512 22:08:19.718955 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename job @ 05/12/25 22:08:19.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:08:19.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:08:19.74
  STEP: Creating a job @ 05/12/25 22:08:19.744
  STEP: Ensuring job reaches completions @ 05/12/25 22:08:19.758
  I0512 22:08:29.776899 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1261" for this suite. @ 05/12/25 22:08:29.784
• [10.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/12/25 22:08:29.799
  I0512 22:08:29.799447 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 22:08:29.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:08:29.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:08:29.825
  STEP: Creating projection with secret that has name projected-secret-test-map-0e74e6d4-a481-49bb-a1cc-a51cbb1d942e @ 05/12/25 22:08:29.828
  STEP: Creating a pod to test consume secrets @ 05/12/25 22:08:29.833
  STEP: Saw pod success @ 05/12/25 22:08:31.855
  I0512 22:08:31.861260 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-secrets-d5051c92-0a0e-4a57-8876-0535d263ee0c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 22:08:31.87
  I0512 22:08:31.888280 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4873" for this suite. @ 05/12/25 22:08:31.897
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/12/25 22:08:31.908
  I0512 22:08:31.908135 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename deployment @ 05/12/25 22:08:31.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:08:31.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:08:31.931
  I0512 22:08:31.934868 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I0512 22:08:31.939384 19 deployment.go:1200] Waiting for observed generation 1
  I0512 22:08:33.952349 19 deployment.go:1205] Waiting for all required pods to come up
  I0512 22:08:33.959696 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/12/25 22:08:33.959
  I0512 22:08:33.959845 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0512 22:08:33.970683 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0512 22:08:33.982561 19 deployment.go:314] Updating deployment webserver-deployment
  I0512 22:08:33.982621 19 deployment.go:1224] Waiting for observed generation 2
  I0512 22:08:35.995360 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0512 22:08:36.000024 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0512 22:08:36.008049 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0512 22:08:36.028143 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0512 22:08:36.028219 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0512 22:08:36.032300 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0512 22:08:36.039529 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0512 22:08:36.039589 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0512 22:08:36.048711 19 deployment.go:314] Updating deployment webserver-deployment
  I0512 22:08:36.048784 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0512 22:08:36.056751 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0512 22:08:36.067572 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0512 22:08:36.111329 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "156416ae-6c24-4c77-8a9f-7beca364f4af",
      ResourceVersion: (string) (len=5) "22096",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0512 22:08:36.229732 19 deployment.go:40] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
      ResourceVersion: (string) (len=5) "22095",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684513,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "156416ae-6c24-4c77-8a9f-7beca364f4af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 35 36 34 31 36  61 65 2d 36 63 32 34 2d  |\"156416ae-6c24-|
              00000120  34 63 37 37 2d 38 61 39  66 2d 37 62 65 63 61 33  |4c77-8a9f-7beca3|
              00000130  36 34 66 34 61 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |64f4af\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 22:08:36.235413 19 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0512 22:08:36.235973 19 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
      ResourceVersion: (string) (len=5) "22093",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "156416ae-6c24-4c77-8a9f-7beca364f4af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 35 36 34 31 36  61 65 2d 36 63 32 34 2d  |\"156416ae-6c24-|
              00000120  34 63 37 37 2d 38 61 39  66 2d 37 62 65 63 61 33  |4c77-8a9f-7beca3|
              00000130  36 34 66 34 61 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |64f4af\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0512 22:08:36.334148 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-22jxm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-22jxm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebee62a2-24ec-446d-a920-233d911f01f8",
      ResourceVersion: (string) (len=5) "22143",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-trl62",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-trl62",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-trl62",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.337672 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-27bvh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-27bvh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a80e94ef-5843-4f42-a780-26cd44975064",
      ResourceVersion: (string) (len=5) "22129",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xpbpc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xpbpc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.339082 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-5x95f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-5x95f",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98a1b595-e17e-41c0-b542-f1f17158f199",
      ResourceVersion: (string) (len=5) "22159",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrv92",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrv92",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.340112 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-6mpvf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-6mpvf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17328ac5-8c91-4370-90dd-7a0ddcc7c467",
      ResourceVersion: (string) (len=5) "22157",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qwwcp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qwwcp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.342792 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-754fq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-754fq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bac8ffd-caf6-4fe2-b627-8210de05b06d",
      ResourceVersion: (string) (len=5) "21946",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 37  35 5c 22 7d 22 3a 7b 22  |.42.0.175\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-59q75",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-59q75",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=11) "10.42.0.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882684512,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c17125ce191c8895bc35fd7ac1b5dc86933b8ad926b1ad293b3ce400ae772b75",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-59q75",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.362548 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-7sms7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7sms7",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95e333af-6b8a-4e26-89f0-f49a57a585d5",
      ResourceVersion: (string) (len=5) "22110",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jqdhw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jqdhw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.363898 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-cbzkb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cbzkb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "556c2afe-063d-4538-b40e-2b88b10342bb",
      ResourceVersion: (string) (len=5) "21961",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 32  39 5c 22 7d 22 3a 7b 22  |.42.1.129\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-92w5w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-92w5w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=11) "10.42.1.129",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.129"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882684513,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://37f5a62a16b5689877e033016439cb1ce42448a976dbbc15769df40cc985a2d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-92w5w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.365145 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-clglm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-clglm",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cfd9f51-a06b-46b9-884c-8a49c7576846",
      ResourceVersion: (string) (len=5) "22154",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r6hsp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r6hsp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.371428 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-cprlk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-cprlk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f4acdf4-2dee-41a5-b7c9-b252d9a796f8",
      ResourceVersion: (string) (len=5) "22156",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d6nrf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d6nrf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.372630 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-g9nwk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-g9nwk",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45519e8f-3d8e-41ea-b49d-34703fb20c08",
      ResourceVersion: (string) (len=5) "21958",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 37  34 5c 22 7d 22 3a 7b 22  |.42.0.174\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8v69",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8v69",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=11) "10.42.0.174",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.174"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882684512,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://27c583536595f3d6a5abc0dd1d9e5fb63c0a1d7a9db6a7c3cc19b52628780081",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w8v69",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.381656 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-jddwz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jddwz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e26116da-eabd-4973-9578-9e46ffcd6824",
      ResourceVersion: (string) (len=5) "21952",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 37  33 5c 22 7d 22 3a 7b 22  |.42.0.173\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rwx9v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rwx9v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=11) "10.42.0.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882684512,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ac5fb9d167df2477c118ff99c74c985a9d0296f3a4cc097d3b17c06c6813dd05",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rwx9v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.388986 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-jfx26" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jfx26",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "265e2414-66a9-4e3a-b5a4-577b5c9a7392",
      ResourceVersion: (string) (len=5) "21955",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 37  36 5c 22 7d 22 3a 7b 22  |.42.0.176\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hpw47",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hpw47",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=11) "10.42.0.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882684512,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://400b95f185f663b9edb68584cf32146381f3ddaaac22ee99b367f33745bbe549",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hpw47",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.390319 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-jh85f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jh85f",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d9c66c7c-4418-400e-90e1-e6a8042508ca",
      ResourceVersion: (string) (len=5) "22138",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sf8qx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sf8qx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.391127 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-jkcms" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jkcms",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "951fb499-2e63-4e6e-a846-aaaf4bc538ab",
      ResourceVersion: (string) (len=5) "22130",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r2hkw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r2hkw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.397317 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-jqj4g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-jqj4g",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "195fb1fc-12e8-4cbb-b31d-fe5e17ec2f52",
      ResourceVersion: (string) (len=5) "22155",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lw6pz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lw6pz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.398276 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-ls24d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ls24d",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0f5c707-eb78-454f-96d2-ed62490a67c7",
      ResourceVersion: (string) (len=5) "21964",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 32  36 5c 22 7d 22 3a 7b 22  |.42.1.126\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-st9r4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-st9r4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=11) "10.42.1.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882684512,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://329aa67ec291be23f21088ca943733698996fc6bd8ba0c9175ea1c765fadda80",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-st9r4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.399491 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-p7rbz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-p7rbz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "268ac335-299a-47ca-9c93-ac12b2568417",
      ResourceVersion: (string) (len=5) "22137",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hs8q8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hs8q8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.400489 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-scxfd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-scxfd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46112fe3-9129-41d9-a2bf-55271d1803ee",
      ResourceVersion: (string) (len=5) "21928",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 32  35 5c 22 7d 22 3a 7b 22  |.42.1.125\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jrgbd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jrgbd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=11) "10.42.1.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882684512,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://69e40ed29dd0d88dcb2a8bd52a2b0cf5127b420695013b2739ca1a90fc923232",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jrgbd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.401909 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-w5wmf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w5wmf",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5198b994-a204-4c1a-b461-e4ac0172d9d4",
      ResourceVersion: (string) (len=5) "21949",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684511,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 37  32 5c 22 7d 22 3a 7b 22  |.42.0.172\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-td2cv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-td2cv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684512,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=11) "10.42.0.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684512,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63882684512,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7940431b3bd43d6dd68d3260c72c0feca546a6ef5d82743775d43603f68e5e17",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-td2cv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.403204 19 deployment.go:68] Pod "webserver-deployment-64bcfc6446-xx2vv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xx2vv",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3131a667-9925-4a64-97b1-e4cd83cb04c6",
      ResourceVersion: (string) (len=5) "22119",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "60539862-dce5-42bd-b2f9-67225a477e00",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 30  35 33 39 38 36 32 2d 64  |d\":\"60539862-d|
              00000090  63 65 35 2d 34 32 62 64  2d 62 32 66 39 2d 36 37  |ce5-42bd-b2f9-67|
              000000a0  32 32 35 61 34 37 37 65  30 30 5c 22 7d 22 3a 7b  |225a477e00\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4jlr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4jlr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.406170 19 deployment.go:68] Pod "webserver-deployment-786f49d774-6j6d4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6j6d4",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f263a9c0-12bd-47a0-bdb8-f7a534488673",
      ResourceVersion: (string) (len=5) "22083",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 33 32 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.132\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hm2kw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hm2kw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=11) "10.42.1.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hm2kw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.407670 19 deployment.go:68] Pod "webserver-deployment-786f49d774-bv5p9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-bv5p9",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c0d55ee-eee0-4112-8141-46f3ef96b3a8",
      ResourceVersion: (string) (len=5) "22145",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m6mph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m6mph",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m6mph",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.410091 19 deployment.go:68] Pod "webserver-deployment-786f49d774-bwrqq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-bwrqq",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7376c91b-e93e-4a5f-917a-b85e5abd6f2c",
      ResourceVersion: (string) (len=5) "22077",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 37 38 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.178\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-stgrs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-stgrs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=11) "10.42.0.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-stgrs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.412218 19 deployment.go:68] Pod "webserver-deployment-786f49d774-f2qtd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-f2qtd",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d65a0c27-fc2e-48a0-acf0-40062b9cf796",
      ResourceVersion: (string) (len=5) "22079",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 37 37 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.177\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-725xb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-725xb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.8",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.8"
        }
      },
      PodIP: (string) (len=11) "10.42.0.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-725xb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.421226 19 deployment.go:68] Pod "webserver-deployment-786f49d774-hdhn2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hdhn2",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ac65822-2ad8-4e9f-9864-a9bd84046585",
      ResourceVersion: (string) (len=5) "22141",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z7xf9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z7xf9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.422169 19 deployment.go:68] Pod "webserver-deployment-786f49d774-jzhnh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-jzhnh",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a40a4f11-cd26-4c00-a9d7-dacae7e4f911",
      ResourceVersion: (string) (len=5) "22158",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4wh2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4wh2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.423148 19 deployment.go:68] Pod "webserver-deployment-786f49d774-rdl8k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-rdl8k",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88daddfa-12c0-4a5f-9331-23534b80032a",
      ResourceVersion: (string) (len=5) "22109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6bdpz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6bdpz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.425945 19 deployment.go:68] Pod "webserver-deployment-786f49d774-rtndv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-rtndv",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3290ee4a-fca5-4645-a8bb-75c8f0ef710b",
      ResourceVersion: (string) (len=5) "22140",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kgzwf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kgzwf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.427015 19 deployment.go:68] Pod "webserver-deployment-786f49d774-ts44r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ts44r",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "939e7f2d-a95a-4ad6-a511-e85c404fe2bf",
      ResourceVersion: (string) (len=5) "22085",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 33 31 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.131\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hb9rj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hb9rj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=11) "10.42.1.131",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.131"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hb9rj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.428404 19 deployment.go:68] Pod "webserver-deployment-786f49d774-vbb92" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vbb92",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21da86ae-0b08-4524-88e6-8522b0775993",
      ResourceVersion: (string) (len=5) "22107",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hq4l8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hq4l8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.429282 19 deployment.go:68] Pod "webserver-deployment-786f49d774-vz996" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vz996",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2181f3af-f3fe-4f22-aa3b-a297735012d7",
      ResourceVersion: (string) (len=5) "22115",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8dcqk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8dcqk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.430248 19 deployment.go:68] Pod "webserver-deployment-786f49d774-wvn2f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-wvn2f",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a317f03-b7d1-4422-b120-1e5606eec706",
      ResourceVersion: (string) (len=5) "22088",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684513,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684513,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 33 30 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.130\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kwrm7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kwrm7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684515,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684514,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "192.168.1.7",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "192.168.1.7"
        }
      },
      PodIP: (string) (len=11) "10.42.1.130",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.130"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684514,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kwrm7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.436921 19 deployment.go:68] Pod "webserver-deployment-786f49d774-zp7dz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-zp7dz",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-5579",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0c1b401-1537-44ed-a017-f90aca893acd",
      ResourceVersion: (string) (len=5) "22120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63882684516,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "8324e734-b960-47d4-aacd-b5d711566bc8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 33  32 34 65 37 33 34 2d 62  |d\":\"8324e734-b|
              00000090  39 36 30 2d 34 37 64 34  2d 61 61 63 64 2d 62 35  |960-47d4-aacd-b5|
              000000a0  64 37 31 31 35 36 36 62  63 38 5c 22 7d 22 3a 7b  |d711566bc8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v7rzg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v7rzg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=61) "k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63882684516,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0512 22:08:36.437834 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5579" for this suite. @ 05/12/25 22:08:36.493
• [4.626 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/12/25 22:08:36.534
  I0512 22:08:36.534680 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename containers @ 05/12/25 22:08:36.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:08:36.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:08:36.581
  I0512 22:08:38.635165 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5610" for this suite. @ 05/12/25 22:08:38.641
• [2.114 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/12/25 22:08:38.648
  I0512 22:08:38.648938 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/12/25 22:08:38.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:08:38.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:08:38.675
  I0512 22:08:38.679182 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:08:39.716326 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6097" for this suite. @ 05/12/25 22:08:39.725
• [1.088 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/12/25 22:08:39.737
  I0512 22:08:39.737053 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replication-controller @ 05/12/25 22:08:39.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:08:39.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:08:39.761
  STEP: Creating ReplicationController "e2e-rc-79qwf" @ 05/12/25 22:08:39.764
  I0512 22:08:39.768992 19 rc.go:792] Get Replication Controller "e2e-rc-79qwf" to confirm replicas
  I0512 22:08:40.769616 19 rc.go:792] Get Replication Controller "e2e-rc-79qwf" to confirm replicas
  I0512 22:08:40.774702 19 rc.go:801] Found 1 replicas for "e2e-rc-79qwf" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-79qwf" @ 05/12/25 22:08:40.774
  STEP: Updating a scale subresource @ 05/12/25 22:08:40.78
  STEP: Verifying replicas where modified for replication controller "e2e-rc-79qwf" @ 05/12/25 22:08:40.788
  I0512 22:08:40.789445 19 rc.go:792] Get Replication Controller "e2e-rc-79qwf" to confirm replicas
  I0512 22:08:41.790388 19 rc.go:792] Get Replication Controller "e2e-rc-79qwf" to confirm replicas
  I0512 22:08:41.801731 19 rc.go:801] Found 2 replicas for "e2e-rc-79qwf" replication controller
  I0512 22:08:41.801854 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8992" for this suite. @ 05/12/25 22:08:41.829
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/12/25 22:08:41.853
  I0512 22:08:41.853690 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename var-expansion @ 05/12/25 22:08:41.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:08:41.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:08:41.953
  STEP: creating the pod with failed condition @ 05/12/25 22:08:41.962
  STEP: updating the pod @ 05/12/25 22:10:41.995
  I0512 22:10:42.519850 19 pod_client.go:173] Successfully updated pod "var-expansion-e4c48c25-d518-43cf-829d-c05af9820240"
  STEP: waiting for pod running @ 05/12/25 22:10:42.519
  STEP: deleting the pod gracefully @ 05/12/25 22:10:44.53
  I0512 22:10:44.531209 19 delete.go:62] Deleting pod "var-expansion-e4c48c25-d518-43cf-829d-c05af9820240" in namespace "var-expansion-1198"
  I0512 22:10:44.537624 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-e4c48c25-d518-43cf-829d-c05af9820240" to be fully deleted
  I0512 22:11:16.668684 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1198" for this suite. @ 05/12/25 22:11:16.675
• [154.831 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 05/12/25 22:11:16.685
  I0512 22:11:16.685603 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:11:16.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:11:16.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:11:16.713
  STEP: Setting up server cert @ 05/12/25 22:11:16.813
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:11:17.288
  STEP: Deploying the webhook pod @ 05/12/25 22:11:17.299
  STEP: Wait for the deployment to be ready @ 05/12/25 22:11:17.32
  I0512 22:11:17.343463 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0512 22:11:19.362318 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:11:21.369475 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:11:23.371481 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:11:25.375449 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:11:27.370103 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 11, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/12/25 22:11:29.371
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:11:29.384
  I0512 22:11:30.385608 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/12/25 22:11:30.397
  STEP: create a namespace for the webhook @ 05/12/25 22:11:30.429
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/12/25 22:11:30.457
  I0512 22:11:30.540039 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7238" for this suite. @ 05/12/25 22:11:30.544
  STEP: Destroying namespace "webhook-markers-750" for this suite. @ 05/12/25 22:11:30.549
  STEP: Destroying namespace "fail-closed-namespace-6571" for this suite. @ 05/12/25 22:11:30.554
• [13.874 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 05/12/25 22:11:30.559
  I0512 22:11:30.559582 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/12/25 22:11:30.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:11:30.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:11:30.588
  STEP: getting /apis @ 05/12/25 22:11:30.595
  STEP: getting /apis/admissionregistration.k8s.io @ 05/12/25 22:11:30.599
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/12/25 22:11:30.6
  STEP: creating @ 05/12/25 22:11:30.601
  STEP: getting @ 05/12/25 22:11:30.629
  STEP: listing @ 05/12/25 22:11:30.64
  STEP: watching @ 05/12/25 22:11:30.643
  I0512 22:11:30.643724 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 05/12/25 22:11:30.645
  STEP: updating @ 05/12/25 22:11:30.649
  I0512 22:11:30.682841 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 05/12/25 22:11:30.683
  STEP: patching /status @ 05/12/25 22:11:30.697
  STEP: updating /status @ 05/12/25 22:11:30.702
  STEP: deleting @ 05/12/25 22:11:30.707
  STEP: deleting a collection @ 05/12/25 22:11:30.717
  I0512 22:11:30.728728 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8604" for this suite. @ 05/12/25 22:11:30.732
• [0.177 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/12/25 22:11:30.737
  I0512 22:11:30.737804 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename podtemplate @ 05/12/25 22:11:30.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:11:30.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:11:30.756
  I0512 22:11:30.788062 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9487" for this suite. @ 05/12/25 22:11:30.834
• [0.108 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/12/25 22:11:30.848
  I0512 22:11:30.848197 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 22:11:30.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:11:30.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:11:30.874
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/12/25 22:11:30.878
  STEP: Saw pod success @ 05/12/25 22:11:34.903
  I0512 22:11:34.911037 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-9e441a45-820e-4513-a477-fee9183ad877 container test-container: <nil>
  STEP: delete the pod @ 05/12/25 22:11:34.93
  I0512 22:11:34.943439 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9375" for this suite. @ 05/12/25 22:11:34.947
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/12/25 22:11:34.956
  I0512 22:11:34.957025 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename svc-latency @ 05/12/25 22:11:34.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:11:34.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:11:34.983
  I0512 22:11:34.988991 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9528 @ 05/12/25 22:11:34.989
  I0512 22:11:34.998791      19 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9528, replica count: 1
  I0512 22:11:36.049904      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 22:11:37.051079      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 22:11:37.166362 19 service_latency.go:356] Created: latency-svc-w9zzx
  I0512 22:11:37.177135 19 service_latency.go:363] Got endpoints: latency-svc-w9zzx [24.947353ms]
  I0512 22:11:37.196459 19 service_latency.go:356] Created: latency-svc-dp8mr
  I0512 22:11:37.208135 19 service_latency.go:363] Got endpoints: latency-svc-dp8mr [29.322314ms]
  I0512 22:11:37.208676 19 service_latency.go:356] Created: latency-svc-kcxqc
  I0512 22:11:37.221467 19 service_latency.go:356] Created: latency-svc-c7629
  I0512 22:11:37.223870 19 service_latency.go:363] Got endpoints: latency-svc-kcxqc [44.15277ms]
  I0512 22:11:37.238037 19 service_latency.go:363] Got endpoints: latency-svc-c7629 [56.453483ms]
  I0512 22:11:37.318290 19 service_latency.go:356] Created: latency-svc-7hssr
  I0512 22:11:37.319176 19 service_latency.go:356] Created: latency-svc-wbg9w
  I0512 22:11:37.319171 19 service_latency.go:356] Created: latency-svc-5qsd9
  I0512 22:11:37.319599 19 service_latency.go:356] Created: latency-svc-j67sz
  I0512 22:11:37.319843 19 service_latency.go:356] Created: latency-svc-4mjbh
  I0512 22:11:37.320011 19 service_latency.go:356] Created: latency-svc-kgp9g
  I0512 22:11:37.320115 19 service_latency.go:356] Created: latency-svc-ddkzt
  I0512 22:11:37.320262 19 service_latency.go:356] Created: latency-svc-wc95d
  I0512 22:11:37.320459 19 service_latency.go:356] Created: latency-svc-mwkst
  I0512 22:11:37.320554 19 service_latency.go:356] Created: latency-svc-h9w6c
  I0512 22:11:37.320767 19 service_latency.go:356] Created: latency-svc-c6hlb
  I0512 22:11:37.320872 19 service_latency.go:356] Created: latency-svc-blr5r
  I0512 22:11:37.320976 19 service_latency.go:356] Created: latency-svc-7lpkh
  I0512 22:11:37.321234 19 service_latency.go:356] Created: latency-svc-m4k5f
  I0512 22:11:37.325290 19 service_latency.go:356] Created: latency-svc-bbbtc
  I0512 22:11:37.360060 19 service_latency.go:363] Got endpoints: latency-svc-bbbtc [178.609173ms]
  I0512 22:11:37.360993 19 service_latency.go:363] Got endpoints: latency-svc-blr5r [177.966879ms]
  I0512 22:11:37.361232 19 service_latency.go:363] Got endpoints: latency-svc-7hssr [180.12973ms]
  I0512 22:11:37.361269 19 service_latency.go:363] Got endpoints: latency-svc-c6hlb [179.589199ms]
  I0512 22:11:37.361289 19 service_latency.go:363] Got endpoints: latency-svc-5qsd9 [123.149095ms]
  I0512 22:11:37.400336 19 service_latency.go:363] Got endpoints: latency-svc-wbg9w [218.21597ms]
  I0512 22:11:37.400898 19 service_latency.go:363] Got endpoints: latency-svc-kgp9g [218.401984ms]
  I0512 22:11:37.401652 19 service_latency.go:363] Got endpoints: latency-svc-mwkst [219.438576ms]
  I0512 22:11:37.402075 19 service_latency.go:363] Got endpoints: latency-svc-7lpkh [219.949348ms]
  I0512 22:11:37.402386 19 service_latency.go:363] Got endpoints: latency-svc-m4k5f [220.386565ms]
  I0512 22:11:37.438531 19 service_latency.go:363] Got endpoints: latency-svc-j67sz [214.619802ms]
  I0512 22:11:37.439639 19 service_latency.go:356] Created: latency-svc-hx4ks
  I0512 22:11:37.439712 19 service_latency.go:363] Got endpoints: latency-svc-wc95d [257.420488ms]
  I0512 22:11:37.439871 19 service_latency.go:363] Got endpoints: latency-svc-ddkzt [257.481622ms]
  I0512 22:11:37.439877 19 service_latency.go:363] Got endpoints: latency-svc-h9w6c [257.995175ms]
  I0512 22:11:37.439887 19 service_latency.go:363] Got endpoints: latency-svc-4mjbh [231.696044ms]
  I0512 22:11:37.450008 19 service_latency.go:363] Got endpoints: latency-svc-hx4ks [88.547897ms]
  I0512 22:11:37.523237 19 service_latency.go:356] Created: latency-svc-ztcjq
  I0512 22:11:37.525186 19 service_latency.go:356] Created: latency-svc-5z8s2
  I0512 22:11:37.525680 19 service_latency.go:356] Created: latency-svc-8959f
  I0512 22:11:37.525964 19 service_latency.go:356] Created: latency-svc-vndlz
  I0512 22:11:37.526359 19 service_latency.go:356] Created: latency-svc-f2hx9
  I0512 22:11:37.526603 19 service_latency.go:356] Created: latency-svc-cgdtz
  I0512 22:11:37.526811 19 service_latency.go:356] Created: latency-svc-ghb9m
  I0512 22:11:37.527001 19 service_latency.go:356] Created: latency-svc-m976w
  I0512 22:11:37.530617 19 service_latency.go:356] Created: latency-svc-cvkc4
  I0512 22:11:37.531175 19 service_latency.go:356] Created: latency-svc-sqvfq
  I0512 22:11:37.531495 19 service_latency.go:356] Created: latency-svc-2w8mw
  I0512 22:11:37.531662 19 service_latency.go:356] Created: latency-svc-nvhq2
  I0512 22:11:37.532208 19 service_latency.go:356] Created: latency-svc-jxzt2
  I0512 22:11:37.541006 19 service_latency.go:356] Created: latency-svc-zw9zr
  I0512 22:11:37.541343 19 service_latency.go:356] Created: latency-svc-mmdk9
  I0512 22:11:37.559750 19 service_latency.go:363] Got endpoints: latency-svc-8959f [197.722238ms]
  I0512 22:11:37.560387 19 service_latency.go:363] Got endpoints: latency-svc-5z8s2 [198.224131ms]
  I0512 22:11:37.560428 19 service_latency.go:363] Got endpoints: latency-svc-f2hx9 [159.143911ms]
  I0512 22:11:37.560449 19 service_latency.go:363] Got endpoints: latency-svc-vndlz [197.781541ms]
  I0512 22:11:37.560465 19 service_latency.go:363] Got endpoints: latency-svc-ztcjq [110.041535ms]
  I0512 22:11:37.586485 19 service_latency.go:363] Got endpoints: latency-svc-cgdtz [183.828033ms]
  I0512 22:11:37.586954 19 service_latency.go:363] Got endpoints: latency-svc-sqvfq [147.496707ms]
  I0512 22:11:37.587407 19 service_latency.go:363] Got endpoints: latency-svc-cvkc4 [185.207322ms]
  I0512 22:11:37.587670 19 service_latency.go:363] Got endpoints: latency-svc-m976w [186.847464ms]
  I0512 22:11:37.587707 19 service_latency.go:363] Got endpoints: latency-svc-ghb9m [185.735088ms]
  I0512 22:11:37.614171 19 service_latency.go:363] Got endpoints: latency-svc-zw9zr [173.219675ms]
  I0512 22:11:37.614110 19 service_latency.go:363] Got endpoints: latency-svc-nvhq2 [253.495019ms]
  I0512 22:11:37.614334 19 service_latency.go:363] Got endpoints: latency-svc-jxzt2 [173.811301ms]
  I0512 22:11:37.614346 19 service_latency.go:363] Got endpoints: latency-svc-2w8mw [174.39104ms]
  I0512 22:11:37.614361 19 service_latency.go:363] Got endpoints: latency-svc-mmdk9 [173.915531ms]
  I0512 22:11:37.617798 19 service_latency.go:356] Created: latency-svc-lb8b8
  I0512 22:11:37.630858 19 service_latency.go:356] Created: latency-svc-z5rf7
  I0512 22:11:37.631462 19 service_latency.go:363] Got endpoints: latency-svc-lb8b8 [68.872044ms]
  I0512 22:11:37.641713 19 service_latency.go:356] Created: latency-svc-bqnbg
  I0512 22:11:37.642142 19 service_latency.go:363] Got endpoints: latency-svc-z5rf7 [81.147915ms]
  I0512 22:11:37.651031 19 service_latency.go:363] Got endpoints: latency-svc-bqnbg [88.805069ms]
  I0512 22:11:37.710145 19 service_latency.go:356] Created: latency-svc-p75wr
  I0512 22:11:37.710320 19 service_latency.go:356] Created: latency-svc-5lb4l
  I0512 22:11:37.710710 19 service_latency.go:356] Created: latency-svc-cjd57
  I0512 22:11:37.710910 19 service_latency.go:356] Created: latency-svc-7gcc5
  I0512 22:11:37.711128 19 service_latency.go:356] Created: latency-svc-5k2rk
  I0512 22:11:37.711601 19 service_latency.go:356] Created: latency-svc-b97hs
  I0512 22:11:37.711739 19 service_latency.go:356] Created: latency-svc-b756n
  I0512 22:11:37.711879 19 service_latency.go:356] Created: latency-svc-2mnsv
  I0512 22:11:37.712071 19 service_latency.go:356] Created: latency-svc-dxgbm
  I0512 22:11:37.712192 19 service_latency.go:356] Created: latency-svc-4sh4s
  I0512 22:11:37.712314 19 service_latency.go:356] Created: latency-svc-jh42f
  I0512 22:11:37.712426 19 service_latency.go:356] Created: latency-svc-9xdbz
  I0512 22:11:37.712592 19 service_latency.go:356] Created: latency-svc-fqgmr
  I0512 22:11:37.712718 19 service_latency.go:356] Created: latency-svc-wmm5n
  I0512 22:11:37.712790 19 service_latency.go:356] Created: latency-svc-cnnlp
  I0512 22:11:37.748464 19 service_latency.go:363] Got endpoints: latency-svc-5lb4l [116.559088ms]
  I0512 22:11:37.748546 19 service_latency.go:363] Got endpoints: latency-svc-p75wr [106.356669ms]
  I0512 22:11:37.760597 19 service_latency.go:363] Got endpoints: latency-svc-cjd57 [109.466817ms]
  I0512 22:11:37.770856 19 service_latency.go:356] Created: latency-svc-t26nz
  I0512 22:11:37.775371 19 service_latency.go:363] Got endpoints: latency-svc-7gcc5 [211.759375ms]
  I0512 22:11:37.780023 19 service_latency.go:356] Created: latency-svc-jv94z
  I0512 22:11:37.785106 19 service_latency.go:356] Created: latency-svc-l8j9z
  I0512 22:11:37.788260 19 service_latency.go:356] Created: latency-svc-qjxq4
  I0512 22:11:37.828021 19 service_latency.go:363] Got endpoints: latency-svc-5k2rk [264.058989ms]
  I0512 22:11:37.839467 19 service_latency.go:356] Created: latency-svc-kmhrb
  I0512 22:11:37.879083 19 service_latency.go:363] Got endpoints: latency-svc-cnnlp [292.078592ms]
  I0512 22:11:37.890523 19 service_latency.go:356] Created: latency-svc-lzc52
  I0512 22:11:37.930923 19 service_latency.go:363] Got endpoints: latency-svc-b97hs [342.811457ms]
  I0512 22:11:37.942841 19 service_latency.go:356] Created: latency-svc-l74bt
  I0512 22:11:37.978550 19 service_latency.go:363] Got endpoints: latency-svc-b756n [389.597876ms]
  I0512 22:11:37.990319 19 service_latency.go:356] Created: latency-svc-ltbfq
  I0512 22:11:38.031395 19 service_latency.go:363] Got endpoints: latency-svc-2mnsv [416.907097ms]
  I0512 22:11:38.043536 19 service_latency.go:356] Created: latency-svc-jhv27
  I0512 22:11:38.075989 19 service_latency.go:363] Got endpoints: latency-svc-dxgbm [459.675097ms]
  I0512 22:11:38.085966 19 service_latency.go:356] Created: latency-svc-fx9tm
  I0512 22:11:38.129144 19 service_latency.go:363] Got endpoints: latency-svc-4sh4s [514.066143ms]
  I0512 22:11:38.140141 19 service_latency.go:356] Created: latency-svc-s55qt
  I0512 22:11:38.179494 19 service_latency.go:363] Got endpoints: latency-svc-jh42f [563.786405ms]
  I0512 22:11:38.193042 19 service_latency.go:356] Created: latency-svc-mxqrj
  I0512 22:11:38.224729 19 service_latency.go:363] Got endpoints: latency-svc-9xdbz [607.68739ms]
  I0512 22:11:38.234522 19 service_latency.go:356] Created: latency-svc-mqwnp
  I0512 22:11:38.275900 19 service_latency.go:363] Got endpoints: latency-svc-fqgmr [687.404429ms]
  I0512 22:11:38.285754 19 service_latency.go:356] Created: latency-svc-nlfpq
  I0512 22:11:38.330515 19 service_latency.go:363] Got endpoints: latency-svc-wmm5n [743.92394ms]
  I0512 22:11:38.342838 19 service_latency.go:356] Created: latency-svc-6cnjl
  I0512 22:11:38.380746 19 service_latency.go:363] Got endpoints: latency-svc-t26nz [631.702099ms]
  I0512 22:11:38.392634 19 service_latency.go:356] Created: latency-svc-sjdq9
  I0512 22:11:38.425582 19 service_latency.go:363] Got endpoints: latency-svc-jv94z [676.638632ms]
  I0512 22:11:38.436819 19 service_latency.go:356] Created: latency-svc-vstgq
  I0512 22:11:38.479382 19 service_latency.go:363] Got endpoints: latency-svc-l8j9z [718.661191ms]
  I0512 22:11:38.492155 19 service_latency.go:356] Created: latency-svc-mrlbg
  I0512 22:11:38.529914 19 service_latency.go:363] Got endpoints: latency-svc-qjxq4 [754.432772ms]
  I0512 22:11:38.542301 19 service_latency.go:356] Created: latency-svc-wss4z
  I0512 22:11:38.578394 19 service_latency.go:363] Got endpoints: latency-svc-kmhrb [749.500899ms]
  I0512 22:11:38.591731 19 service_latency.go:356] Created: latency-svc-tglxz
  I0512 22:11:38.630626 19 service_latency.go:363] Got endpoints: latency-svc-lzc52 [751.43894ms]
  I0512 22:11:38.643944 19 service_latency.go:356] Created: latency-svc-pfw46
  I0512 22:11:38.680095 19 service_latency.go:363] Got endpoints: latency-svc-l74bt [748.71146ms]
  I0512 22:11:38.688902 19 service_latency.go:356] Created: latency-svc-l9vxg
  I0512 22:11:38.730893 19 service_latency.go:363] Got endpoints: latency-svc-ltbfq [752.253589ms]
  I0512 22:11:38.743127 19 service_latency.go:356] Created: latency-svc-ss9c4
  I0512 22:11:38.788699 19 service_latency.go:363] Got endpoints: latency-svc-jhv27 [757.073145ms]
  I0512 22:11:38.802346 19 service_latency.go:356] Created: latency-svc-ftgqs
  I0512 22:11:38.829900 19 service_latency.go:363] Got endpoints: latency-svc-fx9tm [753.794903ms]
  I0512 22:11:38.842965 19 service_latency.go:356] Created: latency-svc-4tkjx
  I0512 22:11:38.877373 19 service_latency.go:363] Got endpoints: latency-svc-s55qt [748.111303ms]
  I0512 22:11:38.889941 19 service_latency.go:356] Created: latency-svc-mlhhr
  I0512 22:11:38.930286 19 service_latency.go:363] Got endpoints: latency-svc-mxqrj [750.69774ms]
  I0512 22:11:38.943503 19 service_latency.go:356] Created: latency-svc-sx2rq
  I0512 22:11:38.980484 19 service_latency.go:363] Got endpoints: latency-svc-mqwnp [755.613467ms]
  I0512 22:11:38.994901 19 service_latency.go:356] Created: latency-svc-gdq8t
  I0512 22:11:39.033022 19 service_latency.go:363] Got endpoints: latency-svc-nlfpq [756.512302ms]
  I0512 22:11:39.043965 19 service_latency.go:356] Created: latency-svc-h9d7f
  I0512 22:11:39.075403 19 service_latency.go:363] Got endpoints: latency-svc-6cnjl [744.222444ms]
  I0512 22:11:39.085853 19 service_latency.go:356] Created: latency-svc-ncdnd
  I0512 22:11:39.128854 19 service_latency.go:363] Got endpoints: latency-svc-sjdq9 [747.29146ms]
  I0512 22:11:39.139345 19 service_latency.go:356] Created: latency-svc-fgth5
  I0512 22:11:39.179225 19 service_latency.go:363] Got endpoints: latency-svc-vstgq [752.848117ms]
  I0512 22:11:39.193471 19 service_latency.go:356] Created: latency-svc-qzdr5
  I0512 22:11:39.230615 19 service_latency.go:363] Got endpoints: latency-svc-mrlbg [750.822106ms]
  I0512 22:11:39.241464 19 service_latency.go:356] Created: latency-svc-vfk5b
  I0512 22:11:39.282418 19 service_latency.go:363] Got endpoints: latency-svc-wss4z [751.75287ms]
  I0512 22:11:39.296641 19 service_latency.go:356] Created: latency-svc-nvhxz
  I0512 22:11:39.326288 19 service_latency.go:363] Got endpoints: latency-svc-tglxz [747.208203ms]
  I0512 22:11:39.336643 19 service_latency.go:356] Created: latency-svc-zgjz8
  I0512 22:11:39.382269 19 service_latency.go:363] Got endpoints: latency-svc-pfw46 [750.680697ms]
  I0512 22:11:39.400073 19 service_latency.go:356] Created: latency-svc-fjsrw
  I0512 22:11:39.431916 19 service_latency.go:363] Got endpoints: latency-svc-l9vxg [751.031222ms]
  I0512 22:11:39.442970 19 service_latency.go:356] Created: latency-svc-fjzkg
  I0512 22:11:39.481549 19 service_latency.go:363] Got endpoints: latency-svc-ss9c4 [750.282902ms]
  I0512 22:11:39.492396 19 service_latency.go:356] Created: latency-svc-d6rjr
  I0512 22:11:39.529642 19 service_latency.go:363] Got endpoints: latency-svc-ftgqs [740.117837ms]
  I0512 22:11:39.542505 19 service_latency.go:356] Created: latency-svc-nblfv
  I0512 22:11:39.580739 19 service_latency.go:363] Got endpoints: latency-svc-4tkjx [750.363476ms]
  I0512 22:11:39.591885 19 service_latency.go:356] Created: latency-svc-x2cc4
  I0512 22:11:39.628005 19 service_latency.go:363] Got endpoints: latency-svc-mlhhr [749.69968ms]
  I0512 22:11:39.641252 19 service_latency.go:356] Created: latency-svc-2ffmn
  I0512 22:11:39.679830 19 service_latency.go:363] Got endpoints: latency-svc-sx2rq [749.424962ms]
  I0512 22:11:39.692128 19 service_latency.go:356] Created: latency-svc-mlz88
  I0512 22:11:39.728163 19 service_latency.go:363] Got endpoints: latency-svc-gdq8t [747.564603ms]
  I0512 22:11:39.742159 19 service_latency.go:356] Created: latency-svc-bctr4
  I0512 22:11:39.782140 19 service_latency.go:363] Got endpoints: latency-svc-h9d7f [748.671655ms]
  I0512 22:11:39.795126 19 service_latency.go:356] Created: latency-svc-pvm5g
  I0512 22:11:39.829189 19 service_latency.go:363] Got endpoints: latency-svc-ncdnd [752.8298ms]
  I0512 22:11:39.841428 19 service_latency.go:356] Created: latency-svc-mqjtc
  I0512 22:11:39.881415 19 service_latency.go:363] Got endpoints: latency-svc-fgth5 [752.230018ms]
  I0512 22:11:39.894294 19 service_latency.go:356] Created: latency-svc-gh5p2
  I0512 22:11:39.928142 19 service_latency.go:363] Got endpoints: latency-svc-qzdr5 [747.778958ms]
  I0512 22:11:39.940764 19 service_latency.go:356] Created: latency-svc-4pzwv
  I0512 22:11:39.994699 19 service_latency.go:363] Got endpoints: latency-svc-vfk5b [763.729982ms]
  I0512 22:11:40.012547 19 service_latency.go:356] Created: latency-svc-lmd9j
  I0512 22:11:40.022916 19 service_latency.go:363] Got endpoints: latency-svc-nvhxz [740.31527ms]
  I0512 22:11:40.030527 19 service_latency.go:356] Created: latency-svc-6672j
  I0512 22:11:40.078251 19 service_latency.go:363] Got endpoints: latency-svc-zgjz8 [751.703285ms]
  I0512 22:11:40.089807 19 service_latency.go:356] Created: latency-svc-ppmrp
  I0512 22:11:40.128167 19 service_latency.go:363] Got endpoints: latency-svc-fjsrw [745.180295ms]
  I0512 22:11:40.143001 19 service_latency.go:356] Created: latency-svc-q7tzc
  I0512 22:11:40.176590 19 service_latency.go:363] Got endpoints: latency-svc-fjzkg [743.95167ms]
  I0512 22:11:40.189893 19 service_latency.go:356] Created: latency-svc-vdqdj
  I0512 22:11:40.230038 19 service_latency.go:363] Got endpoints: latency-svc-d6rjr [748.4126ms]
  I0512 22:11:40.246556 19 service_latency.go:356] Created: latency-svc-r85dn
  I0512 22:11:40.277932 19 service_latency.go:363] Got endpoints: latency-svc-nblfv [747.440192ms]
  I0512 22:11:40.290182 19 service_latency.go:356] Created: latency-svc-c4r8w
  I0512 22:11:40.329776 19 service_latency.go:363] Got endpoints: latency-svc-x2cc4 [748.723827ms]
  I0512 22:11:40.349508 19 service_latency.go:356] Created: latency-svc-76bcb
  I0512 22:11:40.380347 19 service_latency.go:363] Got endpoints: latency-svc-2ffmn [751.726952ms]
  I0512 22:11:40.390852 19 service_latency.go:356] Created: latency-svc-4wk4f
  I0512 22:11:40.424448 19 service_latency.go:363] Got endpoints: latency-svc-mlz88 [744.004381ms]
  I0512 22:11:40.432720 19 service_latency.go:356] Created: latency-svc-xtrc7
  I0512 22:11:40.472997 19 service_latency.go:363] Got endpoints: latency-svc-bctr4 [744.002096ms]
  I0512 22:11:40.485880 19 service_latency.go:356] Created: latency-svc-9vrrn
  I0512 22:11:40.523523 19 service_latency.go:363] Got endpoints: latency-svc-pvm5g [741.302587ms]
  I0512 22:11:40.533274 19 service_latency.go:356] Created: latency-svc-bwb22
  I0512 22:11:40.578964 19 service_latency.go:363] Got endpoints: latency-svc-mqjtc [749.680362ms]
  I0512 22:11:40.590512 19 service_latency.go:356] Created: latency-svc-df7rw
  I0512 22:11:40.632105 19 service_latency.go:363] Got endpoints: latency-svc-gh5p2 [750.251433ms]
  I0512 22:11:40.649115 19 service_latency.go:356] Created: latency-svc-v6mzp
  I0512 22:11:40.674155 19 service_latency.go:363] Got endpoints: latency-svc-4pzwv [745.514941ms]
  I0512 22:11:40.682508 19 service_latency.go:356] Created: latency-svc-7jkn8
  I0512 22:11:40.726336 19 service_latency.go:363] Got endpoints: latency-svc-lmd9j [730.902297ms]
  I0512 22:11:40.735516 19 service_latency.go:356] Created: latency-svc-4c6d7
  I0512 22:11:40.782389 19 service_latency.go:363] Got endpoints: latency-svc-6672j [759.387253ms]
  I0512 22:11:40.792684 19 service_latency.go:356] Created: latency-svc-f9cvq
  I0512 22:11:40.828647 19 service_latency.go:363] Got endpoints: latency-svc-ppmrp [749.778827ms]
  I0512 22:11:40.841028 19 service_latency.go:356] Created: latency-svc-zn8m4
  I0512 22:11:40.881619 19 service_latency.go:363] Got endpoints: latency-svc-q7tzc [752.707427ms]
  I0512 22:11:40.893696 19 service_latency.go:356] Created: latency-svc-4f66q
  I0512 22:11:40.930947 19 service_latency.go:363] Got endpoints: latency-svc-vdqdj [753.281536ms]
  I0512 22:11:40.947778 19 service_latency.go:356] Created: latency-svc-cj7rk
  I0512 22:11:40.980172 19 service_latency.go:363] Got endpoints: latency-svc-r85dn [749.400591ms]
  I0512 22:11:40.992187 19 service_latency.go:356] Created: latency-svc-nrdw9
  I0512 22:11:41.030531 19 service_latency.go:363] Got endpoints: latency-svc-c4r8w [751.961544ms]
  I0512 22:11:41.058559 19 service_latency.go:356] Created: latency-svc-ptntf
  I0512 22:11:41.077822 19 service_latency.go:363] Got endpoints: latency-svc-76bcb [747.35171ms]
  I0512 22:11:41.089909 19 service_latency.go:356] Created: latency-svc-b8pbt
  I0512 22:11:41.130105 19 service_latency.go:363] Got endpoints: latency-svc-4wk4f [749.664154ms]
  I0512 22:11:41.143667 19 service_latency.go:356] Created: latency-svc-x25gk
  I0512 22:11:41.180485 19 service_latency.go:363] Got endpoints: latency-svc-xtrc7 [755.628612ms]
  I0512 22:11:41.193100 19 service_latency.go:356] Created: latency-svc-q97vq
  I0512 22:11:41.229150 19 service_latency.go:363] Got endpoints: latency-svc-9vrrn [755.090463ms]
  I0512 22:11:41.242346 19 service_latency.go:356] Created: latency-svc-qwzx8
  I0512 22:11:41.281655 19 service_latency.go:363] Got endpoints: latency-svc-bwb22 [757.388051ms]
  I0512 22:11:41.293823 19 service_latency.go:356] Created: latency-svc-dwl2l
  I0512 22:11:41.328981 19 service_latency.go:363] Got endpoints: latency-svc-df7rw [749.91443ms]
  I0512 22:11:41.341847 19 service_latency.go:356] Created: latency-svc-qlxtg
  I0512 22:11:41.379630 19 service_latency.go:363] Got endpoints: latency-svc-v6mzp [747.430493ms]
  I0512 22:11:41.393169 19 service_latency.go:356] Created: latency-svc-7gss8
  I0512 22:11:41.433875 19 service_latency.go:363] Got endpoints: latency-svc-7jkn8 [759.59763ms]
  I0512 22:11:41.447119 19 service_latency.go:356] Created: latency-svc-pcxx4
  I0512 22:11:41.476484 19 service_latency.go:363] Got endpoints: latency-svc-4c6d7 [749.813306ms]
  I0512 22:11:41.487789 19 service_latency.go:356] Created: latency-svc-ptzgk
  I0512 22:11:41.529520 19 service_latency.go:363] Got endpoints: latency-svc-f9cvq [747.017686ms]
  I0512 22:11:41.544503 19 service_latency.go:356] Created: latency-svc-vz7n8
  I0512 22:11:41.575673 19 service_latency.go:363] Got endpoints: latency-svc-zn8m4 [746.637682ms]
  I0512 22:11:41.588239 19 service_latency.go:356] Created: latency-svc-nkk8h
  I0512 22:11:41.630347 19 service_latency.go:363] Got endpoints: latency-svc-4f66q [747.597427ms]
  I0512 22:11:41.648462 19 service_latency.go:356] Created: latency-svc-xvkxz
  I0512 22:11:41.679935 19 service_latency.go:363] Got endpoints: latency-svc-cj7rk [748.492152ms]
  I0512 22:11:41.692425 19 service_latency.go:356] Created: latency-svc-4phtf
  I0512 22:11:41.729045 19 service_latency.go:363] Got endpoints: latency-svc-nrdw9 [748.754216ms]
  I0512 22:11:41.741602 19 service_latency.go:356] Created: latency-svc-nzdfp
  I0512 22:11:41.780571 19 service_latency.go:363] Got endpoints: latency-svc-ptntf [749.904276ms]
  I0512 22:11:41.792824 19 service_latency.go:356] Created: latency-svc-47lcx
  I0512 22:11:41.828134 19 service_latency.go:363] Got endpoints: latency-svc-b8pbt [750.146995ms]
  I0512 22:11:41.840790 19 service_latency.go:356] Created: latency-svc-h9z66
  I0512 22:11:41.880790 19 service_latency.go:363] Got endpoints: latency-svc-x25gk [749.751959ms]
  I0512 22:11:41.890794 19 service_latency.go:356] Created: latency-svc-fbz5f
  I0512 22:11:41.930484 19 service_latency.go:363] Got endpoints: latency-svc-q97vq [749.90554ms]
  I0512 22:11:41.942475 19 service_latency.go:356] Created: latency-svc-cf4nr
  I0512 22:11:41.980281 19 service_latency.go:363] Got endpoints: latency-svc-qwzx8 [750.532575ms]
  I0512 22:11:41.992542 19 service_latency.go:356] Created: latency-svc-58zd6
  I0512 22:11:42.032606 19 service_latency.go:363] Got endpoints: latency-svc-dwl2l [750.855423ms]
  I0512 22:11:42.043484 19 service_latency.go:356] Created: latency-svc-fxq82
  I0512 22:11:42.075813 19 service_latency.go:363] Got endpoints: latency-svc-qlxtg [746.059961ms]
  I0512 22:11:42.084794 19 service_latency.go:356] Created: latency-svc-cdxtk
  I0512 22:11:42.131434 19 service_latency.go:363] Got endpoints: latency-svc-7gss8 [751.693837ms]
  I0512 22:11:42.143114 19 service_latency.go:356] Created: latency-svc-5lwtk
  I0512 22:11:42.178083 19 service_latency.go:363] Got endpoints: latency-svc-pcxx4 [743.591364ms]
  I0512 22:11:42.188509 19 service_latency.go:356] Created: latency-svc-rxmww
  I0512 22:11:42.262879 19 service_latency.go:363] Got endpoints: latency-svc-ptzgk [786.302566ms]
  I0512 22:11:42.287156 19 service_latency.go:363] Got endpoints: latency-svc-vz7n8 [757.138293ms]
  I0512 22:11:42.292522 19 service_latency.go:356] Created: latency-svc-lsgqt
  I0512 22:11:42.300290 19 service_latency.go:356] Created: latency-svc-2kpjz
  I0512 22:11:42.326037 19 service_latency.go:363] Got endpoints: latency-svc-nkk8h [749.596186ms]
  I0512 22:11:42.336559 19 service_latency.go:356] Created: latency-svc-bqx75
  I0512 22:11:42.379685 19 service_latency.go:363] Got endpoints: latency-svc-xvkxz [748.262326ms]
  I0512 22:11:42.391838 19 service_latency.go:356] Created: latency-svc-gvpx5
  I0512 22:11:42.430466 19 service_latency.go:363] Got endpoints: latency-svc-4phtf [750.408843ms]
  I0512 22:11:42.443292 19 service_latency.go:356] Created: latency-svc-mjpgs
  I0512 22:11:42.473206 19 service_latency.go:363] Got endpoints: latency-svc-nzdfp [743.2125ms]
  I0512 22:11:42.483756 19 service_latency.go:356] Created: latency-svc-4z9j5
  I0512 22:11:42.525538 19 service_latency.go:363] Got endpoints: latency-svc-47lcx [744.852919ms]
  I0512 22:11:42.533282 19 service_latency.go:356] Created: latency-svc-m4nlb
  I0512 22:11:42.580674 19 service_latency.go:363] Got endpoints: latency-svc-h9z66 [752.453525ms]
  I0512 22:11:42.593062 19 service_latency.go:356] Created: latency-svc-4dq9x
  I0512 22:11:42.629667 19 service_latency.go:363] Got endpoints: latency-svc-fbz5f [748.774277ms]
  I0512 22:11:42.639153 19 service_latency.go:356] Created: latency-svc-wfcdt
  I0512 22:11:42.681048 19 service_latency.go:363] Got endpoints: latency-svc-cf4nr [749.771181ms]
  I0512 22:11:42.694654 19 service_latency.go:356] Created: latency-svc-rldsh
  I0512 22:11:42.729083 19 service_latency.go:363] Got endpoints: latency-svc-58zd6 [748.020904ms]
  I0512 22:11:42.741840 19 service_latency.go:356] Created: latency-svc-wq8w4
  I0512 22:11:42.778424 19 service_latency.go:363] Got endpoints: latency-svc-fxq82 [745.033286ms]
  I0512 22:11:42.791440 19 service_latency.go:356] Created: latency-svc-mg49t
  I0512 22:11:42.829749 19 service_latency.go:363] Got endpoints: latency-svc-cdxtk [753.804306ms]
  I0512 22:11:42.843920 19 service_latency.go:356] Created: latency-svc-g8mth
  I0512 22:11:42.881181 19 service_latency.go:363] Got endpoints: latency-svc-5lwtk [749.221382ms]
  I0512 22:11:42.894168 19 service_latency.go:356] Created: latency-svc-zxw2p
  I0512 22:11:42.928867 19 service_latency.go:363] Got endpoints: latency-svc-rxmww [750.671176ms]
  I0512 22:11:42.941293 19 service_latency.go:356] Created: latency-svc-dld9r
  I0512 22:11:42.980410 19 service_latency.go:363] Got endpoints: latency-svc-lsgqt [717.249142ms]
  I0512 22:11:42.990631 19 service_latency.go:356] Created: latency-svc-w5mnx
  I0512 22:11:43.027072 19 service_latency.go:363] Got endpoints: latency-svc-2kpjz [739.605282ms]
  I0512 22:11:43.046349 19 service_latency.go:356] Created: latency-svc-mtfxp
  I0512 22:11:43.080354 19 service_latency.go:363] Got endpoints: latency-svc-bqx75 [754.045857ms]
  I0512 22:11:43.093021 19 service_latency.go:356] Created: latency-svc-wls4m
  I0512 22:11:43.128294 19 service_latency.go:363] Got endpoints: latency-svc-gvpx5 [748.55759ms]
  I0512 22:11:43.140037 19 service_latency.go:356] Created: latency-svc-s7s26
  I0512 22:11:43.178514 19 service_latency.go:363] Got endpoints: latency-svc-mjpgs [747.220801ms]
  I0512 22:11:43.191485 19 service_latency.go:356] Created: latency-svc-ntbps
  I0512 22:11:43.230031 19 service_latency.go:363] Got endpoints: latency-svc-4z9j5 [756.738998ms]
  I0512 22:11:43.246489 19 service_latency.go:356] Created: latency-svc-7xt45
  I0512 22:11:43.277246 19 service_latency.go:363] Got endpoints: latency-svc-m4nlb [751.625603ms]
  I0512 22:11:43.287613 19 service_latency.go:356] Created: latency-svc-wmbwh
  I0512 22:11:43.332893 19 service_latency.go:363] Got endpoints: latency-svc-4dq9x [751.927499ms]
  I0512 22:11:43.344160 19 service_latency.go:356] Created: latency-svc-99jht
  I0512 22:11:43.377070 19 service_latency.go:363] Got endpoints: latency-svc-wfcdt [746.806277ms]
  I0512 22:11:43.386623 19 service_latency.go:356] Created: latency-svc-4swhq
  I0512 22:11:43.429202 19 service_latency.go:363] Got endpoints: latency-svc-rldsh [747.167872ms]
  I0512 22:11:43.440990 19 service_latency.go:356] Created: latency-svc-jbxcl
  I0512 22:11:43.496797 19 service_latency.go:363] Got endpoints: latency-svc-wq8w4 [767.610488ms]
  I0512 22:11:43.511827 19 service_latency.go:356] Created: latency-svc-j6ctw
  I0512 22:11:43.524947 19 service_latency.go:363] Got endpoints: latency-svc-mg49t [746.45894ms]
  I0512 22:11:43.533728 19 service_latency.go:356] Created: latency-svc-sl7gz
  I0512 22:11:43.576479 19 service_latency.go:363] Got endpoints: latency-svc-g8mth [745.835982ms]
  I0512 22:11:43.585829 19 service_latency.go:356] Created: latency-svc-hdkp2
  I0512 22:11:43.625242 19 service_latency.go:363] Got endpoints: latency-svc-zxw2p [743.206819ms]
  I0512 22:11:43.633524 19 service_latency.go:356] Created: latency-svc-mlfws
  I0512 22:11:43.679739 19 service_latency.go:363] Got endpoints: latency-svc-dld9r [750.127343ms]
  I0512 22:11:43.691497 19 service_latency.go:356] Created: latency-svc-gpwvs
  I0512 22:11:43.730312 19 service_latency.go:363] Got endpoints: latency-svc-w5mnx [749.366427ms]
  I0512 22:11:43.741647 19 service_latency.go:356] Created: latency-svc-58pkf
  I0512 22:11:43.779719 19 service_latency.go:363] Got endpoints: latency-svc-mtfxp [752.47864ms]
  I0512 22:11:43.791928 19 service_latency.go:356] Created: latency-svc-vllnr
  I0512 22:11:43.828361 19 service_latency.go:363] Got endpoints: latency-svc-wls4m [747.59783ms]
  I0512 22:11:43.841360 19 service_latency.go:356] Created: latency-svc-5r7x2
  I0512 22:11:43.878756 19 service_latency.go:363] Got endpoints: latency-svc-s7s26 [749.820139ms]
  I0512 22:11:43.891179 19 service_latency.go:356] Created: latency-svc-9nkqr
  I0512 22:11:43.928175 19 service_latency.go:363] Got endpoints: latency-svc-ntbps [748.778145ms]
  I0512 22:11:43.940667 19 service_latency.go:356] Created: latency-svc-7lpn9
  I0512 22:11:43.979912 19 service_latency.go:363] Got endpoints: latency-svc-7xt45 [749.067289ms]
  I0512 22:11:43.995873 19 service_latency.go:356] Created: latency-svc-zq9dp
  I0512 22:11:44.028323 19 service_latency.go:363] Got endpoints: latency-svc-wmbwh [750.89431ms]
  I0512 22:11:44.042719 19 service_latency.go:356] Created: latency-svc-77fvt
  I0512 22:11:44.077259 19 service_latency.go:363] Got endpoints: latency-svc-99jht [743.612281ms]
  I0512 22:11:44.089779 19 service_latency.go:356] Created: latency-svc-8sdwz
  I0512 22:11:44.127635 19 service_latency.go:363] Got endpoints: latency-svc-4swhq [749.955932ms]
  I0512 22:11:44.150060 19 service_latency.go:356] Created: latency-svc-94bvh
  I0512 22:11:44.181819 19 service_latency.go:363] Got endpoints: latency-svc-jbxcl [752.350877ms]
  I0512 22:11:44.194546 19 service_latency.go:356] Created: latency-svc-h9h5k
  I0512 22:11:44.231327 19 service_latency.go:363] Got endpoints: latency-svc-j6ctw [733.954538ms]
  I0512 22:11:44.243605 19 service_latency.go:356] Created: latency-svc-gzxmq
  I0512 22:11:44.277733 19 service_latency.go:363] Got endpoints: latency-svc-sl7gz [752.689722ms]
  I0512 22:11:44.290773 19 service_latency.go:356] Created: latency-svc-sprmr
  I0512 22:11:44.330082 19 service_latency.go:363] Got endpoints: latency-svc-hdkp2 [753.228348ms]
  I0512 22:11:44.343565 19 service_latency.go:356] Created: latency-svc-6v9gn
  I0512 22:11:44.381791 19 service_latency.go:363] Got endpoints: latency-svc-mlfws [756.446404ms]
  I0512 22:11:44.397289 19 service_latency.go:356] Created: latency-svc-vd5rk
  I0512 22:11:44.433284 19 service_latency.go:363] Got endpoints: latency-svc-gpwvs [753.457753ms]
  I0512 22:11:44.473260 19 service_latency.go:356] Created: latency-svc-gr8bh
  I0512 22:11:44.486338 19 service_latency.go:363] Got endpoints: latency-svc-58pkf [755.905272ms]
  I0512 22:11:44.501735 19 service_latency.go:356] Created: latency-svc-w6hzz
  I0512 22:11:44.533980 19 service_latency.go:363] Got endpoints: latency-svc-vllnr [754.167711ms]
  I0512 22:11:44.542099 19 service_latency.go:356] Created: latency-svc-8np6j
  I0512 22:11:44.580749 19 service_latency.go:363] Got endpoints: latency-svc-5r7x2 [751.668313ms]
  I0512 22:11:44.589443 19 service_latency.go:356] Created: latency-svc-phf8x
  I0512 22:11:44.647817 19 service_latency.go:363] Got endpoints: latency-svc-9nkqr [768.241834ms]
  I0512 22:11:44.656716 19 service_latency.go:356] Created: latency-svc-rr6l2
  I0512 22:11:44.707433 19 service_latency.go:363] Got endpoints: latency-svc-7lpn9 [779.175734ms]
  I0512 22:11:44.720920 19 service_latency.go:356] Created: latency-svc-rmsfz
  I0512 22:11:44.724426 19 service_latency.go:363] Got endpoints: latency-svc-zq9dp [743.345211ms]
  I0512 22:11:44.733021 19 service_latency.go:356] Created: latency-svc-gjfth
  I0512 22:11:44.776267 19 service_latency.go:363] Got endpoints: latency-svc-77fvt [747.085735ms]
  I0512 22:11:44.785269 19 service_latency.go:356] Created: latency-svc-rqhtv
  I0512 22:11:44.830214 19 service_latency.go:363] Got endpoints: latency-svc-8sdwz [752.771394ms]
  I0512 22:11:44.840527 19 service_latency.go:356] Created: latency-svc-h4xt9
  I0512 22:11:44.880790 19 service_latency.go:363] Got endpoints: latency-svc-94bvh [752.261071ms]
  I0512 22:11:44.893922 19 service_latency.go:356] Created: latency-svc-m5dxj
  I0512 22:11:44.935035 19 service_latency.go:363] Got endpoints: latency-svc-h9h5k [752.615765ms]
  I0512 22:11:44.946321 19 service_latency.go:356] Created: latency-svc-qjfpm
  I0512 22:11:44.980520 19 service_latency.go:363] Got endpoints: latency-svc-gzxmq [749.078867ms]
  I0512 22:11:44.992775 19 service_latency.go:356] Created: latency-svc-hbddk
  I0512 22:11:45.031343 19 service_latency.go:363] Got endpoints: latency-svc-sprmr [753.507089ms]
  I0512 22:11:45.076826 19 service_latency.go:363] Got endpoints: latency-svc-6v9gn [745.817718ms]
  I0512 22:11:45.130941 19 service_latency.go:363] Got endpoints: latency-svc-vd5rk [748.477242ms]
  I0512 22:11:45.175671 19 service_latency.go:363] Got endpoints: latency-svc-gr8bh [741.547861ms]
  I0512 22:11:45.224540 19 service_latency.go:363] Got endpoints: latency-svc-w6hzz [737.867683ms]
  I0512 22:11:45.281465 19 service_latency.go:363] Got endpoints: latency-svc-8np6j [747.413068ms]
  I0512 22:11:45.331958 19 service_latency.go:363] Got endpoints: latency-svc-phf8x [751.118964ms]
  I0512 22:11:45.375956 19 service_latency.go:363] Got endpoints: latency-svc-rr6l2 [727.69257ms]
  I0512 22:11:45.432697 19 service_latency.go:363] Got endpoints: latency-svc-rmsfz [724.082573ms]
  I0512 22:11:45.480419 19 service_latency.go:363] Got endpoints: latency-svc-gjfth [755.222721ms]
  I0512 22:11:45.530945 19 service_latency.go:363] Got endpoints: latency-svc-rqhtv [754.544216ms]
  I0512 22:11:45.581209 19 service_latency.go:363] Got endpoints: latency-svc-h4xt9 [750.89135ms]
  I0512 22:11:45.632717 19 service_latency.go:363] Got endpoints: latency-svc-m5dxj [751.164071ms]
  I0512 22:11:45.679892 19 service_latency.go:363] Got endpoints: latency-svc-qjfpm [744.571058ms]
  I0512 22:11:45.732845 19 service_latency.go:363] Got endpoints: latency-svc-hbddk [752.236725ms]
  I0512 22:11:45.733096 19 service_latency.go:114] Latencies: [29.322314ms 44.15277ms 56.453483ms 68.872044ms 81.147915ms 88.547897ms 88.805069ms 106.356669ms 109.466817ms 110.041535ms 116.559088ms 123.149095ms 147.496707ms 159.143911ms 173.219675ms 173.811301ms 173.915531ms 174.39104ms 177.966879ms 178.609173ms 179.589199ms 180.12973ms 183.828033ms 185.207322ms 185.735088ms 186.847464ms 197.722238ms 197.781541ms 198.224131ms 211.759375ms 214.619802ms 218.21597ms 218.401984ms 219.438576ms 219.949348ms 220.386565ms 231.696044ms 253.495019ms 257.420488ms 257.481622ms 257.995175ms 264.058989ms 292.078592ms 342.811457ms 389.597876ms 416.907097ms 459.675097ms 514.066143ms 563.786405ms 607.68739ms 631.702099ms 676.638632ms 687.404429ms 717.249142ms 718.661191ms 724.082573ms 727.69257ms 730.902297ms 733.954538ms 737.867683ms 739.605282ms 740.117837ms 740.31527ms 741.302587ms 741.547861ms 743.206819ms 743.2125ms 743.345211ms 743.591364ms 743.612281ms 743.92394ms 743.95167ms 744.002096ms 744.004381ms 744.222444ms 744.571058ms 744.852919ms 745.033286ms 745.180295ms 745.514941ms 745.817718ms 745.835982ms 746.059961ms 746.45894ms 746.637682ms 746.806277ms 747.017686ms 747.085735ms 747.167872ms 747.208203ms 747.220801ms 747.29146ms 747.35171ms 747.413068ms 747.430493ms 747.440192ms 747.564603ms 747.597427ms 747.59783ms 747.778958ms 748.020904ms 748.111303ms 748.262326ms 748.4126ms 748.477242ms 748.492152ms 748.55759ms 748.671655ms 748.71146ms 748.723827ms 748.754216ms 748.774277ms 748.778145ms 749.067289ms 749.078867ms 749.221382ms 749.366427ms 749.400591ms 749.424962ms 749.500899ms 749.596186ms 749.664154ms 749.680362ms 749.69968ms 749.751959ms 749.771181ms 749.778827ms 749.813306ms 749.820139ms 749.904276ms 749.90554ms 749.91443ms 749.955932ms 750.127343ms 750.146995ms 750.251433ms 750.282902ms 750.363476ms 750.408843ms 750.532575ms 750.671176ms 750.680697ms 750.69774ms 750.822106ms 750.855423ms 750.89135ms 750.89431ms 751.031222ms 751.118964ms 751.164071ms 751.43894ms 751.625603ms 751.668313ms 751.693837ms 751.703285ms 751.726952ms 751.75287ms 751.927499ms 751.961544ms 752.230018ms 752.236725ms 752.253589ms 752.261071ms 752.350877ms 752.453525ms 752.47864ms 752.615765ms 752.689722ms 752.707427ms 752.771394ms 752.8298ms 752.848117ms 753.228348ms 753.281536ms 753.457753ms 753.507089ms 753.794903ms 753.804306ms 754.045857ms 754.167711ms 754.432772ms 754.544216ms 755.090463ms 755.222721ms 755.613467ms 755.628612ms 755.905272ms 756.446404ms 756.512302ms 756.738998ms 757.073145ms 757.138293ms 757.388051ms 759.387253ms 759.59763ms 763.729982ms 767.610488ms 768.241834ms 779.175734ms 786.302566ms]
  I0512 22:11:45.733127 19 service_latency.go:118] 50 %ile: 748.020904ms
  I0512 22:11:45.733148 19 service_latency.go:119] 90 %ile: 754.432772ms
  I0512 22:11:45.733167 19 service_latency.go:120] 99 %ile: 779.175734ms
  I0512 22:11:45.733183 19 service_latency.go:121] Total sample count: 200
  I0512 22:11:45.733525 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9528" for this suite. @ 05/12/25 22:11:45.741
• [10.792 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/12/25 22:11:45.751
  I0512 22:11:45.752166 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename cronjob @ 05/12/25 22:11:45.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:11:45.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:11:45.779
  STEP: Creating a suspended cronjob @ 05/12/25 22:11:45.785
  STEP: Ensuring no jobs are scheduled @ 05/12/25 22:11:45.794
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/12/25 22:16:45.796
  STEP: Removing cronjob @ 05/12/25 22:16:45.803
  I0512 22:16:45.814898 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3672" for this suite. @ 05/12/25 22:16:45.82
• [300.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/12/25 22:16:45.83
  I0512 22:16:45.830154 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 22:16:45.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:16:45.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:16:45.856
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/12/25 22:16:45.86
  STEP: Saw pod success @ 05/12/25 22:16:49.893
  I0512 22:16:49.900165 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-bc646924-458f-46b4-9e4b-04984d72e5fd container test-container: <nil>
  STEP: delete the pod @ 05/12/25 22:16:49.928
  I0512 22:16:49.951467 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4503" for this suite. @ 05/12/25 22:16:49.955
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/12/25 22:16:49.961
  I0512 22:16:49.961971 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 22:16:49.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:16:49.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:16:49.982
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 22:16:49.985
  STEP: Saw pod success @ 05/12/25 22:16:54.033
  I0512 22:16:54.039061 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-bbe8fdbf-5123-4c68-81c0-4b442e73394d container client-container: <nil>
  STEP: delete the pod @ 05/12/25 22:16:54.051
  I0512 22:16:54.075316 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4265" for this suite. @ 05/12/25 22:16:54.081
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 05/12/25 22:16:54.087
  I0512 22:16:54.087643 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename disruption @ 05/12/25 22:16:54.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:16:54.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:16:54.106
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/12/25 22:16:54.109
  STEP: Waiting for the pdb to be processed @ 05/12/25 22:16:54.112
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/12/25 22:16:56.129
  STEP: Waiting for all pods to be running @ 05/12/25 22:16:56.129
  I0512 22:16:56.138744 19 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 05/12/25 22:16:58.139
  STEP: Updating the pdb to allow a pod to be evicted @ 05/12/25 22:16:58.154
  STEP: Waiting for the pdb to be processed @ 05/12/25 22:16:58.165
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/12/25 22:16:58.171
  STEP: Waiting for all pods to be running @ 05/12/25 22:16:58.171
  STEP: Waiting for the pdb to observed all healthy pods @ 05/12/25 22:16:58.24
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/12/25 22:16:58.28
  STEP: Waiting for the pdb to be processed @ 05/12/25 22:16:58.329
  STEP: Waiting for all pods to be running @ 05/12/25 22:17:00.334
  STEP: locating a running pod @ 05/12/25 22:17:00.342
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/12/25 22:17:00.353
  STEP: Waiting for the pdb to be deleted @ 05/12/25 22:17:00.361
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/12/25 22:17:00.367
  STEP: Waiting for all pods to be running @ 05/12/25 22:17:00.367
  I0512 22:17:00.394551 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2835" for this suite. @ 05/12/25 22:17:00.435
• [6.373 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/12/25 22:17:00.46
  I0512 22:17:00.460336 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 22:17:00.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:17:00.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:17:00.481
  STEP: Creating configMap with name configmap-test-volume-50e56fee-7f79-405c-b48b-f907e3a8521e @ 05/12/25 22:17:00.484
  STEP: Creating a pod to test consume configMaps @ 05/12/25 22:17:00.489
  STEP: Saw pod success @ 05/12/25 22:17:04.522
  I0512 22:17:04.527980 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-763870b1-238e-441a-8e5f-84dcec19d59f container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 22:17:04.539
  I0512 22:17:04.560667 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7262" for this suite. @ 05/12/25 22:17:04.566
• [4.111 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/12/25 22:17:04.576
  I0512 22:17:04.576433 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 22:17:04.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:17:04.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:17:04.6
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 22:17:04.603
  STEP: Saw pod success @ 05/12/25 22:17:06.622
  I0512 22:17:06.628437 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-ba34f1fa-ccc9-47b5-8de3-a10d4ebce4d5 container client-container: <nil>
  STEP: delete the pod @ 05/12/25 22:17:06.644
  I0512 22:17:06.658559 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8140" for this suite. @ 05/12/25 22:17:06.663
• [2.093 seconds]
------------------------------
S
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/12/25 22:17:06.671
  I0512 22:17:06.672626 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename limitrange @ 05/12/25 22:17:06.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:17:06.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:17:06.692
  STEP: Creating a LimitRange @ 05/12/25 22:17:06.695
  STEP: Setting up watch @ 05/12/25 22:17:06.695
  STEP: Submitting a LimitRange @ 05/12/25 22:17:06.799
  STEP: Verifying LimitRange creation was observed @ 05/12/25 22:17:06.81
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/12/25 22:17:06.811
  I0512 22:17:06.818667 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0512 22:17:06.818755 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/12/25 22:17:06.818
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/12/25 22:17:06.825
  I0512 22:17:06.839602 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0512 22:17:06.840521 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/12/25 22:17:06.84
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/12/25 22:17:06.845
  I0512 22:17:06.854481 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0512 22:17:06.854574 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/12/25 22:17:06.854
  STEP: Failing to create a Pod with more than max resources @ 05/12/25 22:17:06.856
  STEP: Updating a LimitRange @ 05/12/25 22:17:06.859
  STEP: Verifying LimitRange updating is effective @ 05/12/25 22:17:06.864
  STEP: Creating a Pod with less than former min resources @ 05/12/25 22:17:08.869
  STEP: Failing to create a Pod with more than max resources @ 05/12/25 22:17:08.874
  STEP: Deleting a LimitRange @ 05/12/25 22:17:08.881
  STEP: Verifying the LimitRange was deleted @ 05/12/25 22:17:08.887
  I0512 22:17:13.902239 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/12/25 22:17:13.902
  I0512 22:17:13.919041 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4970" for this suite. @ 05/12/25 22:17:13.933
• [7.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 05/12/25 22:17:13.94
  I0512 22:17:13.940053 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename disruption @ 05/12/25 22:17:13.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:17:13.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:17:13.958
  STEP: Waiting for the pdb to be processed @ 05/12/25 22:17:13.97
  STEP: Waiting for all pods to be running @ 05/12/25 22:17:14.027
  I0512 22:17:14.044540 19 disruption.go:691] running pods: 0 < 3
  I0512 22:17:16.041789 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5223" for this suite. @ 05/12/25 22:17:16.049
• [2.120 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 05/12/25 22:17:16.062
  I0512 22:17:16.062360 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 22:17:16.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:17:16.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:17:16.095
  STEP: create deployment with httpd image @ 05/12/25 22:17:16.099
  I0512 22:17:16.099763 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9622 create -f -'
  I0512 22:17:16.234203 19 builder.go:146] stderr: ""
  I0512 22:17:16.234252 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/12/25 22:17:16.234
  I0512 22:17:16.234365 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9622 diff -f -'
  I0512 22:17:16.385012 19 builder.go:135] rc: 1
  I0512 22:17:16.385144 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9622 delete -f -'
  I0512 22:17:16.488956 19 builder.go:146] stderr: ""
  I0512 22:17:16.489033 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0512 22:17:16.489245 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9622" for this suite. @ 05/12/25 22:17:16.494
• [0.439 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/12/25 22:17:16.5
  I0512 22:17:16.501015 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pods @ 05/12/25 22:17:16.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:17:16.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:17:16.528
  STEP: creating the pod @ 05/12/25 22:17:16.53
  STEP: submitting the pod to kubernetes @ 05/12/25 22:17:16.53
  STEP: verifying the pod is in kubernetes @ 05/12/25 22:17:18.555
  STEP: updating the pod @ 05/12/25 22:17:18.56
  I0512 22:17:19.073955 19 pod_client.go:173] Successfully updated pod "pod-update-fc0f166b-adaf-49b1-b977-713e85c2bb85"
  STEP: verifying the updated pod is in kubernetes @ 05/12/25 22:17:19.078
  I0512 22:17:19.102681 19 pods.go:391] Pod update OK
  I0512 22:17:19.103522 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5027" for this suite. @ 05/12/25 22:17:19.111
• [2.619 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 05/12/25 22:17:19.12
  I0512 22:17:19.120724 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-preemption @ 05/12/25 22:17:19.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:17:19.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:17:19.15
  I0512 22:17:19.161289 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0512 22:18:19.170620 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/12/25 22:18:19.176
  I0512 22:18:19.218491 19 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I0512 22:18:19.226712 19 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I0512 22:18:19.258125 19 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I0512 22:18:19.273921 19 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/12/25 22:18:19.274
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/12/25 22:18:21.305
  I0512 22:18:25.425483 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2161" for this suite. @ 05/12/25 22:18:25.428
• [66.312 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 05/12/25 22:18:25.433
  I0512 22:18:25.433310 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 22:18:25.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:18:25.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:18:25.45
  I0512 22:18:25.452650 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/12/25 22:18:26.745
  I0512 22:18:26.746096 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5455 --namespace=crd-publish-openapi-5455 create -f -'
  I0512 22:18:28.877929 19 builder.go:146] stderr: ""
  I0512 22:18:28.877980 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5525-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0512 22:18:28.878027 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5455 --namespace=crd-publish-openapi-5455 delete e2e-test-crd-publish-openapi-5525-crds test-cr'
  I0512 22:18:28.973245 19 builder.go:146] stderr: ""
  I0512 22:18:28.973373 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5525-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0512 22:18:28.973670 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5455 --namespace=crd-publish-openapi-5455 apply -f -'
  I0512 22:18:29.115741 19 builder.go:146] stderr: ""
  I0512 22:18:29.115816 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5525-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0512 22:18:29.115898 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5455 --namespace=crd-publish-openapi-5455 delete e2e-test-crd-publish-openapi-5525-crds test-cr'
  I0512 22:18:29.224734 19 builder.go:146] stderr: ""
  I0512 22:18:29.224812 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5525-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/12/25 22:18:29.224
  I0512 22:18:29.225413 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=crd-publish-openapi-5455 explain e2e-test-crd-publish-openapi-5525-crds'
  I0512 22:18:29.303827 19 builder.go:146] stderr: ""
  I0512 22:18:29.303899 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5525-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0512 22:18:30.655378 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5455" for this suite. @ 05/12/25 22:18:30.671
• [5.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/12/25 22:18:30.695
  I0512 22:18:30.695115 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 22:18:30.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:18:30.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:18:30.734
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/12/25 22:18:30.738
  STEP: Saw pod success @ 05/12/25 22:18:34.779
  I0512 22:18:34.785573 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-bfeec6b8-eb7e-4583-8c90-a58ffcbf9dca container test-container: <nil>
  STEP: delete the pod @ 05/12/25 22:18:34.795
  I0512 22:18:34.815644 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8039" for this suite. @ 05/12/25 22:18:34.822
• [4.139 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/12/25 22:18:34.835
  I0512 22:18:34.836026 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename gc @ 05/12/25 22:18:34.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:18:34.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:18:34.865
  STEP: create the rc1 @ 05/12/25 22:18:34.921
  STEP: create the rc2 @ 05/12/25 22:18:34.927
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/12/25 22:18:40.944
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/12/25 22:18:41.699
  STEP: wait for the rc to be deleted @ 05/12/25 22:18:41.703
  I0512 22:18:46.729461 19 garbage_collector.go:762] 73 pods remaining
  I0512 22:18:46.729547 19 garbage_collector.go:769] 73 pods has nil DeletionTimestamp
  I0512 22:18:46.729569 19 garbage_collector.go:770] 
  STEP: Gathering metrics @ 05/12/25 22:18:51.719
  W0512 22:18:51.727587      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0512 22:18:51.727708 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0512 22:18:51.728418 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29gc2" in namespace "gc-8317"
  I0512 22:18:51.745740 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2cccd" in namespace "gc-8317"
  I0512 22:18:51.765214 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2ml8n" in namespace "gc-8317"
  I0512 22:18:51.787108 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2mt9g" in namespace "gc-8317"
  I0512 22:18:51.797266 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-49gc6" in namespace "gc-8317"
  I0512 22:18:51.807145 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xgmj" in namespace "gc-8317"
  I0512 22:18:51.820713 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xmbm" in namespace "gc-8317"
  I0512 22:18:51.833955 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-54hrj" in namespace "gc-8317"
  I0512 22:18:51.843769 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-55kf4" in namespace "gc-8317"
  I0512 22:18:51.855486 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5b2kg" in namespace "gc-8317"
  I0512 22:18:51.864658 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5f5l9" in namespace "gc-8317"
  I0512 22:18:51.873130 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6fxxx" in namespace "gc-8317"
  I0512 22:18:51.885999 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zbhg" in namespace "gc-8317"
  I0512 22:18:51.900976 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7h8lp" in namespace "gc-8317"
  I0512 22:18:51.914702 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7k6jl" in namespace "gc-8317"
  I0512 22:18:51.927427 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86w7q" in namespace "gc-8317"
  I0512 22:18:51.940831 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8c9x9" in namespace "gc-8317"
  I0512 22:18:51.956211 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8chtr" in namespace "gc-8317"
  I0512 22:18:51.978714 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vlfq" in namespace "gc-8317"
  I0512 22:18:52.001562 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8w7jg" in namespace "gc-8317"
  I0512 22:18:52.017340 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9f8r4" in namespace "gc-8317"
  I0512 22:18:52.036097 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9q6z5" in namespace "gc-8317"
  I0512 22:18:52.047406 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b5c25" in namespace "gc-8317"
  I0512 22:18:52.064356 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6m4l" in namespace "gc-8317"
  I0512 22:18:52.085694 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blnkm" in namespace "gc-8317"
  I0512 22:18:52.103648 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmhk2" in namespace "gc-8317"
  I0512 22:18:52.118204 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bpg2j" in namespace "gc-8317"
  I0512 22:18:52.129246 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-br4qw" in namespace "gc-8317"
  I0512 22:18:52.140604 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvp2j" in namespace "gc-8317"
  I0512 22:18:52.149869 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cgnmb" in namespace "gc-8317"
  I0512 22:18:52.192814 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-clr9d" in namespace "gc-8317"
  I0512 22:18:52.224286 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cr9dz" in namespace "gc-8317"
  I0512 22:18:52.250964 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d9pgk" in namespace "gc-8317"
  I0512 22:18:52.263524 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dczw5" in namespace "gc-8317"
  I0512 22:18:52.279185 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-djdx8" in namespace "gc-8317"
  I0512 22:18:52.299612 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dk682" in namespace "gc-8317"
  I0512 22:18:52.313625 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f9srs" in namespace "gc-8317"
  I0512 22:18:52.329885 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fm2qs" in namespace "gc-8317"
  I0512 22:18:52.344727 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmj5r" in namespace "gc-8317"
  I0512 22:18:52.357394 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fpq74" in namespace "gc-8317"
  I0512 22:18:52.372380 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fz275" in namespace "gc-8317"
  I0512 22:18:52.387653 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fzdth" in namespace "gc-8317"
  I0512 22:18:52.396857 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gmqlr" in namespace "gc-8317"
  I0512 22:18:52.405559 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gqmgd" in namespace "gc-8317"
  I0512 22:18:52.413563 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gr4xt" in namespace "gc-8317"
  I0512 22:18:52.432321 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gx6rk" in namespace "gc-8317"
  I0512 22:18:52.441400 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hdjdg" in namespace "gc-8317"
  I0512 22:18:52.453070 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ht262" in namespace "gc-8317"
  I0512 22:18:52.461041 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxq58" in namespace "gc-8317"
  I0512 22:18:52.469831 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j6dn5" in namespace "gc-8317"
  I0512 22:18:52.480592 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8317" for this suite. @ 05/12/25 22:18:52.484
• [17.655 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/12/25 22:18:52.49
  I0512 22:18:52.490882 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename svcaccounts @ 05/12/25 22:18:52.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:18:52.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:18:52.536
  STEP: creating a ServiceAccount @ 05/12/25 22:18:52.538
  STEP: watching for the ServiceAccount to be added @ 05/12/25 22:18:52.545
  STEP: patching the ServiceAccount @ 05/12/25 22:18:52.546
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/12/25 22:18:52.551
  STEP: deleting the ServiceAccount @ 05/12/25 22:18:52.554
  I0512 22:18:52.572624 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5865" for this suite. @ 05/12/25 22:18:52.584
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/12/25 22:18:52.595
  I0512 22:18:52.595813 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename var-expansion @ 05/12/25 22:18:52.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:18:52.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:18:52.617
  I0512 22:18:54.645872 19 delete.go:62] Deleting pod "var-expansion-83569b14-a231-4abf-bd73-5f12e3d4526d" in namespace "var-expansion-7112"
  I0512 22:18:54.658181 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-83569b14-a231-4abf-bd73-5f12e3d4526d" to be fully deleted
  I0512 22:18:56.672533 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7112" for this suite. @ 05/12/25 22:18:56.678
• [4.092 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/12/25 22:18:56.687
  I0512 22:18:56.687888 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 22:18:56.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:18:56.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:18:56.714
  STEP: Creating configMap with name configmap-test-upd-25ef17c4-cf02-418a-9871-0b3ccce98ad4 @ 05/12/25 22:18:56.778
  STEP: Creating the pod @ 05/12/25 22:18:56.8
  STEP: Waiting for pod with text data @ 05/12/25 22:18:58.835
  STEP: Waiting for pod with binary data @ 05/12/25 22:18:58.851
  I0512 22:18:58.863915 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6851" for this suite. @ 05/12/25 22:18:58.871
• [2.191 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/12/25 22:18:58.879
  I0512 22:18:58.879870 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename chunking @ 05/12/25 22:18:58.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:18:58.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:18:58.936
  STEP: creating a large number of resources @ 05/12/25 22:18:58.94
  STEP: retrieving the first page @ 05/12/25 22:19:16.591
  I0512 22:19:16.639702 19 chunking.go:163] Retrieved 40/40 results with rv 28046 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 05/12/25 22:19:16.639
  I0512 22:19:36.653896 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:19:56.670401 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:20:16.654529 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:20:36.656430 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:20:56.653686 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:21:16.654434 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:21:36.654988 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:21:56.652347 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:22:16.653060 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:22:36.668874 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:22:56.677258 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:23:16.653643 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:23:36.665997 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:23:56.653242 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:24:16.650886 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:24:36.657625 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:24:56.653545 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:25:16.653510 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:25:36.653905 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:25:56.653570 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:26:16.654076 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:26:36.654708 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:26:56.652999 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:27:16.653247 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:27:36.651408 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:27:56.652542 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:28:16.650249 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:28:36.652020 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgwNDYsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0512 22:28:56.650369 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0512 22:28:56.650432 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/12/25 22:28:56.65
  STEP: retrieving all remaining pages @ 05/12/25 22:28:56.662
  I0512 22:28:56.671379 19 chunking.go:221] Retrieved 40/40 results with rv 30608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0512 22:28:56.679114 19 chunking.go:221] Retrieved 40/40 results with rv 30608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0512 22:28:56.685440 19 chunking.go:221] Retrieved 40/40 results with rv 30608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0512 22:28:56.691654 19 chunking.go:221] Retrieved 40/40 results with rv 30608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0512 22:28:56.697346 19 chunking.go:221] Retrieved 40/40 results with rv 30608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0512 22:28:56.709014 19 chunking.go:221] Retrieved 40/40 results with rv 30608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0512 22:28:56.716046 19 chunking.go:221] Retrieved 40/40 results with rv 30608 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzA2MDgsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0512 22:28:56.722019 19 chunking.go:221] Retrieved 40/40 results with rv 30608 and continue 
  I0512 22:28:56.722536 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6263" for this suite. @ 05/12/25 22:28:56.727
• [597.853 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 05/12/25 22:28:56.734
  I0512 22:28:56.734161 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:28:56.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:28:56.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:28:56.761
  STEP: Setting up server cert @ 05/12/25 22:28:56.863
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:28:57.526
  STEP: Deploying the webhook pod @ 05/12/25 22:28:57.536
  STEP: Wait for the deployment to be ready @ 05/12/25 22:28:57.548
  I0512 22:28:57.568550 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0512 22:28:59.586750 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:29:01.596023 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:29:03.593260 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:29:05.595218 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 28, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/12/25 22:29:07.594
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:29:07.611
  I0512 22:29:08.612460 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/12/25 22:29:08.624
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/12/25 22:29:08.654
  STEP: Creating a configMap that should not be mutated @ 05/12/25 22:29:08.662
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/12/25 22:29:08.673
  STEP: Creating a configMap that should be mutated @ 05/12/25 22:29:08.68
  I0512 22:29:08.750148 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8259" for this suite. @ 05/12/25 22:29:08.754
  STEP: Destroying namespace "webhook-markers-1030" for this suite. @ 05/12/25 22:29:08.769
• [12.048 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 05/12/25 22:29:08.782
  I0512 22:29:08.782953 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 22:29:08.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:29:08.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:29:08.802
  STEP: Creating pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873 @ 05/12/25 22:29:08.804
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/12/25 22:29:10.824
  I0512 22:29:10.831883 19 container_probe.go:1749] Initial restart count of pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b is 0
  I0512 22:29:10.837370 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:12.846851 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:14.853797 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:16.862029 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:18.871442 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:20.881269 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:22.889068 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:24.899056 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:26.906138 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:28.914111 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:30.918978 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:32.927381 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:34.933742 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:36.941488 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:38.949707 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:40.956415 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:42.965806 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:44.974852 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:46.981351 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:48.987495 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:50.994119 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:53.001528 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:55.007745 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:57.015509 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:29:59.023373 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:01.031224 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:03.038585 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:05.046983 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:07.054064 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:09.059670 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:11.069809 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:13.079624 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:15.086224 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:17.094286 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:19.101517 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:21.110715 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:23.117998 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:25.126045 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:27.134135 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:29.138924 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:31.145263 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:33.153848 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:35.159720 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:37.168960 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:39.178177 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:41.184922 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:43.192083 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:45.198781 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:47.209698 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:49.218477 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:51.226023 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:53.235681 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:55.242916 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:57.254304 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:30:59.262105 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:01.271859 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:03.280631 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:05.287701 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:07.295818 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:09.307260 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:11.315185 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:13.327379 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:15.338446 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:17.347031 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:19.353566 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:21.360608 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:23.367912 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:25.374858 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:27.382854 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:29.390810 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:31.399116 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:33.407571 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:35.419209 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:37.427766 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:39.434410 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:41.441605 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:43.451042 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:45.459335 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:47.469898 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:49.477134 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:51.483696 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:53.492987 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:55.501100 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:57.508643 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:31:59.515612 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:01.521926 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:03.530343 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:05.538275 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:07.547558 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:09.555745 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:11.563175 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:13.572112 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:15.578886 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:17.589655 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:19.599994 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:21.606997 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:23.615363 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:25.623573 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:27.635370 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:29.643521 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:31.649913 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:33.657240 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:35.668582 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:37.677208 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:39.685226 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:41.694413 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:43.701230 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:45.712296 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:47.725267 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:49.732851 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:51.743278 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:53.752037 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:55.760963 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:57.768389 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:32:59.775301 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:33:01.782817 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:33:03.790011 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:33:05.796857 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:33:07.805319 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  I0512 22:33:09.813246 19 container_probe.go:1759] Get pod liveness-8a24b16d-6b50-4d10-9896-d95a4e5a958b in namespace container-probe-2873
  STEP: deleting the pod @ 05/12/25 22:33:11.814
  I0512 22:33:11.833497 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2873" for this suite. @ 05/12/25 22:33:11.847
• [243.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 05/12/25 22:33:11.854
  I0512 22:33:11.854857 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename field-validation @ 05/12/25 22:33:11.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:33:11.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:33:11.873
  STEP: apply creating a deployment @ 05/12/25 22:33:11.876
  I0512 22:33:11.885800 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1903" for this suite. @ 05/12/25 22:33:11.947
• [0.103 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 05/12/25 22:33:11.957
  I0512 22:33:11.957979 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename statefulset @ 05/12/25 22:33:11.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:33:11.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:33:11.98
  STEP: Creating service test in namespace statefulset-2494 @ 05/12/25 22:33:11.982
  I0512 22:33:12.002730 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0512 22:33:22.001388 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/12/25 22:33:22.012
  I0512 22:33:22.033949 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0512 22:33:22.034033 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0512 22:33:32.035609 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0512 22:33:32.035678 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/12/25 22:33:32.047
  STEP: Delete all of the StatefulSets @ 05/12/25 22:33:32.051
  STEP: Verify that StatefulSets have been deleted @ 05/12/25 22:33:32.061
  I0512 22:33:32.068405 19 statefulset.go:138] Deleting all statefulset in ns statefulset-2494
  I0512 22:33:32.109159 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2494" for this suite. @ 05/12/25 22:33:32.117
• [20.165 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/12/25 22:33:32.123
  I0512 22:33:32.123692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 22:33:32.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:33:32.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:33:32.142
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/12/25 22:33:32.144
  STEP: Saw pod success @ 05/12/25 22:33:36.176
  I0512 22:33:36.182527 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-1be891ba-4777-417c-9d12-efee107ad16e container test-container: <nil>
  STEP: delete the pod @ 05/12/25 22:33:36.206
  I0512 22:33:36.228150 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7630" for this suite. @ 05/12/25 22:33:36.233
• [4.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 05/12/25 22:33:36.243
  I0512 22:33:36.243157 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename disruption @ 05/12/25 22:33:36.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:33:36.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:33:36.264
  STEP: Creating a kubernetes client @ 05/12/25 22:33:36.267
  I0512 22:33:36.267587 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename disruption-2 @ 05/12/25 22:33:36.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:33:36.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:33:36.375
  STEP: Waiting for the pdb to be processed @ 05/12/25 22:33:36.389
  STEP: Waiting for the pdb to be processed @ 05/12/25 22:33:36.414
  STEP: Waiting for the pdb to be processed @ 05/12/25 22:33:36.428
  STEP: listing a collection of PDBs across all namespaces @ 05/12/25 22:33:38.436
  STEP: listing a collection of PDBs in namespace disruption-2151 @ 05/12/25 22:33:38.442
  STEP: deleting a collection of PDBs @ 05/12/25 22:33:38.448
  STEP: Waiting for the PDB collection to be deleted @ 05/12/25 22:33:38.464
  I0512 22:33:38.468860 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9283" for this suite. @ 05/12/25 22:33:38.474
  I0512 22:33:38.480278 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2151" for this suite. @ 05/12/25 22:33:38.575
• [2.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/12/25 22:33:38.589
  I0512 22:33:38.589385 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename cronjob @ 05/12/25 22:33:38.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:33:38.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:33:38.622
  STEP: Creating a ReplaceConcurrent cronjob @ 05/12/25 22:33:38.626
  STEP: Ensuring a job is scheduled @ 05/12/25 22:33:38.633
  STEP: Ensuring exactly one is scheduled @ 05/12/25 22:34:00.639
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/12/25 22:34:00.644
  STEP: Ensuring the job is replaced with a new one @ 05/12/25 22:34:00.648
  STEP: Removing cronjob @ 05/12/25 22:35:00.661
  I0512 22:35:00.684683 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-882" for this suite. @ 05/12/25 22:35:00.691
• [82.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/12/25 22:35:00.706
  I0512 22:35:00.706803 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 22:35:00.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:00.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:00.724
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 22:35:00.736
  STEP: Saw pod success @ 05/12/25 22:35:02.769
  I0512 22:35:02.775684 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-d648b615-aea0-42a5-b05c-abae56224c4c container client-container: <nil>
  STEP: delete the pod @ 05/12/25 22:35:02.787
  I0512 22:35:02.805466 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2417" for this suite. @ 05/12/25 22:35:02.812
• [2.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/12/25 22:35:02.819
  I0512 22:35:02.819696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 22:35:02.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:02.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:02.844
  STEP: Creating projection with secret that has name projected-secret-test-3d240bb1-45f0-4c9b-b9e3-32e49b5a11b0 @ 05/12/25 22:35:02.851
  STEP: Creating a pod to test consume secrets @ 05/12/25 22:35:02.859
  STEP: Saw pod success @ 05/12/25 22:35:04.885
  I0512 22:35:04.892098 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-secrets-7e490a59-4fa1-4296-83f1-49d873c5c87b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 22:35:04.902
  I0512 22:35:04.919111 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6025" for this suite. @ 05/12/25 22:35:04.924
• [2.115 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 05/12/25 22:35:04.936
  I0512 22:35:04.936180 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubelet-test @ 05/12/25 22:35:04.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:04.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:04.956
  STEP: Waiting for pod completion @ 05/12/25 22:35:04.965
  I0512 22:35:09.016592 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7855" for this suite. @ 05/12/25 22:35:09.023
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/12/25 22:35:09.03
  I0512 22:35:09.030922 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename namespaces @ 05/12/25 22:35:09.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:09.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:09.051
  STEP: Updating Namespace "namespaces-2047" @ 05/12/25 22:35:09.054
  I0512 22:35:09.061622 19 namespace.go:389] Namespace "namespaces-2047" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"36b03196-9ad7-49b1-955a-403e91bbc697", "kubernetes.io/metadata.name":"namespaces-2047", "namespaces-2047":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0512 22:35:09.061856 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2047" for this suite. @ 05/12/25 22:35:09.122
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/12/25 22:35:09.131
  I0512 22:35:09.131499 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 22:35:09.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:09.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:09.153
  STEP: Creating configMap with name configmap-test-volume-map-ae945680-aa35-4ead-97f2-891f53c6083f @ 05/12/25 22:35:09.156
  STEP: Creating a pod to test consume configMaps @ 05/12/25 22:35:09.159
  STEP: Saw pod success @ 05/12/25 22:35:13.185
  I0512 22:35:13.191113 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-5320150f-2a8d-49bc-b4d5-65c32369f8c2 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 22:35:13.202
  I0512 22:35:13.219257 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8870" for this suite. @ 05/12/25 22:35:13.223
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/12/25 22:35:13.236
  I0512 22:35:13.236662 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pod-network-test @ 05/12/25 22:35:13.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:13.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:13.289
  STEP: Performing setup for networking test in namespace pod-network-test-9846 @ 05/12/25 22:35:13.291
  STEP: creating a selector @ 05/12/25 22:35:13.292
  STEP: Creating the service pods in kubernetes @ 05/12/25 22:35:13.292
  I0512 22:35:13.292484 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/12/25 22:35:25.402
  I0512 22:35:27.444501 19 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0512 22:35:27.444575 19 utils.go:496] Going to poll 10.42.0.244 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0512 22:35:27.447048 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.244 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9846 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 22:35:27.447111 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:35:27.448139 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 22:35:27.448339 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9846/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.244+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0512 22:35:28.566117 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0512 22:35:28.566191 19 utils.go:496] Going to poll 10.42.1.225 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0512 22:35:28.572723 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.225 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9846 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 22:35:28.573050 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:35:28.574720 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 22:35:28.575071 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9846/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.225+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0512 22:35:29.732015 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0512 22:35:29.732627 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9846" for this suite. @ 05/12/25 22:35:29.739
• [16.511 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/12/25 22:35:29.748
  I0512 22:35:29.748114 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename var-expansion @ 05/12/25 22:35:29.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:29.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:29.771
  STEP: Creating a pod to test substitution in container's args @ 05/12/25 22:35:29.774
  STEP: Saw pod success @ 05/12/25 22:35:33.802
  I0512 22:35:33.809230 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr pod var-expansion-ae059d5f-5610-452e-a69f-124ae05f5e59 container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 22:35:33.829
  I0512 22:35:33.852360 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4891" for this suite. @ 05/12/25 22:35:33.858
• [4.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/12/25 22:35:33.868
  I0512 22:35:33.868124 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 22:35:33.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:33.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:33.893
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 22:35:33.902
  STEP: Saw pod success @ 05/12/25 22:35:35.942
  I0512 22:35:35.949827 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-1163129e-8ec4-4544-9337-cea832aa3ce7 container client-container: <nil>
  STEP: delete the pod @ 05/12/25 22:35:35.96
  I0512 22:35:35.977018 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5461" for this suite. @ 05/12/25 22:35:35.981
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/12/25 22:35:35.986
  I0512 22:35:35.986973 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename subpath @ 05/12/25 22:35:35.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:36.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:36.005
  STEP: Setting up data @ 05/12/25 22:35:36.008
  STEP: Creating pod pod-subpath-test-secret-fpst @ 05/12/25 22:35:36.015
  STEP: Creating a pod to test atomic-volume-subpath @ 05/12/25 22:35:36.015
  STEP: Saw pod success @ 05/12/25 22:35:58.121
  I0512 22:35:58.126911 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-subpath-test-secret-fpst container test-container-subpath-secret-fpst: <nil>
  STEP: delete the pod @ 05/12/25 22:35:58.138
  STEP: Deleting pod pod-subpath-test-secret-fpst @ 05/12/25 22:35:58.159
  I0512 22:35:58.159654 19 delete.go:62] Deleting pod "pod-subpath-test-secret-fpst" in namespace "subpath-3478"
  I0512 22:35:58.163509 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3478" for this suite. @ 05/12/25 22:35:58.169
• [22.188 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 05/12/25 22:35:58.177
  I0512 22:35:58.177913 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/12/25 22:35:58.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:35:58.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:35:58.217
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/12/25 22:35:58.22
  I0512 22:35:58.220388 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/12/25 22:36:03.79
  I0512 22:36:03.791836 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:36:05.095629 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:36:10.587737 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1528" for this suite. @ 05/12/25 22:36:10.596
• [12.427 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/12/25 22:36:10.606
  I0512 22:36:10.606414 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 22:36:10.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:10.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:10.628
  STEP: Creating configMap with name projected-configmap-test-volume-89daf5e7-1f4b-4161-a64b-53b953bb1c7b @ 05/12/25 22:36:10.633
  STEP: Creating a pod to test consume configMaps @ 05/12/25 22:36:10.641
  STEP: Saw pod success @ 05/12/25 22:36:14.679
  I0512 22:36:14.686806 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-projected-configmaps-9a372ba3-56d8-4724-bfa0-5ef7eb021773 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 22:36:14.703
  I0512 22:36:14.725743 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8520" for this suite. @ 05/12/25 22:36:14.732
• [4.132 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/12/25 22:36:14.738
  I0512 22:36:14.738995 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename init-container @ 05/12/25 22:36:14.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:14.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:14.758
  STEP: creating the pod @ 05/12/25 22:36:14.761
  I0512 22:36:14.761599 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0512 22:36:17.950411 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4518" for this suite. @ 05/12/25 22:36:17.956
• [3.224 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/12/25 22:36:17.963
  I0512 22:36:17.963838 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename limitrange @ 05/12/25 22:36:17.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:17.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:17.985
  STEP: Creating LimitRange "e2e-limitrange-pl7bf" in namespace "limitrange-5253" @ 05/12/25 22:36:17.988
  STEP: Creating another limitRange in another namespace @ 05/12/25 22:36:17.993
  I0512 22:36:18.085668 19 limit_range.go:299] Namespace "e2e-limitrange-pl7bf-8878" created
  I0512 22:36:18.085919 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-pl7bf" in namespace "e2e-limitrange-pl7bf-8878"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-pl7bf" @ 05/12/25 22:36:18.09
  I0512 22:36:18.093751 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-pl7bf" in "limitrange-5253" namespace @ 05/12/25 22:36:18.094
  I0512 22:36:18.100606 19 limit_range.go:335] LimitRange "e2e-limitrange-pl7bf" has been patched
  STEP: Delete LimitRange "e2e-limitrange-pl7bf" by Collection with labelSelector: "e2e-limitrange-pl7bf=patched" @ 05/12/25 22:36:18.1
  STEP: Confirm that the limitRange "e2e-limitrange-pl7bf" has been deleted @ 05/12/25 22:36:18.105
  I0512 22:36:18.105964 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0512 22:36:18.108346 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-pl7bf=patched"
  I0512 22:36:18.108510 19 limit_range.go:344] LimitRange "e2e-limitrange-pl7bf" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-pl7bf" @ 05/12/25 22:36:18.108
  I0512 22:36:18.111245 19 limit_range.go:350] Found 1 limitRange
  I0512 22:36:18.111523 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5253" for this suite. @ 05/12/25 22:36:18.114
  STEP: Destroying namespace "e2e-limitrange-pl7bf-8878" for this suite. @ 05/12/25 22:36:18.124
• [0.171 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/12/25 22:36:18.134
  I0512 22:36:18.134758 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename daemonsets @ 05/12/25 22:36:18.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:18.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:18.192
  STEP: Creating simple DaemonSet "daemon-set" @ 05/12/25 22:36:18.226
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/12/25 22:36:18.234
  I0512 22:36:18.318302 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 22:36:18.318485 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 22:36:19.246889 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 22:36:19.246958 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 22:36:20.249114 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 22:36:20.249178 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/12/25 22:36:20.254
  I0512 22:36:20.349650 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0512 22:36:20.350093 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 22:36:21.286301 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0512 22:36:21.286519 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 22:36:22.276390 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 22:36:22.276454 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/12/25 22:36:22.281
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2718, will wait for the garbage collector to delete the pods @ 05/12/25 22:36:22.281
  I0512 22:36:22.343450 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.549009ms
  I0512 22:36:22.443652 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.19699ms
  I0512 22:36:23.350869 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 22:36:23.350911 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0512 22:36:23.366337 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32163"},"items":null}

  I0512 22:36:23.371183 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32163"},"items":null}

  I0512 22:36:23.385344 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2718" for this suite. @ 05/12/25 22:36:23.389
• [5.261 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/12/25 22:36:23.402
  I0512 22:36:23.402316 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename subpath @ 05/12/25 22:36:23.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:23.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:23.426
  STEP: Setting up data @ 05/12/25 22:36:23.428
  STEP: Creating pod pod-subpath-test-configmap-nmjk @ 05/12/25 22:36:23.435
  STEP: Creating a pod to test atomic-volume-subpath @ 05/12/25 22:36:23.435
  STEP: Saw pod success @ 05/12/25 22:36:47.601
  I0512 22:36:47.607929 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-subpath-test-configmap-nmjk container test-container-subpath-configmap-nmjk: <nil>
  STEP: delete the pod @ 05/12/25 22:36:47.62
  STEP: Deleting pod pod-subpath-test-configmap-nmjk @ 05/12/25 22:36:47.636
  I0512 22:36:47.636651 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-nmjk" in namespace "subpath-5607"
  I0512 22:36:47.639551 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5607" for this suite. @ 05/12/25 22:36:47.643
• [24.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/12/25 22:36:47.652
  I0512 22:36:47.652545 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 22:36:47.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:47.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:47.673
  STEP: Creating configMap with name configmap-test-volume-map-2a0a85df-5bb0-406d-a990-d91a7af7a045 @ 05/12/25 22:36:47.676
  STEP: Creating a pod to test consume configMaps @ 05/12/25 22:36:47.679
  STEP: Saw pod success @ 05/12/25 22:36:51.706
  I0512 22:36:51.713810 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-0b32b5eb-0474-4bdc-8dce-0bf56b12991b container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 22:36:51.727
  I0512 22:36:51.747934 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3842" for this suite. @ 05/12/25 22:36:51.753
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/12/25 22:36:51.762
  I0512 22:36:51.762615 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename projected @ 05/12/25 22:36:51.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:51.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:51.785
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 22:36:51.788
  STEP: Saw pod success @ 05/12/25 22:36:55.834
  I0512 22:36:55.841283 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-6aa6066c-6106-4b54-a6d2-7db480c89357 container client-container: <nil>
  STEP: delete the pod @ 05/12/25 22:36:55.852
  I0512 22:36:55.870378 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8660" for this suite. @ 05/12/25 22:36:55.875
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 05/12/25 22:36:55.882
  I0512 22:36:55.882791 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 22:36:55.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:55.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:55.901
  I0512 22:36:55.904746 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9756 create -f -'
  I0512 22:36:56.062592 19 builder.go:146] stderr: ""
  I0512 22:36:56.062645 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0512 22:36:56.062720 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9756 create -f -'
  I0512 22:36:56.214652 19 builder.go:146] stderr: ""
  I0512 22:36:56.214751 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/12/25 22:36:56.214
  I0512 22:36:57.235887 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0512 22:36:57.235971 19 framework.go:733] Found 1 / 1
  I0512 22:36:57.236045 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0512 22:36:57.240400 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0512 22:36:57.240469 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0512 22:36:57.240542 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9756 describe pod agnhost-primary-l549c'
  I0512 22:36:57.348154 19 builder.go:146] stderr: ""
  I0512 22:36:57.348280 19 builder.go:147] stdout: "Name:             agnhost-primary-l549c\nNamespace:        kubectl-9756\nPriority:         0\nService Account:  default\nNode:             k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt/192.168.1.7\nStart Time:       Mon, 12 May 2025 22:36:56 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.1.235\nIPs:\n  IP:           10.42.1.235\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://eadedf97e91ad717437069494c7f1e75b55788f72395a2217b4cf59e34269856\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 12 May 2025 22:36:56 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-q5594 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-q5594:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-9756/agnhost-primary-l549c to k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0512 22:36:57.348354 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9756 describe rc agnhost-primary'
  I0512 22:36:57.473244 19 builder.go:146] stderr: ""
  I0512 22:36:57.473359 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9756\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-l549c\n"
  I0512 22:36:57.473930 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9756 describe service agnhost-primary'
  I0512 22:36:57.594817 19 builder.go:146] stderr: ""
  I0512 22:36:57.594927 19 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-9756\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.43.22.179\nIPs:                      10.43.22.179\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.42.1.235:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0512 22:36:57.602804 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9756 describe node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr'
  I0512 22:36:57.754931 19 builder.go:146] stderr: ""
  I0512 22:36:57.755516 19 builder.go:147] stdout: "Name:               k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=g4s.kube.medium\n                    beta.kubernetes.io/os=linux\n                    k3s.io/external-ip=31.28.88.149\n                    kubernetes.civo.com/civo-node-pool=a11519e1-4849-4270-9ea0-0b20fde85996\n                    kubernetes.civo.com/civo-node-size=g4s.kube.medium\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=g4s.kube.medium\n                    region=staging\n                    topology.kubernetes.io/region=staging\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 192.168.1.8\n                    csi.volume.kubernetes.io/nodeid: {\"csi.civo.com\":\"aaa770ba-1251-4950-bc64-a095dd365387\"}\n                    flannel.alpha.coreos.com/backend-data: null\n                    flannel.alpha.coreos.com/backend-type: host-gw\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.1.8\n                    k3s.io/node-args:\n                      [\"agent\",\"--kubelet-arg\",\"cloud-provider=external\",\"--kubelet-arg\",\"max-pods=110\",\"--server\",\"https://31.28.88.149:6443\",\"--token\",\"******...\n                    k3s.io/node-config-hash: GG6OLTJMBDTFEMREENTWA6YFVROYCISYQKPRTT7NWOGIXIDYCQOA====\n                    k3s.io/node-env: {}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 12 May 2025 20:59:03 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 12 May 2025 22:36:47 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Mon, 12 May 2025 22:32:14 +0000   Mon, 12 May 2025 20:59:03 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Mon, 12 May 2025 22:32:14 +0000   Mon, 12 May 2025 20:59:03 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Mon, 12 May 2025 22:32:14 +0000   Mon, 12 May 2025 20:59:03 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Mon, 12 May 2025 22:32:14 +0000   Mon, 12 May 2025 20:59:03 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.1.8\n  ExternalIP:  31.28.88.149\n  Hostname:    k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr\nCapacity:\n  cpu:                2\n  ephemeral-storage:  48429256Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3834820Ki\n  pods:               110\nAllocatable:\n  cpu:                1820m\n  ephemeral-storage:  42484918608\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3220420Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 e2450a03ffefe09ec80788766821b401\n  System UUID:                50ba1c80-9670-57a3-b25a-ff4a74c54c95\n  Boot ID:                    4f281c01-0400-43f9-8bc4-1364a0ba47ff\n  Kernel Version:             6.1.138-0-virt\n  OS Image:                   Alpine Linux v3.18\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.2-k3s2\n  Kubelet Version:            v1.31.6+k3s1\n  Kube-Proxy Version:         v1.31.6+k3s1\nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   civo://aaa770ba-1251-4950-bc64-a095dd365387\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                               CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                               ------------  ----------  ---------------  -------------  ---\n  kube-system                 civo-ccm-bd7449dd8-g59ts           0 (0%)        0 (0%)      0 (0%)           0 (0%)         97m\n  kube-system                 civo-csi-controller-0              0 (0%)        0 (0%)      0 (0%)           0 (0%)         97m\n  kube-system                 civo-csi-node-wt7c2                0 (0%)        0 (0%)      0 (0%)           0 (0%)         97m\n  kube-system                 coredns-ccb96694c-l7675            100m (5%)     0 (0%)      70Mi (2%)        170Mi (5%)     97m\n  kube-system                 metrics-server-7bf7d58749-v5xjt    100m (5%)     0 (0%)      70Mi (2%)        0 (0%)         97m\n  kube-system                 traefik-4ncsl                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         97m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                200m (10%)  0 (0%)\n  memory             140Mi (4%)  170Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0512 22:36:57.755657 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-9756 describe namespace kubectl-9756'
  I0512 22:36:57.887584 19 builder.go:146] stderr: ""
  I0512 22:36:57.887645 19 builder.go:147] stdout: "Name:         kubectl-9756\nLabels:       e2e-framework=kubectl\n              e2e-run=36b03196-9ad7-49b1-955a-403e91bbc697\n              kubernetes.io/metadata.name=kubectl-9756\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0512 22:36:57.888064 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9756" for this suite. @ 05/12/25 22:36:57.892
• [2.022 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 05/12/25 22:36:57.905
  I0512 22:36:57.905170 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 22:36:57.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:36:58.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:36:58.005
  I0512 22:37:20.120319 19 container_probe.go:92] Container started at 2025-05-12 22:36:58 +0000 UTC, pod became ready at 2025-05-12 22:37:18 +0000 UTC
  I0512 22:37:20.120944 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6189" for this suite. @ 05/12/25 22:37:20.128
• [22.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/12/25 22:37:20.137
  I0512 22:37:20.137556 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 22:37:20.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:20.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:20.16
  STEP: Creating configMap with name configmap-test-volume-43bb68a9-d790-451d-b59e-731f624aabd0 @ 05/12/25 22:37:20.163
  STEP: Creating a pod to test consume configMaps @ 05/12/25 22:37:20.166
  STEP: Saw pod success @ 05/12/25 22:37:24.191
  I0512 22:37:24.196648 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-6de06869-7e9f-420e-9f4f-1d55c607e6cf container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 22:37:24.207
  I0512 22:37:24.228063 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8915" for this suite. @ 05/12/25 22:37:24.232
• [4.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 05/12/25 22:37:24.242
  I0512 22:37:24.243000 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 22:37:24.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:24.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:24.263
  STEP: Creating a ResourceQuota @ 05/12/25 22:37:24.267
  STEP: Getting a ResourceQuota @ 05/12/25 22:37:24.271
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/12/25 22:37:24.274
  STEP: Patching the ResourceQuota @ 05/12/25 22:37:24.276
  STEP: Deleting a Collection of ResourceQuotas @ 05/12/25 22:37:24.282
  STEP: Verifying the deleted ResourceQuota @ 05/12/25 22:37:24.288
  I0512 22:37:24.292910 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7258" for this suite. @ 05/12/25 22:37:24.333
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 05/12/25 22:37:24.345
  I0512 22:37:24.345769 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:37:24.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:24.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:24.372
  STEP: Setting up server cert @ 05/12/25 22:37:24.472
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:37:25.037
  STEP: Deploying the webhook pod @ 05/12/25 22:37:25.051
  STEP: Wait for the deployment to be ready @ 05/12/25 22:37:25.064
  I0512 22:37:25.079155 19 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/12/25 22:37:27.096
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:37:27.108
  I0512 22:37:28.108746 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/12/25 22:37:28.115
  STEP: create a pod that should be updated by the webhook @ 05/12/25 22:37:28.133
  I0512 22:37:28.224146 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2916" for this suite. @ 05/12/25 22:37:28.228
  STEP: Destroying namespace "webhook-markers-3514" for this suite. @ 05/12/25 22:37:28.232
• [3.892 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 05/12/25 22:37:28.238
  I0512 22:37:28.238488 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename field-validation @ 05/12/25 22:37:28.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:28.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:28.258
  I0512 22:37:28.260694 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  W0512 22:37:30.796568      19 warnings.go:70] unknown field "alpha"
  W0512 22:37:30.796789      19 warnings.go:70] unknown field "beta"
  W0512 22:37:30.796802      19 warnings.go:70] unknown field "delta"
  W0512 22:37:30.796812      19 warnings.go:70] unknown field "epsilon"
  W0512 22:37:30.796822      19 warnings.go:70] unknown field "gamma"
  I0512 22:37:31.363548 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8269" for this suite. @ 05/12/25 22:37:31.37
• [3.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 05/12/25 22:37:31.378
  I0512 22:37:31.378978 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename field-validation @ 05/12/25 22:37:31.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:31.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:31.401
  STEP: apply creating a deployment @ 05/12/25 22:37:31.406
  I0512 22:37:31.423835 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2286" for this suite. @ 05/12/25 22:37:31.47
• [0.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 05/12/25 22:37:31.484
  I0512 22:37:31.484914 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename job @ 05/12/25 22:37:31.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:31.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:31.512
  STEP: Creating a job @ 05/12/25 22:37:31.516
  STEP: Ensuring active pods == parallelism @ 05/12/25 22:37:31.521
  STEP: Orphaning one of the Job's Pods @ 05/12/25 22:37:33.533
  I0512 22:37:34.059379 19 pod_client.go:173] Successfully updated pod "adopt-release-fcls6"
  STEP: Checking that the Job readopts the Pod @ 05/12/25 22:37:34.059
  STEP: Removing the labels from the Job's Pod @ 05/12/25 22:37:36.087
  I0512 22:37:36.600202 19 pod_client.go:173] Successfully updated pod "adopt-release-fcls6"
  STEP: Checking that the Job releases the Pod @ 05/12/25 22:37:36.6
  I0512 22:37:38.609244 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-742" for this suite. @ 05/12/25 22:37:38.616
• [7.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 05/12/25 22:37:38.627
  I0512 22:37:38.627619 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 22:37:38.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:38.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:38.658
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/12/25 22:37:38.661
  I0512 22:37:38.661642 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-1565 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0512 22:37:38.759943 19 builder.go:146] stderr: ""
  I0512 22:37:38.759990 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/12/25 22:37:38.76
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/12/25 22:37:43.811
  I0512 22:37:43.811285 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-1565 get pod e2e-test-httpd-pod -o json'
  I0512 22:37:43.908184 19 builder.go:146] stderr: ""
  I0512 22:37:43.908576 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-05-12T22:37:38Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1565\",\n        \"resourceVersion\": \"32595\",\n        \"uid\": \"c52d374f-d893-4444-9f67-ef77fac7f613\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-vf2kh\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-vf2kh\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-12T22:37:40Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-12T22:37:38Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-12T22:37:40Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-12T22:37:40Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-05-12T22:37:38Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://422ccd787d79a5aa13661c9fa70cb5f877e1864b8d9484bd46252b0d4c983792\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-05-12T22:37:39Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-vf2kh\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.1.7\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.1.7\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.242\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.242\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-05-12T22:37:38Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/12/25 22:37:43.908
  I0512 22:37:43.908812 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-1565 replace -f -'
  I0512 22:37:44.073151 19 builder.go:146] stderr: ""
  I0512 22:37:44.073201 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/12/25 22:37:44.073
  I0512 22:37:44.078279 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-1565 delete pods e2e-test-httpd-pod'
  I0512 22:37:46.170996 19 builder.go:146] stderr: ""
  I0512 22:37:46.171052 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0512 22:37:46.171374 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1565" for this suite. @ 05/12/25 22:37:46.178
• [7.561 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/12/25 22:37:46.188
  I0512 22:37:46.188150 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 22:37:46.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:46.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:46.213
  STEP: Creating a pod to test downward api env vars @ 05/12/25 22:37:46.215
  STEP: Saw pod success @ 05/12/25 22:37:50.245
  I0512 22:37:50.250935 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downward-api-f19ff140-8290-457e-bcc1-003f62771eee container dapi-container: <nil>
  STEP: delete the pod @ 05/12/25 22:37:50.26
  I0512 22:37:50.275836 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6848" for this suite. @ 05/12/25 22:37:50.28
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 05/12/25 22:37:50.288
  I0512 22:37:50.288356 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename resourcequota @ 05/12/25 22:37:50.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:37:50.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:37:50.309
  STEP: Creating a ResourceQuota with best effort scope @ 05/12/25 22:37:50.314
  STEP: Ensuring ResourceQuota status is calculated @ 05/12/25 22:37:50.321
  STEP: Creating a ResourceQuota with not best effort scope @ 05/12/25 22:37:52.327
  STEP: Ensuring ResourceQuota status is calculated @ 05/12/25 22:37:52.334
  STEP: Creating a best-effort pod @ 05/12/25 22:37:54.342
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/12/25 22:37:54.36
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/12/25 22:37:56.368
  STEP: Deleting the pod @ 05/12/25 22:37:58.375
  STEP: Ensuring resource quota status released the pod usage @ 05/12/25 22:37:58.393
  STEP: Creating a not best-effort pod @ 05/12/25 22:38:00.4
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/12/25 22:38:00.408
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/12/25 22:38:02.416
  STEP: Deleting the pod @ 05/12/25 22:38:04.424
  STEP: Ensuring resource quota status released the pod usage @ 05/12/25 22:38:04.444
  I0512 22:38:06.451231 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1670" for this suite. @ 05/12/25 22:38:06.459
• [16.180 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/12/25 22:38:06.469
  I0512 22:38:06.469949 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename endpointslice @ 05/12/25 22:38:06.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:06.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:06.495
  STEP: referencing a single matching pod @ 05/12/25 22:38:08.606
  STEP: referencing matching pods with named port @ 05/12/25 22:38:08.616
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/12/25 22:38:08.623
  STEP: recreating EndpointSlices after they've been deleted @ 05/12/25 22:38:08.631
  I0512 22:38:08.649528 19 endpointslice.go:938] EndpointSlice for Service endpointslice-3986/example-named-port not found
  I0512 22:38:10.667225 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3986" for this suite. @ 05/12/25 22:38:10.68
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/12/25 22:38:10.69
  I0512 22:38:10.690165 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 22:38:10.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:10.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:10.716
  STEP: Creating secret with name secret-test-map-a0c0ea3a-4110-47bf-819c-b056c63d9dec @ 05/12/25 22:38:10.721
  STEP: Creating a pod to test consume secrets @ 05/12/25 22:38:10.727
  STEP: Saw pod success @ 05/12/25 22:38:14.76
  I0512 22:38:14.764906 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-secrets-c17c54c4-f2c6-4844-af52-3e2bc3e23608 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/12/25 22:38:14.774
  I0512 22:38:14.793504 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-931" for this suite. @ 05/12/25 22:38:14.798
• [4.116 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 05/12/25 22:38:14.805
  I0512 22:38:14.805803 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:38:14.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:14.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:14.829
  STEP: Setting up server cert @ 05/12/25 22:38:14.927
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:38:15.254
  STEP: Deploying the webhook pod @ 05/12/25 22:38:15.267
  STEP: Wait for the deployment to be ready @ 05/12/25 22:38:15.281
  I0512 22:38:15.299014 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 22:38:17.316
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:38:17.326
  I0512 22:38:18.327236 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/12/25 22:38:18.342
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/12/25 22:38:18.368
  I0512 22:38:18.368952 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:38:18.453861 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-140" for this suite. @ 05/12/25 22:38:18.464
  STEP: Destroying namespace "webhook-markers-7478" for this suite. @ 05/12/25 22:38:18.469
• [3.669 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/12/25 22:38:18.475
  I0512 22:38:18.476134 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename daemonsets @ 05/12/25 22:38:18.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:18.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:18.496
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/12/25 22:38:18.573
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/12/25 22:38:18.581
  I0512 22:38:18.667075 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 22:38:18.667156 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 22:38:19.597657 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0512 22:38:19.597755 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 22:38:20.596720 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 22:38:20.596792 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/12/25 22:38:20.602
  I0512 22:38:20.698118 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0512 22:38:20.698400 19 fixtures.go:130] Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr is running 0 daemon pod, expected 1
  I0512 22:38:21.636743 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0512 22:38:21.636956 19 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/12/25 22:38:21.637
  STEP: Deleting DaemonSet "daemon-set" @ 05/12/25 22:38:21.646
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1155, will wait for the garbage collector to delete the pods @ 05/12/25 22:38:21.646
  I0512 22:38:21.720059 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 18.338312ms
  I0512 22:38:21.820272 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.214177ms
  I0512 22:38:24.729775 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0512 22:38:24.729849 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0512 22:38:24.736169 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32968"},"items":null}

  I0512 22:38:24.742529 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32968"},"items":null}

  I0512 22:38:24.757053 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1155" for this suite. @ 05/12/25 22:38:24.761
• [6.291 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 05/12/25 22:38:24.767
  I0512 22:38:24.767908 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 22:38:24.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:24.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:24.789
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4522 @ 05/12/25 22:38:24.792
  STEP: changing the ExternalName service to type=NodePort @ 05/12/25 22:38:24.796
  STEP: creating replication controller externalname-service in namespace services-4522 @ 05/12/25 22:38:24.809
  I0512 22:38:24.818646      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4522, replica count: 2
  I0512 22:38:27.870935      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 22:38:27.871001 19 resource.go:361] Creating new exec pod
  I0512 22:38:30.909902 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-4522 exec execpod64xq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0512 22:38:31.130306 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0512 22:38:31.130368 19 builder.go:147] stdout: ""
  I0512 22:38:31.910128 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-4522 exec execpod64xq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0512 22:38:32.124068 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0512 22:38:32.124153 19 builder.go:147] stdout: ""
  I0512 22:38:32.910223 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-4522 exec execpod64xq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0512 22:38:33.145139 19 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0512 22:38:33.145195 19 builder.go:147] stdout: "externalname-service-xhhzp"
  I0512 22:38:33.145280 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-4522 exec execpod64xq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.230.27 80'
  I0512 22:38:33.307874 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.230.27 80\nConnection to 10.43.230.27 80 port [tcp/http] succeeded!\n"
  I0512 22:38:33.307930 19 builder.go:147] stdout: "externalname-service-wx5kv"
  I0512 22:38:33.308016 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-4522 exec execpod64xq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.8 30332'
  I0512 22:38:33.503404 19 builder.go:146] stderr: "+ nc -v -t+  -w 2 192.168.1.8echo hostName 30332\n\nConnection to 192.168.1.8 30332 port [tcp/*] succeeded!\n"
  I0512 22:38:33.503488 19 builder.go:147] stdout: "externalname-service-xhhzp"
  I0512 22:38:33.503619 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-4522 exec execpod64xq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.7 30332'
  I0512 22:38:33.724914 19 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.7 30332\n+ echo hostName\nConnection to 192.168.1.7 30332 port [tcp/*] succeeded!\n"
  I0512 22:38:33.724978 19 builder.go:147] stdout: ""
  I0512 22:38:34.504020 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-4522 exec execpod64xq5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.7 30332'
  I0512 22:38:34.732121 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.7 30332\nConnection to 192.168.1.7 30332 port [tcp/*] succeeded!\n"
  I0512 22:38:34.732203 19 builder.go:147] stdout: "externalname-service-xhhzp"
  I0512 22:38:34.732604 19 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0512 22:38:34.747894 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4522" for this suite. @ 05/12/25 22:38:34.752
• [10.004 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 05/12/25 22:38:34.772
  I0512 22:38:34.772373 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 22:38:34.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:34.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:34.792
  STEP: creating an Endpoint @ 05/12/25 22:38:34.797
  STEP: waiting for available Endpoint @ 05/12/25 22:38:34.801
  STEP: listing all Endpoints @ 05/12/25 22:38:34.804
  STEP: updating the Endpoint @ 05/12/25 22:38:34.81
  STEP: fetching the Endpoint @ 05/12/25 22:38:34.816
  STEP: patching the Endpoint @ 05/12/25 22:38:34.819
  STEP: fetching the Endpoint @ 05/12/25 22:38:34.828
  STEP: deleting the Endpoint by Collection @ 05/12/25 22:38:34.83
  STEP: waiting for Endpoint deletion @ 05/12/25 22:38:34.836
  STEP: fetching the Endpoint @ 05/12/25 22:38:34.839
  I0512 22:38:34.841272 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-901" for this suite. @ 05/12/25 22:38:34.845
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/12/25 22:38:34.862
  I0512 22:38:34.862062 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename configmap @ 05/12/25 22:38:34.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:34.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:34.9
  I0512 22:38:34.943245 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5859" for this suite. @ 05/12/25 22:38:34.946
• [0.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/12/25 22:38:34.95
  I0512 22:38:34.950860 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename downward-api @ 05/12/25 22:38:34.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:34.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:35.002
  STEP: Creating a pod to test downward API volume plugin @ 05/12/25 22:38:35.006
  STEP: Saw pod success @ 05/12/25 22:38:39.037
  I0512 22:38:39.045785 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod downwardapi-volume-c994d33f-8fc6-40d0-84ca-25531c233410 container client-container: <nil>
  STEP: delete the pod @ 05/12/25 22:38:39.066
  I0512 22:38:39.087089 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3535" for this suite. @ 05/12/25 22:38:39.092
• [4.149 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 05/12/25 22:38:39.101
  I0512 22:38:39.101361 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 22:38:39.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:39.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:39.134
  STEP: creating service in namespace services-6928 @ 05/12/25 22:38:39.138
  STEP: creating service affinity-nodeport-transition in namespace services-6928 @ 05/12/25 22:38:39.138
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6928 @ 05/12/25 22:38:39.151
  I0512 22:38:39.167162      19 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-6928, replica count: 3
  I0512 22:38:42.218811      19 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0512 22:38:42.237980 19 resource.go:361] Creating new exec pod
  I0512 22:38:45.271227 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-6928 exec execpod-affinity9czsv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0512 22:38:45.487476 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0512 22:38:45.487583 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:38:45.487728 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-6928 exec execpod-affinity9czsv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.179.224 80'
  I0512 22:38:45.636018 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.179.224 80\nConnection to 10.43.179.224 80 port [tcp/http] succeeded!\n"
  I0512 22:38:45.636095 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:38:45.636210 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-6928 exec execpod-affinity9czsv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.8 30291'
  I0512 22:38:45.813241 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.1.8 30291\nConnection to 192.168.1.8 30291 port [tcp/*] succeeded!\n"
  I0512 22:38:45.813314 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:38:45.813422 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-6928 exec execpod-affinity9czsv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.1.7 30291'
  I0512 22:38:46.030687 19 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.1.7 30291\n+ echo hostName\nConnection to 192.168.1.7 30291 port [tcp/*] succeeded!\n"
  I0512 22:38:46.030755 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0512 22:38:46.046365 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-6928 exec execpod-affinity9czsv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.1.8:30291/ ; done'
  I0512 22:38:46.414139 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n"
  I0512 22:38:46.414196 19 builder.go:147] stdout: "\naffinity-nodeport-transition-p45k4\naffinity-nodeport-transition-gdg2p\naffinity-nodeport-transition-p45k4\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-gdg2p\naffinity-nodeport-transition-p45k4\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-p45k4\naffinity-nodeport-transition-gdg2p\naffinity-nodeport-transition-p45k4\naffinity-nodeport-transition-p45k4\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-gdg2p\naffinity-nodeport-transition-p45k4\naffinity-nodeport-transition-gdg2p"
  I0512 22:38:46.414212 19 service.go:242] Received response from host: affinity-nodeport-transition-p45k4
  I0512 22:38:46.414223 19 service.go:242] Received response from host: affinity-nodeport-transition-gdg2p
  I0512 22:38:46.414232 19 service.go:242] Received response from host: affinity-nodeport-transition-p45k4
  I0512 22:38:46.414471 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.414480 19 service.go:242] Received response from host: affinity-nodeport-transition-gdg2p
  I0512 22:38:46.414488 19 service.go:242] Received response from host: affinity-nodeport-transition-p45k4
  I0512 22:38:46.414495 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.414503 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.414530 19 service.go:242] Received response from host: affinity-nodeport-transition-p45k4
  I0512 22:38:46.414622 19 service.go:242] Received response from host: affinity-nodeport-transition-gdg2p
  I0512 22:38:46.414630 19 service.go:242] Received response from host: affinity-nodeport-transition-p45k4
  I0512 22:38:46.414668 19 service.go:242] Received response from host: affinity-nodeport-transition-p45k4
  I0512 22:38:46.414677 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.414692 19 service.go:242] Received response from host: affinity-nodeport-transition-gdg2p
  I0512 22:38:46.414725 19 service.go:242] Received response from host: affinity-nodeport-transition-p45k4
  I0512 22:38:46.414759 19 service.go:242] Received response from host: affinity-nodeport-transition-gdg2p
  I0512 22:38:46.427733 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=services-6928 exec execpod-affinity9czsv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.1.8:30291/ ; done'
  I0512 22:38:46.769029 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.1.8:30291/\n"
  I0512 22:38:46.769091 19 builder.go:147] stdout: "\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7\naffinity-nodeport-transition-4d5b7"
  I0512 22:38:46.769110 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769122 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769138 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769149 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769158 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769167 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769175 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769185 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769195 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769238 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769247 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769256 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769264 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769273 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769282 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769314 19 service.go:242] Received response from host: affinity-nodeport-transition-4d5b7
  I0512 22:38:46.769638 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6928, will wait for the garbage collector to delete the pods @ 05/12/25 22:38:46.796
  I0512 22:38:46.861907 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 11.627884ms
  I0512 22:38:46.962330 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.421098ms
  I0512 22:38:49.790161 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6928" for this suite. @ 05/12/25 22:38:49.804
• [10.711 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 05/12/25 22:38:49.812
  I0512 22:38:49.812687 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 22:38:49.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:49.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:49.831
  STEP: creating all guestbook components @ 05/12/25 22:38:49.833
  I0512 22:38:49.834146 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0512 22:38:49.834449 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 create -f -'
  I0512 22:38:49.981307 19 builder.go:146] stderr: ""
  I0512 22:38:49.981380 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0512 22:38:49.981681 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0512 22:38:49.982275 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 create -f -'
  I0512 22:38:50.137785 19 builder.go:146] stderr: ""
  I0512 22:38:50.137833 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0512 22:38:50.137886 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0512 22:38:50.138033 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 create -f -'
  I0512 22:38:50.289325 19 builder.go:146] stderr: ""
  I0512 22:38:50.289402 19 builder.go:147] stdout: "service/frontend created\n"
  I0512 22:38:50.289576 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0512 22:38:50.289774 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 create -f -'
  I0512 22:38:50.433143 19 builder.go:146] stderr: ""
  I0512 22:38:50.433240 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0512 22:38:50.433356 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0512 22:38:50.433617 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 create -f -'
  I0512 22:38:50.579708 19 builder.go:146] stderr: ""
  I0512 22:38:50.579749 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0512 22:38:50.579804 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0512 22:38:50.579883 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 create -f -'
  I0512 22:38:50.689111 19 builder.go:146] stderr: ""
  I0512 22:38:50.689172 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/12/25 22:38:50.689
  I0512 22:38:50.689227 19 kubectl.go:2272] Waiting for all frontend pods to be Running.
  I0512 22:38:55.740064 19 kubectl.go:2276] Waiting for frontend to serve content.
  I0512 22:38:55.768703 19 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I0512 22:38:55.789226 19 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/12/25 22:38:55.801
  I0512 22:38:55.801823 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 delete --grace-period=0 --force -f -'
  I0512 22:38:55.914638 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 22:38:55.914710 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/12/25 22:38:55.914
  I0512 22:38:55.914885 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 delete --grace-period=0 --force -f -'
  I0512 22:38:56.034975 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 22:38:56.035056 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/12/25 22:38:56.035
  I0512 22:38:56.035767 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 delete --grace-period=0 --force -f -'
  I0512 22:38:56.155243 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 22:38:56.155319 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/12/25 22:38:56.155
  I0512 22:38:56.155573 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 delete --grace-period=0 --force -f -'
  I0512 22:38:56.249353 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 22:38:56.249454 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/12/25 22:38:56.249
  I0512 22:38:56.249980 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 delete --grace-period=0 --force -f -'
  I0512 22:38:56.379514 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 22:38:56.379558 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/12/25 22:38:56.379
  I0512 22:38:56.379672 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-7076 delete --grace-period=0 --force -f -'
  I0512 22:38:56.482607 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0512 22:38:56.482648 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0512 22:38:56.482745 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7076" for this suite. @ 05/12/25 22:38:56.494
• [6.708 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 05/12/25 22:38:56.521
  I0512 22:38:56.521051 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename services @ 05/12/25 22:38:56.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:56.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:56.542
  STEP: creating a Service @ 05/12/25 22:38:56.546
  STEP: watching for the Service to be added @ 05/12/25 22:38:56.554
  I0512 22:38:56.556134 19 service.go:3445] Found Service test-service-pf9c6 in namespace services-1616 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30967}]
  I0512 22:38:56.556237 19 service.go:3452] Service test-service-pf9c6 created
  STEP: Getting /status @ 05/12/25 22:38:56.556
  I0512 22:38:56.558571 19 service.go:3463] Service test-service-pf9c6 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/12/25 22:38:56.558
  STEP: watching for the Service to be patched @ 05/12/25 22:38:56.562
  I0512 22:38:56.563931 19 service.go:3486] observed Service test-service-pf9c6 in namespace services-1616 with annotations: map[] & LoadBalancer: {[]}
  I0512 22:38:56.564051 19 service.go:3489] Found Service test-service-pf9c6 in namespace services-1616 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc003c67880 []}]}
  I0512 22:38:56.564124 19 service.go:3496] Service test-service-pf9c6 has service status patched
  STEP: updating the ServiceStatus @ 05/12/25 22:38:56.564
  I0512 22:38:56.571164 19 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/12/25 22:38:56.571
  I0512 22:38:56.572777 19 service.go:3527] Observed Service test-service-pf9c6 in namespace services-1616 with annotations: map[] & Conditions: []
  I0512 22:38:56.572896 19 service.go:3538] Observed Service test-service-pf9c6 in namespace services-1616 with annotations: map[patchedstatus:true] & Conditions: []
  I0512 22:38:56.573005 19 service.go:3534] Found Service test-service-pf9c6 in namespace services-1616 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0512 22:38:56.573088 19 service.go:3545] Service test-service-pf9c6 has service status updated
  STEP: patching the service @ 05/12/25 22:38:56.573
  STEP: watching for the Service to be patched @ 05/12/25 22:38:56.59
  I0512 22:38:56.593058 19 service.go:3568] observed Service test-service-pf9c6 in namespace services-1616 with labels: map[test-service-static:true]
  I0512 22:38:56.593222 19 service.go:3568] observed Service test-service-pf9c6 in namespace services-1616 with labels: map[test-service-static:true]
  I0512 22:38:56.593345 19 service.go:3568] observed Service test-service-pf9c6 in namespace services-1616 with labels: map[test-service-static:true]
  I0512 22:38:56.593520 19 service.go:3571] Found Service test-service-pf9c6 in namespace services-1616 with labels: map[test-service:patched test-service-static:true]
  I0512 22:38:56.593679 19 service.go:3578] Service test-service-pf9c6 patched
  STEP: deleting the service @ 05/12/25 22:38:56.593
  STEP: watching for the Service to be deleted @ 05/12/25 22:38:56.604
  I0512 22:38:56.606785 19 service.go:3602] Observed event: ADDED
  I0512 22:38:56.606974 19 service.go:3602] Observed event: MODIFIED
  I0512 22:38:56.607060 19 service.go:3602] Observed event: MODIFIED
  I0512 22:38:56.607105 19 service.go:3602] Observed event: MODIFIED
  I0512 22:38:56.607226 19 service.go:3598] Found Service test-service-pf9c6 in namespace services-1616 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0512 22:38:56.607294 19 service.go:3607] Service test-service-pf9c6 deleted
  I0512 22:38:56.607504 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1616" for this suite. @ 05/12/25 22:38:56.61
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 05/12/25 22:38:56.628
  I0512 22:38:56.628295 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/12/25 22:38:56.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:56.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:56.652
  STEP: getting /apis @ 05/12/25 22:38:56.662
  STEP: getting /apis/admissionregistration.k8s.io @ 05/12/25 22:38:56.667
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/12/25 22:38:56.668
  STEP: creating @ 05/12/25 22:38:56.669
  STEP: getting @ 05/12/25 22:38:56.682
  STEP: listing @ 05/12/25 22:38:56.686
  STEP: watching @ 05/12/25 22:38:56.688
  I0512 22:38:56.688757 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 05/12/25 22:38:56.689
  STEP: updating @ 05/12/25 22:38:56.693
  I0512 22:38:56.699186 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 05/12/25 22:38:56.699
  STEP: deleting a collection @ 05/12/25 22:38:56.707
  I0512 22:38:56.719516 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5746" for this suite. @ 05/12/25 22:38:56.722
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 05/12/25 22:38:56.729
  I0512 22:38:56.729687 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:38:56.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:38:56.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:38:56.754
  STEP: Setting up server cert @ 05/12/25 22:38:56.848
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:38:57.307
  STEP: Deploying the webhook pod @ 05/12/25 22:38:57.322
  STEP: Wait for the deployment to be ready @ 05/12/25 22:38:57.334
  I0512 22:38:57.354005 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 22:38:59.371
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:38:59.381
  I0512 22:39:00.382959 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0512 22:39:00.389397 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9931-crds.webhook.example.com via the AdmissionRegistration API @ 05/12/25 22:39:00.906
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/12/25 22:39:00.936
  I0512 22:39:03.567838 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3142" for this suite. @ 05/12/25 22:39:03.579
  STEP: Destroying namespace "webhook-markers-1499" for this suite. @ 05/12/25 22:39:03.587
• [6.864 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/12/25 22:39:03.594
  I0512 22:39:03.594196 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 22:39:03.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:03.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:03.613
  STEP: creating secret secrets-3553/secret-test-44eee6f4-98b9-416e-85b9-bfa00db85aea @ 05/12/25 22:39:03.617
  STEP: Creating a pod to test consume secrets @ 05/12/25 22:39:03.622
  STEP: Saw pod success @ 05/12/25 22:39:05.659
  I0512 22:39:05.663806 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-configmaps-6617cb43-e3d5-42c3-86a1-e5a1c5160f17 container env-test: <nil>
  STEP: delete the pod @ 05/12/25 22:39:05.673
  I0512 22:39:05.686867 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3553" for this suite. @ 05/12/25 22:39:05.691
• [2.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/12/25 22:39:05.695
  I0512 22:39:05.695900 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename secrets @ 05/12/25 22:39:05.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:05.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:05.712
  STEP: Creating secret with name secret-test-c29b365e-ed88-4391-816e-5aac0f33a3a7 @ 05/12/25 22:39:05.714
  STEP: Creating a pod to test consume secrets @ 05/12/25 22:39:05.719
  STEP: Saw pod success @ 05/12/25 22:39:09.744
  I0512 22:39:09.751164 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-secrets-dbf0d94d-e6ad-4dd4-8457-4efa4f8dc100 container secret-env-test: <nil>
  STEP: delete the pod @ 05/12/25 22:39:09.76
  I0512 22:39:09.777653 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3090" for this suite. @ 05/12/25 22:39:09.784
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 05/12/25 22:39:09.793
  I0512 22:39:09.793808 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:39:09.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:09.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:09.822
  STEP: Setting up server cert @ 05/12/25 22:39:09.915
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:39:10.257
  STEP: Deploying the webhook pod @ 05/12/25 22:39:10.263
  STEP: Wait for the deployment to be ready @ 05/12/25 22:39:10.273
  I0512 22:39:10.293620 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/12/25 22:39:12.312
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:39:12.322
  I0512 22:39:13.323005 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/12/25 22:39:13.332
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/12/25 22:39:13.357
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/12/25 22:39:13.378
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/12/25 22:39:13.393
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/12/25 22:39:13.407
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/12/25 22:39:13.413
  I0512 22:39:13.468357 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8819" for this suite. @ 05/12/25 22:39:13.475
  STEP: Destroying namespace "webhook-markers-3987" for this suite. @ 05/12/25 22:39:13.48
• [3.693 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 05/12/25 22:39:13.489
  I0512 22:39:13.489300 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename job @ 05/12/25 22:39:13.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:13.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:13.509
  STEP: Creating a suspended job @ 05/12/25 22:39:13.516
  STEP: Patching the Job @ 05/12/25 22:39:13.52
  STEP: Watching for Job to be patched @ 05/12/25 22:39:13.532
  I0512 22:39:13.535889 19 job.go:1330] Event ADDED observed for Job e2e-47n94 in namespace job-848 with labels: map[e2e-job-label:e2e-47n94] and annotations: map[]
  I0512 22:39:13.535923 19 job.go:1333] Event MODIFIED found for Job e2e-47n94 in namespace job-848 with labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94] and annotations: map[]
  STEP: Updating the job @ 05/12/25 22:39:13.535
  STEP: Watching for Job to be updated @ 05/12/25 22:39:13.547
  I0512 22:39:13.550185 19 job.go:1333] Event MODIFIED found for Job e2e-47n94 in namespace job-848 with labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94] and annotations: map[updated:true]
  I0512 22:39:13.550294 19 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/12/25 22:39:13.55
  I0512 22:39:13.553359 19 job.go:1233] Job: e2e-47n94 as labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94]
  STEP: Waiting for job to complete @ 05/12/25 22:39:13.553
  STEP: Delete a job collection with a labelselector @ 05/12/25 22:39:23.567
  STEP: Watching for Job to be deleted @ 05/12/25 22:39:23.58
  I0512 22:39:23.585468 19 job.go:1330] Event MODIFIED observed for Job e2e-47n94 in namespace job-848 with labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94] and annotations: map[updated:true]
  I0512 22:39:23.585797 19 job.go:1330] Event MODIFIED observed for Job e2e-47n94 in namespace job-848 with labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94] and annotations: map[updated:true]
  I0512 22:39:23.586113 19 job.go:1330] Event MODIFIED observed for Job e2e-47n94 in namespace job-848 with labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94] and annotations: map[updated:true]
  I0512 22:39:23.586375 19 job.go:1330] Event MODIFIED observed for Job e2e-47n94 in namespace job-848 with labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94] and annotations: map[updated:true]
  I0512 22:39:23.586673 19 job.go:1330] Event MODIFIED observed for Job e2e-47n94 in namespace job-848 with labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94] and annotations: map[updated:true]
  I0512 22:39:23.587054 19 job.go:1333] Event DELETED found for Job e2e-47n94 in namespace job-848 with labels: map[e2e-47n94:patched e2e-job-label:e2e-47n94] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/12/25 22:39:23.587
  I0512 22:39:23.595319 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-848" for this suite. @ 05/12/25 22:39:23.614
• [10.134 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/12/25 22:39:23.624
  I0512 22:39:23.625162 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename containers @ 05/12/25 22:39:23.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:23.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:23.644
  STEP: Creating a pod to test override all @ 05/12/25 22:39:23.647
  STEP: Saw pod success @ 05/12/25 22:39:27.679
  I0512 22:39:27.686004 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod client-containers-75987dad-e003-4151-9c4a-ada9ac009873 container agnhost-container: <nil>
  STEP: delete the pod @ 05/12/25 22:39:27.698
  I0512 22:39:27.719769 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8459" for this suite. @ 05/12/25 22:39:27.725
• [4.112 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/12/25 22:39:27.736
  I0512 22:39:27.736912 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename namespaces @ 05/12/25 22:39:27.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:27.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:27.759
  STEP: Creating namespace "e2e-ns-mr9hm" @ 05/12/25 22:39:27.763
  I0512 22:39:27.863391 19 namespace.go:411] Namespace "e2e-ns-mr9hm-7594" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-mr9hm-7594" @ 05/12/25 22:39:27.863
  I0512 22:39:27.871249 19 namespace.go:434] Namespace "e2e-ns-mr9hm-7594" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-mr9hm-7594" @ 05/12/25 22:39:27.871
  I0512 22:39:27.877287 19 namespace.go:463] Namespace "e2e-ns-mr9hm-7594" has []v1.FinalizerName{"kubernetes"}
  I0512 22:39:27.877455 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4037" for this suite. @ 05/12/25 22:39:27.88
  STEP: Destroying namespace "e2e-ns-mr9hm-7594" for this suite. @ 05/12/25 22:39:27.883
• [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 05/12/25 22:39:27.888
  I0512 22:39:27.888986 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename webhook @ 05/12/25 22:39:27.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:27.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:27.989
  STEP: Setting up server cert @ 05/12/25 22:39:28.059
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/12/25 22:39:28.443
  STEP: Deploying the webhook pod @ 05/12/25 22:39:28.457
  STEP: Wait for the deployment to be ready @ 05/12/25 22:39:28.472
  I0512 22:39:28.496120 19 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0512 22:39:30.516282 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:39:32.524413 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:39:34.523990 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:39:36.526913 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:39:38.525660 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 39, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5b9c4f9645\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/12/25 22:39:40.524
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:39:40.537
  I0512 22:39:41.538538 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0512 22:39:41.552694 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7933-crds.webhook.example.com via the AdmissionRegistration API @ 05/12/25 22:39:42.071
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/12/25 22:39:42.098
  I0512 22:39:44.706051 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7274" for this suite. @ 05/12/25 22:39:44.714
  STEP: Destroying namespace "webhook-markers-9167" for this suite. @ 05/12/25 22:39:44.723
• [16.843 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/12/25 22:39:44.734
  I0512 22:39:44.734644 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename pod-network-test @ 05/12/25 22:39:44.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:44.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:44.757
  STEP: Performing setup for networking test in namespace pod-network-test-823 @ 05/12/25 22:39:44.76
  STEP: creating a selector @ 05/12/25 22:39:44.76
  STEP: Creating the service pods in kubernetes @ 05/12/25 22:39:44.761
  I0512 22:39:44.761379 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/12/25 22:39:56.919
  I0512 22:39:58.949552 19 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0512 22:39:58.949747 19 networking.go:42] Breadth first check of 10.42.0.254 on host 192.168.1.8...
  I0512 22:39:58.953541 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.19:9080/dial?request=hostname&protocol=http&host=10.42.0.254&port=8083&tries=1'] Namespace:pod-network-test-823 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 22:39:58.953609 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:39:58.954599 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 22:39:58.954719 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-823/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.19%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.254%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0512 22:39:59.005869 19 utils.go:356] Waiting for responses: map[]
  I0512 22:39:59.005913 19 utils.go:360] reached 10.42.0.254 after 0/1 tries
  I0512 22:39:59.005924 19 networking.go:42] Breadth first check of 10.42.1.18 on host 192.168.1.7...
  I0512 22:39:59.009514 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.19:9080/dial?request=hostname&protocol=http&host=10.42.1.18&port=8083&tries=1'] Namespace:pod-network-test-823 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0512 22:39:59.009542 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  I0512 22:39:59.009942 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I0512 22:39:59.009994 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-823/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.19%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.18%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0512 22:39:59.137605 19 utils.go:356] Waiting for responses: map[]
  I0512 22:39:59.137674 19 utils.go:360] reached 10.42.1.18 after 0/1 tries
  I0512 22:39:59.137699 19 networking.go:53] Going to retry 0 out of 2 pods....
  I0512 22:39:59.138029 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-823" for this suite. @ 05/12/25 22:39:59.145
• [14.420 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 05/12/25 22:39:59.155
  I0512 22:39:59.155669 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename kubectl @ 05/12/25 22:39:59.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:59.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:59.199
  STEP: validating cluster-info @ 05/12/25 22:39:59.206
  I0512 22:39:59.206570 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2378144529 --namespace=kubectl-6775 cluster-info'
  I0512 22:39:59.281191 19 builder.go:146] stderr: ""
  I0512 22:39:59.281243 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0512 22:39:59.281365 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6775" for this suite. @ 05/12/25 22:39:59.287
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 05/12/25 22:39:59.3
  I0512 22:39:59.300944 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename container-probe @ 05/12/25 22:39:59.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:39:59.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:39:59.328
  STEP: Creating pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085 @ 05/12/25 22:39:59.331
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/12/25 22:40:01.362
  I0512 22:40:01.369869 19 container_probe.go:1749] Initial restart count of pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc is 0
  I0512 22:40:01.375512 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:03.383054 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:05.391829 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:07.400495 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:09.407686 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:11.414204 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:13.421696 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:15.430451 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:17.438442 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:19.445024 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:21.453712 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:23.462503 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:25.469081 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:27.480821 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:29.488957 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:31.497422 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:33.505646 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:35.513964 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:37.521732 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:39.529635 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:41.542521 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:43.550564 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:45.558018 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:47.568417 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:49.582553 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:51.588633 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:53.596516 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:55.606857 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:57.621829 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:40:59.630915 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:01.636969 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:03.646323 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:05.652176 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:07.661089 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:09.668683 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:11.676128 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:13.687572 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:15.695194 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:17.703031 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:19.711116 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:21.716790 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:23.729088 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:25.737996 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:27.745043 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:29.762312 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:31.775327 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:33.782699 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:35.789569 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:37.793872 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:39.803890 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:41.814782 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:43.819397 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:45.827005 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:47.833957 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:49.842991 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:51.850712 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:53.858344 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:55.866962 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:57.876478 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:41:59.882331 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:01.892207 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:03.899934 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:05.904700 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:07.915839 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:09.920984 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:11.933052 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:13.939507 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:15.947127 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:17.956334 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:19.963221 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:21.970708 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:23.980241 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:25.988799 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:27.998254 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:30.008321 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:32.016140 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:34.024154 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:36.029380 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:38.040081 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:40.047022 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:42.054491 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:44.061054 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:46.071377 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:48.079198 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:50.088477 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:52.098548 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:54.107607 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:56.115006 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:42:58.121839 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:00.131665 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:02.139766 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:04.146471 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:06.153204 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:08.158569 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:10.168093 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:12.177135 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:14.184615 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:16.189620 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:18.226465 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:20.235407 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:22.244798 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:24.252487 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:26.259875 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:28.268333 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:30.278415 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:32.285139 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:34.292744 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:36.301107 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:38.308877 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:40.316701 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:42.326511 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:44.335303 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:46.346565 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:48.356519 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:50.365157 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:52.372677 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:54.380544 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:56.388765 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:43:58.394688 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  I0512 22:44:00.400223 19 container_probe.go:1759] Get pod busybox-1b86922d-2feb-4682-a7db-45b0862139fc in namespace container-probe-2085
  STEP: deleting the pod @ 05/12/25 22:44:02.401
  I0512 22:44:02.429452 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2085" for this suite. @ 05/12/25 22:44:02.436
• [243.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/12/25 22:44:02.441
  I0512 22:44:02.441744 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename aggregator @ 05/12/25 22:44:02.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:44:02.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:44:02.462
  I0512 22:44:02.465956 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Registering the sample API server. @ 05/12/25 22:44:02.467
  I0512 22:44:02.810477 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0512 22:44:02.846955 19 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0512 22:44:04.897961 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:06.903493 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:08.905739 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:10.904571 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:12.908332 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:14.903948 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:16.902808 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:18.904979 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:20.905099 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:22.903928 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:24.905350 19 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0512 22:44:27.034863 19 aggregator.go:755] Waited 122.844548ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/12/25 22:44:27.119
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/12/25 22:44:27.125
  STEP: List APIServices @ 05/12/25 22:44:27.138
  I0512 22:44:27.149439 19 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/12/25 22:44:27.149
  I0512 22:44:27.174855 19 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/12/25 22:44:27.175
  I0512 22:44:27.191705 19 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.May, 12, 22, 44, 26, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/12/25 22:44:27.192
  I0512 22:44:27.196398 19 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-05-12 22:44:26 +0000 UTC Passed all checks passed}
  I0512 22:44:27.197311 19 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0512 22:44:27.197976 19 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/12/25 22:44:27.198
  I0512 22:44:27.208156 19 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-664484967" @ 05/12/25 22:44:27.208
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/12/25 22:44:27.234
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/12/25 22:44:27.248
  STEP: Patch APIService Status @ 05/12/25 22:44:27.255
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/12/25 22:44:27.268
  I0512 22:44:27.275145 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-05-12 22:44:26 +0000 UTC Passed all checks passed}
  I0512 22:44:27.275287 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0512 22:44:27.275581 19 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0512 22:44:27.275725 19 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/12/25 22:44:27.275
  STEP: Confirm that the generated APIService has been deleted @ 05/12/25 22:44:27.284
  I0512 22:44:27.284492 19 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0512 22:44:27.288864 19 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0512 22:44:27.288935 19 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0512 22:44:27.443386 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2289" for this suite. @ 05/12/25 22:44:27.449
• [25.013 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/12/25 22:44:27.455
  I0512 22:44:27.456335 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename emptydir @ 05/12/25 22:44:27.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:44:27.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:44:27.479
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/12/25 22:44:27.483
  STEP: Saw pod success @ 05/12/25 22:44:31.517
  I0512 22:44:31.522728 19 output.go:196] Trying to get logs from node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt pod pod-f601edc1-b78a-4fce-8442-776202fed68a container test-container: <nil>
  STEP: delete the pod @ 05/12/25 22:44:31.544
  I0512 22:44:31.559695 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2934" for this suite. @ 05/12/25 22:44:31.564
• [4.114 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 05/12/25 22:44:31.57
  I0512 22:44:31.570354 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-pred @ 05/12/25 22:44:31.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:44:31.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:44:31.59
  I0512 22:44:31.593555 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0512 22:44:31.669093 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I0512 22:44:31.671781 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr before test
  I0512 22:44:31.675632 19 predicates.go:957] civo-ccm-bd7449dd8-g59ts from kube-system started at 2025-05-12 20:59:04 +0000 UTC (1 container statuses recorded)
  I0512 22:44:31.675816 19 predicates.go:959] 	Container civo-ccm ready: true, restart count 0
  I0512 22:44:31.675958 19 predicates.go:957] civo-csi-controller-0 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (4 container statuses recorded)
  I0512 22:44:31.676068 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 22:44:31.676175 19 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0512 22:44:31.676278 19 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0512 22:44:31.676378 19 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0512 22:44:31.676480 19 predicates.go:957] civo-csi-node-wt7c2 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (2 container statuses recorded)
  I0512 22:44:31.676586 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 22:44:31.676686 19 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0512 22:44:31.676787 19 predicates.go:957] coredns-ccb96694c-l7675 from kube-system started at 2025-05-12 20:59:12 +0000 UTC (1 container statuses recorded)
  I0512 22:44:31.676892 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0512 22:44:31.676996 19 predicates.go:957] metrics-server-7bf7d58749-v5xjt from kube-system started at 2025-05-12 20:59:12 +0000 UTC (1 container statuses recorded)
  I0512 22:44:31.677095 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0512 22:44:31.677198 19 predicates.go:957] traefik-4ncsl from kube-system started at 2025-05-12 20:59:57 +0000 UTC (1 container statuses recorded)
  I0512 22:44:31.677305 19 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0512 22:44:31.677405 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt before test
  I0512 22:44:31.680953 19 predicates.go:957] civo-csi-node-5dvz4 from kube-system started at 2025-05-12 21:21:58 +0000 UTC (2 container statuses recorded)
  I0512 22:44:31.681099 19 predicates.go:959] 	Container civo-csi-plugin ready: true, restart count 0
  I0512 22:44:31.681203 19 predicates.go:959] 	Container csi-driver-registrar ready: true, restart count 0
  I0512 22:44:31.681277 19 predicates.go:957] traefik-lqppk from kube-system started at 2025-05-12 21:21:58 +0000 UTC (1 container statuses recorded)
  I0512 22:44:31.681361 19 predicates.go:959] 	Container traefik ready: true, restart count 0
  I0512 22:44:31.681436 19 predicates.go:957] sonobuoy from sonobuoy started at 2025-05-12 21:01:09 +0000 UTC (1 container statuses recorded)
  I0512 22:44:31.681539 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0512 22:44:31.681608 19 predicates.go:957] sonobuoy-e2e-job-e851b625746c4110 from sonobuoy started at 2025-05-12 21:01:13 +0000 UTC (2 container statuses recorded)
  I0512 22:44:31.681676 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0512 22:44:31.681751 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  STEP: verifying the node has the label node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr @ 05/12/25 22:44:31.694
  STEP: verifying the node has the label node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt @ 05/12/25 22:44:31.712
  I0512 22:44:31.776908 19 predicates.go:372] Pod civo-ccm-bd7449dd8-g59ts requesting resource cpu=0m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr
  I0512 22:44:31.776959 19 predicates.go:372] Pod civo-csi-controller-0 requesting resource cpu=0m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr
  I0512 22:44:31.776972 19 predicates.go:372] Pod civo-csi-node-5dvz4 requesting resource cpu=0m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt
  I0512 22:44:31.776983 19 predicates.go:372] Pod civo-csi-node-wt7c2 requesting resource cpu=0m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr
  I0512 22:44:31.777022 19 predicates.go:372] Pod coredns-ccb96694c-l7675 requesting resource cpu=100m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr
  I0512 22:44:31.777032 19 predicates.go:372] Pod metrics-server-7bf7d58749-v5xjt requesting resource cpu=100m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr
  I0512 22:44:31.777044 19 predicates.go:372] Pod traefik-4ncsl requesting resource cpu=0m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr
  I0512 22:44:31.777054 19 predicates.go:372] Pod traefik-lqppk requesting resource cpu=0m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt
  I0512 22:44:31.777064 19 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt
  I0512 22:44:31.777073 19 predicates.go:372] Pod sonobuoy-e2e-job-e851b625746c4110 requesting resource cpu=0m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/12/25 22:44:31.777
  I0512 22:44:31.777296 19 predicates.go:382] Creating a pod which consumes cpu=1134m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr
  I0512 22:44:31.784339 19 predicates.go:382] Creating a pod which consumes cpu=1274m on Node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/12/25 22:44:33.819
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-21b4aca5-7a97-41a9-9755-6206a06174ce.183ee8fb5ed2efdc], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2839/filler-pod-21b4aca5-7a97-41a9-9755-6206a06174ce to k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr] @ 05/12/25 22:44:33.826
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-21b4aca5-7a97-41a9-9755-6206a06174ce.183ee8fb797ea78e], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/12/25 22:44:33.826
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-21b4aca5-7a97-41a9-9755-6206a06174ce.183ee8fb7aabac31], Reason = [Created], Message = [Created container: filler-pod-21b4aca5-7a97-41a9-9755-6206a06174ce] @ 05/12/25 22:44:33.826
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-21b4aca5-7a97-41a9-9755-6206a06174ce.183ee8fb80fa08ba], Reason = [Started], Message = [Started container filler-pod-21b4aca5-7a97-41a9-9755-6206a06174ce] @ 05/12/25 22:44:33.826
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8bb3a0a7-b2a3-4795-a847-28a3a5f7721b.183ee8fb5f6f49ef], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2839/filler-pod-8bb3a0a7-b2a3-4795-a847-28a3a5f7721b to k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt] @ 05/12/25 22:44:33.826
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8bb3a0a7-b2a3-4795-a847-28a3a5f7721b.183ee8fb79ae7568], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 05/12/25 22:44:33.826
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8bb3a0a7-b2a3-4795-a847-28a3a5f7721b.183ee8fb7a935d98], Reason = [Created], Message = [Created container: filler-pod-8bb3a0a7-b2a3-4795-a847-28a3a5f7721b] @ 05/12/25 22:44:33.826
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-8bb3a0a7-b2a3-4795-a847-28a3a5f7721b.183ee8fb80b8044a], Reason = [Started], Message = [Started container filler-pod-8bb3a0a7-b2a3-4795-a847-28a3a5f7721b] @ 05/12/25 22:44:33.827
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183ee8fbd8c012d5], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 05/12/25 22:44:33.846
  STEP: removing the label node off the node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-u9qvr @ 05/12/25 22:44:34.843
  STEP: verifying the node doesn't have the label node @ 05/12/25 22:44:34.864
  STEP: removing the label node off the node k3s-hiroto-test-k3s-1-31-6-2-c066-2205d0-node-pool-fc5e-vfeyt @ 05/12/25 22:44:34.871
  STEP: verifying the node doesn't have the label node @ 05/12/25 22:44:34.882
  I0512 22:44:34.887322 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2839" for this suite. @ 05/12/25 22:44:34.892
• [3.327 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 05/12/25 22:44:34.898
  I0512 22:44:34.898316 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename sched-preemption @ 05/12/25 22:44:34.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:44:34.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:44:34.914
  I0512 22:44:34.924910 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0512 22:45:34.933515 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/12/25 22:45:34.939
  I0512 22:45:34.971392 19 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I0512 22:45:34.979888 19 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I0512 22:45:35.006674 19 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I0512 22:45:35.014514 19 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/12/25 22:45:35.014
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/12/25 22:45:37.055
  I0512 22:45:41.139935 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8849" for this suite. @ 05/12/25 22:45:41.144
• [66.260 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/12/25 22:45:41.158
  I0512 22:45:41.159680 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename replication-controller @ 05/12/25 22:45:41.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:45:41.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:45:41.186
  STEP: creating a ReplicationController @ 05/12/25 22:45:41.195
  STEP: waiting for RC to be added @ 05/12/25 22:45:41.201
  STEP: waiting for available Replicas @ 05/12/25 22:45:41.201
  STEP: patching ReplicationController @ 05/12/25 22:45:42.703
  STEP: waiting for RC to be modified @ 05/12/25 22:45:42.713
  STEP: patching ReplicationController status @ 05/12/25 22:45:42.713
  STEP: waiting for RC to be modified @ 05/12/25 22:45:42.717
  STEP: waiting for available Replicas @ 05/12/25 22:45:42.718
  STEP: fetching ReplicationController status @ 05/12/25 22:45:42.722
  STEP: patching ReplicationController scale @ 05/12/25 22:45:42.726
  STEP: waiting for RC to be modified @ 05/12/25 22:45:42.73
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/12/25 22:45:42.731
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/12/25 22:45:43.845
  STEP: updating ReplicationController status @ 05/12/25 22:45:43.849
  STEP: waiting for RC to be modified @ 05/12/25 22:45:43.854
  STEP: listing all ReplicationControllers @ 05/12/25 22:45:43.855
  STEP: checking that ReplicationController has expected values @ 05/12/25 22:45:43.859
  STEP: deleting ReplicationControllers by collection @ 05/12/25 22:45:43.859
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/12/25 22:45:43.866
  I0512 22:45:43.912338 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0512 22:45:43.912449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-2215" for this suite. @ 05/12/25 22:45:43.915
• [2.761 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 05/12/25 22:45:43.921
  I0512 22:45:43.921041 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  STEP: Building a namespace api object, basename crd-webhook @ 05/12/25 22:45:43.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/12/25 22:45:43.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/12/25 22:45:43.939
  STEP: Setting up server cert @ 05/12/25 22:45:43.945
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/12/25 22:45:44.255
  STEP: Deploying the custom resource conversion webhook pod @ 05/12/25 22:45:44.264
  STEP: Wait for the deployment to be ready @ 05/12/25 22:45:44.275
  I0512 22:45:44.296456 19 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0512 22:45:44.912613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0512 22:45:45.912978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/12/25 22:45:46.318
  STEP: Verifying the service has paired with the endpoint @ 05/12/25 22:45:46.328
  E0512 22:45:46.913016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I0512 22:45:47.328708 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0512 22:45:47.341871 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-2378144529
  E0512 22:45:47.913561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0512 22:45:48.913700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E0512 22:45:49.913864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 05/12/25 22:45:49.935
  STEP: v2 custom resource should be converted @ 05/12/25 22:45:49.944
  I0512 22:45:50.537801 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4674" for this suite. @ 05/12/25 22:45:50.566
• [6.650 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0512 22:45:50.571676 19 suites.go:34] Running AfterSuite actions on node 1
  I0512 22:45:50.571727 19 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.065 seconds]
------------------------------

Ran 404 of 6605 Specs in 6269.686 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h44m31.01402934s
Test Suite Passed
